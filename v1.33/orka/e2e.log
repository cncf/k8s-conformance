  I0507 16:48:06.733781      24 e2e.go:109] Starting e2e run "c2c0f22b-a213-4609-bedd-8b9be538904d" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1746636486 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0507 16:48:06.862190 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  I0507 16:48:06.862798 24 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0507 16:48:06.880544 24 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0507 16:48:06.883285 24 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0507 16:48:06.883309 24 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0507 16:48:06.883319 24 e2e.go:245] e2e test version: v1.33.0
  I0507 16:48:06.884059 24 e2e.go:254] kube-apiserver version: v1.33.0
  I0507 16:48:06.884096 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  I0507 16:48:06.886487 24 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 05/07/25 16:48:06.948
  I0507 16:48:06.948950 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 16:48:06.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:48:06.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:48:06.962
  STEP: creating all guestbook components @ 05/07/25 16:48:06.964
  I0507 16:48:06.964696 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0507 16:48:06.964771 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 create -f -'
  I0507 16:48:07.075365 24 builder.go:146] stderr: ""
  I0507 16:48:07.075391 24 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0507 16:48:07.075420 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0507 16:48:07.075473 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 create -f -'
  I0507 16:48:07.158578 24 builder.go:146] stderr: ""
  I0507 16:48:07.158602 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0507 16:48:07.158626 24 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0507 16:48:07.158675 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 create -f -'
  I0507 16:48:07.243404 24 builder.go:146] stderr: ""
  I0507 16:48:07.243430 24 builder.go:147] stdout: "service/frontend created\n"
  I0507 16:48:07.243466 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0507 16:48:07.243535 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 create -f -'
  I0507 16:48:07.299104 24 builder.go:146] stderr: ""
  I0507 16:48:07.299128 24 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0507 16:48:07.299162 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0507 16:48:07.299235 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 create -f -'
  I0507 16:48:07.349846 24 builder.go:146] stderr: ""
  I0507 16:48:07.349873 24 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0507 16:48:07.349908 24 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0507 16:48:07.349984 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 create -f -'
  I0507 16:48:07.413420 24 builder.go:146] stderr: ""
  I0507 16:48:07.413443 24 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/07/25 16:48:07.413
  I0507 16:48:07.413475 24 kubectl.go:2275] Waiting for all frontend pods to be Running.
  I0507 16:48:17.466393 24 kubectl.go:2279] Waiting for frontend to serve content.
  I0507 16:48:17.473744 24 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0507 16:48:18.518955 24 kubectl.go:2289] Verifying that added entry can be retrieved.
  I0507 16:48:18.525135 24 kubectl.go:2302] Failed to get response from guestbook. err: <nil>, response: {"data":""}
  STEP: using delete to clean up resources @ 05/07/25 16:48:23.534
  I0507 16:48:23.534155 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 delete --grace-period=0 --force -f -'
  I0507 16:48:23.609208 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 16:48:23.609233 24 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/07/25 16:48:23.609
  I0507 16:48:23.609310 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 delete --grace-period=0 --force -f -'
  I0507 16:48:23.679605 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 16:48:23.679630 24 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/07/25 16:48:23.679
  I0507 16:48:23.679694 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 delete --grace-period=0 --force -f -'
  I0507 16:48:23.752457 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 16:48:23.752481 24 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/07/25 16:48:23.752
  I0507 16:48:23.752552 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 delete --grace-period=0 --force -f -'
  I0507 16:48:23.795425 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 16:48:23.795448 24 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/07/25 16:48:23.795
  I0507 16:48:23.795515 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 delete --grace-period=0 --force -f -'
  I0507 16:48:23.832903 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 16:48:23.832926 24 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/07/25 16:48:23.832
  I0507 16:48:23.833001 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3436 delete --grace-period=0 --force -f -'
  I0507 16:48:23.870665 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 16:48:23.870689 24 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0507 16:48:23.870759 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3436" for this suite. @ 05/07/25 16:48:23.873
• [16.929 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 05/07/25 16:48:23.877
  I0507 16:48:23.877985 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 16:48:23.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:48:23.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:48:23.893
  STEP: fetching services @ 05/07/25 16:48:23.895
  I0507 16:48:23.899392 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2146" for this suite. @ 05/07/25 16:48:23.974
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 05/07/25 16:48:23.98
  I0507 16:48:23.980698 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 16:48:23.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:48:23.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:48:23.997
  STEP: Creating service test in namespace statefulset-7847 @ 05/07/25 16:48:23.999
  STEP: Creating statefulset ss in namespace statefulset-7847 @ 05/07/25 16:48:24.003
  I0507 16:48:24.013872 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I0507 16:48:34.013928 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/07/25 16:48:34.018
  STEP: updating a scale subresource @ 05/07/25 16:48:34.02
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/07/25 16:48:34.024
  STEP: Patch a scale subresource @ 05/07/25 16:48:34.026
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/07/25 16:48:34.032
  I0507 16:48:34.034425 24 statefulset.go:138] Deleting all statefulset in ns statefulset-7847
  I0507 16:48:34.036193 24 rest.go:153] Scaling statefulset ss to 0
  I0507 16:48:44.050352 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0507 16:48:44.052865 24 rest.go:91] Deleting statefulset ss
  I0507 16:48:44.063236 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7847" for this suite. @ 05/07/25 16:48:44.066
• [20.092 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 05/07/25 16:48:44.072
  I0507 16:48:44.072507 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 16:48:44.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:48:44.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:48:44.089
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 05/07/25 16:48:44.09
  STEP: Awaiting for the job to fail as there are failed indexes @ 05/07/25 16:48:44.097
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 05/07/25 16:49:08.147
  I0507 16:49:08.150016 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2217" for this suite. @ 05/07/25 16:49:08.153
• [24.087 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 05/07/25 16:49:08.159
  I0507 16:49:08.159295 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/07/25 16:49:08.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:49:08.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:49:08.175
  I0507 16:49:08.182439 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9821" for this suite. @ 05/07/25 16:49:08.253
• [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 05/07/25 16:49:08.258
  I0507 16:49:08.258385 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 16:49:08.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:49:08.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:49:08.272
  I0507 16:49:08.276027 24 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-1859"
  I0507 16:49:08.280136 24 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-1859"
  STEP: waiting for a new root ca configmap created @ 05/07/25 16:49:08.78
  I0507 16:49:08.784018 24 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-1859"
  I0507 16:49:08.788025 24 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-1859"
  STEP: waiting for the root ca configmap reconciled @ 05/07/25 16:49:09.288
  I0507 16:49:09.291746 24 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-1859"
  I0507 16:49:09.291830 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1859" for this suite. @ 05/07/25 16:49:09.295
• [1.042 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/07/25 16:49:09.3
  I0507 16:49:09.300962 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 16:49:09.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:49:09.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:49:09.318
  STEP: Creating secret with name secret-test-map-e29629aa-5c57-4fc7-894f-4887af759002 @ 05/07/25 16:49:09.32
  STEP: Creating a pod to test consume secrets @ 05/07/25 16:49:09.342
  STEP: Saw pod success @ 05/07/25 16:49:13.36
  I0507 16:49:13.363244 24 output.go:207] Trying to get logs from node mini-2 pod pod-secrets-cbb813d6-884c-436f-bc2f-ff1bd3a6742c container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 16:49:13.376
  I0507 16:49:13.393147 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-999" for this suite. @ 05/07/25 16:49:13.396
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/07/25 16:49:13.416
  I0507 16:49:13.416493 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/07/25 16:49:13.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:49:13.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:49:13.443
  I0507 16:49:13.445019 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  I0507 16:49:14.458331 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-459" for this suite. @ 05/07/25 16:49:14.461
• [1.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 05/07/25 16:49:14.466
  I0507 16:49:14.466948 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 16:49:14.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:49:14.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:49:14.483
  STEP: Creating simple DaemonSet "daemon-set" @ 05/07/25 16:49:14.566
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 16:49:14.57
  I0507 16:49:14.662723 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:49:14.662764 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:49:14.662789 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:49:14.665729 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 16:49:14.665746 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 16:49:15.575273 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:49:15.575309 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:49:15.575322 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:49:15.578247 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 16:49:15.578261 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 16:49:16.575261 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:49:16.575306 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:49:16.575339 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:49:16.578418 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 16:49:16.578432 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/07/25 16:49:16.582
  STEP: DeleteCollection of the DaemonSets @ 05/07/25 16:49:16.586
  STEP: Verify that ReplicaSets have been deleted @ 05/07/25 16:49:16.595
  I0507 16:49:16.613337 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2217467"},"items":null}

  I0507 16:49:16.618749 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2217468"},"items":[{"metadata":{"name":"daemon-set-5xskl","generateName":"daemon-set-","namespace":"daemonsets-2749","uid":"e9207b1a-e180-4113-9000-b92997e25c1d","resourceVersion":"2217464","generation":1,"creationTimestamp":"2025-05-07T16:49:14Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"646860f90f570b1a5d9395124696110af2dcdc3e3c32058f969460563d14691a","cni.projectcalico.org/podIP":"192.168.158.142/32","cni.projectcalico.org/podIPs":"192.168.158.142/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e43519a2-64f9-4aa9-83b8-42e1784f2439","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-05-07T16:49:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e43519a2-64f9-4aa9-83b8-42e1784f2439\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-05-07T16:49:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-05-07T16:49:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.158.142\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6vgbl","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6vgbl","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"mini-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["mini-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T16:49:16Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T16:49:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T16:49:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T16:49:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T16:49:14Z"}],"hostIP":"10.221.190.32","hostIPs":[{"ip":"10.221.190.32"}],"podIP":"192.168.158.142","podIPs":[{"ip":"192.168.158.142"}],"startTime":"2025-05-07T16:49:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-07T16:49:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://810d6a9d7047f6fa851925e16bfa394c64315a015f5878bf05904c156c74294c","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-6vgbl","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-h4kl8","generateName":"daemon-set-","namespace":"daemonsets-2749","uid":"fe58974c-030a-44b0-8966-791e457aefab","resourceVersion":"2217468","generation":2,"creationTimestamp":"2025-05-07T16:49:14Z","deletionTimestamp":"2025-05-07T16:49:46Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"627ea275619e6ddff0e835f3f5f448ae546954d2183fff76a3c53da998caee56","cni.projectcalico.org/podIP":"192.168.125.201/32","cni.projectcalico.org/podIPs":"192.168.125.201/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e43519a2-64f9-4aa9-83b8-42e1784f2439","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-05-07T16:49:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e43519a2-64f9-4aa9-83b8-42e1784f2439\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-05-07T16:49:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-05-07T16:49:16Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.125.201\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tbd4x","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tbd4x","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"mini-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["mini-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T16:49:16Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T16:49:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T16:49:16Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T16:49:16Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-07T16:49:14Z"}],"hostIP":"10.221.190.31","hostIPs":[{"ip":"10.221.190.31"}],"podIP":"192.168.125.201","podIPs":[{"ip":"192.168.125.201"}],"startTime":"2025-05-07T16:49:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-07T16:49:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3fd3a20b7a70ed58e1a33e1a952b6a4026d5e4df93bfa9ec913b148751b60b63","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-tbd4x","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0507 16:49:16.682140 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2749" for this suite. @ 05/07/25 16:49:16.685
• [2.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:704
  STEP: Creating a kubernetes client @ 05/07/25 16:49:16.69
  I0507 16:49:16.690656 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sched-pred @ 05/07/25 16:49:16.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:49:16.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:49:16.705
  I0507 16:49:16.707679 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0507 16:49:16.779900 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0507 16:49:16.782374 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node mini-1 before test
  I0507 16:49:16.785199 24 predicates.go:956] daemon-set-h4kl8 from daemonsets-2749 started at 2025-05-07 16:49:14 +0000 UTC (1 container statuses recorded)
  I0507 16:49:16.785212 24 predicates.go:958] 	Container app ready: true, restart count 0
  I0507 16:49:16.785218 24 predicates.go:956] calico-node-ptbd6 from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 16:49:16.785222 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0507 16:49:16.785227 24 predicates.go:956] kube-proxy-xrhlg from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 16:49:16.785231 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0507 16:49:16.785236 24 predicates.go:956] helm-charts-fluent-bit-ss6bs from logging started at 2025-04-29 11:28:41 +0000 UTC (1 container statuses recorded)
  I0507 16:49:16.785240 24 predicates.go:958] 	Container fluent-bit ready: true, restart count 0
  I0507 16:49:16.785244 24 predicates.go:956] kps-prometheus-node-exporter-x49ph from monitoring started at 2025-04-29 11:29:50 +0000 UTC (1 container statuses recorded)
  I0507 16:49:16.785249 24 predicates.go:958] 	Container node-exporter ready: true, restart count 0
  I0507 16:49:16.785255 24 predicates.go:956] sonobuoy-e2e-job-07fd652a611c431c from sonobuoy started at 2025-05-07 16:48:04 +0000 UTC (2 container statuses recorded)
  I0507 16:49:16.785265 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0507 16:49:16.785274 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 16:49:16.785282 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-a7c958b54b254fc6-pd8t9 from sonobuoy started at 2025-05-07 16:48:04 +0000 UTC (2 container statuses recorded)
  I0507 16:49:16.785295 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 16:49:16.785301 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0507 16:49:16.785308 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node mini-2 before test
  I0507 16:49:16.787835 24 predicates.go:956] daemon-set-5xskl from daemonsets-2749 started at 2025-05-07 16:49:14 +0000 UTC (1 container statuses recorded)
  I0507 16:49:16.787846 24 predicates.go:958] 	Container app ready: true, restart count 0
  I0507 16:49:16.787852 24 predicates.go:956] calico-node-58sqm from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 16:49:16.787857 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0507 16:49:16.787862 24 predicates.go:956] kube-proxy-xvk88 from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 16:49:16.787866 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0507 16:49:16.787871 24 predicates.go:956] helm-charts-fluent-bit-zrh72 from logging started at 2025-04-29 11:28:41 +0000 UTC (1 container statuses recorded)
  I0507 16:49:16.787874 24 predicates.go:958] 	Container fluent-bit ready: true, restart count 0
  I0507 16:49:16.787879 24 predicates.go:956] kps-prometheus-node-exporter-j85gt from monitoring started at 2025-04-29 11:29:50 +0000 UTC (1 container statuses recorded)
  I0507 16:49:16.787883 24 predicates.go:958] 	Container node-exporter ready: true, restart count 0
  I0507 16:49:16.787887 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-07 16:48:03 +0000 UTC (1 container statuses recorded)
  I0507 16:49:16.787891 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0507 16:49:16.787896 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-a7c958b54b254fc6-sfkx7 from sonobuoy started at 2025-05-07 16:48:05 +0000 UTC (2 container statuses recorded)
  I0507 16:49:16.787900 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 16:49:16.787904 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/07/25 16:49:16.787
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/07/25 16:49:20.806
  STEP: Trying to apply a random label on the found node. @ 05/07/25 16:49:20.818
  STEP: verifying the node has the label kubernetes.io/e2e-f069b5f1-621e-4cb1-aa4e-07c66af4cba3 95 @ 05/07/25 16:49:20.827
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/07/25 16:49:20.831
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.221.190.32 on the node which pod4 resides and expect not scheduled @ 05/07/25 16:49:22.848
  STEP: removing the label kubernetes.io/e2e-f069b5f1-621e-4cb1-aa4e-07c66af4cba3 off the node mini-2 @ 05/07/25 16:54:22.856
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-f069b5f1-621e-4cb1-aa4e-07c66af4cba3 @ 05/07/25 16:54:22.867
  I0507 16:54:22.871077 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9799" for this suite. @ 05/07/25 16:54:22.874
• [306.188 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 05/07/25 16:54:22.878
  I0507 16:54:22.878481 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename disruption @ 05/07/25 16:54:22.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:54:22.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:54:22.89
  STEP: Waiting for the pdb to be processed @ 05/07/25 16:54:22.896
  STEP: Updating PodDisruptionBudget status @ 05/07/25 16:54:24.9
  STEP: Waiting for all pods to be running @ 05/07/25 16:54:24.907
  I0507 16:54:24.909427 24 disruption.go:691] running pods: 0 < 1
  I0507 16:54:26.910941 24 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 05/07/25 16:54:28.912
  STEP: Waiting for the pdb to be processed @ 05/07/25 16:54:28.928
  STEP: Patching PodDisruptionBudget status @ 05/07/25 16:54:28.937
  STEP: Waiting for the pdb to be processed @ 05/07/25 16:54:28.943
  I0507 16:54:28.945235 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5690" for this suite. @ 05/07/25 16:54:28.948
• [6.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 05/07/25 16:54:28.954
  I0507 16:54:28.954338 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 16:54:28.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:54:28.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:54:28.967
  STEP: Creating a job @ 05/07/25 16:54:28.969
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/07/25 16:54:28.973
  STEP: patching /status @ 05/07/25 16:54:30.985
  STEP: updating /status @ 05/07/25 16:54:30.991
  STEP: get /status @ 05/07/25 16:54:30.998
  I0507 16:54:31.001226 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6326" for this suite. @ 05/07/25 16:54:31.004
• [2.056 seconds]
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 05/07/25 16:54:31.009
  I0507 16:54:31.009919 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 16:54:31.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:54:31.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:54:31.024
  STEP: Creating a job @ 05/07/25 16:54:31.026
  STEP: Ensuring active pods == parallelism @ 05/07/25 16:54:31.03
  STEP: Orphaning one of the Job's Pods @ 05/07/25 16:54:35.047
  I0507 16:54:35.560841 24 pod_client.go:173] Successfully updated pod "adopt-release-47nwc"
  STEP: Checking that the Job readopts the Pod @ 05/07/25 16:54:35.56
  STEP: Removing the labels from the Job's Pod @ 05/07/25 16:54:37.566
  I0507 16:54:38.076252 24 pod_client.go:173] Successfully updated pod "adopt-release-47nwc"
  STEP: Checking that the Job releases the Pod @ 05/07/25 16:54:38.076
  I0507 16:54:40.083546 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3149" for this suite. @ 05/07/25 16:54:40.087
• [9.083 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 05/07/25 16:54:40.092
  I0507 16:54:40.092708 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 16:54:40.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:54:40.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:54:40.11
  STEP: Creating configMap with name projected-configmap-test-volume-a241a0ac-fb87-4142-a804-db7f742a50f3 @ 05/07/25 16:54:40.112
  STEP: Creating a pod to test consume configMaps @ 05/07/25 16:54:40.117
  STEP: Saw pod success @ 05/07/25 16:54:44.135
  I0507 16:54:44.138431 24 output.go:207] Trying to get logs from node mini-2 pod pod-projected-configmaps-2b5f96c2-4868-462b-95a9-6b4738badf87 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 16:54:44.15
  I0507 16:54:44.162987 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1421" for this suite. @ 05/07/25 16:54:44.166
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 05/07/25 16:54:44.172
  I0507 16:54:44.172955 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 16:54:44.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:54:44.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:54:44.189
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 16:54:44.191
  STEP: Saw pod success @ 05/07/25 16:54:48.208
  I0507 16:54:48.211176 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-a1194da2-290c-48f0-8b3c-857ace6b49c3 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 16:54:48.215
  I0507 16:54:48.227751 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6933" for this suite. @ 05/07/25 16:54:48.23
• [4.063 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/07/25 16:54:48.235
  I0507 16:54:48.235725 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 16:54:48.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:54:48.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:54:48.252
  I0507 16:54:48.338057 24 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0507 16:54:48.342272 24 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0507 16:54:48.431496 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:48.431520 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:48.431535 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:48.433597 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 16:54:48.433610 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 16:54:49.346192 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:49.346215 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:49.346240 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:49.348679 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 16:54:49.348691 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 16:54:50.348647 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:50.348691 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:50.348703 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:50.351781 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 16:54:50.351795 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0507 16:54:50.351803 24 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0507 16:54:50.360078 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0507 16:54:52.369353 24 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0507 16:54:52.376159 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0507 16:54:52.376175 24 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0507 16:54:52.378575 24 daemon_set.go:1193] Wrong image for pod: daemon-set-l7gbd. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0507 16:54:52.378586 24 daemon_set.go:1198] Pod daemon-set-l7gbd is not available
  I0507 16:54:52.469842 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:52.469871 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:52.469883 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:53.382929 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:53.382967 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:53.382997 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:54.387178 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:54.387221 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:54.387248 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:55.379581 24 daemon_set.go:1198] Pod daemon-set-rzcvf is not available
  I0507 16:54:55.383312 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:55.383331 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 16:54:55.383347 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 16:54:55.388
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-239, will wait for the garbage collector to delete the pods @ 05/07/25 16:54:55.388
  I0507 16:54:55.446993 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.058722ms
  I0507 16:54:55.547556 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.559611ms
  I0507 16:54:57.651366 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 16:54:57.651395 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 16:54:57.653669 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2218888"},"items":null}

  I0507 16:54:57.655433 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2218888"},"items":null}

  I0507 16:54:57.661324 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-239" for this suite. @ 05/07/25 16:54:57.663
• [9.432 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/07/25 16:54:57.667
  I0507 16:54:57.667787 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename deployment @ 05/07/25 16:54:57.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:54:57.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:54:57.686
  I0507 16:54:57.688354 24 deployment.go:1215] Creating deployment "webserver-deployment"
  I0507 16:54:57.692225 24 deployment.go:1219] Waiting for observed generation 1
  I0507 16:54:59.697068 24 deployment.go:1224] Waiting for all required pods to come up
  I0507 16:54:59.700095 24 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/07/25 16:54:59.7
  I0507 16:55:01.714228 24 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0507 16:55:01.718175 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:10, UpdatedReplicas:10, ReadyReplicas:9, AvailableReplicas:9, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 16, 55, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 16, 55, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 16, 55, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 16, 54, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"webserver-deployment-685b768f58\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 16:55:03.724896 24 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0507 16:55:03.731885 24 deployment.go:314] Updating deployment webserver-deployment
  I0507 16:55:03.731903 24 deployment.go:1243] Waiting for observed generation 2
  I0507 16:55:05.738097 24 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0507 16:55:05.740372 24 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0507 16:55:05.742265 24 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0507 16:55:05.748492 24 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0507 16:55:05.748520 24 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0507 16:55:05.750599 24 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0507 16:55:05.754556 24 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0507 16:55:05.754568 24 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0507 16:55:05.761126 24 deployment.go:314] Updating deployment webserver-deployment
  I0507 16:55:05.761140 24 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0507 16:55:05.765011 24 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0507 16:55:07.768301 24 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0507 16:55:07.773493 24 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a8451b25-773e-407c-9372-b165e9610af6",
      ResourceVersion: (string) (len=7) "2219265",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 16:55:07.779485 24 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
      ResourceVersion: (string) (len=7) "2219257",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "a8451b25-773e-407c-9372-b165e9610af6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 38 34 35 31 62  32 35 2d 37 37 33 65 2d  |\"a8451b25-773e-|
              00000120  34 30 37 63 2d 39 33 37  32 2d 62 31 36 35 65 39  |407c-9372-b165e9|
              00000130  36 31 30 61 66 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |610af6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 16:55:07.780386 24 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0507 16:55:07.780524 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
      ResourceVersion: (string) (len=7) "2219253",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "a8451b25-773e-407c-9372-b165e9610af6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 38 34 35 31 62  32 35 2d 37 37 33 65 2d  |\"a8451b25-773e-|
              00000120  34 30 37 63 2d 39 33 37  32 2d 62 31 36 35 65 39  |407c-9372-b165e9|
              00000130  36 31 30 61 66 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |610af6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 16:55:07.785709 24 deployment.go:68] Pod "webserver-deployment-685b768f58-2xfd7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2xfd7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "958a4d7b-a88d-4c35-8dc0-87e796e53093",
      ResourceVersion: (string) (len=7) "2219346",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "421b4fed8c1411bed5f959da4a91954d3047dcb7fc37275f53f63fb02ac9f5f9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.220/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.220/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lgb9p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lgb9p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lgb9p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.787250 24 deployment.go:68] Pod "webserver-deployment-685b768f58-624km" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-624km",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3344486d-5e0c-4e47-b43e-8f99c2b779ad",
      ResourceVersion: (string) (len=7) "2219366",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "29c17349c5cc3eeea602dedc7470dcdfc30cad404805c65f57a1e35fe63ad4dc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.166/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.166/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n9z99",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n9z99",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233706,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n9z99",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.788661 24 deployment.go:68] Pod "webserver-deployment-685b768f58-8f6rc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8f6rc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ce17a07-2ebb-427e-8316-238f60f17300",
      ResourceVersion: (string) (len=7) "2219010",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "949ab3897a211e7dc8861474e2068ef3b56f36a760553e652f0a91b0f71119c4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.210/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.210/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 32 31 30 5c 22 7d  |2.168.125.210\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nts75",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nts75",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) (len=15) "192.168.125.210",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.125.210"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882233700,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://870e9dc0cbd092592a61ef3a4348cc31c62973f4f8e496ed8c26d4a423498242",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nts75",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.790269 24 deployment.go:68] Pod "webserver-deployment-685b768f58-c2ggr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-c2ggr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5fd0f5a-8cef-464f-aee0-6ede7fa9bbdc",
      ResourceVersion: (string) (len=7) "2219353",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fe2a18f3bdf22f04fdafdde152c2eaf6dbc7337697ad0a9639fd9c726d2867fd",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.164/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.164/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vm42t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vm42t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233706,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vm42t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.791740 24 deployment.go:68] Pod "webserver-deployment-685b768f58-dqxr4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dqxr4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4568de3-ce1c-4c43-aa59-563c70e57cde",
      ResourceVersion: (string) (len=7) "2219298",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.159/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.159/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1fb5c6497d94346b5f0dda5c7d526abdec48d7749dbcae4990bbd5c98de9943e"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdx42",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdx42",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zdx42",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.793764 24 deployment.go:68] Pod "webserver-deployment-685b768f58-gkm59" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gkm59",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3612587b-c6a5-4a4a-9a45-18b20c3dba8c",
      ResourceVersion: (string) (len=7) "2219320",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2d47968642969a117a36acb2ad65cde675a09dd175b3739298181ba5c733348c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.217/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.217/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dhx65",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dhx65",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dhx65",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.795294 24 deployment.go:68] Pod "webserver-deployment-685b768f58-h4hdz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-h4hdz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2671284-e2a8-4b5b-ba56-2f6f07cd2717",
      ResourceVersion: (string) (len=7) "2219024",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "794311ce4f5377912a93b969fba7c6ac4d148e2d983092100216da6716161557",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.153/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.153/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  38 2e 31 35 33 5c 22 7d  |2.168.158.153\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jl8xh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jl8xh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) (len=15) "192.168.158.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.158.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882233700,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7a641c040290e1aae79a1c73b207e640166678140e96edfd75b6cc2f950969ff",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jl8xh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.796740 24 deployment.go:68] Pod "webserver-deployment-685b768f58-j4kfh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-j4kfh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5043aa9-3dd0-48fd-9ce7-d73e72dfd48b",
      ResourceVersion: (string) (len=7) "2219370",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "682d9d7360b9be3b5f91eb50edaeec8322728a4b5c9846cc5ddf9702c3db2e37",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.167/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.167/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p9wkv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p9wkv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233706,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p9wkv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.798429 24 deployment.go:68] Pod "webserver-deployment-685b768f58-jvzth" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jvzth",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4c0d44a-c816-4a2a-9b93-fab541ebddc4",
      ResourceVersion: (string) (len=7) "2219331",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.218/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.218/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "69469e9fe00de811941dc545e59070a0d4ce9ba65297536797d16ae9a5ae12c8"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2v2j2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2v2j2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2v2j2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.799871 24 deployment.go:68] Pod "webserver-deployment-685b768f58-jwbbc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jwbbc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e90385a-6335-4dd4-b6b9-a5ebf495445a",
      ResourceVersion: (string) (len=7) "2219045",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "01fc268909db5fc12a6fbf6d2f32feb15beef345a9eecb4c8e103e12c14f861e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.211/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.211/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 32 31 31 5c 22 7d  |2.168.125.211\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l5q7j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l5q7j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) (len=15) "192.168.125.211",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.125.211"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882233700,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ff6a5fd82d81cfb9a0d8a472e68c1b565a5a3733fa707961dca15aa11a5bc78c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l5q7j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.801439 24 deployment.go:68] Pod "webserver-deployment-685b768f58-lv9gx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lv9gx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a8fb1d9-5cac-48b1-9d8e-763b07519036",
      ResourceVersion: (string) (len=7) "2219012",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.208/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.208/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "00d20b4f4980eafe4b1e226611f180fabd076439efba12de4f33f7405e9c2790"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 32 30 38 5c 22 7d  |2.168.125.208\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m8vl7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m8vl7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) (len=15) "192.168.125.208",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.125.208"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882233699,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://215c9b899d69be7579eff934ae6370efc2267b84598276992b4acd7dd1832623",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m8vl7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.802948 24 deployment.go:68] Pod "webserver-deployment-685b768f58-lz8bt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lz8bt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43739444-3046-4fd2-9f5e-55c33e7d67c9",
      ResourceVersion: (string) (len=7) "2219042",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7a6dd8076bb64b622a5fb266e23507f98590f6a5f374f6f8e2e43da24be2ec45",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.212/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.212/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 32 31 32 5c 22 7d  |2.168.125.212\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mb8wk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mb8wk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) (len=15) "192.168.125.212",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.125.212"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882233700,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5a71aa33cf3622aec620eb49f351031f12a5c6fdce2bef222f6edcda9b3d9609",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mb8wk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.804453 24 deployment.go:68] Pod "webserver-deployment-685b768f58-mwrgz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-mwrgz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02ce2bb6-6609-4adf-9a93-64d501e3312c",
      ResourceVersion: (string) (len=7) "2219313",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "aa17b5117a2ec549a8a101724a42f2485769aa05c34f93e13f669292fb5a5ef1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.160/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.160/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jk6n6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jk6n6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jk6n6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.805884 24 deployment.go:68] Pod "webserver-deployment-685b768f58-p8zcq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-p8zcq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e67ddaed-2e29-4c60-ad76-e59464793cb1",
      ResourceVersion: (string) (len=7) "2219015",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d5c2fa7ba17da016b8dd115bd05f2f0aa52b939f97ef2ca86833fb85aaed3b1c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.209/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.209/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 32 30 39 5c 22 7d  |2.168.125.209\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ncmv4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ncmv4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) (len=15) "192.168.125.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.125.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882233700,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7fcca81f7c7834cfc0f7d5e25799e2e306b2cbe852daa148a87da530ab97aeca",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ncmv4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.807556 24 deployment.go:68] Pod "webserver-deployment-685b768f58-qt7qg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qt7qg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8063db52-10a0-42d8-ae3d-d51e76b05293",
      ResourceVersion: (string) (len=7) "2219373",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "07281084e8e594f70dfb9f723ddaa4448d6490c6fd7ce0edba6a761cc58edc7a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.168/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.168/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4v4ht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4v4ht",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233706,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4v4ht",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.809100 24 deployment.go:68] Pod "webserver-deployment-685b768f58-rqsrs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rqsrs",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a953ef08-2d3a-4d84-8fb9-c498a36251b8",
      ResourceVersion: (string) (len=7) "2219367",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e4beec3399e44b5a28bfc0da4db0a2bf1b573255e271f062b243c46b6dcd3548",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.223/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.223/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mkh9h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mkh9h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233706,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mkh9h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.810917 24 deployment.go:68] Pod "webserver-deployment-685b768f58-tc6lh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tc6lh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d5f7f4f-25db-4e63-98c1-eb05cf1e1602",
      ResourceVersion: (string) (len=7) "2219035",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e722ba415ac973853a30acfec0bffa73822328d71bba143dfa7ad763925676c7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.151/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.151/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  38 2e 31 35 31 5c 22 7d  |2.168.158.151\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hsjlt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hsjlt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) (len=15) "192.168.158.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.158.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882233700,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5693fd42d6372f2cbbaa759d492985c46a25c7943633ef55c8ea6c4ba2a3010a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hsjlt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.812409 24 deployment.go:68] Pod "webserver-deployment-685b768f58-w5mcr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-w5mcr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "367ee02d-245e-42a6-9ac8-3ee65bf7ef3e",
      ResourceVersion: (string) (len=7) "2219360",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "feb49baf1397261161462458d9206d5b59b16a170d409dcad0fad95ab91d7621",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.222/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.222/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t9w89",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t9w89",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233706,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t9w89",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.813874 24 deployment.go:68] Pod "webserver-deployment-685b768f58-wtjr6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wtjr6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f16da491-95ed-4d48-a294-54494358d858",
      ResourceVersion: (string) (len=7) "2219048",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6950a7d7fc5aa1ba325a1250931c72bb4d230bab17c2e2766e937cfa420fae0d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.155/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.155/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  38 2e 31 35 35 5c 22 7d  |2.168.158.155\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5bz6d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5bz6d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233701,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) (len=15) "192.168.158.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.158.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233697,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882233700,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://89a40942c84b6dd096424c2ba46a127edc2043ff37c0c1f7f1cb8ffdf75f3dec",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5bz6d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.815379 24 deployment.go:68] Pod "webserver-deployment-685b768f58-xv6fn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xv6fn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "074d5978-cacd-40b8-9536-31413e40a23f",
      ResourceVersion: (string) (len=7) "2219338",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "dbb8fa5346841466b678e3c1608e50d454f0c438bc602d9840ab3f7c9dfaa59f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.162/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.162/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "666a795c-fc44-4d6f-9974-c2999c9786e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  36 61 37 39 35 63 2d 66  |d\":\"666a795c-f|
              00000090  63 34 34 2d 34 64 36 66  2d 39 39 37 34 2d 63 32  |c44-4d6f-9974-c2|
              000000a0  39 39 39 63 39 37 38 36  65 35 5c 22 7d 22 3a 7b  |999c9786e5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nb5hr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nb5hr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nb5hr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.816834 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-84nsn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-84nsn",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ebe779e-4d05-4c27-9685-23de1b3c8133",
      ResourceVersion: (string) (len=7) "2219330",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "321df1f1c7d67dcfa1ad252770adfdcdb720dd9d8993752b25d65ab5e48f3776",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.161/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.161/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2b6mm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2b6mm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2b6mm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.818287 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9jxv2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9jxv2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b4cdf3f-3c16-4d0b-8a24-1fbf6504d317",
      ResourceVersion: (string) (len=7) "2219314",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0ecfb177936a5d166ca364829255df78d6e0cbdbee8a664ec57c521858ef5007",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.216/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.216/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gdpms",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gdpms",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gdpms",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.819746 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9kghp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9kghp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d903dcb-50eb-4cf0-a9f5-b4094b21949f",
      ResourceVersion: (string) (len=7) "2219305",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.214/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fc1842fb632e108090c8a36f05032377bb30a9ba07c3c3f24881ff0ccb6180a6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.214/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 35 2e 32  31 34 5c 22 7d 22 3a 7b  |68.125.214\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hlglq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hlglq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) (len=15) "192.168.125.214",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.125.214"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hlglq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.821593 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cs6rk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cs6rk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28ba262f-b02e-473b-848d-8a2d7a323755",
      ResourceVersion: (string) (len=7) "2219347",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2a67d53c36a4015f940c684b5535ee6d7f14b22891372449ceda16ec562db40c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.163/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.163/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5xpck",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5xpck",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5xpck",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.823715 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-dsnc5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-dsnc5",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7202e314-8e94-4f5b-b0e8-8d294e974fca",
      ResourceVersion: (string) (len=7) "2219308",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "751b65a831148b9a8ac2682325dee53e2afe31038825441c4b79b11e04a18b5d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.213/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.213/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 35 2e 32  31 33 5c 22 7d 22 3a 7b  |68.125.213\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6mlp2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6mlp2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) (len=15) "192.168.125.213",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.125.213"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=16) "ImagePullBackOff",
              Message: (string) (len=316) "Back-off pulling image \"webserver:404\": ErrImagePull: failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6mlp2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.825185 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fn75w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fn75w",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6310a078-9c56-4fea-8046-7787a32de49a",
      ResourceVersion: (string) (len=7) "2219361",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "56055367a21d959a73524fe19bbe7853489e446076efea37488b9f7a605d1a5f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.165/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.165/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tt62d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tt62d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233706,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tt62d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.826587 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fxqfd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fxqfd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "743947ad-7e08-4387-bccc-5dce5227217b",
      ResourceVersion: (string) (len=7) "2219355",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fbfe8c5815107e450ec72a0723c60d4896bee38b322f81f444f093f0d9e90d0c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.221/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.221/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4ldp9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4ldp9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4ldp9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.827993 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-htq5p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-htq5p",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4329946-a6d4-4397-b9f1-fc6625f02b50",
      ResourceVersion: (string) (len=7) "2219317",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fc6fcec06cae185c78c893d9d61582c3cb8f47d572d54589867f439a981e983b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.157/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.157/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 38 2e 31  35 37 5c 22 7d 22 3a 7b  |68.158.157\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n6nx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n6nx8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) (len=15) "192.168.158.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.158.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n6nx8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.829407 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-lxzjb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-lxzjb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cdedc0c2-51a5-4573-8a36-d3cb7c8f8de1",
      ResourceVersion: (string) (len=7) "2219302",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d4f0fe174b239b65b63faedeb67edf2ecdf7018078a40557c166abd4486e6e35",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.215/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.215/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pb9tj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pb9tj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pb9tj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.830809 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-nc7pw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-nc7pw",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b999e8e-a26b-40f9-823a-e9d09f2ef42d",
      ResourceVersion: (string) (len=7) "2219322",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "eca5a714c2cea75f44108bf5bf45bf087015afb5c19b0449f9b72ee6d8a69cf9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.156/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.156/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 38 2e 31  35 36 5c 22 7d 22 3a 7b  |68.158.156\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ffgj7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ffgj7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) (len=15) "192.168.158.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.158.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=16) "ImagePullBackOff",
              Message: (string) (len=316) "Back-off pulling image \"webserver:404\": ErrImagePull: failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ffgj7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.832236 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-s7xfm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-s7xfm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "377b64b8-4a4a-4630-a0a1-29d977497136",
      ResourceVersion: (string) (len=7) "2219381",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bcf32750063df8f8c48574bc742ee404ba7350aacddec49b2356baa764350b2a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.158/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.158/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 38 2e 31  35 38 5c 22 7d 22 3a 7b  |68.158.158\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pfkng",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pfkng",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) (len=15) "192.168.158.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.158.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pfkng",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.833670 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wbbcl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wbbcl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb1a673d-dcd6-4b7e-a724-90a8ca6c68ba",
      ResourceVersion: (string) (len=7) "2219377",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "90f5017b25d7d73a9bb5154559fd17ccf83b30c080991942b324846a4daee6cd",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.169/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.169/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-st4ww",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-st4ww",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233706,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-st4ww",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.835067 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zclqf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zclqf",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4766",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f8388cd-7c74-48e7-b390-13d2bb76813a",
      ResourceVersion: (string) (len=7) "2219335",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "09c56455e1431a37581950474386160d2d35334bcc14ead104c8b017921f2d23",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.219/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.219/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bcc9ab8a-72d4-4d0d-9045-44403903ed44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 63  63 39 61 62 38 61 2d 37  |d\":\"bcc9ab8a-7|
              00000090  32 64 34 2d 34 64 30 64  2d 39 30 34 35 2d 34 34  |2d4-4d0d-9045-44|
              000000a0  34 30 33 39 30 33 65 64  34 34 5c 22 7d 22 3a 7b  |403903ed44\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gglgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gglgd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882233705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882233705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gglgd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 16:55:07.836344 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4766" for this suite. @ 05/07/25 16:55:07.84
• [10.178 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 05/07/25 16:55:07.846
  I0507 16:55:07.846667 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename dns @ 05/07/25 16:55:07.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:55:07.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:55:07.864
  STEP: Creating a test headless service @ 05/07/25 16:55:07.866
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-8258.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-8258.svc.cluster.local;sleep 1; done
   @ 05/07/25 16:55:07.87
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8258.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8258.svc.cluster.local;sleep 1; done
   @ 05/07/25 16:55:07.87
  STEP: creating a pod to probe DNS @ 05/07/25 16:55:07.87
  STEP: submitting the pod to kubernetes @ 05/07/25 16:55:07.87
  STEP: retrieving the pod @ 05/07/25 16:55:11.89
  STEP: looking for the results for each expected name from probers @ 05/07/25 16:55:11.893
  I0507 16:55:11.896764 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local from pod dns-8258/dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1: the server could not find the requested resource (get pods dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1)
  I0507 16:55:11.899977 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local from pod dns-8258/dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1: the server could not find the requested resource (get pods dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1)
  I0507 16:55:11.903300 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-8258.svc.cluster.local from pod dns-8258/dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1: the server could not find the requested resource (get pods dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1)
  I0507 16:55:11.906734 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-8258.svc.cluster.local from pod dns-8258/dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1: the server could not find the requested resource (get pods dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1)
  I0507 16:55:11.909811 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local from pod dns-8258/dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1: the server could not find the requested resource (get pods dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1)
  I0507 16:55:11.913689 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local from pod dns-8258/dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1: the server could not find the requested resource (get pods dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1)
  I0507 16:55:11.916694 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-8258.svc.cluster.local from pod dns-8258/dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1: the server could not find the requested resource (get pods dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1)
  I0507 16:55:11.919986 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-8258.svc.cluster.local from pod dns-8258/dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1: the server could not find the requested resource (get pods dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1)
  I0507 16:55:11.919999 24 dns_common.go:506] Lookups using dns-8258/dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local agnhost_udp@dns-test-service-2.dns-8258.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-8258.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8258.svc.cluster.local jessie_udp@dns-test-service-2.dns-8258.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8258.svc.cluster.local]

  I0507 16:55:11.931986 24 dns_common.go:514] Pod client logs for webserver: 
  I0507 16:55:11.936335 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0507 16:55:11.940042 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0507 16:55:16.923575 24 dns_common.go:546] DNS probes using dns-8258/dns-test-0c8ba3af-0087-4a84-bcd7-103c693da3d1 succeeded

  STEP: deleting the pod @ 05/07/25 16:55:16.923
  STEP: deleting the test headless service @ 05/07/25 16:55:16.95
  I0507 16:55:16.959461 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8258" for this suite. @ 05/07/25 16:55:16.964
• [9.123 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 05/07/25 16:55:16.97
  I0507 16:55:16.970305 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename dns @ 05/07/25 16:55:16.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:55:17.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:55:17.12
  STEP: Creating a test headless service @ 05/07/25 16:55:17.121
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9578.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9578.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 32.105.111.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.111.105.32_udp@PTR;check="$$(dig +tcp +noall +answer +search 32.105.111.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.111.105.32_tcp@PTR;sleep 1; done
   @ 05/07/25 16:55:17.164
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9578.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9578.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9578.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9578.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9578.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 32.105.111.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.111.105.32_udp@PTR;check="$$(dig +tcp +noall +answer +search 32.105.111.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.111.105.32_tcp@PTR;sleep 1; done
   @ 05/07/25 16:55:17.164
  STEP: creating a pod to probe DNS @ 05/07/25 16:55:17.164
  STEP: submitting the pod to kubernetes @ 05/07/25 16:55:17.164
  STEP: retrieving the pod @ 05/07/25 16:55:21.188
  STEP: looking for the results for each expected name from probers @ 05/07/25 16:55:21.191
  I0507 16:55:21.225071 24 dns_common.go:546] DNS probes using dns-9578/dns-test-5c04851d-8aca-4668-b98c-eb45ed2b2e88 succeeded

  STEP: deleting the pod @ 05/07/25 16:55:21.225
  STEP: deleting the test service @ 05/07/25 16:55:21.242
  STEP: deleting the test headless service @ 05/07/25 16:55:21.272
  I0507 16:55:21.291454 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9578" for this suite. @ 05/07/25 16:55:21.294
• [4.331 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/07/25 16:55:21.301
  I0507 16:55:21.301249 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-runtime @ 05/07/25 16:55:21.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:55:21.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:55:21.317
  STEP: create the container @ 05/07/25 16:55:21.318
  I0507 16:55:21.327704      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/07/25 16:55:21.327
  STEP: get the container status @ 05/07/25 16:55:24.345
  STEP: the container should be terminated @ 05/07/25 16:55:24.348
  STEP: the termination message should be set @ 05/07/25 16:55:24.348
  I0507 16:55:24.348310 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/07/25 16:55:24.348
  I0507 16:55:24.359648 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-806" for this suite. @ 05/07/25 16:55:24.362
• [3.065 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 05/07/25 16:55:24.366
  I0507 16:55:24.366355 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 16:55:24.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:55:24.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:55:24.38
  STEP: Counting existing ResourceQuota @ 05/07/25 16:55:24.382
  STEP: Creating a ResourceQuota @ 05/07/25 16:55:29.385
  STEP: Ensuring resource quota status is calculated @ 05/07/25 16:55:29.39
  STEP: Creating a Service @ 05/07/25 16:55:31.395
  STEP: Creating a NodePort Service @ 05/07/25 16:55:31.418
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/07/25 16:55:31.444
  STEP: Ensuring resource quota status captures service creation @ 05/07/25 16:55:31.48
  STEP: Deleting Services @ 05/07/25 16:55:33.483
  STEP: Ensuring resource quota status released usage @ 05/07/25 16:55:33.545
  I0507 16:55:35.549699 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-845" for this suite. @ 05/07/25 16:55:35.553
• [11.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 05/07/25 16:55:35.558
  I0507 16:55:35.558684 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubelet-test @ 05/07/25 16:55:35.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:55:35.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:55:35.597
  I0507 16:55:39.623308 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8197" for this suite. @ 05/07/25 16:55:39.627
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/07/25 16:55:39.632
  I0507 16:55:39.632270 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 16:55:39.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:55:39.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:55:39.662
  STEP: Create a ReplicaSet @ 05/07/25 16:55:39.663
  STEP: Verify that the required pods have come up @ 05/07/25 16:55:39.668
  I0507 16:55:39.671101 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  I0507 16:55:44.676359 24 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/07/25 16:55:44.676
  I0507 16:55:44.678351 24 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/07/25 16:55:44.678
  STEP: DeleteCollection of the ReplicaSets @ 05/07/25 16:55:44.68
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/07/25 16:55:44.687
  I0507 16:55:44.689245 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3029" for this suite. @ 05/07/25 16:55:44.692
• [5.067 seconds]
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/07/25 16:55:44.698
  I0507 16:55:44.698894 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 16:55:44.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:55:44.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:55:44.723
  STEP: Creating a pod to test downward api env vars @ 05/07/25 16:55:44.725
  STEP: Saw pod success @ 05/07/25 16:55:48.743
  I0507 16:55:48.745638 24 output.go:207] Trying to get logs from node mini-1 pod downward-api-d40306b4-7ac8-4cd2-bcbb-440a936c95c2 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 16:55:48.75
  I0507 16:55:48.759504 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8694" for this suite. @ 05/07/25 16:55:48.762
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 05/07/25 16:55:48.767
  I0507 16:55:48.767323 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename containers @ 05/07/25 16:55:48.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:55:48.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:55:48.782
  STEP: Creating a pod to test override all @ 05/07/25 16:55:48.784
  STEP: Saw pod success @ 05/07/25 16:55:52.8
  I0507 16:55:52.803194 24 output.go:207] Trying to get logs from node mini-1 pod client-containers-1919a6f6-ebe3-42e1-854e-bd872b5398e7 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 16:55:52.807
  I0507 16:55:52.817354 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4055" for this suite. @ 05/07/25 16:55:52.82
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 05/07/25 16:55:52.826
  I0507 16:55:52.826325 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 16:55:52.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:55:52.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:55:52.845
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4781 @ 05/07/25 16:55:52.846
  STEP: changing the ExternalName service to type=NodePort @ 05/07/25 16:55:52.851
  I0507 16:55:52.999154 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0507 16:55:55.003961 24 resource.go:361] Creating new exec pod
  I0507 16:55:57.026026 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 16:55:57.112714 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.99.91.129) 80 port [tcp/http] succeeded!\n"
  I0507 16:55:57.112766 24 builder.go:147] stdout: ""
  I0507 16:55:58.026766 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 16:55:58.112001 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.99.91.129) 80 port [tcp/http] succeeded!\n"
  I0507 16:55:58.112050 24 builder.go:147] stdout: ""
  I0507 16:55:59.026127 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 16:55:59.106947 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.99.91.129) 80 port [tcp/http] succeeded!\n"
  I0507 16:55:59.106971 24 builder.go:147] stdout: ""
  I0507 16:56:00.026983 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 16:56:00.100133 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.99.91.129) 80 port [tcp/http] succeeded!\n"
  I0507 16:56:00.100158 24 builder.go:147] stdout: "externalname-service-6dc7dc5f75-zcbts"
  I0507 16:56:00.100199 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.91.129 80'
  I0507 16:56:00.171706 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.91.129 80\nConnection to 10.99.91.129 80 port [tcp/http] succeeded!\n"
  I0507 16:56:00.171731 24 builder.go:147] stdout: ""
  I0507 16:56:01.100801 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.91.129 80'
  I0507 16:56:01.172475 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.91.129 80\nConnection to 10.99.91.129 80 port [tcp/http] succeeded!\n"
  I0507 16:56:01.172500 24 builder.go:147] stdout: "externalname-service-6dc7dc5f75-zcbts"
  I0507 16:56:01.172544 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.31 30840'
  I0507 16:56:01.249818 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.31 30840\nConnection to 10.221.190.31 30840 port [tcp/*] succeeded!\n"
  I0507 16:56:01.249843 24 builder.go:147] stdout: ""
  I0507 16:56:02.172924 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.31 30840'
  I0507 16:56:02.243790 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.31 30840\nConnection to 10.221.190.31 30840 port [tcp/*] succeeded!\n"
  I0507 16:56:02.243816 24 builder.go:147] stdout: ""
  I0507 16:56:03.172825 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.31 30840'
  I0507 16:56:03.256526 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.31 30840\nConnection to 10.221.190.31 30840 port [tcp/*] succeeded!\n"
  I0507 16:56:03.256551 24 builder.go:147] stdout: "externalname-service-6dc7dc5f75-zcbts"
  I0507 16:56:03.256592 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.32 30840'
  I0507 16:56:03.329610 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.32 30840\nConnection to 10.221.190.32 30840 port [tcp/*] succeeded!\n"
  I0507 16:56:03.329636 24 builder.go:147] stdout: ""
  I0507 16:56:04.256663 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.32 30840'
  I0507 16:56:04.333697 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.32 30840\nConnection to 10.221.190.32 30840 port [tcp/*] succeeded!\n"
  I0507 16:56:04.333722 24 builder.go:147] stdout: ""
  I0507 16:56:05.256717 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-4781 exec execpodgcz6l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.32 30840'
  I0507 16:56:05.344452 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.32 30840\nConnection to 10.221.190.32 30840 port [tcp/*] succeeded!\n"
  I0507 16:56:05.344485 24 builder.go:147] stdout: "externalname-service-6dc7dc5f75-zcbts"
  I0507 16:56:05.344542 24 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0507 16:56:05.375930 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4781" for this suite. @ 05/07/25 16:56:05.379
• [12.563 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/07/25 16:56:05.389
  I0507 16:56:05.389268 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/07/25 16:56:05.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:56:05.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:56:05.423
  I0507 16:56:05.425176 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  I0507 16:56:11.618247 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7336" for this suite. @ 05/07/25 16:56:11.621
• [6.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 05/07/25 16:56:11.627
  I0507 16:56:11.627726 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 16:56:11.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:56:11.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:56:11.643
  STEP: Setting up server cert @ 05/07/25 16:56:11.665
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 16:56:11.751
  STEP: Deploying the webhook pod @ 05/07/25 16:56:11.756
  STEP: Wait for the deployment to be ready @ 05/07/25 16:56:11.766
  I0507 16:56:11.771691 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0507 16:56:13.780973 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 16, 56, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 16, 56, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 16, 56, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 16, 56, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/07/25 16:56:15.785
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 16:56:15.802
  I0507 16:56:16.802281 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/07/25 16:56:16.805
  STEP: create a pod that should be updated by the webhook @ 05/07/25 16:56:16.817
  I0507 16:56:16.884532 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8294" for this suite. @ 05/07/25 16:56:16.888
  STEP: Destroying namespace "webhook-markers-1798" for this suite. @ 05/07/25 16:56:16.892
• [5.273 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 05/07/25 16:56:16.9
  I0507 16:56:16.900331 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 16:56:16.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:56:16.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:56:16.914
  STEP: Creating configMap with name projected-configmap-test-volume-map-9dde4341-f8e9-4c5a-9686-55413680bede @ 05/07/25 16:56:16.918
  STEP: Creating a pod to test consume configMaps @ 05/07/25 16:56:16.924
  STEP: Saw pod success @ 05/07/25 16:56:20.942
  I0507 16:56:20.945207 24 output.go:207] Trying to get logs from node mini-2 pod pod-projected-configmaps-cce569ff-29ef-4f43-a339-065086226010 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 16:56:20.949
  I0507 16:56:20.963512 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4056" for this suite. @ 05/07/25 16:56:20.966
• [4.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 05/07/25 16:56:20.972
  I0507 16:56:20.972232 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 16:56:20.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:56:20.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:56:20.986
  STEP: Creating configMap with name configmap-test-volume-e6c044ca-27ed-49a2-aa38-c8e88ddfc6a4 @ 05/07/25 16:56:20.988
  STEP: Creating a pod to test consume configMaps @ 05/07/25 16:56:20.994
  STEP: Saw pod success @ 05/07/25 16:56:25.011
  I0507 16:56:25.014322 24 output.go:207] Trying to get logs from node mini-2 pod pod-configmaps-b6d88b5d-7136-4771-b6e1-b11dd3b2a01e container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 16:56:25.019
  I0507 16:56:25.032822 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8092" for this suite. @ 05/07/25 16:56:25.036
• [4.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/07/25 16:56:25.042
  I0507 16:56:25.042820 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename subpath @ 05/07/25 16:56:25.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:56:25.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:56:25.059
  STEP: Setting up data @ 05/07/25 16:56:25.061
  STEP: Creating pod pod-subpath-test-secret-lt74 @ 05/07/25 16:56:25.069
  STEP: Creating a pod to test atomic-volume-subpath @ 05/07/25 16:56:25.069
  STEP: Saw pod success @ 05/07/25 16:56:49.13
  I0507 16:56:49.132517 24 output.go:207] Trying to get logs from node mini-2 pod pod-subpath-test-secret-lt74 container test-container-subpath-secret-lt74: <nil>
  STEP: delete the pod @ 05/07/25 16:56:49.136
  STEP: Deleting pod pod-subpath-test-secret-lt74 @ 05/07/25 16:56:49.149
  I0507 16:56:49.149437 24 delete.go:62] Deleting pod "pod-subpath-test-secret-lt74" in namespace "subpath-9606"
  I0507 16:56:49.151309 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9606" for this suite. @ 05/07/25 16:56:49.154
• [24.117 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/07/25 16:56:49.159
  I0507 16:56:49.159469 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename podtemplate @ 05/07/25 16:56:49.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:56:49.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:56:49.173
  STEP: Create set of pod templates @ 05/07/25 16:56:49.175
  I0507 16:56:49.179406 24 podtemplates.go:143] created test-podtemplate-1
  I0507 16:56:49.183788 24 podtemplates.go:143] created test-podtemplate-2
  I0507 16:56:49.187458 24 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/07/25 16:56:49.187
  STEP: delete collection of pod templates @ 05/07/25 16:56:49.189
  I0507 16:56:49.189478 24 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/07/25 16:56:49.202
  I0507 16:56:49.202605 24 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0507 16:56:49.205016 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6315" for this suite. @ 05/07/25 16:56:49.254
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 05/07/25 16:56:49.26
  I0507 16:56:49.260186 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 16:56:49.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:56:49.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:56:49.276
  STEP: Looking for a node to schedule job pod @ 05/07/25 16:56:49.279
  STEP: Creating a job @ 05/07/25 16:56:49.354
  STEP: Ensuring job fails @ 05/07/25 16:56:49.36
  I0507 16:56:55.374823 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8479" for this suite. @ 05/07/25 16:56:55.378
• [6.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 05/07/25 16:56:55.384
  I0507 16:56:55.384578 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 16:56:55.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:56:55.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:56:55.399
  STEP: Creating a job @ 05/07/25 16:56:55.4
  STEP: Ensuring active pods == parallelism @ 05/07/25 16:56:55.404
  STEP: delete a job @ 05/07/25 16:56:57.41
  STEP: deleting Job.batch foo in namespace job-4151, will wait for the garbage collector to delete the pods @ 05/07/25 16:56:57.41
  I0507 16:56:57.469155 24 resources.go:139] Deleting Job.batch foo took: 5.044196ms
  I0507 16:56:57.570205 24 resources.go:163] Terminating Job.batch foo pods took: 101.047936ms
  STEP: Ensuring job was deleted @ 05/07/25 16:56:59.971
  I0507 16:56:59.973682 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4151" for this suite. @ 05/07/25 16:56:59.976
• [4.598 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 05/07/25 16:56:59.982
  I0507 16:56:59.982803 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl-logs @ 05/07/25 16:56:59.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:56:59.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:57:00
  STEP: creating a pod @ 05/07/25 16:57:00.002
  I0507 16:57:00.002590 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-logs-416 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0507 16:57:00.048820 24 builder.go:146] stderr: ""
  I0507 16:57:00.048844 24 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/07/25 16:57:00.048
  I0507 16:57:00.048909 24 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0507 16:57:02.055548 24 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/07/25 16:57:02.055
  I0507 16:57:02.055596 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-logs-416 logs logs-generator logs-generator'
  I0507 16:57:02.114242 24 builder.go:146] stderr: ""
  I0507 16:57:02.114271 24 builder.go:147] stdout: "I0507 16:57:01.262874       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/msvm 220\nI0507 16:57:01.463274       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/2x8 347\nI0507 16:57:01.663666       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/4cd 584\nI0507 16:57:01.862935       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/6899 311\nI0507 16:57:02.063305       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/w8g 477\n"
  STEP: limiting log lines @ 05/07/25 16:57:02.114
  I0507 16:57:02.114321 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-logs-416 logs logs-generator logs-generator --tail=1'
  I0507 16:57:02.154658 24 builder.go:146] stderr: ""
  I0507 16:57:02.154682 24 builder.go:147] stdout: "I0507 16:57:02.063305       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/w8g 477\n"
  I0507 16:57:02.154695 24 logs.go:180] got output "I0507 16:57:02.063305       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/w8g 477\n"
  STEP: limiting log bytes @ 05/07/25 16:57:02.154
  I0507 16:57:02.154739 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-logs-416 logs logs-generator logs-generator --limit-bytes=1'
  I0507 16:57:02.194138 24 builder.go:146] stderr: ""
  I0507 16:57:02.194161 24 builder.go:147] stdout: "I"
  I0507 16:57:02.194167 24 logs.go:186] got output "I"
  STEP: exposing timestamps @ 05/07/25 16:57:02.194
  I0507 16:57:02.194216 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-logs-416 logs logs-generator logs-generator --tail=1 --timestamps'
  I0507 16:57:02.233918 24 builder.go:146] stderr: ""
  I0507 16:57:02.233943 24 builder.go:147] stdout: "2025-05-07T16:57:02.063397124Z I0507 16:57:02.063305       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/w8g 477\n"
  I0507 16:57:02.233951 24 logs.go:192] got output "2025-05-07T16:57:02.063397124Z I0507 16:57:02.063305       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/w8g 477\n"
  STEP: restricting to a time range @ 05/07/25 16:57:02.233
  I0507 16:57:04.735554 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-logs-416 logs logs-generator logs-generator --since=1s'
  I0507 16:57:04.776944 24 builder.go:146] stderr: ""
  I0507 16:57:04.777005 24 builder.go:147] stdout: "I0507 16:57:03.863003       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/lqg 422\nI0507 16:57:04.063375       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/t9c9 283\nI0507 16:57:04.263764       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/787 502\nI0507 16:57:04.462988       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/7pxl 415\nI0507 16:57:04.663348       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/szr 512\n"
  I0507 16:57:04.777063 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-logs-416 logs logs-generator logs-generator --since=24h'
  I0507 16:57:04.830724 24 builder.go:146] stderr: ""
  I0507 16:57:04.830795 24 builder.go:147] stdout: "I0507 16:57:01.262874       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/msvm 220\nI0507 16:57:01.463274       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/2x8 347\nI0507 16:57:01.663666       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/4cd 584\nI0507 16:57:01.862935       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/6899 311\nI0507 16:57:02.063305       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/w8g 477\nI0507 16:57:02.263658       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/82jb 437\nI0507 16:57:02.462954       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/wnrg 231\nI0507 16:57:02.663350       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/sqzd 398\nI0507 16:57:02.863459       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/6rws 554\nI0507 16:57:03.063821       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/ctfz 422\nI0507 16:57:03.263093       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/wfpg 483\nI0507 16:57:03.463399       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/z4k 249\nI0507 16:57:03.663752       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/ltbz 235\nI0507 16:57:03.863003       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/lqg 422\nI0507 16:57:04.063375       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/t9c9 283\nI0507 16:57:04.263764       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/787 502\nI0507 16:57:04.462988       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/7pxl 415\nI0507 16:57:04.663348       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/szr 512\n"
  I0507 16:57:04.830884 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-logs-416 delete pod logs-generator'
  I0507 16:57:05.976469 24 builder.go:146] stderr: ""
  I0507 16:57:05.976491 24 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0507 16:57:05.976580 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-416" for this suite. @ 05/07/25 16:57:05.98
• [6.004 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 05/07/25 16:57:05.986
  I0507 16:57:05.986467 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 16:57:05.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:57:05.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:57:06.002
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/07/25 16:57:06.004
  STEP: Saw pod success @ 05/07/25 16:57:10.022
  I0507 16:57:10.025557 24 output.go:207] Trying to get logs from node mini-2 pod pod-33290614-c79c-48de-be8b-38eca64d4bc2 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 16:57:10.029
  I0507 16:57:10.044075 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3991" for this suite. @ 05/07/25 16:57:10.047
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/07/25 16:57:10.053
  I0507 16:57:10.053323 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 16:57:10.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:57:10.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:57:10.071
  STEP: Creating projection with secret that has name projected-secret-test-96b7b7c0-8ec7-4f91-b456-fc4abe05bc5c @ 05/07/25 16:57:10.074
  STEP: Creating a pod to test consume secrets @ 05/07/25 16:57:10.078
  STEP: Saw pod success @ 05/07/25 16:57:14.098
  I0507 16:57:14.100941 24 output.go:207] Trying to get logs from node mini-2 pod pod-projected-secrets-871a1f6d-5e0d-441f-bc73-4ee2d5f172bf container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 16:57:14.105
  I0507 16:57:14.117819 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2719" for this suite. @ 05/07/25 16:57:14.12
• [4.073 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 05/07/25 16:57:14.125
  I0507 16:57:14.125909 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename proxy @ 05/07/25 16:57:14.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:57:14.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:57:14.141
  I0507 16:57:14.143351 24 proxy.go:430] Creating pod...
  I0507 16:57:16.156023 24 proxy.go:454] Creating service...
  I0507 16:57:16.181515 24 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/pods/agnhost/proxy?method=DELETE
  I0507 16:57:16.185482 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0507 16:57:16.185513 24 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/pods/agnhost/proxy?method=OPTIONS
  I0507 16:57:16.188190 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0507 16:57:16.188206 24 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/pods/agnhost/proxy?method=PATCH
  I0507 16:57:16.191631 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0507 16:57:16.191647 24 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/pods/agnhost/proxy?method=POST
  I0507 16:57:16.196745 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0507 16:57:16.196759 24 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/pods/agnhost/proxy?method=PUT
  I0507 16:57:16.201202 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0507 16:57:16.201216 24 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/services/e2e-proxy-test-service/proxy?method=DELETE
  I0507 16:57:16.207239 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0507 16:57:16.207253 24 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0507 16:57:16.211508 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0507 16:57:16.211532 24 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/services/e2e-proxy-test-service/proxy?method=PATCH
  I0507 16:57:16.215796 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0507 16:57:16.215826 24 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/services/e2e-proxy-test-service/proxy?method=POST
  I0507 16:57:16.220646 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0507 16:57:16.220660 24 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/services/e2e-proxy-test-service/proxy?method=PUT
  I0507 16:57:16.223651 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0507 16:57:16.223696 24 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/pods/agnhost/proxy?method=GET
  I0507 16:57:16.225526 24 proxy.go:530] http.Client request:GET StatusCode:301
  I0507 16:57:16.225541 24 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/services/e2e-proxy-test-service/proxy?method=GET
  I0507 16:57:16.228269 24 proxy.go:530] http.Client request:GET StatusCode:301
  I0507 16:57:16.228304 24 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/pods/agnhost/proxy?method=HEAD
  I0507 16:57:16.230033 24 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0507 16:57:16.230046 24 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1039/services/e2e-proxy-test-service/proxy?method=HEAD
  I0507 16:57:16.232455 24 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0507 16:57:16.232509 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1039" for this suite. @ 05/07/25 16:57:16.236
• [2.115 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 05/07/25 16:57:16.241
  I0507 16:57:16.241088 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-webhook @ 05/07/25 16:57:16.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:57:16.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:57:16.258
  STEP: Setting up server cert @ 05/07/25 16:57:16.259
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/07/25 16:57:16.557
  STEP: Deploying the custom resource conversion webhook pod @ 05/07/25 16:57:16.561
  STEP: Wait for the deployment to be ready @ 05/07/25 16:57:16.574
  I0507 16:57:16.582683 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  I0507 16:57:18.593117 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 16, 57, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 16, 57, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 16, 57, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 16, 57, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/07/25 16:57:20.597
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 16:57:20.617
  I0507 16:57:21.617982 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0507 16:57:21.620984 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Creating a v1 custom resource @ 05/07/25 16:57:24.186
  STEP: v2 custom resource should be converted @ 05/07/25 16:57:24.197
  I0507 16:57:24.795522 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1316" for this suite. @ 05/07/25 16:57:24.8
• [8.568 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/07/25 16:57:24.808
  I0507 16:57:24.808822 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 16:57:24.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:57:24.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:57:24.836
  STEP: Create a Replicaset @ 05/07/25 16:57:24.844
  STEP: Verify that the required pods have come up. @ 05/07/25 16:57:24.849
  I0507 16:57:24.851990 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0507 16:57:29.858079 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 16:57:29.858
  STEP: Getting /status @ 05/07/25 16:57:29.858
  I0507 16:57:29.860441 24 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/07/25 16:57:29.86
  I0507 16:57:29.867480 24 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/07/25 16:57:29.867
  I0507 16:57:29.868774 24 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0507 16:57:29.868848 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0507 16:57:29.868887 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0507 16:57:29.869007 24 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0507 16:57:29.869040 24 replica_set.go:688] Found replicaset test-rs in namespace replicaset-4788 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0507 16:57:29.869049 24 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/07/25 16:57:29.869
  I0507 16:57:29.869087 24 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0507 16:57:29.874483 24 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/07/25 16:57:29.874
  I0507 16:57:29.875611 24 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0507 16:57:29.875687 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0507 16:57:29.875747 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0507 16:57:29.875789 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0507 16:57:29.875801 24 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-4788 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 16:57:29.875845 24 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0507 16:57:29.875868 24 replica_set.go:724] Found replicaset test-rs in namespace replicaset-4788 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0507 16:57:29.875884 24 replica_set.go:735] Replicaset test-rs has a patched status
  I0507 16:57:29.875931 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4788" for this suite. @ 05/07/25 16:57:29.878
• [5.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/07/25 16:57:29.883
  I0507 16:57:29.883705 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename init-container @ 05/07/25 16:57:29.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:57:29.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:57:29.898
  STEP: creating the pod @ 05/07/25 16:57:29.9
  I0507 16:57:29.900243 24 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0507 16:57:33.986590 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-405" for this suite. @ 05/07/25 16:57:33.989
• [4.112 seconds]
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/07/25 16:57:33.995
  I0507 16:57:33.995642 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename cronjob @ 05/07/25 16:57:33.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 16:57:34.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 16:57:34.012
  STEP: Creating a suspended cronjob @ 05/07/25 16:57:34.013
  STEP: Ensuring no jobs are scheduled @ 05/07/25 16:57:34.017
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/07/25 17:02:34.018
  STEP: Removing cronjob @ 05/07/25 17:02:34.022
  I0507 17:02:34.026829 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2280" for this suite. @ 05/07/25 17:02:34.03
• [300.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/07/25 17:02:34.035
  I0507 17:02:34.035649 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 17:02:34.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:02:34.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:02:34.046
  STEP: Creating secret with name secret-test-c4709745-84ce-4aed-8ace-1735b3fd29f9 @ 05/07/25 17:02:34.048
  STEP: Creating a pod to test consume secrets @ 05/07/25 17:02:34.051
  STEP: Saw pod success @ 05/07/25 17:02:38.071
  I0507 17:02:38.073784 24 output.go:207] Trying to get logs from node mini-2 pod pod-secrets-2129c289-7c62-4d21-b2fa-7b369212fb2b container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 17:02:38.087
  I0507 17:02:38.098624 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-310" for this suite. @ 05/07/25 17:02:38.101
• [4.071 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/07/25 17:02:38.106
  I0507 17:02:38.106914 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename limitrange @ 05/07/25 17:02:38.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:02:38.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:02:38.118
  STEP: Creating a LimitRange @ 05/07/25 17:02:38.12
  STEP: Setting up watch @ 05/07/25 17:02:38.12
  STEP: Submitting a LimitRange @ 05/07/25 17:02:38.223
  STEP: Verifying LimitRange creation was observed @ 05/07/25 17:02:38.228
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/07/25 17:02:38.228
  I0507 17:02:38.230931 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0507 17:02:38.230950 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/07/25 17:02:38.23
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/07/25 17:02:38.235
  I0507 17:02:38.237955 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0507 17:02:38.237970 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/07/25 17:02:38.237
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/07/25 17:02:38.242
  I0507 17:02:38.245586 24 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0507 17:02:38.245605 24 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/07/25 17:02:38.245
  STEP: Failing to create a Pod with more than max resources @ 05/07/25 17:02:38.247
  STEP: Updating a LimitRange @ 05/07/25 17:02:38.249
  STEP: Verifying LimitRange updating is effective @ 05/07/25 17:02:38.255
  STEP: Creating a Pod with less than former min resources @ 05/07/25 17:02:40.26
  STEP: Failing to create a Pod with more than max resources @ 05/07/25 17:02:40.266
  STEP: Deleting a LimitRange @ 05/07/25 17:02:40.268
  STEP: Verifying the LimitRange was deleted @ 05/07/25 17:02:40.275
  I0507 17:02:45.280769 24 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/07/25 17:02:45.28
  I0507 17:02:45.287670 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9741" for this suite. @ 05/07/25 17:02:45.29
• [7.190 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:443
  STEP: Creating a kubernetes client @ 05/07/25 17:02:45.297
  I0507 17:02:45.297558 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sched-pred @ 05/07/25 17:02:45.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:02:45.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:02:45.309
  I0507 17:02:45.311259 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0507 17:02:45.394058 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0507 17:02:45.396565 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node mini-1 before test
  I0507 17:02:45.399306 24 predicates.go:956] calico-node-ptbd6 from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.399319 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0507 17:02:45.399325 24 predicates.go:956] kube-proxy-xrhlg from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.399330 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0507 17:02:45.399334 24 predicates.go:956] pfpod2 from limitrange-9741 started at 2025-05-07 17:02:45 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.399339 24 predicates.go:958] 	Container pause ready: false, restart count 0
  I0507 17:02:45.399344 24 predicates.go:956] pod-partial-resources from limitrange-9741 started at 2025-05-07 17:02:38 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.399348 24 predicates.go:958] 	Container pause ready: true, restart count 0
  I0507 17:02:45.399352 24 predicates.go:956] helm-charts-fluent-bit-ss6bs from logging started at 2025-04-29 11:28:41 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.399356 24 predicates.go:958] 	Container fluent-bit ready: true, restart count 0
  I0507 17:02:45.399361 24 predicates.go:956] kps-prometheus-node-exporter-x49ph from monitoring started at 2025-04-29 11:29:50 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.399365 24 predicates.go:958] 	Container node-exporter ready: true, restart count 0
  I0507 17:02:45.399370 24 predicates.go:956] sonobuoy-e2e-job-07fd652a611c431c from sonobuoy started at 2025-05-07 16:48:04 +0000 UTC (2 container statuses recorded)
  I0507 17:02:45.399374 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0507 17:02:45.399378 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 17:02:45.399382 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-a7c958b54b254fc6-pd8t9 from sonobuoy started at 2025-05-07 16:48:04 +0000 UTC (2 container statuses recorded)
  I0507 17:02:45.399387 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 17:02:45.399391 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0507 17:02:45.399395 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node mini-2 before test
  I0507 17:02:45.402193 24 predicates.go:956] calico-node-58sqm from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.402208 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0507 17:02:45.402214 24 predicates.go:956] kube-proxy-xvk88 from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.402218 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0507 17:02:45.402223 24 predicates.go:956] pfpod from limitrange-9741 started at 2025-05-07 17:02:40 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.402227 24 predicates.go:958] 	Container pause ready: true, restart count 0
  I0507 17:02:45.402231 24 predicates.go:956] pod-no-resources from limitrange-9741 started at 2025-05-07 17:02:38 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.402238 24 predicates.go:958] 	Container pause ready: true, restart count 0
  I0507 17:02:45.402245 24 predicates.go:956] helm-charts-fluent-bit-zrh72 from logging started at 2025-04-29 11:28:41 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.402249 24 predicates.go:958] 	Container fluent-bit ready: true, restart count 0
  I0507 17:02:45.402254 24 predicates.go:956] kps-prometheus-node-exporter-j85gt from monitoring started at 2025-04-29 11:29:50 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.402258 24 predicates.go:958] 	Container node-exporter ready: true, restart count 0
  I0507 17:02:45.402262 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-07 16:48:03 +0000 UTC (1 container statuses recorded)
  I0507 17:02:45.402266 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0507 17:02:45.402271 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-a7c958b54b254fc6-sfkx7 from sonobuoy started at 2025-05-07 16:48:05 +0000 UTC (2 container statuses recorded)
  I0507 17:02:45.402280 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 17:02:45.402284 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/07/25 17:02:45.402
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.183d4d6e059e40ed], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) didn't match Pod's node affinity/selector, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 05/07/25 17:02:45.433
  I0507 17:02:46.425134 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-607" for this suite. @ 05/07/25 17:02:46.428
• [1.137 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 05/07/25 17:02:46.434
  I0507 17:02:46.434827 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/07/25 17:02:46.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:02:46.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:02:46.457
  STEP: Cleaning up the secret @ 05/07/25 17:02:48.483
  STEP: Cleaning up the configmap @ 05/07/25 17:02:48.488
  STEP: Cleaning up the pod @ 05/07/25 17:02:48.493
  I0507 17:02:48.502091 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3026" for this suite. @ 05/07/25 17:02:48.505
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 05/07/25 17:02:48.51
  I0507 17:02:48.510553 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 17:02:48.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:02:48.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:02:48.526
  STEP: Looking for a node to schedule job pods @ 05/07/25 17:02:48.527
  STEP: Creating a job @ 05/07/25 17:02:48.609
  STEP: Waiting for all the pods to be ready @ 05/07/25 17:02:48.621
  STEP: Fetch all running pods @ 05/07/25 17:02:52.635
  STEP: Evict all the Pods @ 05/07/25 17:02:52.638
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-58b6g/job-1249 @ 05/07/25 17:02:52.638
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-k9tjs/job-1249 @ 05/07/25 17:02:52.638
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-p9hrj/job-1249 @ 05/07/25 17:02:52.638
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-p9hrj/job-1249 to be deleted @ 05/07/25 17:02:52.662
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-58b6g/job-1249 to be deleted @ 05/07/25 17:02:52.664
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-k9tjs/job-1249 to be deleted @ 05/07/25 17:02:52.664
  STEP: Ensuring job reaches completions @ 05/07/25 17:02:58.681
  I0507 17:03:40.764799 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1249" for this suite. @ 05/07/25 17:03:40.767
• [52.262 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 05/07/25 17:03:40.772
  I0507 17:03:40.772551 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename runtimeclass @ 05/07/25 17:03:40.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:03:40.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:03:40.786
  STEP: getting /apis @ 05/07/25 17:03:40.787
  STEP: getting /apis/node.k8s.io @ 05/07/25 17:03:40.79
  STEP: getting /apis/node.k8s.io/v1 @ 05/07/25 17:03:40.791
  STEP: creating @ 05/07/25 17:03:40.792
  STEP: watching @ 05/07/25 17:03:40.802
  I0507 17:03:40.802887 24 runtimeclass.go:278] starting watch
  STEP: getting @ 05/07/25 17:03:40.807
  STEP: listing @ 05/07/25 17:03:40.809
  STEP: patching @ 05/07/25 17:03:40.811
  STEP: updating @ 05/07/25 17:03:40.814
  I0507 17:03:40.818256 24 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 05/07/25 17:03:40.818
  STEP: deleting a collection @ 05/07/25 17:03:40.826
  I0507 17:03:40.836564 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6816" for this suite. @ 05/07/25 17:03:40.841
• [0.074 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 05/07/25 17:03:40.846
  I0507 17:03:40.846203 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 17:03:40.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:03:40.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:03:40.858
  STEP: creating secret secrets-611/secret-test-2f7b3294-8252-4e92-8a8d-35e50450bb41 @ 05/07/25 17:03:40.86
  STEP: Creating a pod to test consume secrets @ 05/07/25 17:03:40.863
  STEP: Saw pod success @ 05/07/25 17:03:44.881
  I0507 17:03:44.883340 24 output.go:207] Trying to get logs from node mini-2 pod pod-configmaps-33d6d02b-a5bc-4b5a-b123-c339c65e0601 container env-test: <nil>
  STEP: delete the pod @ 05/07/25 17:03:44.887
  I0507 17:03:44.898184 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-611" for this suite. @ 05/07/25 17:03:44.901
• [4.059 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 05/07/25 17:03:44.905
  I0507 17:03:44.905719 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/07/25 17:03:44.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:03:44.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:03:44.917
  STEP: creating the policy @ 05/07/25 17:03:44.923
  STEP: waiting until the marker is denied @ 05/07/25 17:03:44.94
  STEP: testing a replicated Deployment to be allowed @ 05/07/25 17:03:45.881
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/07/25 17:03:45.924
  I0507 17:03:45.956147 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-398" for this suite. @ 05/07/25 17:03:45.965
• [1.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 05/07/25 17:03:45.98
  I0507 17:03:45.980686 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename proxy @ 05/07/25 17:03:45.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:03:45.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:03:46.001
  I0507 17:03:46.003026 24 proxy.go:336] Creating pod...
  I0507 17:03:48.022718 24 proxy.go:360] Creating service...
  I0507 17:03:48.037067 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/pods/agnhost/proxy/some/path/with/DELETE
  I0507 17:03:48.041079 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0507 17:03:48.041106 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/pods/agnhost/proxy/some/path/with/GET
  I0507 17:03:48.044438 24 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0507 17:03:48.044460 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/pods/agnhost/proxy/some/path/with/HEAD
  I0507 17:03:48.047492 24 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0507 17:03:48.047508 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/pods/agnhost/proxy/some/path/with/OPTIONS
  I0507 17:03:48.050969 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0507 17:03:48.050986 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/pods/agnhost/proxy/some/path/with/PATCH
  I0507 17:03:48.054072 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0507 17:03:48.054084 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/pods/agnhost/proxy/some/path/with/POST
  I0507 17:03:48.058036 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0507 17:03:48.058070 24 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/pods/agnhost/proxy/some/path/with/PUT
  I0507 17:03:48.060734 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0507 17:03:48.060755 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/services/test-service/proxy/some/path/with/DELETE
  I0507 17:03:48.066833 24 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0507 17:03:48.066848 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/services/test-service/proxy/some/path/with/GET
  I0507 17:03:48.072098 24 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0507 17:03:48.072125 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/services/test-service/proxy/some/path/with/HEAD
  I0507 17:03:48.075701 24 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0507 17:03:48.075713 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/services/test-service/proxy/some/path/with/OPTIONS
  I0507 17:03:48.079078 24 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0507 17:03:48.079104 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/services/test-service/proxy/some/path/with/PATCH
  I0507 17:03:48.082472 24 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0507 17:03:48.082498 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/services/test-service/proxy/some/path/with/POST
  I0507 17:03:48.085853 24 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0507 17:03:48.085879 24 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-735/services/test-service/proxy/some/path/with/PUT
  I0507 17:03:48.089247 24 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0507 17:03:48.089354 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-735" for this suite. @ 05/07/25 17:03:48.092
• [2.118 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 05/07/25 17:03:48.099
  I0507 17:03:48.099256 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:03:48.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:03:48.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:03:48.114
  STEP: Creating the pod @ 05/07/25 17:03:48.116
  I0507 17:03:50.651987 24 pod_client.go:173] Successfully updated pod "labelsupdate5b15fdfa-2df2-4293-81dc-56bd3fa2eb49"
  I0507 17:03:54.667741 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1944" for this suite. @ 05/07/25 17:03:54.671
• [6.577 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 05/07/25 17:03:54.675
  I0507 17:03:54.675873 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 17:03:54.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:03:54.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:03:54.693
  STEP: Creating a ResourceQuota @ 05/07/25 17:03:54.695
  STEP: Getting a ResourceQuota @ 05/07/25 17:03:54.698
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/07/25 17:03:54.7
  STEP: Patching the ResourceQuota @ 05/07/25 17:03:54.702
  STEP: Deleting a Collection of ResourceQuotas @ 05/07/25 17:03:54.71
  STEP: Verifying the deleted ResourceQuota @ 05/07/25 17:03:54.717
  I0507 17:03:54.719464 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4039" for this suite. @ 05/07/25 17:03:54.771
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 05/07/25 17:03:54.777
  I0507 17:03:54.777353 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:03:54.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:03:54.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:03:54.791
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:03:54.793
  STEP: Saw pod success @ 05/07/25 17:03:58.809
  I0507 17:03:58.811387 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-3646e70c-08aa-4296-a80c-95c6cf917c77 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:03:58.815
  I0507 17:03:58.827505 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4951" for this suite. @ 05/07/25 17:03:58.83
• [4.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 05/07/25 17:03:58.835
  I0507 17:03:58.835709 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/07/25 17:03:58.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:03:58.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:03:58.852
  STEP: Creating 50 configmaps @ 05/07/25 17:03:58.854
  STEP: Creating RC which spawns configmap-volume pods @ 05/07/25 17:03:59.09
  I0507 17:03:59.189989 24 resource.go:81] Pod name wrapped-volume-race-0ae2a06e-1d35-414b-8ba2-2246396a2d28: Found 1 pods out of 5
  I0507 17:04:04.196792 24 resource.go:81] Pod name wrapped-volume-race-0ae2a06e-1d35-414b-8ba2-2246396a2d28: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/07/25 17:04:04.196
  STEP: Creating RC which spawns configmap-volume pods @ 05/07/25 17:04:04.215
  I0507 17:04:04.236257 24 resource.go:81] Pod name wrapped-volume-race-e76d61a6-9556-4aa1-b80a-8177f4e691cc: Found 1 pods out of 5
  I0507 17:04:09.243551 24 resource.go:81] Pod name wrapped-volume-race-e76d61a6-9556-4aa1-b80a-8177f4e691cc: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/07/25 17:04:09.243
  STEP: Creating RC which spawns configmap-volume pods @ 05/07/25 17:04:09.26
  I0507 17:04:09.280251 24 resource.go:81] Pod name wrapped-volume-race-83b7305e-de7d-4b97-a2ef-124a85fe3e38: Found 1 pods out of 5
  I0507 17:04:14.287005 24 resource.go:81] Pod name wrapped-volume-race-83b7305e-de7d-4b97-a2ef-124a85fe3e38: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/07/25 17:04:14.287
  STEP: deleting ReplicationController wrapped-volume-race-83b7305e-de7d-4b97-a2ef-124a85fe3e38 in namespace emptydir-wrapper-8458, will wait for the garbage collector to delete the pods @ 05/07/25 17:04:14.3
  I0507 17:04:14.358839 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-83b7305e-de7d-4b97-a2ef-124a85fe3e38 took: 5.809165ms
  I0507 17:04:14.459383 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-83b7305e-de7d-4b97-a2ef-124a85fe3e38 pods took: 100.540287ms
  STEP: deleting ReplicationController wrapped-volume-race-e76d61a6-9556-4aa1-b80a-8177f4e691cc in namespace emptydir-wrapper-8458, will wait for the garbage collector to delete the pods @ 05/07/25 17:04:16.46
  I0507 17:04:16.519818 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-e76d61a6-9556-4aa1-b80a-8177f4e691cc took: 5.856183ms
  I0507 17:04:16.619956 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-e76d61a6-9556-4aa1-b80a-8177f4e691cc pods took: 100.136636ms
  STEP: deleting ReplicationController wrapped-volume-race-0ae2a06e-1d35-414b-8ba2-2246396a2d28 in namespace emptydir-wrapper-8458, will wait for the garbage collector to delete the pods @ 05/07/25 17:04:18.62
  I0507 17:04:18.680463 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-0ae2a06e-1d35-414b-8ba2-2246396a2d28 took: 6.372967ms
  I0507 17:04:18.781526 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-0ae2a06e-1d35-414b-8ba2-2246396a2d28 pods took: 101.072337ms
  STEP: Cleaning up the configMaps @ 05/07/25 17:04:19.981
  I0507 17:04:20.213047 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8458" for this suite. @ 05/07/25 17:04:20.216
• [21.385 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 05/07/25 17:04:20.221
  I0507 17:04:20.221249 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename disruption @ 05/07/25 17:04:20.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:04:20.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:04:20.239
  STEP: Waiting for the pdb to be processed @ 05/07/25 17:04:20.245
  STEP: Waiting for all pods to be running @ 05/07/25 17:04:22.266
  I0507 17:04:22.269608 24 disruption.go:691] running pods: 0 < 3
  I0507 17:04:24.272293 24 disruption.go:691] running pods: 0 < 3
  I0507 17:04:26.280296 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7837" for this suite. @ 05/07/25 17:04:26.283
• [6.067 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 05/07/25 17:04:26.288
  I0507 17:04:26.288239 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 17:04:26.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:04:26.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:04:26.305
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/07/25 17:04:26.307
  STEP: Saw pod success @ 05/07/25 17:04:30.324
  I0507 17:04:30.327260 24 output.go:207] Trying to get logs from node mini-1 pod pod-7064054b-aaae-4f7e-a11f-5fd2d36d9736 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 17:04:30.338
  I0507 17:04:30.349925 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2963" for this suite. @ 05/07/25 17:04:30.352
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 05/07/25 17:04:30.358
  I0507 17:04:30.358132 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 17:04:30.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:04:30.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:04:30.37
  STEP: Creating configMap with name configmap-test-volume-map-f29c602a-1aa7-4c48-92dc-8dc5bd51a79d @ 05/07/25 17:04:30.372
  STEP: Creating a pod to test consume configMaps @ 05/07/25 17:04:30.376
  STEP: Saw pod success @ 05/07/25 17:04:34.395
  I0507 17:04:34.397494 24 output.go:207] Trying to get logs from node mini-1 pod pod-configmaps-5d48bb38-b317-4c1f-a860-d6acd3905a8c container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 17:04:34.401
  I0507 17:04:34.411751 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3108" for this suite. @ 05/07/25 17:04:34.414
• [4.061 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 05/07/25 17:04:34.419
  I0507 17:04:34.419166 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:04:34.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:04:34.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:04:34.429
  STEP: Setting up server cert @ 05/07/25 17:04:34.45
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:04:35.334
  STEP: Deploying the webhook pod @ 05/07/25 17:04:35.339
  STEP: Wait for the deployment to be ready @ 05/07/25 17:04:35.35
  I0507 17:04:35.363504 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0507 17:04:37.372365 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 4, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 4, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 4, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 4, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/07/25 17:04:39.376
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:04:39.393
  I0507 17:04:40.393236 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/07/25 17:04:40.397
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/07/25 17:04:40.412
  STEP: Creating a configMap that should not be mutated @ 05/07/25 17:04:40.418
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/07/25 17:04:40.427
  STEP: Creating a configMap that should be mutated @ 05/07/25 17:04:40.433
  I0507 17:04:40.501842 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6110" for this suite. @ 05/07/25 17:04:40.505
  STEP: Destroying namespace "webhook-markers-1154" for this suite. @ 05/07/25 17:04:40.511
• [6.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 05/07/25 17:04:40.517
  I0507 17:04:40.517142 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 17:04:40.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:04:40.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:04:40.539
  STEP: Creating configMap configmap-8911/configmap-test-de58e596-0aa6-4014-b412-b72a53a700b8 @ 05/07/25 17:04:40.541
  STEP: Creating a pod to test consume configMaps @ 05/07/25 17:04:40.549
  STEP: Saw pod success @ 05/07/25 17:04:44.572
  I0507 17:04:44.574878 24 output.go:207] Trying to get logs from node mini-2 pod pod-configmaps-c4c775eb-8a1c-4c0e-adcc-f1d8f9e74d51 container env-test: <nil>
  STEP: delete the pod @ 05/07/25 17:04:44.58
  I0507 17:04:44.593736 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8911" for this suite. @ 05/07/25 17:04:44.598
• [4.088 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/07/25 17:04:44.605
  I0507 17:04:44.605216 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/07/25 17:04:44.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:04:44.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:04:44.62
  STEP: creating a target pod @ 05/07/25 17:04:44.621
  STEP: adding an ephemeral container @ 05/07/25 17:04:46.643
  STEP: verifying the pod's generation is 2 @ 05/07/25 17:04:50.664
  STEP: checking pod container endpoints @ 05/07/25 17:04:50.666
  I0507 17:04:50.666712 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6898 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:04:50.666723 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:04:50.666759 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-6898/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0507 17:04:50.713036 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:04:50.713062 24 exec_util.go:112] Exec stderr: ""
  I0507 17:04:50.717758 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6898" for this suite. @ 05/07/25 17:04:50.72
• [6.120 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 05/07/25 17:04:50.724
  I0507 17:04:50.724925 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 17:04:50.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:04:50.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:04:50.74
  STEP: validating cluster-info @ 05/07/25 17:04:50.741
  I0507 17:04:50.742003 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-1155 cluster-info'
  I0507 17:04:50.778805 24 builder.go:146] stderr: ""
  I0507 17:04:50.778830 24 builder.go:147] stdout: "Kubernetes control plane is running at https://10.96.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0507 17:04:50.778892 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1155" for this suite. @ 05/07/25 17:04:50.782
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/07/25 17:04:50.788
  I0507 17:04:50.788370 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 17:04:50.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:04:50.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:04:50.801
  STEP: Creating secret with name s-test-opt-del-96538005-96a2-4448-bb8c-6e8a693dfe53 @ 05/07/25 17:04:50.883
  STEP: Creating secret with name s-test-opt-upd-561d7a41-367f-44e3-a2bb-e0da1167394d @ 05/07/25 17:04:50.888
  STEP: Creating the pod @ 05/07/25 17:04:50.893
  STEP: Deleting secret s-test-opt-del-96538005-96a2-4448-bb8c-6e8a693dfe53 @ 05/07/25 17:04:54.93
  STEP: Updating secret s-test-opt-upd-561d7a41-367f-44e3-a2bb-e0da1167394d @ 05/07/25 17:04:54.934
  STEP: Creating secret with name s-test-opt-create-65f48293-800a-41c7-b69f-742a7a2c68ef @ 05/07/25 17:04:54.938
  STEP: waiting to observe update in volume @ 05/07/25 17:04:54.942
  I0507 17:06:19.216345 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5272" for this suite. @ 05/07/25 17:06:19.219
• [88.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:747
  STEP: Creating a kubernetes client @ 05/07/25 17:06:19.223
  I0507 17:06:19.223482 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sched-preemption @ 05/07/25 17:06:19.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:06:19.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:06:19.287
  I0507 17:06:19.299087 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0507 17:07:19.305144 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/07/25 17:07:19.308
  I0507 17:07:19.308056 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/07/25 17:07:19.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:07:19.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:07:19.321
  STEP: Finding an available node @ 05/07/25 17:07:19.323
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/07/25 17:07:19.323
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/07/25 17:07:21.338
  I0507 17:07:21.346777 24 preemption.go:710] found a healthy node: mini-2
  STEP: Adding a custom resource @ 05/07/25 17:07:21.349
  I0507 17:07:27.401555 24 preemption.go:829] pods created so far: [1 1 1]
  I0507 17:07:27.401574 24 preemption.go:830] length of pods created so far: 3
  I0507 17:07:29.409941 24 preemption.go:847] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 05/07/25 17:07:36.415
  STEP: Removing a custom resource @ 05/07/25 17:07:36.46
  STEP: Removing a custom resource @ 05/07/25 17:07:36.468
  I0507 17:07:36.475905 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3442" for this suite. @ 05/07/25 17:07:36.479
  I0507 17:07:36.484799 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9137" for this suite. @ 05/07/25 17:07:36.58
• [77.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/07/25 17:07:36.587
  I0507 17:07:36.587485 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pods @ 05/07/25 17:07:36.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:07:36.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:07:36.602
  I0507 17:07:36.604337 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: creating the pod @ 05/07/25 17:07:36.604
  STEP: submitting the pod to kubernetes @ 05/07/25 17:07:36.604
  STEP: waiting for the container to be running @ 05/07/25 17:07:40.626
  I0507 17:07:40.642410 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3275" for this suite. @ 05/07/25 17:07:40.646
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/07/25 17:07:40.651
  I0507 17:07:40.651834 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:07:40.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:07:40.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:07:40.663
  STEP: Creating projection with secret that has name projected-secret-test-5bf3b968-f256-43a7-bc50-42c276ae41cd @ 05/07/25 17:07:40.665
  STEP: Creating a pod to test consume secrets @ 05/07/25 17:07:40.668
  STEP: Saw pod success @ 05/07/25 17:07:44.686
  I0507 17:07:44.688869 24 output.go:207] Trying to get logs from node mini-2 pod pod-projected-secrets-f94473ce-5ccd-45e4-9be9-40d35ba794e8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 17:07:44.695
  I0507 17:07:44.705469 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5861" for this suite. @ 05/07/25 17:07:44.708
• [4.062 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 05/07/25 17:07:44.713
  I0507 17:07:44.713952 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename ingress @ 05/07/25 17:07:44.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:07:44.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:07:44.727
  STEP: getting /apis @ 05/07/25 17:07:44.728
  STEP: getting /apis/networking.k8s.io @ 05/07/25 17:07:44.731
  STEP: getting /apis/networking.k8s.iov1 @ 05/07/25 17:07:44.732
  STEP: creating @ 05/07/25 17:07:44.733
  STEP: getting @ 05/07/25 17:07:44.745
  STEP: listing @ 05/07/25 17:07:44.747
  STEP: watching @ 05/07/25 17:07:44.749
  I0507 17:07:44.749783 24 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 05/07/25 17:07:44.75
  STEP: cluster-wide watching @ 05/07/25 17:07:44.752
  I0507 17:07:44.752373 24 ingress.go:198] starting watch
  STEP: patching @ 05/07/25 17:07:44.752
  STEP: updating @ 05/07/25 17:07:44.757
  I0507 17:07:44.762754 24 ingress.go:221] waiting for watch events with expected annotations
  I0507 17:07:44.762772 24 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 05/07/25 17:07:44.762
  STEP: updating /status @ 05/07/25 17:07:44.766
  STEP: get /status @ 05/07/25 17:07:44.771
  STEP: deleting @ 05/07/25 17:07:44.773
  STEP: deleting a collection @ 05/07/25 17:07:44.78
  I0507 17:07:44.790071 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7059" for this suite. @ 05/07/25 17:07:44.809
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/07/25 17:07:44.815
  I0507 17:07:44.815334 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pods @ 05/07/25 17:07:44.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:07:44.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:07:44.843
  STEP: creating the pod @ 05/07/25 17:07:44.844
  STEP: submitting the pod to kubernetes @ 05/07/25 17:07:44.844
  I0507 17:07:44.851610      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: verifying the pod is in kubernetes @ 05/07/25 17:07:48.863
  STEP: updating the pod @ 05/07/25 17:07:48.865
  I0507 17:07:49.375727 24 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-9d567ab9-4e1d-46f5-a169-33044a148cad"
  I0507 17:07:51.384801 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2919" for this suite. @ 05/07/25 17:07:51.389
• [6.579 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 05/07/25 17:07:51.394
  I0507 17:07:51.394656 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:07:51.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:07:51.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:07:51.409
  STEP: Setting up server cert @ 05/07/25 17:07:51.426
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:07:51.928
  STEP: Deploying the webhook pod @ 05/07/25 17:07:51.932
  STEP: Wait for the deployment to be ready @ 05/07/25 17:07:51.94
  I0507 17:07:51.945315 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/07/25 17:07:53.953
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:07:53.968
  I0507 17:07:54.968231 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0507 17:07:54.971538 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8515-crds.webhook.example.com via the AdmissionRegistration API @ 05/07/25 17:07:55.478
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/07/25 17:07:55.489
  I0507 17:07:58.086496 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-973" for this suite. @ 05/07/25 17:07:58.09
  STEP: Destroying namespace "webhook-markers-6068" for this suite. @ 05/07/25 17:07:58.095
• [6.706 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 05/07/25 17:07:58.1
  I0507 17:07:58.100742 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:07:58.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:07:58.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:07:58.117
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:07:58.119
  STEP: Saw pod success @ 05/07/25 17:08:02.136
  I0507 17:08:02.138759 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-9ea11cff-af34-42b1-9d7c-1c722262b100 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:08:02.143
  I0507 17:08:02.155529 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5874" for this suite. @ 05/07/25 17:08:02.158
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 05/07/25 17:08:02.162
  I0507 17:08:02.162898 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pods @ 05/07/25 17:08:02.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:08:02.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:08:02.176
  STEP: creating the pod @ 05/07/25 17:08:02.178
  STEP: submitting the pod to kubernetes @ 05/07/25 17:08:02.178
  STEP: verifying QOS class is set on the pod @ 05/07/25 17:08:02.185
  I0507 17:08:02.187403 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1970" for this suite. @ 05/07/25 17:08:02.258
• [0.102 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 05/07/25 17:08:02.264
  I0507 17:08:02.265000 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 17:08:02.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:08:02.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:08:02.279
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/07/25 17:08:02.281
  STEP: Saw pod success @ 05/07/25 17:08:06.298
  I0507 17:08:06.300991 24 output.go:207] Trying to get logs from node mini-2 pod pod-60fae01f-7d10-4fde-80b4-ee2c7317f4f6 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 17:08:06.305
  I0507 17:08:06.315373 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1714" for this suite. @ 05/07/25 17:08:06.318
• [4.057 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 05/07/25 17:08:06.322
  I0507 17:08:06.322048 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 17:08:06.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:08:06.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:08:06.337
  STEP: Creating pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069 @ 05/07/25 17:08:06.339
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 17:08:08.351
  I0507 17:08:08.353607 24 container_probe.go:1748] Initial restart count of pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd is 0
  I0507 17:08:08.356093 24 container_probe.go:1758] Get pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069
  I0507 17:08:10.360070 24 container_probe.go:1758] Get pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069
  I0507 17:08:12.364193 24 container_probe.go:1758] Get pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069
  I0507 17:08:14.368295 24 container_probe.go:1758] Get pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069
  I0507 17:08:16.372324 24 container_probe.go:1758] Get pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069
  I0507 17:08:18.376577 24 container_probe.go:1758] Get pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069
  I0507 17:08:20.380868 24 container_probe.go:1758] Get pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069
  I0507 17:08:22.385044 24 container_probe.go:1758] Get pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069
  I0507 17:08:24.389274 24 container_probe.go:1758] Get pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069
  I0507 17:08:26.393410 24 container_probe.go:1758] Get pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069
  I0507 17:08:28.397770 24 container_probe.go:1758] Get pod liveness-785a06f2-1b18-4d2a-9142-967b49e225fd in namespace container-probe-3069
  I0507 17:08:28.397803 24 container_probe.go:1762] Restart count of pod container-probe-3069/liveness-785a06f2-1b18-4d2a-9142-967b49e225fd is now 1 (20.044167738s elapsed)
  STEP: deleting the pod @ 05/07/25 17:08:28.397
  I0507 17:08:28.409792 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3069" for this suite. @ 05/07/25 17:08:28.414
• [22.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 05/07/25 17:08:28.419
  I0507 17:08:28.419886 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 17:08:28.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:08:28.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:08:28.434
  STEP: Creating configMap with name configmap-test-upd-3f7865a5-aae2-4464-bde1-280495374641 @ 05/07/25 17:08:28.514
  STEP: Creating the pod @ 05/07/25 17:08:28.518
  STEP: Waiting for pod with text data @ 05/07/25 17:08:32.536
  STEP: Waiting for pod with binary data @ 05/07/25 17:08:32.54
  I0507 17:08:32.544089 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6520" for this suite. @ 05/07/25 17:08:32.547
• [4.132 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 05/07/25 17:08:32.552
  I0507 17:08:32.552155 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 17:08:32.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:08:32.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:08:32.565
  STEP: set up a multi version CRD @ 05/07/25 17:08:32.568
  I0507 17:08:32.568721 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: mark a version not serverd @ 05/07/25 17:08:38.57
  STEP: check the unserved version gets removed @ 05/07/25 17:08:38.592
  STEP: check the other version is not changed @ 05/07/25 17:08:40.856
  I0507 17:08:44.847498 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7534" for this suite. @ 05/07/25 17:08:44.856
• [12.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/07/25 17:08:44.866
  I0507 17:08:44.866136 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename security-context @ 05/07/25 17:08:44.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:08:44.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:08:44.885
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/07/25 17:08:44.887
  STEP: Saw pod success @ 05/07/25 17:08:48.913
  I0507 17:08:48.917172 24 output.go:207] Trying to get logs from node mini-2 pod security-context-9a06b8e8-ee3a-49a5-a464-3a99fc5287c5 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 17:08:48.93
  I0507 17:08:48.965667 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6854" for this suite. @ 05/07/25 17:08:48.969
• [4.111 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 05/07/25 17:08:48.977
  I0507 17:08:48.977398 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 17:08:48.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:08:48.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:08:48.993
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/07/25 17:08:48.996
  STEP: Saw pod success @ 05/07/25 17:08:53.021
  I0507 17:08:53.025209 24 output.go:207] Trying to get logs from node mini-2 pod pod-58d2a982-f5d4-4b20-a6e8-de7e9e81f3d2 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 17:08:53.03
  I0507 17:08:53.047434 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7676" for this suite. @ 05/07/25 17:08:53.051
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/07/25 17:08:53.058
  I0507 17:08:53.058216 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename hostport @ 05/07/25 17:08:53.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:08:53.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:08:53.073
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/07/25 17:08:53.157
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.221.190.31 on the node which pod1 resides and expect scheduled @ 05/07/25 17:08:55.218
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.221.190.31 but use UDP protocol on the node which pod2 resides @ 05/07/25 17:08:59.239
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/07/25 17:09:03.276
  I0507 17:09:03.276405 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.221.190.31 http://127.0.0.1:54323/hostname] Namespace:hostport-9041 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:09:03.276415 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:09:03.276452 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/hostport-9041/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.221.190.31+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0507 17:09:03.327357 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.221.190.31, port: 54323 @ 05/07/25 17:09:03.327
  I0507 17:09:03.327407 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.221.190.31:54323/hostname] Namespace:hostport-9041 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:09:03.327417 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:09:03.327473 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/hostport-9041/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.221.190.31%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0507 17:09:03.354565 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.221.190.31, port: 54323 UDP @ 05/07/25 17:09:03.354
  I0507 17:09:03.354632 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.221.190.31 54323] Namespace:hostport-9041 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:09:03.354642 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:09:03.354686 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/hostport-9041/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.221.190.31+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0507 17:09:08.398440 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:09:08.398525 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9041" for this suite. @ 05/07/25 17:09:08.403
• [15.351 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 05/07/25 17:09:08.409
  I0507 17:09:08.409448 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 17:09:08.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:09:08.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:09:08.428
  STEP: apply creating a deployment @ 05/07/25 17:09:08.43
  I0507 17:09:08.441333 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2893" for this suite. @ 05/07/25 17:09:08.503
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 05/07/25 17:09:08.509
  I0507 17:09:08.509739 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:09:08.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:09:08.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:09:08.524
  STEP: Setting up server cert @ 05/07/25 17:09:08.543
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:09:09.157
  STEP: Deploying the webhook pod @ 05/07/25 17:09:09.162
  STEP: Wait for the deployment to be ready @ 05/07/25 17:09:09.174
  I0507 17:09:09.184758 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 17:09:11.196
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:09:11.213
  I0507 17:09:12.213942 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/07/25 17:09:12.218
  STEP: create the configmap with a random name @ 05/07/25 17:09:12.239
  STEP: verify the configmap is mutated @ 05/07/25 17:09:12.252
  STEP: create the configmap with 'skip-me' name @ 05/07/25 17:09:12.252
  I0507 17:09:12.338521 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5170" for this suite. @ 05/07/25 17:09:12.341
  STEP: Destroying namespace "webhook-markers-5624" for this suite. @ 05/07/25 17:09:12.348
• [3.844 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 05/07/25 17:09:12.354
  I0507 17:09:12.354129 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename security-context-test @ 05/07/25 17:09:12.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:09:12.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:09:12.368
  I0507 17:09:18.399277 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1712" for this suite. @ 05/07/25 17:09:18.402
• [6.054 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 05/07/25 17:09:18.408
  I0507 17:09:18.408601 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 17:09:18.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:09:18.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:09:18.421
  STEP: Creating pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441 @ 05/07/25 17:09:18.423
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 17:09:20.439
  I0507 17:09:20.442340 24 container_probe.go:1748] Initial restart count of pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 is 0
  I0507 17:09:20.445113 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:22.449045 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:24.453565 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:26.458729 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:28.463835 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:30.468570 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:32.473390 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:34.478615 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:36.483161 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:38.488690 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:40.494366 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:42.499996 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:44.505630 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:46.511175 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:48.516264 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:50.521566 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:52.525660 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:54.530868 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:56.536616 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:09:58.542839 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:00.547729 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:02.553325 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:04.560188 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:06.563808 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:08.568811 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:10.572535 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:12.576646 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:14.583463 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:16.587552 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:18.593037 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:20.597528 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:22.602216 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:24.609156 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:26.613326 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:28.618181 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:30.622555 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:32.625792 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:34.630654 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:36.635165 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:38.639396 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:40.644087 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:42.648105 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:44.653511 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:46.657266 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:48.662711 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:50.667742 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:52.672705 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:54.677524 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:56.681384 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:10:58.686090 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:00.691323 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:02.695793 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:04.700301 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:06.706557 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:08.710575 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:10.715046 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:12.718877 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:14.723505 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:16.728065 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:18.732790 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:20.737441 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:22.742108 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:24.746856 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:26.751387 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:28.756134 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:30.760566 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:32.764941 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:34.769383 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:36.774101 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:38.779194 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:40.783511 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:42.787467 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:44.792529 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:46.795861 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:48.800617 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:50.805025 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:52.809095 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:54.812870 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:56.817296 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:11:58.822740 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:00.827640 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:02.832215 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:04.837627 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:06.842225 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:08.846934 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:10.851309 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:12.854707 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:14.859040 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:16.863532 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:18.868225 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:20.872791 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:22.877157 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:24.882904 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:26.886834 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:28.891732 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:30.896270 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:32.900982 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:34.905650 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:36.910263 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:38.915280 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:40.919935 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:42.924016 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:44.928937 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:46.932899 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:48.937347 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:50.941930 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:52.946270 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:54.951185 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:56.955830 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:12:58.960715 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:13:00.965157 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:13:02.969800 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:13:04.973588 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:13:06.976929 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:13:08.981721 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:13:10.986482 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:13:12.991004 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:13:14.995518 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:13:17.000600 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  I0507 17:13:19.005263 24 container_probe.go:1758] Get pod test-grpc-00e3e07e-3601-4a6b-9818-9cf3c09e91e8 in namespace container-probe-1441
  STEP: deleting the pod @ 05/07/25 17:13:21.006
  I0507 17:13:21.019277 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1441" for this suite. @ 05/07/25 17:13:21.023
• [242.622 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 05/07/25 17:13:21.031
  I0507 17:13:21.031020 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 17:13:21.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:13:21.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:13:21.043
  STEP: Creating a Serviceaccount "e2e-sa-bpxcd" in namespace "svcaccounts-8807" @ 05/07/25 17:13:21.044
  STEP: Creating a ServiceaccountToken "e2e-sa-bpxcd" in namespace "svcaccounts-8807" @ 05/07/25 17:13:21.048
  STEP: Creating a TokenReview for "e2e-sa-bpxcd" in namespace "svcaccounts-8807" @ 05/07/25 17:13:21.053
  I0507 17:13:21.055247 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8807" for this suite. @ 05/07/25 17:13:21.123
• [0.099 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 05/07/25 17:13:21.129
  I0507 17:13:21.129961 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:13:21.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:13:21.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:13:21.144
  STEP: Setting up server cert @ 05/07/25 17:13:21.167
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:13:21.392
  STEP: Deploying the webhook pod @ 05/07/25 17:13:21.397
  STEP: Wait for the deployment to be ready @ 05/07/25 17:13:21.41
  I0507 17:13:21.418211 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 17:13:23.434
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:13:23.456
  I0507 17:13:24.456629 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/07/25 17:13:24.46
  STEP: create a pod @ 05/07/25 17:13:24.471
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/07/25 17:13:26.486
  I0507 17:13:26.486680 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=webhook-1203 attach --namespace=webhook-1203 to-be-attached-pod -i -c=container1'
  I0507 17:13:26.540479 24 builder.go:135] rc: 1
  I0507 17:13:26.602589 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1203" for this suite. @ 05/07/25 17:13:26.608
  STEP: Destroying namespace "webhook-markers-7849" for this suite. @ 05/07/25 17:13:26.615
• [5.492 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 05/07/25 17:13:26.622
  I0507 17:13:26.622324 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 17:13:26.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:13:26.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:13:26.65
  STEP: creating a ConfigMap @ 05/07/25 17:13:26.652
  STEP: fetching the ConfigMap @ 05/07/25 17:13:26.659
  STEP: patching the ConfigMap @ 05/07/25 17:13:26.662
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/07/25 17:13:26.666
  STEP: deleting the ConfigMap by collection with a label selector @ 05/07/25 17:13:26.671
  STEP: listing all ConfigMaps in test namespace @ 05/07/25 17:13:26.678
  I0507 17:13:26.680726 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5000" for this suite. @ 05/07/25 17:13:26.708
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 05/07/25 17:13:26.713
  I0507 17:13:26.713692 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 17:13:26.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:13:26.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:13:26.744
  STEP: Creating projection with secret that has name secret-emptykey-test-7e9b464a-415d-454a-9c6a-d43f7b6987a3 @ 05/07/25 17:13:26.746
  I0507 17:13:26.748160 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2808" for this suite. @ 05/07/25 17:13:26.808
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 05/07/25 17:13:26.814
  I0507 17:13:26.814816 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/07/25 17:13:26.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:13:26.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:13:26.829
  STEP: Setting up the test @ 05/07/25 17:13:26.831
  STEP: Creating hostNetwork=false pod @ 05/07/25 17:13:26.831
  STEP: Creating hostNetwork=true pod @ 05/07/25 17:13:30.86
  STEP: Running the test @ 05/07/25 17:13:34.879
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/07/25 17:13:34.879
  I0507 17:13:34.879855 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7321 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:13:34.879866 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:13:34.879916 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7321/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0507 17:13:34.925612 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:13:34.925627 24 exec_util.go:112] Exec stderr: ""
  I0507 17:13:34.925636 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7321 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:13:34.925654 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:13:34.925686 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7321/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0507 17:13:34.962630 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:13:34.962643 24 exec_util.go:112] Exec stderr: ""
  I0507 17:13:34.962651 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7321 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:13:34.962658 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:13:34.962691 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7321/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0507 17:13:34.997206 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:13:34.997234 24 exec_util.go:112] Exec stderr: ""
  I0507 17:13:34.997261 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7321 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:13:34.997270 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:13:34.997322 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7321/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0507 17:13:35.028479 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:13:35.028505 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/07/25 17:13:35.028
  I0507 17:13:35.028561 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7321 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:13:35.028586 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:13:35.028627 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7321/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0507 17:13:35.063400 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:13:35.063412 24 exec_util.go:112] Exec stderr: ""
  I0507 17:13:35.063434 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7321 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:13:35.063439 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:13:35.063471 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7321/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0507 17:13:35.086447 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:13:35.086472 24 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/07/25 17:13:35.086
  I0507 17:13:35.086517 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7321 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:13:35.086525 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:13:35.086546 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7321/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0507 17:13:35.123775 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:13:35.123799 24 exec_util.go:112] Exec stderr: ""
  I0507 17:13:35.123811 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7321 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:13:35.123817 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:13:35.123865 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7321/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0507 17:13:35.159061 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:13:35.159087 24 exec_util.go:112] Exec stderr: ""
  I0507 17:13:35.159106 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7321 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:13:35.159114 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:13:35.159153 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7321/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0507 17:13:35.190163 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:13:35.190188 24 exec_util.go:112] Exec stderr: ""
  I0507 17:13:35.190207 24 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7321 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:13:35.190223 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:13:35.190262 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7321/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0507 17:13:35.213443 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:13:35.213467 24 exec_util.go:112] Exec stderr: ""
  I0507 17:13:35.213526 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7321" for this suite. @ 05/07/25 17:13:35.217
• [8.410 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 05/07/25 17:13:35.225
  I0507 17:13:35.225362 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:13:35.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:13:35.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:13:35.24
  STEP: Creating configMap with name projected-configmap-test-volume-f2ea7c47-70af-411a-9703-dd821ef40f32 @ 05/07/25 17:13:35.241
  STEP: Creating a pod to test consume configMaps @ 05/07/25 17:13:35.248
  STEP: Saw pod success @ 05/07/25 17:13:39.275
  I0507 17:13:39.280048 24 output.go:207] Trying to get logs from node mini-2 pod pod-projected-configmaps-9817563b-cf41-45e0-a492-4a4e8e824310 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 17:13:39.292
  I0507 17:13:39.311369 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5935" for this suite. @ 05/07/25 17:13:39.316
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/07/25 17:13:39.325
  I0507 17:13:39.325355 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pods @ 05/07/25 17:13:39.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:13:39.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:13:39.341
  STEP: creating the pod @ 05/07/25 17:13:39.343
  STEP: setting up watch @ 05/07/25 17:13:39.343
  STEP: submitting the pod to kubernetes @ 05/07/25 17:13:39.448
  STEP: verifying the pod is in kubernetes @ 05/07/25 17:13:39.459
  STEP: verifying pod creation was observed @ 05/07/25 17:13:39.463
  STEP: deleting the pod gracefully @ 05/07/25 17:13:41.476
  STEP: verifying pod deletion was observed @ 05/07/25 17:13:41.483
  I0507 17:13:44.434415 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7308" for this suite. @ 05/07/25 17:13:44.438
• [5.123 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/07/25 17:13:44.448
  I0507 17:13:44.448206 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename endpointslice @ 05/07/25 17:13:44.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:13:44.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:13:44.464
  I0507 17:13:44.472382      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:13:44.475542 24 endpointslice.go:1045] Endpoints addresses: [10.221.190.5 10.221.190.6 10.221.190.7] , ports: [6443]
  I0507 17:13:44.475557 24 endpointslice.go:1075] EndpointSlices addresses: [10.221.190.5 10.221.190.6 10.221.190.7] , ports: [6443]
  I0507 17:13:44.475597 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8968" for this suite. @ 05/07/25 17:13:44.538
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 05/07/25 17:13:44.546
  I0507 17:13:44.546022 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename servicecidr @ 05/07/25 17:13:44.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:13:44.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:13:44.567
  STEP: getting @ 05/07/25 17:13:44.569
  STEP: patching @ 05/07/25 17:13:44.572
  STEP: updating @ 05/07/25 17:13:44.579
  STEP: listing @ 05/07/25 17:13:44.619
  STEP: watching @ 05/07/25 17:13:44.623
  I0507 17:13:44.624478 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-7766" for this suite. @ 05/07/25 17:13:44.639
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 05/07/25 17:13:44.647
  I0507 17:13:44.647684 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:13:44.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:13:44.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:13:44.663
  STEP: Creating configMap with name projected-configmap-test-volume-d52cdf26-f643-4636-bce4-855e5722d8ef @ 05/07/25 17:13:44.665
  STEP: Creating a pod to test consume configMaps @ 05/07/25 17:13:44.67
  STEP: Saw pod success @ 05/07/25 17:13:48.699
  I0507 17:13:48.702868 24 output.go:207] Trying to get logs from node mini-2 pod pod-projected-configmaps-c1cc91a2-6c72-4480-8341-0b5fc998b11e container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 17:13:48.708
  I0507 17:13:48.725963 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6038" for this suite. @ 05/07/25 17:13:48.731
• [4.091 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/07/25 17:13:48.738
  I0507 17:13:48.738893 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename subpath @ 05/07/25 17:13:48.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:13:48.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:13:48.757
  STEP: Setting up data @ 05/07/25 17:13:48.76
  STEP: Creating pod pod-subpath-test-projected-7h7m @ 05/07/25 17:13:48.773
  STEP: Creating a pod to test atomic-volume-subpath @ 05/07/25 17:13:48.773
  STEP: Saw pod success @ 05/07/25 17:14:12.854
  I0507 17:14:12.857304 24 output.go:207] Trying to get logs from node mini-2 pod pod-subpath-test-projected-7h7m container test-container-subpath-projected-7h7m: <nil>
  STEP: delete the pod @ 05/07/25 17:14:12.865
  STEP: Deleting pod pod-subpath-test-projected-7h7m @ 05/07/25 17:14:12.88
  I0507 17:14:12.880401 24 delete.go:62] Deleting pod "pod-subpath-test-projected-7h7m" in namespace "subpath-857"
  I0507 17:14:12.883450 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-857" for this suite. @ 05/07/25 17:14:12.887
• [24.156 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 05/07/25 17:14:12.895
  I0507 17:14:12.895087 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename dns @ 05/07/25 17:14:12.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:14:12.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:14:12.912
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9176.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-9176.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 05/07/25 17:14:12.914
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9176.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9176.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/07/25 17:14:12.914
  STEP: creating a pod to probe /etc/hosts @ 05/07/25 17:14:12.914
  STEP: submitting the pod to kubernetes @ 05/07/25 17:14:12.914
  STEP: retrieving the pod @ 05/07/25 17:14:16.939
  STEP: looking for the results for each expected name from probers @ 05/07/25 17:14:16.942
  I0507 17:14:16.959803 24 dns_common.go:546] DNS probes using dns-9176/dns-test-d52c81fa-32cf-4cbc-9aff-aff8c1872f2d succeeded

  STEP: deleting the pod @ 05/07/25 17:14:16.959
  I0507 17:14:16.977984 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9176" for this suite. @ 05/07/25 17:14:16.982
• [4.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/07/25 17:14:16.989
  I0507 17:14:16.989307 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename controllerrevisions @ 05/07/25 17:14:16.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:14:17.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:14:17.005
  STEP: Creating DaemonSet "e2e-2lrgj-daemon-set" @ 05/07/25 17:14:17.09
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 17:14:17.097
  I0507 17:14:17.184119 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:17.184147 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:17.184162 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:17.188619 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2lrgj-daemon-set: 0
  I0507 17:14:17.188632 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 17:14:18.101781 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:18.101805 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:18.101834 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:18.105182 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2lrgj-daemon-set: 0
  I0507 17:14:18.105194 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 17:14:19.103345 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:19.103388 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:19.103400 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:19.107562 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2lrgj-daemon-set: 1
  I0507 17:14:19.107578 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 17:14:20.103660 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:20.103692 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:20.103726 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:14:20.108760 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2lrgj-daemon-set: 2
  I0507 17:14:20.108773 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-2lrgj-daemon-set
  STEP: Confirm DaemonSet "e2e-2lrgj-daemon-set" successfully created with "daemonset-name=e2e-2lrgj-daemon-set" label @ 05/07/25 17:14:20.111
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-2lrgj-daemon-set" @ 05/07/25 17:14:20.119
  I0507 17:14:20.123386 24 controller_revision.go:162] Located ControllerRevision: "e2e-2lrgj-daemon-set-7ff6d6b7c5"
  STEP: Patching ControllerRevision "e2e-2lrgj-daemon-set-7ff6d6b7c5" @ 05/07/25 17:14:20.126
  I0507 17:14:20.135165 24 controller_revision.go:173] e2e-2lrgj-daemon-set-7ff6d6b7c5 has been patched
  STEP: Create a new ControllerRevision @ 05/07/25 17:14:20.135
  I0507 17:14:20.141821 24 controller_revision.go:191] Created ControllerRevision: e2e-2lrgj-daemon-set-6c5445d799
  STEP: Confirm that there are two ControllerRevisions @ 05/07/25 17:14:20.141
  I0507 17:14:20.141879 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0507 17:14:20.145273 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-2lrgj-daemon-set-7ff6d6b7c5" @ 05/07/25 17:14:20.145
  STEP: Confirm that there is only one ControllerRevision @ 05/07/25 17:14:20.151
  I0507 17:14:20.151895 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0507 17:14:20.155086 24 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-2lrgj-daemon-set-6c5445d799" @ 05/07/25 17:14:20.157
  I0507 17:14:20.166656 24 controller_revision.go:220] e2e-2lrgj-daemon-set-6c5445d799 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/07/25 17:14:20.166
  I0507 17:14:20.175032      24 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 05/07/25 17:14:20.175
  I0507 17:14:20.175081 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0507 17:14:20.205954 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-2lrgj-daemon-set-6c5445d799=updated" @ 05/07/25 17:14:20.205
  STEP: Confirm that there is only one ControllerRevision @ 05/07/25 17:14:20.217
  I0507 17:14:20.217177 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0507 17:14:20.224236 24 controller_revision.go:265] Found 1 ControllerRevisions
  I0507 17:14:20.227424 24 controller_revision.go:246] ControllerRevision "e2e-2lrgj-daemon-set-595899bcdb" has revision 3
  STEP: Deleting DaemonSet "e2e-2lrgj-daemon-set" @ 05/07/25 17:14:20.231
  STEP: deleting DaemonSet.extensions e2e-2lrgj-daemon-set in namespace controllerrevisions-2992, will wait for the garbage collector to delete the pods @ 05/07/25 17:14:20.231
  I0507 17:14:20.303023 24 resources.go:139] Deleting DaemonSet.extensions e2e-2lrgj-daemon-set took: 18.21054ms
  I0507 17:14:20.403142 24 resources.go:163] Terminating DaemonSet.extensions e2e-2lrgj-daemon-set pods took: 100.119087ms
  I0507 17:14:22.207245 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-2lrgj-daemon-set: 0
  I0507 17:14:22.207312 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-2lrgj-daemon-set
  I0507 17:14:22.210580 24 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2227139"},"items":null}

  I0507 17:14:22.213685 24 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2227139"},"items":null}

  I0507 17:14:22.225801 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2992" for this suite. @ 05/07/25 17:14:22.229
• [5.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/07/25 17:14:22.235
  I0507 17:14:22.235617 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 17:14:22.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:14:22.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:14:22.256
  I0507 17:14:22.258796 24 replica_set.go:192] Creating ReplicaSet my-hostname-basic-42400c0c-f87e-4983-91c0-d1d8df73bdef
  I0507 17:14:22.268093 24 resource.go:81] Pod name my-hostname-basic-42400c0c-f87e-4983-91c0-d1d8df73bdef: Found 0 pods out of 1
  I0507 17:14:27.271919 24 resource.go:81] Pod name my-hostname-basic-42400c0c-f87e-4983-91c0-d1d8df73bdef: Found 1 pods out of 1
  I0507 17:14:27.271952 24 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-42400c0c-f87e-4983-91c0-d1d8df73bdef" is running
  I0507 17:14:27.274727 24 replica_set.go:221] Pod "my-hostname-basic-42400c0c-f87e-4983-91c0-d1d8df73bdef-nm4gz" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 17:14:24 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 17:14:22 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 17:14:24 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 17:14:24 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 17:14:22 +0000 UTC Reason: Message:}])
  I0507 17:14:27.274757 24 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/07/25 17:14:27.274
  I0507 17:14:27.282732 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-81" for this suite. @ 05/07/25 17:14:27.285
• [5.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 05/07/25 17:14:27.291
  I0507 17:14:27.291461 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename aggregator @ 05/07/25 17:14:27.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:14:27.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:14:27.305
  I0507 17:14:27.307137 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Registering the sample API server. @ 05/07/25 17:14:27.307
  I0507 17:14:27.934774 24 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0507 17:14:27.964457 24 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0507 17:14:30.026191 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:32.030367 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:34.031334 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:36.032265 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:38.033044 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:40.032067 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:42.031930 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:44.030918 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:46.031457 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:48.030202 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:50.030646 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:52.031527 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 14, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:14:54.151702 24 aggregator.go:756] Waited 112.384989ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/07/25 17:14:54.242
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/07/25 17:14:54.246
  STEP: List APIServices @ 05/07/25 17:14:54.254
  I0507 17:14:54.258988 24 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/07/25 17:14:54.259
  I0507 17:14:54.272843 24 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/07/25 17:14:54.272
  I0507 17:14:54.284076 24 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.May, 7, 17, 14, 54, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/07/25 17:14:54.284
  I0507 17:14:54.288668 24 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-05-07 17:14:54 +0000 UTC Passed all checks passed}
  I0507 17:14:54.288684 24 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 17:14:54.288692 24 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/07/25 17:14:54.288
  I0507 17:14:54.300158 24 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-514245373" @ 05/07/25 17:14:54.3
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/07/25 17:14:54.333
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/07/25 17:14:54.357
  STEP: Patch APIService Status @ 05/07/25 17:14:54.36
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/07/25 17:14:54.368
  I0507 17:14:54.372667 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-05-07 17:14:54 +0000 UTC Passed all checks passed}
  I0507 17:14:54.372686 24 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 17:14:54.372701 24 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0507 17:14:54.372715 24 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/07/25 17:14:54.372
  STEP: Confirm that the generated APIService has been deleted @ 05/07/25 17:14:54.386
  I0507 17:14:54.386340 24 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0507 17:14:54.389529 24 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0507 17:14:54.389542 24 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0507 17:14:54.563127 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1033" for this suite. @ 05/07/25 17:14:54.567
• [27.284 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 05/07/25 17:14:54.575
  I0507 17:14:54.575844 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:14:54.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:14:54.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:14:54.593
  STEP: Setting up server cert @ 05/07/25 17:14:54.618
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:14:54.903
  STEP: Deploying the webhook pod @ 05/07/25 17:14:54.91
  STEP: Wait for the deployment to be ready @ 05/07/25 17:14:54.924
  I0507 17:14:54.936719 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 17:14:56.949
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:14:56.981
  I0507 17:14:57.981257 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/07/25 17:14:57.986
  STEP: verifying the validating webhook match conditions @ 05/07/25 17:14:57.995
  STEP: updating the validating webhook match conditions @ 05/07/25 17:14:57.999
  STEP: verifying the validating webhook match conditions @ 05/07/25 17:14:58.011
  I0507 17:14:58.097936 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5431" for this suite. @ 05/07/25 17:14:58.107
  STEP: Destroying namespace "webhook-markers-9181" for this suite. @ 05/07/25 17:14:58.117
• [3.549 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 05/07/25 17:14:58.125
  I0507 17:14:58.125089 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 17:14:58.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:14:58.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:14:58.141
  I0507 17:14:58.143098 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  I0507 17:15:01.233695 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3302" for this suite. @ 05/07/25 17:15:01.238
• [3.120 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 05/07/25 17:15:01.244
  I0507 17:15:01.244909 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 17:15:01.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:15:01.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:15:01.259
  STEP: Creating pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888 @ 05/07/25 17:15:01.261
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 17:15:03.282
  I0507 17:15:03.285456 24 container_probe.go:1748] Initial restart count of pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 is 0
  I0507 17:15:03.288681 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:05.293874 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:07.298846 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:09.304858 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:11.319545 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:13.325727 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:15.330632 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:17.335945 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:19.341596 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:21.347221 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:23.353106 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:25.357876 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:27.362459 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:29.368403 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:31.374251 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:33.379715 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:35.384903 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:37.389889 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:39.396264 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:41.402592 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:43.407367 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:45.411986 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:47.416122 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:49.421189 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:51.425097 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:53.429819 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:55.434280 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:57.437955 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:15:59.442724 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:01.448086 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:03.452564 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:05.456797 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:07.460962 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:09.465027 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:11.469558 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:13.473600 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:15.478278 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:17.481720 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:19.486509 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:21.492718 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:23.497137 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:25.502053 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:27.509864 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:29.514854 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:31.520453 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:33.525061 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:35.530046 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:37.534833 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:39.540451 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:41.544904 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:43.549255 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:45.554486 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:47.558506 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:49.563534 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:51.568246 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:53.573589 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:55.578062 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:57.582862 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:16:59.587458 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:01.591952 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:03.596432 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:05.600743 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:07.604470 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:09.609844 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:11.614208 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:13.618870 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:15.623749 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:17.627961 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:19.632998 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:21.637461 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:23.642066 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:25.646887 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:27.651486 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:29.656055 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:31.660481 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:33.664140 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:35.669062 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:37.673559 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:39.679795 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:41.684688 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:43.689276 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:45.693880 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:47.697549 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:49.702706 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:51.707390 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:53.711853 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:55.716339 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:57.720508 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:17:59.725476 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:01.730220 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:03.735799 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:05.740130 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:07.744506 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:09.749264 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:11.753848 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:13.758161 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:15.763013 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:17.767833 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:19.772636 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:21.776443 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:23.781158 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:25.786391 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:27.790637 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:29.795798 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:31.800334 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:33.804674 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:35.809967 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:37.813753 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:39.818399 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:41.822015 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:43.826436 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:45.831053 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:47.836407 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:49.840571 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:51.845076 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:53.849975 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:55.858472 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:57.862727 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:18:59.868277 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  I0507 17:19:01.872482 24 container_probe.go:1758] Get pod test-webserver-a81b70f1-1c91-4a27-a4c6-a0270e7e7d28 in namespace container-probe-7888
  STEP: deleting the pod @ 05/07/25 17:19:03.873
  I0507 17:19:03.890241 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7888" for this suite. @ 05/07/25 17:19:03.894
• [242.654 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/07/25 17:19:03.898
  I0507 17:19:03.898939 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 17:19:03.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:03.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:03.911
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/07/25 17:19:03.999
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 17:19:04.004
  I0507 17:19:04.095259 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:04.095283 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:04.095304 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:04.098494 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 17:19:04.098506 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 17:19:05.009751 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:05.009791 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:05.009804 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:05.013199 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 17:19:05.013213 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 17:19:06.009861 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:06.009902 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:06.009913 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:06.013135 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 17:19:06.013151 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/07/25 17:19:06.015
  I0507 17:19:06.110834 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:06.110859 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:06.110871 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:06.114496 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 17:19:06.114510 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 17:19:07.031547 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:07.031575 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:07.031596 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:07.035035 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 17:19:07.035049 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 17:19:08.031263 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:08.031316 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:08.031329 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:19:08.034067 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 17:19:08.034082 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/07/25 17:19:08.034
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 17:19:08.038
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2768, will wait for the garbage collector to delete the pods @ 05/07/25 17:19:08.038
  I0507 17:19:08.096900 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.817171ms
  I0507 17:19:08.197252 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.350235ms
  I0507 17:19:10.602184 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 17:19:10.602204 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 17:19:10.605873 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2228298"},"items":null}

  I0507 17:19:10.609071 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2228298"},"items":null}

  I0507 17:19:10.620944 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2768" for this suite. @ 05/07/25 17:19:10.625
• [6.734 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/07/25 17:19:10.632
  I0507 17:19:10.632971 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename endpointslice @ 05/07/25 17:19:10.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:10.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:10.651
  I0507 17:19:10.683739      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:19:12.688646      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:19:12.739544      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:19:12.794168 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4932" for this suite. @ 05/07/25 17:19:12.799
• [2.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 05/07/25 17:19:12.809
  I0507 17:19:12.809318 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename gc @ 05/07/25 17:19:12.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:12.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:12.827
  I0507 17:19:12.866280 24 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"e2b668f3-7c64-4078-b53e-f1056ccd8428", Controller:(*bool)(0xc0051013c2), BlockOwnerDeletion:(*bool)(0xc0051013c3)}}
  I0507 17:19:12.873885 24 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f2be1bae-916a-4dc4-bfdd-056d8e1e8ffb", Controller:(*bool)(0xc0051015b2), BlockOwnerDeletion:(*bool)(0xc0051015b3)}}
  I0507 17:19:12.880849 24 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"3f37a155-e1e5-4dff-9ab4-fa805dbb7540", Controller:(*bool)(0xc005101792), BlockOwnerDeletion:(*bool)(0xc005101793)}}
  I0507 17:19:17.892435 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3931" for this suite. @ 05/07/25 17:19:17.897
• [5.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 05/07/25 17:19:17.905
  I0507 17:19:17.905148 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename servicecidr @ 05/07/25 17:19:17.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:17.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:17.921
  STEP: creating @ 05/07/25 17:19:17.923
  STEP: patching @ 05/07/25 17:19:17.933
  STEP: updating @ 05/07/25 17:19:17.94
  STEP: getting @ 05/07/25 17:19:17.949
  STEP: listing @ 05/07/25 17:19:17.951
  STEP: watching @ 05/07/25 17:19:17.954
  STEP: deleting @ 05/07/25 17:19:17.955
  STEP: deleting a collection @ 05/07/25 17:19:17.961
  I0507 17:19:17.973054 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-1702" for this suite. @ 05/07/25 17:19:18.016
• [0.117 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 05/07/25 17:19:18.022
  I0507 17:19:18.022670 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 17:19:18.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:18.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:18.038
  I0507 17:19:18.041027 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-8964 create -f -'
  I0507 17:19:18.111636 24 builder.go:146] stderr: ""
  I0507 17:19:18.111660 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0507 17:19:18.111685 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-8964 create -f -'
  I0507 17:19:18.195777 24 builder.go:146] stderr: ""
  I0507 17:19:18.195805 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/07/25 17:19:18.195
  I0507 17:19:19.200998 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 17:19:19.201016 24 framework.go:733] Found 0 / 1
  I0507 17:19:20.202005 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 17:19:20.202025 24 framework.go:733] Found 1 / 1
  I0507 17:19:20.202050 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0507 17:19:20.206148 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 17:19:20.206160 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0507 17:19:20.206208 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-8964 describe pod agnhost-primary-82mp2'
  I0507 17:19:20.252619 24 builder.go:146] stderr: ""
  I0507 17:19:20.252685 24 builder.go:147] stdout: "Name:             agnhost-primary-82mp2\nNamespace:        kubectl-8964\nPriority:         0\nService Account:  default\nNode:             mini-2/10.221.190.32\nStart Time:       Wed, 07 May 2025 17:19:18 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: d91374b7c94c860413dd7630e7169a6bc1ecfd4641789fef83d115cc6dddbaeb\n                  cni.projectcalico.org/podIP: 192.168.158.180/32\n                  cni.projectcalico.org/podIPs: 192.168.158.180/32\nStatus:           Running\nIP:               192.168.158.180\nIPs:\n  IP:           192.168.158.180\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://a6007f72afbe5e96d825ec00c64993ceb7360714e2008e864a490277c7f212c4\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 07 May 2025 17:19:19 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-jk7wd (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-jk7wd:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-8964/agnhost-primary-82mp2 to mini-2\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0507 17:19:20.252733 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-8964 describe rc agnhost-primary'
  I0507 17:19:20.302242 24 builder.go:146] stderr: ""
  I0507 17:19:20.302273 24 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8964\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-82mp2\n"
  I0507 17:19:20.302315 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-8964 describe service agnhost-primary'
  I0507 17:19:20.344266 24 builder.go:146] stderr: ""
  I0507 17:19:20.344299 24 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-8964\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.96.179.5\nIPs:                      10.96.179.5\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.158.180:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0507 17:19:20.349486 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-8964 describe node master-1'
  I0507 17:19:20.419529 24 builder.go:146] stderr: ""
  I0507 17:19:20.419603 24 builder.go:147] stdout: "Name:               master-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=master-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 10.221.190.5/23\n                    projectcalico.org/IPv4IPIPTunnelAddr: 192.168.39.0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 29 Apr 2025 11:18:41 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  master-1\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 07 May 2025 17:19:14 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 29 Apr 2025 11:19:54 +0000   Tue, 29 Apr 2025 11:19:54 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Wed, 07 May 2025 17:17:06 +0000   Tue, 29 Apr 2025 11:18:35 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 07 May 2025 17:17:06 +0000   Tue, 29 Apr 2025 11:18:35 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 07 May 2025 17:17:06 +0000   Tue, 29 Apr 2025 11:18:35 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 07 May 2025 17:17:06 +0000   Tue, 29 Apr 2025 11:18:41 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.221.190.5\n  Hostname:    master-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  104322028Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8144876Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  96143180846\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8042476Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 64dab925dc0f4991bee88bac418f5bbb\n  System UUID:                32642b42-741e-a822-2e85-3735e764229a\n  Boot ID:                    950b0f9a-ac4a-445a-8aac-7ddf13aaec19\n  Kernel Version:             5.6.14-300.fc32.x86_64\n  OS Image:                   Fedora CoreOS 32.20200601.3.0\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.33.0\n  Kube-Proxy Version:         \nPodCIDR:                      192.168.0.0/24\nPodCIDRs:                     192.168.0.0/24\nNon-terminated Pods:          (17 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  default                     orka-frontend-5567ff9c96-44gg9                             0 (0%)        0 (0%)      0 (0%)           0 (0%)         99m\n  default                     orka-operator-84bfcf5bb5-lb24q                             0 (0%)        0 (0%)      0 (0%)           0 (0%)         99m\n  default                     orka-webhooks-64dc54c5dc-hqrdz                             0 (0%)        0 (0%)      0 (0%)           0 (0%)         98m\n  kube-system                 calico-kube-controllers-f89694b98-gx2pd                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         8d\n  kube-system                 calico-node-9v4wf                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         8d\n  kube-system                 coredns-674b8bbfcf-4vgvp                                   100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     8d\n  kube-system                 coredns-674b8bbfcf-rqkmg                                   100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     8d\n  kube-system                 etcd-master-1                                              100m (5%)     0 (0%)      100Mi (1%)       0 (0%)         8d\n  kube-system                 kube-apiserver-master-1                                    250m (12%)    0 (0%)      0 (0%)           0 (0%)         8d\n  kube-system                 kube-controller-manager-master-1                           200m (10%)    0 (0%)      0 (0%)           0 (0%)         8d\n  kube-system                 kube-proxy-fnf4m                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         8d\n  kube-system                 kube-scheduler-master-1                                    100m (5%)     0 (0%)      0 (0%)           0 (0%)         8d\n  logging                     helm-charts-fluent-bit-n645d                               200m (10%)    200m (10%)  512Mi (6%)       512Mi (6%)     8d\n  metallb-system              controller-65bb9479d5-xw48r                                0 (0%)        0 (0%)      0 (0%)           0 (0%)         8d\n  metallb-system              speaker-blrln                                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         8d\n  monitoring                  kps-prometheus-node-exporter-c64nf                         100m (5%)     100m (5%)   100Mi (1%)       100Mi (1%)     8d\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-a7c958b54b254fc6-plz48    0 (0%)        0 (0%)      0 (0%)           0 (0%)         31m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                1400m (70%)  300m (15%)\n  memory             852Mi (10%)  952Mi (12%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-1Gi      0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:              <none>\n"
  I0507 17:19:20.419689 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-8964 describe namespace kubectl-8964'
  I0507 17:19:20.469389 24 builder.go:146] stderr: ""
  I0507 17:19:20.469417 24 builder.go:147] stdout: "Name:         kubectl-8964\nLabels:       e2e-framework=kubectl\n              e2e-run=c2c0f22b-a213-4609-bedd-8b9be538904d\n              kubernetes.io/metadata.name=kubectl-8964\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0507 17:19:20.469491 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8964" for this suite. @ 05/07/25 17:19:20.473
• [2.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 05/07/25 17:19:20.481
  I0507 17:19:20.481389 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 17:19:20.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:20.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:20.498
  STEP: set up a multi version CRD @ 05/07/25 17:19:20.5
  I0507 17:19:20.500895 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: rename a version @ 05/07/25 17:19:25.469
  STEP: check the new version name is served @ 05/07/25 17:19:25.48
  STEP: check the old version name is removed @ 05/07/25 17:19:27.23
  STEP: check the other version is not changed @ 05/07/25 17:19:27.926
  I0507 17:19:31.916524 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6461" for this suite. @ 05/07/25 17:19:31.927
• [11.453 seconds]
------------------------------
SSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/07/25 17:19:31.934
  I0507 17:19:31.934391 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename svc-latency @ 05/07/25 17:19:31.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:31.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:31.951
  I0507 17:19:31.953080 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  I0507 17:19:31.961209 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0507 17:19:33.966884      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:19:33.968078      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:19:34.094356 24 service_latency.go:351] Created: latency-svc-dljnj
  I0507 17:19:34.113100 24 service_latency.go:358] Got endpoints: latency-svc-dljnj [47.83105ms]
  I0507 17:19:34.148455 24 service_latency.go:351] Created: latency-svc-dtcls
  I0507 17:19:34.158769 24 service_latency.go:358] Got endpoints: latency-svc-dtcls [45.604891ms]
  I0507 17:19:34.163533 24 service_latency.go:351] Created: latency-svc-hvl6l
  I0507 17:19:34.179264 24 service_latency.go:358] Got endpoints: latency-svc-hvl6l [65.978046ms]
  I0507 17:19:34.181619 24 service_latency.go:351] Created: latency-svc-q75pf
  I0507 17:19:34.192436 24 service_latency.go:351] Created: latency-svc-cldwk
  I0507 17:19:34.196410 24 service_latency.go:358] Got endpoints: latency-svc-q75pf [83.256071ms]
  I0507 17:19:34.207755 24 service_latency.go:358] Got endpoints: latency-svc-cldwk [94.559106ms]
  I0507 17:19:34.212650 24 service_latency.go:351] Created: latency-svc-tkhqj
  I0507 17:19:34.220063 24 service_latency.go:358] Got endpoints: latency-svc-tkhqj [106.846627ms]
  I0507 17:19:34.230831 24 service_latency.go:351] Created: latency-svc-pwsck
  I0507 17:19:34.241211 24 service_latency.go:358] Got endpoints: latency-svc-pwsck [127.972011ms]
  I0507 17:19:34.250543 24 service_latency.go:351] Created: latency-svc-zq2wk
  I0507 17:19:34.259342 24 service_latency.go:358] Got endpoints: latency-svc-zq2wk [146.105144ms]
  I0507 17:19:34.259689 24 service_latency.go:351] Created: latency-svc-6d4s9
  I0507 17:19:34.274554 24 service_latency.go:358] Got endpoints: latency-svc-6d4s9 [161.32744ms]
  I0507 17:19:34.289995 24 service_latency.go:351] Created: latency-svc-b4wqz
  I0507 17:19:34.300159 24 service_latency.go:358] Got endpoints: latency-svc-b4wqz [186.927984ms]
  I0507 17:19:34.307374 24 service_latency.go:351] Created: latency-svc-qjwsl
  I0507 17:19:34.313912 24 service_latency.go:358] Got endpoints: latency-svc-qjwsl [200.703978ms]
  I0507 17:19:34.322095 24 service_latency.go:351] Created: latency-svc-nrzj5
  I0507 17:19:34.330039 24 service_latency.go:358] Got endpoints: latency-svc-nrzj5 [216.759367ms]
  I0507 17:19:34.338754 24 service_latency.go:351] Created: latency-svc-rn24g
  I0507 17:19:34.346860 24 service_latency.go:358] Got endpoints: latency-svc-rn24g [233.613353ms]
  I0507 17:19:34.354335 24 service_latency.go:351] Created: latency-svc-b4nhh
  I0507 17:19:34.360355 24 service_latency.go:358] Got endpoints: latency-svc-b4nhh [247.082432ms]
  I0507 17:19:34.381168 24 service_latency.go:351] Created: latency-svc-n2tjl
  I0507 17:19:34.389135 24 service_latency.go:358] Got endpoints: latency-svc-n2tjl [275.861777ms]
  I0507 17:19:34.399646 24 service_latency.go:351] Created: latency-svc-qlcrs
  I0507 17:19:34.403251 24 service_latency.go:358] Got endpoints: latency-svc-qlcrs [290.003075ms]
  I0507 17:19:34.425628 24 service_latency.go:351] Created: latency-svc-ggztl
  I0507 17:19:34.437995 24 service_latency.go:358] Got endpoints: latency-svc-ggztl [279.18694ms]
  I0507 17:19:34.444778 24 service_latency.go:351] Created: latency-svc-mpp9c
  I0507 17:19:34.453678 24 service_latency.go:358] Got endpoints: latency-svc-mpp9c [274.375522ms]
  I0507 17:19:34.459916 24 service_latency.go:351] Created: latency-svc-9gsc4
  I0507 17:19:34.464750 24 service_latency.go:358] Got endpoints: latency-svc-9gsc4 [268.324739ms]
  I0507 17:19:34.484818 24 service_latency.go:351] Created: latency-svc-bhzfn
  I0507 17:19:34.493207 24 service_latency.go:358] Got endpoints: latency-svc-bhzfn [285.437693ms]
  I0507 17:19:34.507540 24 service_latency.go:351] Created: latency-svc-f256b
  I0507 17:19:34.511632 24 service_latency.go:358] Got endpoints: latency-svc-f256b [291.555056ms]
  I0507 17:19:34.535138 24 service_latency.go:351] Created: latency-svc-qtsmk
  I0507 17:19:34.535152 24 service_latency.go:358] Got endpoints: latency-svc-qtsmk [293.924573ms]
  I0507 17:19:34.546188 24 service_latency.go:351] Created: latency-svc-42n86
  I0507 17:19:34.563801 24 service_latency.go:358] Got endpoints: latency-svc-42n86 [304.446804ms]
  I0507 17:19:34.590213 24 service_latency.go:351] Created: latency-svc-hqb5b
  I0507 17:19:34.616621 24 service_latency.go:358] Got endpoints: latency-svc-hqb5b [342.051623ms]
  I0507 17:19:34.626743 24 service_latency.go:351] Created: latency-svc-bbtvz
  I0507 17:19:34.633011 24 service_latency.go:358] Got endpoints: latency-svc-bbtvz [332.837587ms]
  I0507 17:19:34.645163 24 service_latency.go:351] Created: latency-svc-lq82h
  I0507 17:19:34.655183 24 service_latency.go:358] Got endpoints: latency-svc-lq82h [341.257904ms]
  I0507 17:19:34.668698 24 service_latency.go:351] Created: latency-svc-w56r8
  I0507 17:19:34.674878 24 service_latency.go:358] Got endpoints: latency-svc-w56r8 [344.823467ms]
  I0507 17:19:34.692579 24 service_latency.go:351] Created: latency-svc-wjklk
  I0507 17:19:34.700685 24 service_latency.go:358] Got endpoints: latency-svc-wjklk [353.81195ms]
  I0507 17:19:34.718078 24 service_latency.go:351] Created: latency-svc-vdpxf
  I0507 17:19:34.721737 24 service_latency.go:358] Got endpoints: latency-svc-vdpxf [361.363752ms]
  I0507 17:19:34.732882 24 service_latency.go:351] Created: latency-svc-w22j7
  I0507 17:19:34.751781 24 service_latency.go:358] Got endpoints: latency-svc-w22j7 [362.627891ms]
  I0507 17:19:34.759961 24 service_latency.go:351] Created: latency-svc-tz92s
  I0507 17:19:34.764988 24 service_latency.go:358] Got endpoints: latency-svc-tz92s [361.724296ms]
  I0507 17:19:34.775107 24 service_latency.go:351] Created: latency-svc-tth88
  I0507 17:19:34.781103 24 service_latency.go:358] Got endpoints: latency-svc-tth88 [343.087245ms]
  I0507 17:19:34.799546 24 service_latency.go:351] Created: latency-svc-h2rht
  I0507 17:19:34.808685 24 service_latency.go:358] Got endpoints: latency-svc-h2rht [354.993884ms]
  I0507 17:19:34.825572 24 service_latency.go:351] Created: latency-svc-5l26c
  I0507 17:19:34.827492 24 service_latency.go:351] Created: latency-svc-ztzn6
  I0507 17:19:34.834759 24 service_latency.go:358] Got endpoints: latency-svc-5l26c [369.992291ms]
  I0507 17:19:34.842977 24 service_latency.go:358] Got endpoints: latency-svc-ztzn6 [349.756166ms]
  I0507 17:19:34.868500 24 service_latency.go:351] Created: latency-svc-92jfd
  I0507 17:19:34.899172 24 service_latency.go:358] Got endpoints: latency-svc-92jfd [387.526114ms]
  I0507 17:19:34.912552 24 service_latency.go:351] Created: latency-svc-hpcxf
  I0507 17:19:34.934434 24 service_latency.go:358] Got endpoints: latency-svc-hpcxf [399.272924ms]
  I0507 17:19:34.952604 24 service_latency.go:351] Created: latency-svc-cfjld
  I0507 17:19:35.007966 24 service_latency.go:358] Got endpoints: latency-svc-cfjld [444.151277ms]
  I0507 17:19:35.009212 24 service_latency.go:351] Created: latency-svc-2j9zn
  I0507 17:19:35.009244 24 service_latency.go:358] Got endpoints: latency-svc-2j9zn [392.608224ms]
  I0507 17:19:35.025389 24 service_latency.go:351] Created: latency-svc-w6ftq
  I0507 17:19:35.035191 24 service_latency.go:358] Got endpoints: latency-svc-w6ftq [402.165863ms]
  I0507 17:19:35.057433 24 service_latency.go:351] Created: latency-svc-nnpbn
  I0507 17:19:35.065444 24 service_latency.go:358] Got endpoints: latency-svc-nnpbn [410.245058ms]
  I0507 17:19:35.069224 24 service_latency.go:351] Created: latency-svc-kmk2v
  I0507 17:19:35.079765 24 service_latency.go:358] Got endpoints: latency-svc-kmk2v [404.854674ms]
  I0507 17:19:35.099144 24 service_latency.go:351] Created: latency-svc-9j7sf
  I0507 17:19:35.105005 24 service_latency.go:351] Created: latency-svc-v8z86
  I0507 17:19:35.119242 24 service_latency.go:358] Got endpoints: latency-svc-9j7sf [418.542491ms]
  I0507 17:19:35.140017 24 service_latency.go:358] Got endpoints: latency-svc-v8z86 [418.265591ms]
  I0507 17:19:35.140871 24 service_latency.go:351] Created: latency-svc-9zcqq
  I0507 17:19:35.157738 24 service_latency.go:351] Created: latency-svc-zjvkf
  I0507 17:19:35.176912 24 service_latency.go:358] Got endpoints: latency-svc-zjvkf [411.909113ms]
  I0507 17:19:35.176935 24 service_latency.go:358] Got endpoints: latency-svc-9zcqq [425.124797ms]
  I0507 17:19:35.200496 24 service_latency.go:351] Created: latency-svc-pb2hb
  I0507 17:19:35.200514 24 service_latency.go:358] Got endpoints: latency-svc-pb2hb [419.398444ms]
  I0507 17:19:35.267594 24 service_latency.go:351] Created: latency-svc-7nj8r
  I0507 17:19:35.276625 24 service_latency.go:358] Got endpoints: latency-svc-7nj8r [467.923966ms]
  I0507 17:19:35.284339 24 service_latency.go:351] Created: latency-svc-dlp8g
  I0507 17:19:35.292963 24 service_latency.go:358] Got endpoints: latency-svc-dlp8g [458.188162ms]
  I0507 17:19:35.344509 24 service_latency.go:351] Created: latency-svc-sqdjf
  I0507 17:19:35.344526 24 service_latency.go:358] Got endpoints: latency-svc-sqdjf [501.533658ms]
  I0507 17:19:35.362387 24 service_latency.go:351] Created: latency-svc-v6lhd
  I0507 17:19:35.369302 24 service_latency.go:358] Got endpoints: latency-svc-v6lhd [470.112788ms]
  I0507 17:19:35.393958 24 service_latency.go:351] Created: latency-svc-mpqzb
  I0507 17:19:35.400608 24 service_latency.go:358] Got endpoints: latency-svc-mpqzb [466.157078ms]
  I0507 17:19:35.407185 24 service_latency.go:351] Created: latency-svc-4rbct
  I0507 17:19:35.419329 24 service_latency.go:358] Got endpoints: latency-svc-4rbct [411.330387ms]
  I0507 17:19:35.423704 24 service_latency.go:351] Created: latency-svc-gwv4b
  I0507 17:19:35.433049 24 service_latency.go:358] Got endpoints: latency-svc-gwv4b [423.77917ms]
  I0507 17:19:35.444900 24 service_latency.go:351] Created: latency-svc-854l8
  I0507 17:19:35.464192 24 service_latency.go:358] Got endpoints: latency-svc-854l8 [428.965461ms]
  I0507 17:19:35.481085 24 service_latency.go:351] Created: latency-svc-2wxm2
  I0507 17:19:35.501719 24 service_latency.go:358] Got endpoints: latency-svc-2wxm2 [436.260224ms]
  I0507 17:19:35.514447 24 service_latency.go:351] Created: latency-svc-ks54k
  I0507 17:19:35.534079 24 service_latency.go:351] Created: latency-svc-lbqqp
  I0507 17:19:35.540159 24 service_latency.go:358] Got endpoints: latency-svc-ks54k [460.378296ms]
  I0507 17:19:35.551876 24 service_latency.go:358] Got endpoints: latency-svc-lbqqp [432.616231ms]
  I0507 17:19:35.552742 24 service_latency.go:351] Created: latency-svc-2rb2l
  I0507 17:19:35.564169 24 service_latency.go:358] Got endpoints: latency-svc-2rb2l [424.136ms]
  I0507 17:19:35.572562 24 service_latency.go:351] Created: latency-svc-c68rf
  I0507 17:19:35.610528 24 service_latency.go:358] Got endpoints: latency-svc-c68rf [433.602703ms]
  I0507 17:19:35.619418 24 service_latency.go:351] Created: latency-svc-zfs44
  I0507 17:19:35.631967 24 service_latency.go:351] Created: latency-svc-bnjr8
  I0507 17:19:35.648030 24 service_latency.go:351] Created: latency-svc-ctqdw
  I0507 17:19:35.667964 24 service_latency.go:358] Got endpoints: latency-svc-zfs44 [491.015565ms]
  I0507 17:19:35.668780 24 service_latency.go:351] Created: latency-svc-ss6fb
  I0507 17:19:35.680827 24 service_latency.go:351] Created: latency-svc-m7g8f
  I0507 17:19:35.695517 24 service_latency.go:351] Created: latency-svc-zsgpd
  I0507 17:19:35.708264 24 service_latency.go:351] Created: latency-svc-8v7wl
  I0507 17:19:35.710820 24 service_latency.go:358] Got endpoints: latency-svc-bnjr8 [510.292456ms]
  I0507 17:19:35.725351 24 service_latency.go:351] Created: latency-svc-pw82b
  I0507 17:19:35.741366 24 service_latency.go:351] Created: latency-svc-9jbf8
  I0507 17:19:35.867930 24 service_latency.go:351] Created: latency-svc-4jm5d
  I0507 17:19:35.870874 24 service_latency.go:358] Got endpoints: latency-svc-ss6fb [577.896824ms]
  I0507 17:19:35.870925 24 service_latency.go:358] Got endpoints: latency-svc-ctqdw [594.261237ms]
  I0507 17:19:35.876851 24 service_latency.go:358] Got endpoints: latency-svc-m7g8f [532.314513ms]
  I0507 17:19:36.016685 24 service_latency.go:358] Got endpoints: latency-svc-zsgpd [647.367378ms]
  I0507 17:19:36.016702 24 service_latency.go:358] Got endpoints: latency-svc-pw82b [597.360095ms]
  I0507 17:19:36.016735 24 service_latency.go:358] Got endpoints: latency-svc-8v7wl [616.112328ms]
  I0507 17:19:36.071380 24 service_latency.go:351] Created: latency-svc-l9wdm
  I0507 17:19:36.071857 24 service_latency.go:358] Got endpoints: latency-svc-9jbf8 [638.793976ms]
  I0507 17:19:36.089169 24 service_latency.go:351] Created: latency-svc-w8jjk
  I0507 17:19:36.124808 24 service_latency.go:358] Got endpoints: latency-svc-4jm5d [660.599112ms]
  I0507 17:19:36.157491 24 service_latency.go:358] Got endpoints: latency-svc-l9wdm [655.756217ms]
  I0507 17:19:36.254392 24 service_latency.go:351] Created: latency-svc-8ngfz
  I0507 17:19:36.257825 24 service_latency.go:358] Got endpoints: latency-svc-w8jjk [717.649622ms]
  I0507 17:19:36.260158 24 service_latency.go:358] Got endpoints: latency-svc-8ngfz [708.262912ms]
  I0507 17:19:36.269786 24 service_latency.go:351] Created: latency-svc-6ttk6
  I0507 17:19:36.338017 24 service_latency.go:358] Got endpoints: latency-svc-6ttk6 [773.833051ms]
  I0507 17:19:36.345448 24 service_latency.go:351] Created: latency-svc-pmmnt
  I0507 17:19:36.353273 24 service_latency.go:351] Created: latency-svc-vqpn6
  I0507 17:19:36.415030 24 service_latency.go:358] Got endpoints: latency-svc-vqpn6 [747.053727ms]
  I0507 17:19:36.415089 24 service_latency.go:358] Got endpoints: latency-svc-pmmnt [804.543158ms]
  I0507 17:19:36.429106 24 service_latency.go:351] Created: latency-svc-sjqd9
  I0507 17:19:36.500882 24 service_latency.go:358] Got endpoints: latency-svc-sjqd9 [790.033073ms]
  I0507 17:19:36.505431 24 service_latency.go:351] Created: latency-svc-vcdpk
  I0507 17:19:36.537698 24 service_latency.go:358] Got endpoints: latency-svc-vcdpk [666.798531ms]
  I0507 17:19:36.545430 24 service_latency.go:351] Created: latency-svc-8zgps
  I0507 17:19:36.566429 24 service_latency.go:358] Got endpoints: latency-svc-8zgps [695.490681ms]
  I0507 17:19:36.574775 24 service_latency.go:351] Created: latency-svc-j9dft
  I0507 17:19:36.703412 24 service_latency.go:358] Got endpoints: latency-svc-j9dft [826.546775ms]
  I0507 17:19:36.703557 24 service_latency.go:351] Created: latency-svc-f9kcq
  I0507 17:19:36.703571 24 service_latency.go:358] Got endpoints: latency-svc-f9kcq [686.868707ms]
  I0507 17:19:36.749820 24 service_latency.go:351] Created: latency-svc-8r6f9
  I0507 17:19:36.761384 24 service_latency.go:358] Got endpoints: latency-svc-8r6f9 [744.65513ms]
  I0507 17:19:36.766501 24 service_latency.go:351] Created: latency-svc-hlxbj
  I0507 17:19:36.852387 24 service_latency.go:358] Got endpoints: latency-svc-hlxbj [835.632982ms]
  I0507 17:19:36.917914 24 service_latency.go:351] Created: latency-svc-xjc62
  I0507 17:19:36.925794 24 service_latency.go:358] Got endpoints: latency-svc-xjc62 [853.923172ms]
  I0507 17:19:36.933142 24 service_latency.go:351] Created: latency-svc-d5x85
  I0507 17:19:36.946397 24 service_latency.go:358] Got endpoints: latency-svc-d5x85 [821.552742ms]
  I0507 17:19:37.037912 24 service_latency.go:351] Created: latency-svc-b4xlp
  I0507 17:19:37.046247 24 service_latency.go:358] Got endpoints: latency-svc-b4xlp [888.724533ms]
  I0507 17:19:37.189096 24 service_latency.go:351] Created: latency-svc-hzs47
  I0507 17:19:37.190458 24 service_latency.go:358] Got endpoints: latency-svc-hzs47 [930.285488ms]
  I0507 17:19:37.223925 24 service_latency.go:351] Created: latency-svc-z8wlp
  I0507 17:19:37.240794 24 service_latency.go:358] Got endpoints: latency-svc-z8wlp [982.952449ms]
  I0507 17:19:37.659094 24 service_latency.go:351] Created: latency-svc-6hzcg
  I0507 17:19:37.659124 24 service_latency.go:358] Got endpoints: latency-svc-6hzcg [1.321094472s]
  I0507 17:19:37.687734 24 service_latency.go:351] Created: latency-svc-b2rlg
  I0507 17:19:37.696888 24 service_latency.go:358] Got endpoints: latency-svc-b2rlg [1.281828511s]
  I0507 17:19:38.288203 24 service_latency.go:351] Created: latency-svc-5h26q
  I0507 17:19:38.288252 24 service_latency.go:358] Got endpoints: latency-svc-5h26q [1.873117358s]
  I0507 17:19:38.436347 24 service_latency.go:351] Created: latency-svc-hw64m
  I0507 17:19:38.441784 24 service_latency.go:358] Got endpoints: latency-svc-hw64m [1.9408761s]
  I0507 17:19:38.657425 24 service_latency.go:351] Created: latency-svc-7fxvk
  I0507 17:19:38.717789 24 service_latency.go:358] Got endpoints: latency-svc-7fxvk [2.180037767s]
  I0507 17:19:38.820048 24 service_latency.go:351] Created: latency-svc-kwvpg
  I0507 17:19:38.830948 24 service_latency.go:358] Got endpoints: latency-svc-kwvpg [2.264490472s]
  I0507 17:19:38.907807 24 service_latency.go:351] Created: latency-svc-dndk7
  I0507 17:19:38.907842 24 service_latency.go:358] Got endpoints: latency-svc-dndk7 [2.204259478s]
  I0507 17:19:38.922895 24 service_latency.go:351] Created: latency-svc-x5sxz
  I0507 17:19:39.084514 24 service_latency.go:358] Got endpoints: latency-svc-x5sxz [2.381083866s]
  I0507 17:19:39.101370 24 service_latency.go:351] Created: latency-svc-ggwdb
  I0507 17:19:39.117063 24 service_latency.go:358] Got endpoints: latency-svc-ggwdb [2.355645734s]
  I0507 17:19:39.117575 24 service_latency.go:351] Created: latency-svc-7fpbj
  I0507 17:19:39.198548 24 service_latency.go:358] Got endpoints: latency-svc-7fpbj [2.346147114s]
  I0507 17:19:39.215651 24 service_latency.go:351] Created: latency-svc-wjb7g
  I0507 17:19:39.223083 24 service_latency.go:358] Got endpoints: latency-svc-wjb7g [2.297274443s]
  I0507 17:19:39.315438 24 service_latency.go:351] Created: latency-svc-ghtst
  I0507 17:19:39.323108 24 service_latency.go:358] Got endpoints: latency-svc-ghtst [2.376696088s]
  I0507 17:19:39.391827 24 service_latency.go:351] Created: latency-svc-z98nv
  I0507 17:19:39.401648 24 service_latency.go:358] Got endpoints: latency-svc-z98nv [2.355373016s]
  I0507 17:19:39.461750 24 service_latency.go:351] Created: latency-svc-fh9dn
  I0507 17:19:39.493381 24 service_latency.go:358] Got endpoints: latency-svc-fh9dn [2.302888105s]
  I0507 17:19:39.534341 24 service_latency.go:351] Created: latency-svc-426vw
  I0507 17:19:39.534995 24 service_latency.go:358] Got endpoints: latency-svc-426vw [2.294170281s]
  I0507 17:19:39.585617 24 service_latency.go:351] Created: latency-svc-7lxxq
  I0507 17:19:39.590307 24 service_latency.go:358] Got endpoints: latency-svc-7lxxq [1.93116107s]
  I0507 17:19:39.607580 24 service_latency.go:351] Created: latency-svc-td5zn
  I0507 17:19:39.616843 24 service_latency.go:351] Created: latency-svc-6rmkn
  I0507 17:19:39.712063 24 service_latency.go:358] Got endpoints: latency-svc-td5zn [2.015147513s]
  I0507 17:19:39.714048 24 service_latency.go:358] Got endpoints: latency-svc-6rmkn [1.425773342s]
  I0507 17:19:39.727086 24 service_latency.go:351] Created: latency-svc-wg5hp
  I0507 17:19:39.778994 24 service_latency.go:358] Got endpoints: latency-svc-wg5hp [1.337179542s]
  I0507 17:19:39.803963 24 service_latency.go:351] Created: latency-svc-wntv8
  I0507 17:19:39.858109 24 service_latency.go:358] Got endpoints: latency-svc-wntv8 [1.140279318s]
  I0507 17:19:39.914081 24 service_latency.go:351] Created: latency-svc-dh7h4
  I0507 17:19:39.914096 24 service_latency.go:358] Got endpoints: latency-svc-dh7h4 [1.0831094s]
  I0507 17:19:39.983243 24 service_latency.go:351] Created: latency-svc-jtx7q
  I0507 17:19:39.983272 24 service_latency.go:358] Got endpoints: latency-svc-jtx7q [1.075421033s]
  I0507 17:19:40.069376 24 service_latency.go:351] Created: latency-svc-n8ht6
  I0507 17:19:40.072053 24 service_latency.go:358] Got endpoints: latency-svc-n8ht6 [987.490115ms]
  I0507 17:19:40.085150 24 service_latency.go:351] Created: latency-svc-2mf4d
  I0507 17:19:40.142192 24 service_latency.go:358] Got endpoints: latency-svc-2mf4d [1.025103781s]
  I0507 17:19:40.184509 24 service_latency.go:351] Created: latency-svc-rn9gq
  I0507 17:19:40.232567 24 service_latency.go:358] Got endpoints: latency-svc-rn9gq [1.034002295s]
  I0507 17:19:40.244539 24 service_latency.go:351] Created: latency-svc-kk4zh
  I0507 17:19:40.354023 24 service_latency.go:358] Got endpoints: latency-svc-kk4zh [1.130925092s]
  I0507 17:19:40.363851 24 service_latency.go:351] Created: latency-svc-ktnrf
  I0507 17:19:40.367878 24 service_latency.go:358] Got endpoints: latency-svc-ktnrf [1.044741858s]
  I0507 17:19:40.377011 24 service_latency.go:351] Created: latency-svc-g8vn8
  I0507 17:19:40.385012 24 service_latency.go:358] Got endpoints: latency-svc-g8vn8 [983.33026ms]
  I0507 17:19:40.501593 24 service_latency.go:351] Created: latency-svc-slxsz
  I0507 17:19:40.517971 24 service_latency.go:358] Got endpoints: latency-svc-slxsz [1.024554975s]
  I0507 17:19:40.527787 24 service_latency.go:351] Created: latency-svc-gqrzw
  I0507 17:19:40.545734 24 service_latency.go:358] Got endpoints: latency-svc-gqrzw [1.010705487s]
  I0507 17:19:40.620863 24 service_latency.go:351] Created: latency-svc-h8tql
  I0507 17:19:40.620881 24 service_latency.go:358] Got endpoints: latency-svc-h8tql [1.030558863s]
  I0507 17:19:40.664567 24 service_latency.go:351] Created: latency-svc-rhnnk
  I0507 17:19:40.667085 24 service_latency.go:358] Got endpoints: latency-svc-rhnnk [953.021382ms]
  I0507 17:19:40.711247 24 service_latency.go:351] Created: latency-svc-d4sz6
  I0507 17:19:40.757286 24 service_latency.go:358] Got endpoints: latency-svc-d4sz6 [1.045207909s]
  I0507 17:19:40.792126 24 service_latency.go:351] Created: latency-svc-hdd5f
  I0507 17:19:40.792173 24 service_latency.go:358] Got endpoints: latency-svc-hdd5f [1.013162687s]
  I0507 17:19:40.886305 24 service_latency.go:351] Created: latency-svc-rn79c
  I0507 17:19:40.886343 24 service_latency.go:358] Got endpoints: latency-svc-rn79c [1.02822005s]
  I0507 17:19:40.936482 24 service_latency.go:351] Created: latency-svc-7p6pg
  I0507 17:19:40.936532 24 service_latency.go:358] Got endpoints: latency-svc-7p6pg [1.022427017s]
  I0507 17:19:41.020882 24 service_latency.go:351] Created: latency-svc-twqk9
  I0507 17:19:41.020910 24 service_latency.go:358] Got endpoints: latency-svc-twqk9 [1.037606151s]
  I0507 17:19:41.092214 24 service_latency.go:351] Created: latency-svc-ptmnl
  I0507 17:19:41.092229 24 service_latency.go:358] Got endpoints: latency-svc-ptmnl [1.020146578s]
  I0507 17:19:41.154523 24 service_latency.go:351] Created: latency-svc-dd58p
  I0507 17:19:41.162148 24 service_latency.go:358] Got endpoints: latency-svc-dd58p [1.019923372s]
  I0507 17:19:41.172577 24 service_latency.go:351] Created: latency-svc-8r6mt
  I0507 17:19:41.237233 24 service_latency.go:358] Got endpoints: latency-svc-8r6mt [1.004635623s]
  I0507 17:19:41.295770 24 service_latency.go:351] Created: latency-svc-9j4jv
  I0507 17:19:41.299146 24 service_latency.go:351] Created: latency-svc-pvqpd
  I0507 17:19:41.398091 24 service_latency.go:358] Got endpoints: latency-svc-pvqpd [1.0301908s]
  I0507 17:19:41.398148 24 service_latency.go:358] Got endpoints: latency-svc-9j4jv [1.044101296s]
  I0507 17:19:41.419144 24 service_latency.go:351] Created: latency-svc-nqj9l
  I0507 17:19:41.564611 24 service_latency.go:358] Got endpoints: latency-svc-nqj9l [1.179586361s]
  I0507 17:19:41.634936 24 service_latency.go:351] Created: latency-svc-zrm5p
  I0507 17:19:41.643218 24 service_latency.go:358] Got endpoints: latency-svc-zrm5p [1.125207725s]
  I0507 17:19:41.702308 24 service_latency.go:351] Created: latency-svc-4h6d5
  I0507 17:19:41.702324 24 service_latency.go:358] Got endpoints: latency-svc-4h6d5 [1.156567164s]
  I0507 17:19:41.764808 24 service_latency.go:351] Created: latency-svc-t29wt
  I0507 17:19:41.764831 24 service_latency.go:358] Got endpoints: latency-svc-t29wt [1.143940308s]
  I0507 17:19:41.782718 24 service_latency.go:351] Created: latency-svc-hsrp2
  I0507 17:19:41.882420 24 service_latency.go:358] Got endpoints: latency-svc-hsrp2 [1.215322204s]
  I0507 17:19:41.995952 24 service_latency.go:351] Created: latency-svc-5t74k
  I0507 17:19:41.996579 24 service_latency.go:358] Got endpoints: latency-svc-5t74k [1.239258259s]
  I0507 17:19:42.057845 24 service_latency.go:351] Created: latency-svc-99lp8
  I0507 17:19:42.083590 24 service_latency.go:358] Got endpoints: latency-svc-99lp8 [1.291383869s]
  I0507 17:19:42.186939 24 service_latency.go:351] Created: latency-svc-nzwqv
  I0507 17:19:42.186962 24 service_latency.go:358] Got endpoints: latency-svc-nzwqv [1.300604706s]
  I0507 17:19:42.201784 24 service_latency.go:351] Created: latency-svc-fzkzl
  I0507 17:19:42.339839 24 service_latency.go:358] Got endpoints: latency-svc-fzkzl [1.403294519s]
  I0507 17:19:42.362867 24 service_latency.go:351] Created: latency-svc-4mgfp
  I0507 17:19:42.388960 24 service_latency.go:358] Got endpoints: latency-svc-4mgfp [1.368041781s]
  I0507 17:19:42.395163 24 service_latency.go:351] Created: latency-svc-66wmw
  I0507 17:19:42.406447 24 service_latency.go:358] Got endpoints: latency-svc-66wmw [1.31420428s]
  I0507 17:19:42.480160 24 service_latency.go:351] Created: latency-svc-2572p
  I0507 17:19:42.480175 24 service_latency.go:358] Got endpoints: latency-svc-2572p [1.317998255s]
  I0507 17:19:42.528452 24 service_latency.go:351] Created: latency-svc-jzrkv
  I0507 17:19:42.539599 24 service_latency.go:358] Got endpoints: latency-svc-jzrkv [1.302352804s]
  I0507 17:19:42.936020 24 service_latency.go:351] Created: latency-svc-lcl9j
  I0507 17:19:42.939978 24 service_latency.go:351] Created: latency-svc-p5xv8
  I0507 17:19:43.044051 24 service_latency.go:351] Created: latency-svc-xf5bm
  I0507 17:19:43.077454 24 service_latency.go:351] Created: latency-svc-fxskj
  I0507 17:19:43.077846 24 service_latency.go:358] Got endpoints: latency-svc-xf5bm [671.368809ms]
  I0507 17:19:43.077851 24 service_latency.go:358] Got endpoints: latency-svc-lcl9j [538.21962ms]
  I0507 17:19:43.077872 24 service_latency.go:358] Got endpoints: latency-svc-fxskj [1.679765943s]
  I0507 17:19:43.077876 24 service_latency.go:358] Got endpoints: latency-svc-p5xv8 [597.691802ms]
  I0507 17:19:43.078707 24 service_latency.go:351] Created: latency-svc-p8pl6
  I0507 17:19:43.078732 24 service_latency.go:351] Created: latency-svc-6z7zx
  I0507 17:19:43.084174 24 service_latency.go:358] Got endpoints: latency-svc-p8pl6 [744.319825ms]
  I0507 17:19:43.087074 24 service_latency.go:351] Created: latency-svc-q828d
  I0507 17:19:43.087169 24 service_latency.go:351] Created: latency-svc-flgc7
  I0507 17:19:43.087197 24 service_latency.go:351] Created: latency-svc-x8xhp
  I0507 17:19:43.087550 24 service_latency.go:358] Got endpoints: latency-svc-6z7zx [1.6893852s]
  I0507 17:19:43.087587 24 service_latency.go:351] Created: latency-svc-727nq
  I0507 17:19:43.087604 24 service_latency.go:351] Created: latency-svc-dffmd
  I0507 17:19:43.087626 24 service_latency.go:351] Created: latency-svc-7pz2p
  I0507 17:19:43.087670 24 service_latency.go:351] Created: latency-svc-4mghq
  I0507 17:19:43.087808 24 service_latency.go:351] Created: latency-svc-jkcmg
  I0507 17:19:43.087821 24 service_latency.go:358] Got endpoints: latency-svc-jkcmg [1.205367851s]
  I0507 17:19:43.087832 24 service_latency.go:351] Created: latency-svc-p6nm7
  I0507 17:19:43.087841 24 service_latency.go:358] Got endpoints: latency-svc-p6nm7 [1.385495867s]
  I0507 17:19:43.096463 24 service_latency.go:358] Got endpoints: latency-svc-flgc7 [1.531838413s]
  I0507 17:19:43.096469 24 service_latency.go:358] Got endpoints: latency-svc-x8xhp [1.09987639s]
  I0507 17:19:43.096521 24 service_latency.go:358] Got endpoints: latency-svc-727nq [1.331679943s]
  I0507 17:19:43.104563 24 service_latency.go:358] Got endpoints: latency-svc-dffmd [1.461327141s]
  I0507 17:19:43.104617 24 service_latency.go:358] Got endpoints: latency-svc-q828d [1.020998113s]
  I0507 17:19:43.242110 24 service_latency.go:358] Got endpoints: latency-svc-7pz2p [853.133223ms]
  I0507 17:19:43.242136 24 service_latency.go:358] Got endpoints: latency-svc-4mghq [1.055163026s]
  I0507 17:19:43.331602 24 service_latency.go:351] Created: latency-svc-wnchm
  I0507 17:19:43.336063 24 service_latency.go:358] Got endpoints: latency-svc-wnchm [258.205118ms]
  I0507 17:19:43.400785 24 service_latency.go:351] Created: latency-svc-9fvhs
  I0507 17:19:43.413147 24 service_latency.go:358] Got endpoints: latency-svc-9fvhs [335.253397ms]
  I0507 17:19:43.424731 24 service_latency.go:351] Created: latency-svc-fdftx
  I0507 17:19:43.480149 24 service_latency.go:358] Got endpoints: latency-svc-fdftx [402.280884ms]
  I0507 17:19:43.541421 24 service_latency.go:351] Created: latency-svc-b8pqv
  I0507 17:19:43.541453 24 service_latency.go:358] Got endpoints: latency-svc-b8pqv [463.563272ms]
  I0507 17:19:43.549698 24 service_latency.go:351] Created: latency-svc-9x4jr
  I0507 17:19:43.556679 24 service_latency.go:358] Got endpoints: latency-svc-9x4jr [472.492063ms]
  I0507 17:19:43.619643 24 service_latency.go:351] Created: latency-svc-hprss
  I0507 17:19:43.622826 24 service_latency.go:358] Got endpoints: latency-svc-hprss [535.247984ms]
  I0507 17:19:43.663157 24 service_latency.go:351] Created: latency-svc-sldr2
  I0507 17:19:43.668195 24 service_latency.go:358] Got endpoints: latency-svc-sldr2 [580.363364ms]
  I0507 17:19:43.715348 24 service_latency.go:351] Created: latency-svc-c258k
  I0507 17:19:43.724515 24 service_latency.go:358] Got endpoints: latency-svc-c258k [636.660807ms]
  I0507 17:19:43.851343 24 service_latency.go:351] Created: latency-svc-smhq5
  I0507 17:19:43.851361 24 service_latency.go:358] Got endpoints: latency-svc-smhq5 [754.86811ms]
  I0507 17:19:43.860926 24 service_latency.go:351] Created: latency-svc-7rzlb
  I0507 17:19:43.939833 24 service_latency.go:358] Got endpoints: latency-svc-7rzlb [843.282144ms]
  I0507 17:19:43.940826 24 service_latency.go:351] Created: latency-svc-dvxpz
  I0507 17:19:43.980687 24 service_latency.go:358] Got endpoints: latency-svc-dvxpz [884.195065ms]
  I0507 17:19:44.022659 24 service_latency.go:351] Created: latency-svc-g6n9b
  I0507 17:19:44.033480 24 service_latency.go:358] Got endpoints: latency-svc-g6n9b [928.88559ms]
  I0507 17:19:44.034158 24 service_latency.go:351] Created: latency-svc-4t9jr
  I0507 17:19:44.087626 24 service_latency.go:358] Got endpoints: latency-svc-4t9jr [982.992419ms]
  I0507 17:19:44.128409 24 service_latency.go:351] Created: latency-svc-zzgpw
  I0507 17:19:44.128438 24 service_latency.go:358] Got endpoints: latency-svc-zzgpw [886.308834ms]
  I0507 17:19:44.142774 24 service_latency.go:351] Created: latency-svc-tb7nh
  I0507 17:19:44.148593 24 service_latency.go:358] Got endpoints: latency-svc-tb7nh [906.440552ms]
  I0507 17:19:44.182249 24 service_latency.go:351] Created: latency-svc-pwmpb
  I0507 17:19:44.198357 24 service_latency.go:358] Got endpoints: latency-svc-pwmpb [862.274781ms]
  I0507 17:19:44.347720 24 service_latency.go:351] Created: latency-svc-b8pmh
  I0507 17:19:44.347740 24 service_latency.go:358] Got endpoints: latency-svc-b8pmh [934.552632ms]
  I0507 17:19:44.403550 24 service_latency.go:351] Created: latency-svc-l5jhv
  I0507 17:19:44.411699 24 service_latency.go:358] Got endpoints: latency-svc-l5jhv [931.520345ms]
  I0507 17:19:44.461921 24 service_latency.go:351] Created: latency-svc-w8vqr
  I0507 17:19:44.461964 24 service_latency.go:358] Got endpoints: latency-svc-w8vqr [920.471381ms]
  I0507 17:19:44.505412 24 service_latency.go:351] Created: latency-svc-g6679
  I0507 17:19:44.541074 24 service_latency.go:358] Got endpoints: latency-svc-g6679 [984.37851ms]
  I0507 17:19:44.550921 24 service_latency.go:351] Created: latency-svc-cq8zh
  I0507 17:19:44.599732 24 service_latency.go:358] Got endpoints: latency-svc-cq8zh [976.890949ms]
  I0507 17:19:44.651689 24 service_latency.go:351] Created: latency-svc-kvgmm
  I0507 17:19:44.651834 24 service_latency.go:358] Got endpoints: latency-svc-kvgmm [983.625076ms]
  I0507 17:19:44.668107 24 service_latency.go:351] Created: latency-svc-9qx75
  I0507 17:19:44.722183 24 service_latency.go:358] Got endpoints: latency-svc-9qx75 [997.654718ms]
  I0507 17:19:44.728790 24 service_latency.go:351] Created: latency-svc-r5l44
  I0507 17:19:44.800851 24 service_latency.go:358] Got endpoints: latency-svc-r5l44 [949.481711ms]
  I0507 17:19:44.807917 24 service_latency.go:351] Created: latency-svc-gdcmj
  I0507 17:19:44.808027 24 service_latency.go:358] Got endpoints: latency-svc-gdcmj [868.16688ms]
  I0507 17:19:44.896245 24 service_latency.go:351] Created: latency-svc-g49gz
  I0507 17:19:44.902021 24 service_latency.go:358] Got endpoints: latency-svc-g49gz [921.321152ms]
  I0507 17:19:45.020088 24 service_latency.go:351] Created: latency-svc-v2jbv
  I0507 17:19:45.030655 24 service_latency.go:358] Got endpoints: latency-svc-v2jbv [997.157712ms]
  I0507 17:19:45.195318 24 service_latency.go:351] Created: latency-svc-ffrh5
  I0507 17:19:45.195340 24 service_latency.go:358] Got endpoints: latency-svc-ffrh5 [1.107698603s]
  I0507 17:19:45.208046 24 service_latency.go:351] Created: latency-svc-wxd85
  I0507 17:19:45.572693 24 service_latency.go:358] Got endpoints: latency-svc-wxd85 [1.444245556s]
  I0507 17:19:45.594504 24 service_latency.go:351] Created: latency-svc-9fg5l
  I0507 17:19:45.606740 24 service_latency.go:358] Got endpoints: latency-svc-9fg5l [1.458116158s]
  I0507 17:19:45.623664 24 service_latency.go:351] Created: latency-svc-8hx8r
  I0507 17:19:46.098107 24 service_latency.go:358] Got endpoints: latency-svc-8hx8r [1.899732438s]
  I0507 17:19:46.193315 24 service_latency.go:351] Created: latency-svc-xx28h
  I0507 17:19:46.525201 24 service_latency.go:358] Got endpoints: latency-svc-xx28h [2.177450068s]
  I0507 17:19:46.550233 24 service_latency.go:351] Created: latency-svc-mhtbg
  I0507 17:19:46.550264 24 service_latency.go:358] Got endpoints: latency-svc-mhtbg [2.138552846s]
  I0507 17:19:46.655698 24 service_latency.go:351] Created: latency-svc-bs6d7
  I0507 17:19:46.656320 24 service_latency.go:358] Got endpoints: latency-svc-bs6d7 [2.194331939s]
  I0507 17:19:46.769524 24 service_latency.go:351] Created: latency-svc-7wtmc
  I0507 17:19:46.795978 24 service_latency.go:358] Got endpoints: latency-svc-7wtmc [2.254868435s]
  I0507 17:19:46.910775 24 service_latency.go:351] Created: latency-svc-vqcf7
  I0507 17:19:46.910791 24 service_latency.go:358] Got endpoints: latency-svc-vqcf7 [2.311043287s]
  I0507 17:19:46.969873 24 service_latency.go:351] Created: latency-svc-nvh5j
  I0507 17:19:47.035193 24 service_latency.go:358] Got endpoints: latency-svc-nvh5j [2.383345443s]
  I0507 17:19:47.068460 24 service_latency.go:351] Created: latency-svc-g9blc
  I0507 17:19:47.069323 24 service_latency.go:358] Got endpoints: latency-svc-g9blc [2.34709436s]
  I0507 17:19:47.116018 24 service_latency.go:351] Created: latency-svc-mx6hs
  I0507 17:19:47.116483 24 service_latency.go:358] Got endpoints: latency-svc-mx6hs [2.315618027s]
  I0507 17:19:47.131880 24 service_latency.go:351] Created: latency-svc-6wwbm
  I0507 17:19:47.254790 24 service_latency.go:358] Got endpoints: latency-svc-6wwbm [2.446747687s]
  I0507 17:19:47.362741 24 service_latency.go:351] Created: latency-svc-flkjp
  I0507 17:19:47.362770 24 service_latency.go:358] Got endpoints: latency-svc-flkjp [2.460723608s]
  I0507 17:19:47.415343 24 service_latency.go:351] Created: latency-svc-bbbtf
  I0507 17:19:47.422389 24 service_latency.go:358] Got endpoints: latency-svc-bbbtf [2.391719056s]
  I0507 17:19:47.426944 24 service_latency.go:351] Created: latency-svc-lgmbv
  I0507 17:19:47.439972 24 service_latency.go:358] Got endpoints: latency-svc-lgmbv [2.244622266s]
  I0507 17:19:47.440078 24 service_latency.go:114] Latencies: [45.604891ms 65.978046ms 83.256071ms 94.559106ms 106.846627ms 127.972011ms 146.105144ms 161.32744ms 186.927984ms 200.703978ms 216.759367ms 233.613353ms 247.082432ms 258.205118ms 268.324739ms 274.375522ms 275.861777ms 279.18694ms 285.437693ms 290.003075ms 291.555056ms 293.924573ms 304.446804ms 332.837587ms 335.253397ms 341.257904ms 342.051623ms 343.087245ms 344.823467ms 349.756166ms 353.81195ms 354.993884ms 361.363752ms 361.724296ms 362.627891ms 369.992291ms 387.526114ms 392.608224ms 399.272924ms 402.165863ms 402.280884ms 404.854674ms 410.245058ms 411.330387ms 411.909113ms 418.265591ms 418.542491ms 419.398444ms 423.77917ms 424.136ms 425.124797ms 428.965461ms 432.616231ms 433.602703ms 436.260224ms 444.151277ms 458.188162ms 460.378296ms 463.563272ms 466.157078ms 467.923966ms 470.112788ms 472.492063ms 491.015565ms 501.533658ms 510.292456ms 532.314513ms 535.247984ms 538.21962ms 577.896824ms 580.363364ms 594.261237ms 597.360095ms 597.691802ms 616.112328ms 636.660807ms 638.793976ms 647.367378ms 655.756217ms 660.599112ms 666.798531ms 671.368809ms 686.868707ms 695.490681ms 708.262912ms 717.649622ms 744.319825ms 744.65513ms 747.053727ms 754.86811ms 773.833051ms 790.033073ms 804.543158ms 821.552742ms 826.546775ms 835.632982ms 843.282144ms 853.133223ms 853.923172ms 862.274781ms 868.16688ms 884.195065ms 886.308834ms 888.724533ms 906.440552ms 920.471381ms 921.321152ms 928.88559ms 930.285488ms 931.520345ms 934.552632ms 949.481711ms 953.021382ms 976.890949ms 982.952449ms 982.992419ms 983.33026ms 983.625076ms 984.37851ms 987.490115ms 997.157712ms 997.654718ms 1.004635623s 1.010705487s 1.013162687s 1.019923372s 1.020146578s 1.020998113s 1.022427017s 1.024554975s 1.025103781s 1.02822005s 1.0301908s 1.030558863s 1.034002295s 1.037606151s 1.044101296s 1.044741858s 1.045207909s 1.055163026s 1.075421033s 1.0831094s 1.09987639s 1.107698603s 1.125207725s 1.130925092s 1.140279318s 1.143940308s 1.156567164s 1.179586361s 1.205367851s 1.215322204s 1.239258259s 1.281828511s 1.291383869s 1.300604706s 1.302352804s 1.31420428s 1.317998255s 1.321094472s 1.331679943s 1.337179542s 1.368041781s 1.385495867s 1.403294519s 1.425773342s 1.444245556s 1.458116158s 1.461327141s 1.531838413s 1.679765943s 1.6893852s 1.873117358s 1.899732438s 1.93116107s 1.9408761s 2.015147513s 2.138552846s 2.177450068s 2.180037767s 2.194331939s 2.204259478s 2.244622266s 2.254868435s 2.264490472s 2.294170281s 2.297274443s 2.302888105s 2.311043287s 2.315618027s 2.346147114s 2.34709436s 2.355373016s 2.355645734s 2.376696088s 2.381083866s 2.383345443s 2.391719056s 2.446747687s 2.460723608s]
  I0507 17:19:47.440088 24 service_latency.go:118] 50 %ile: 868.16688ms
  I0507 17:19:47.440094 24 service_latency.go:119] 90 %ile: 2.194331939s
  I0507 17:19:47.440099 24 service_latency.go:120] 99 %ile: 2.446747687s
  I0507 17:19:47.440103 24 service_latency.go:121] Total sample count: 200
  I0507 17:19:47.440153 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8119" for this suite. @ 05/07/25 17:19:47.446
• [15.520 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/07/25 17:19:47.454
  I0507 17:19:47.454042 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sysctl @ 05/07/25 17:19:47.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:47.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:47.544
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/07/25 17:19:47.546
  I0507 17:19:47.551932 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5640" for this suite. @ 05/07/25 17:19:47.563
• [0.212 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 05/07/25 17:19:47.666
  I0507 17:19:47.666095 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pods @ 05/07/25 17:19:47.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:47.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:47.71
  STEP: creating a Pod with a static label @ 05/07/25 17:19:47.716
  STEP: watching for Pod to be ready @ 05/07/25 17:19:47.726
  I0507 17:19:47.727771 24 pods.go:947] observed Pod pod-test in namespace pods-1079 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0507 17:19:47.730841 24 pods.go:947] observed Pod pod-test in namespace pods-1079 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC  }]
  I0507 17:19:47.782912 24 pods.go:947] observed Pod pod-test in namespace pods-1079 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC  }]
  I0507 17:19:48.208469 24 pods.go:947] observed Pod pod-test in namespace pods-1079 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC  }]
  I0507 17:19:48.919330 24 pods.go:950] Found Pod pod-test in namespace pods-1079 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:48 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:48 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:48 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:19:47 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/07/25 17:19:48.924
  STEP: getting the Pod and ensuring that it's patched @ 05/07/25 17:19:48.935
  STEP: replacing the Pod's status Ready condition to False @ 05/07/25 17:19:48.939
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/07/25 17:19:48.952
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/07/25 17:19:48.952
  STEP: watching for the Pod to be deleted @ 05/07/25 17:19:48.963
  I0507 17:19:48.965152 24 pods.go:1060] observed event type MODIFIED
  I0507 17:19:50.922870 24 pods.go:1060] observed event type MODIFIED
  I0507 17:19:51.068799 24 pods.go:1060] observed event type MODIFIED
  I0507 17:19:51.167208 24 pods.go:1060] observed event type MODIFIED
  I0507 17:19:51.929361 24 pods.go:1060] observed event type MODIFIED
  I0507 17:19:51.938436 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1079" for this suite. @ 05/07/25 17:19:51.942
• [4.284 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/07/25 17:19:51.949
  I0507 17:19:51.949871 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename tables @ 05/07/25 17:19:51.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:51.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:51.966
  I0507 17:19:51.969995 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4201" for this suite. @ 05/07/25 17:19:52.043
• [0.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 05/07/25 17:19:52.052
  I0507 17:19:52.052211 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 17:19:52.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:52.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:52.07
  STEP: Creating configMap with name configmap-test-volume-86d6c94d-eb8f-4f1d-becf-d774156798dd @ 05/07/25 17:19:52.073
  STEP: Creating a pod to test consume configMaps @ 05/07/25 17:19:52.078
  STEP: Saw pod success @ 05/07/25 17:19:56.105
  I0507 17:19:56.109133 24 output.go:207] Trying to get logs from node mini-2 pod pod-configmaps-8e95eaaf-0fcb-4fba-bbdb-803c15a60401 container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 17:19:56.125
  I0507 17:19:56.143006 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5312" for this suite. @ 05/07/25 17:19:56.147
• [4.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 05/07/25 17:19:56.156
  I0507 17:19:56.156367 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pods @ 05/07/25 17:19:56.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:19:56.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:19:56.179
  STEP: Create set of pods @ 05/07/25 17:19:56.181
  I0507 17:19:56.190474 24 pods.go:874] created test-pod-1
  I0507 17:19:56.196957 24 pods.go:874] created test-pod-2
  I0507 17:19:56.205855 24 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/07/25 17:19:56.205
  STEP: waiting for all pods to be deleted @ 05/07/25 17:19:58.252
  I0507 17:19:58.256214 24 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0507 17:19:59.257874 24 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0507 17:20:00.258204 24 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  I0507 17:20:01.257214 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8674" for this suite. @ 05/07/25 17:20:01.261
• [5.113 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 05/07/25 17:20:01.269
  I0507 17:20:01.269539 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 17:20:01.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:20:01.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:20:01.461
  STEP: Creating configMap with name cm-test-opt-del-0963b1d7-9416-4db5-a2dc-d9460201ab66 @ 05/07/25 17:20:01.467
  STEP: Creating configMap with name cm-test-opt-upd-2bbcdebe-372e-4ef0-b353-d61d42fb2dc6 @ 05/07/25 17:20:01.473
  STEP: Creating the pod @ 05/07/25 17:20:01.477
  STEP: Deleting configmap cm-test-opt-del-0963b1d7-9416-4db5-a2dc-d9460201ab66 @ 05/07/25 17:20:05.53
  STEP: Updating configmap cm-test-opt-upd-2bbcdebe-372e-4ef0-b353-d61d42fb2dc6 @ 05/07/25 17:20:05.555
  STEP: Creating configMap with name cm-test-opt-create-5b1698a0-e2a8-4d1b-b92b-bf4260441457 @ 05/07/25 17:20:05.561
  STEP: waiting to observe update in volume @ 05/07/25 17:20:05.566
  I0507 17:20:09.609069 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7737" for this suite. @ 05/07/25 17:20:09.613
• [8.350 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 05/07/25 17:20:09.619
  I0507 17:20:09.619760 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 17:20:09.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:20:09.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:20:09.655
  STEP: creating service nodeport-test with type=NodePort in namespace services-6647 @ 05/07/25 17:20:09.658
  I0507 17:20:09.702911 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0507 17:20:11.708274 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 20, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 20, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 20, 10, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 20, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"nodeport-test-6869c944b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:20:13.711284 24 resource.go:361] Creating new exec pod
  I0507 17:20:15.744494 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6647 exec execpodfr2dc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0507 17:20:15.841809 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.100.95.74) 80 port [tcp/http] succeeded!\n"
  I0507 17:20:15.841834 24 builder.go:147] stdout: "nodeport-test-6869c944b-x657m"
  I0507 17:20:15.841876 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6647 exec execpodfr2dc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.100.95.74 80'
  I0507 17:20:16.012591 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.100.95.74 80\nConnection to 10.100.95.74 80 port [tcp/http] succeeded!\n"
  I0507 17:20:16.012616 24 builder.go:147] stdout: "nodeport-test-6869c944b-x657m"
  I0507 17:20:16.012660 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6647 exec execpodfr2dc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.31 30236'
  I0507 17:20:16.267214 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.31 30236\nConnection to 10.221.190.31 30236 port [tcp/*] succeeded!\n"
  I0507 17:20:16.267238 24 builder.go:147] stdout: ""
  I0507 17:20:17.013172 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6647 exec execpodfr2dc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.31 30236'
  I0507 17:20:17.096425 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.31 30236\nConnection to 10.221.190.31 30236 port [tcp/*] succeeded!\n"
  I0507 17:20:17.096451 24 builder.go:147] stdout: ""
  I0507 17:20:18.013414 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6647 exec execpodfr2dc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.31 30236'
  I0507 17:20:18.195092 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.31 30236\nConnection to 10.221.190.31 30236 port [tcp/*] succeeded!\n"
  I0507 17:20:18.195116 24 builder.go:147] stdout: ""
  I0507 17:20:19.012951 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6647 exec execpodfr2dc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.31 30236'
  I0507 17:20:19.091911 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.31 30236\nConnection to 10.221.190.31 30236 port [tcp/*] succeeded!\n"
  I0507 17:20:19.091940 24 builder.go:147] stdout: ""
  I0507 17:20:20.012851 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6647 exec execpodfr2dc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.31 30236'
  I0507 17:20:20.149036 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.31 30236\nConnection to 10.221.190.31 30236 port [tcp/*] succeeded!\n"
  I0507 17:20:20.149061 24 builder.go:147] stdout: "nodeport-test-6869c944b-xpnqx"
  I0507 17:20:20.149108 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6647 exec execpodfr2dc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.32 30236'
  I0507 17:20:20.221519 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.32 30236\nConnection to 10.221.190.32 30236 port [tcp/*] succeeded!\n"
  I0507 17:20:20.221544 24 builder.go:147] stdout: ""
  I0507 17:20:21.149571 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6647 exec execpodfr2dc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.32 30236'
  I0507 17:20:21.282044 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.32 30236\nConnection to 10.221.190.32 30236 port [tcp/*] succeeded!\n"
  I0507 17:20:21.282097 24 builder.go:147] stdout: "nodeport-test-6869c944b-x657m"
  I0507 17:20:21.282172 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6647" for this suite. @ 05/07/25 17:20:21.287
• [11.677 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 05/07/25 17:20:21.296
  I0507 17:20:21.296841 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename containers @ 05/07/25 17:20:21.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:20:21.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:20:21.314
  I0507 17:20:25.357820 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-295" for this suite. @ 05/07/25 17:20:25.362
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 05/07/25 17:20:25.369
  I0507 17:20:25.369844 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 17:20:25.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:20:25.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:20:25.388
  I0507 17:20:25.390881 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/07/25 17:20:27.601
  I0507 17:20:27.601493 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-3147 --namespace=crd-publish-openapi-3147 create -f -'
  I0507 17:20:27.663286 24 builder.go:146] stderr: ""
  I0507 17:20:27.663332 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4470-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0507 17:20:27.663361 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-3147 --namespace=crd-publish-openapi-3147 delete e2e-test-crd-publish-openapi-4470-crds test-cr'
  I0507 17:20:27.712547 24 builder.go:146] stderr: ""
  I0507 17:20:27.712573 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4470-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0507 17:20:27.712600 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-3147 --namespace=crd-publish-openapi-3147 apply -f -'
  I0507 17:20:27.755893 24 builder.go:146] stderr: ""
  I0507 17:20:27.755922 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4470-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0507 17:20:27.755951 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-3147 --namespace=crd-publish-openapi-3147 delete e2e-test-crd-publish-openapi-4470-crds test-cr'
  I0507 17:20:27.800751 24 builder.go:146] stderr: ""
  I0507 17:20:27.800774 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4470-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/07/25 17:20:27.8
  I0507 17:20:27.800816 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-3147 explain e2e-test-crd-publish-openapi-4470-crds'
  I0507 17:20:27.834839 24 builder.go:146] stderr: ""
  I0507 17:20:27.834872 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4470-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0507 17:20:30.059174 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3147" for this suite. @ 05/07/25 17:20:30.081
• [4.732 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/07/25 17:20:30.102
  I0507 17:20:30.102022 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename deployment @ 05/07/25 17:20:30.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:20:30.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:20:30.14
  I0507 17:20:30.179220 24 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  I0507 17:20:35.183980 24 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 17:20:35.184
  I0507 17:20:35.184033 24 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/07/25 17:20:35.193
  I0507 17:20:37.220218 24 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1789",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cfb04134-bab5-4ed1-b17c-f804a8bed859",
      ResourceVersion: (string) (len=7) "2231411",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 17:20:37.230385 24 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1789",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a812d81-7dc2-4746-9807-b18b801b6051",
      ResourceVersion: (string) (len=7) "2231401",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "cfb04134-bab5-4ed1-b17c-f804a8bed859",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 66 62 30 34 31  33 34 2d 62 61 62 35 2d  |\"cfb04134-bab5-|
              00000120  34 65 64 31 2d 62 31 37  63 2d 66 38 30 34 61 38  |4ed1-b17c-f804a8|
              00000130  62 65 64 38 35 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bed859\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235237,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 17:20:37.236098 24 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-htrt9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-htrt9",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-1789",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07b13fe9-26fa-41e0-891d-07fd266bff1e",
      ResourceVersion: (string) (len=7) "2231400",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.190/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.190/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c2219508b534fa858f065dde7cacf3138710b49a0374ead0605455eba56f9341"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "6a812d81-7dc2-4746-9807-b18b801b6051",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 61  38 31 32 64 38 31 2d 37  |d\":\"6a812d81-7|
              00000090  64 63 32 2d 34 37 34 36  2d 39 38 30 37 2d 62 31  |dc2-4746-9807-b1|
              000000a0  38 62 38 30 31 62 36 30  35 31 5c 22 7d 22 3a 7b  |8b801b6051\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  38 2e 31 39 30 5c 22 7d  |2.168.158.190\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bfwqr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bfwqr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) (len=15) "192.168.158.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.158.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235235,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882235236,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://cf8b8636f674539c12e93f2d3fa78a1b898598ee0e3497777826e7de2114cfbd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bfwqr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 17:20:37.237405 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1789" for this suite. @ 05/07/25 17:20:37.244
• [7.151 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/07/25 17:20:37.253
  I0507 17:20:37.253492 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-runtime @ 05/07/25 17:20:37.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:20:37.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:20:37.283
  STEP: create the container @ 05/07/25 17:20:37.286
  I0507 17:20:37.305525      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/07/25 17:20:37.305
  STEP: get the container status @ 05/07/25 17:20:40.324
  STEP: the container should be terminated @ 05/07/25 17:20:40.327
  STEP: the termination message should be set @ 05/07/25 17:20:40.327
  I0507 17:20:40.327790 24 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/07/25 17:20:40.327
  I0507 17:20:40.344684 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7537" for this suite. @ 05/07/25 17:20:40.348
• [3.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 05/07/25 17:20:40.355
  I0507 17:20:40.355500 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/07/25 17:20:40.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:20:40.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:20:40.374
  STEP: create the container to handle the HTTPGet hook request. @ 05/07/25 17:20:40.45
  STEP: create the pod with lifecycle hook @ 05/07/25 17:20:44.482
  STEP: check poststart hook @ 05/07/25 17:20:46.504
  STEP: delete the pod with lifecycle hook @ 05/07/25 17:20:46.518
  I0507 17:20:50.539113 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7569" for this suite. @ 05/07/25 17:20:50.542
• [10.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/07/25 17:20:50.548
  I0507 17:20:50.548632 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pod-network-test @ 05/07/25 17:20:50.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:20:50.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:20:50.564
  STEP: Performing setup for networking test in namespace pod-network-test-705 @ 05/07/25 17:20:50.566
  STEP: creating a selector @ 05/07/25 17:20:50.566
  STEP: Creating the service pods in kubernetes @ 05/07/25 17:20:50.566
  I0507 17:20:50.566118 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/07/25 17:21:04.708
  I0507 17:21:06.727204 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0507 17:21:06.727220 24 networking.go:42] Breadth first check of 192.168.125.204 on host 10.221.190.31...
  I0507 17:21:06.729836 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.158.191:9080/dial?request=hostname&protocol=udp&host=192.168.125.204&port=8081&tries=1'] Namespace:pod-network-test-705 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:21:06.729849 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:21:06.729902 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-705/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.158.191%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.125.204%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0507 17:21:06.763618 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:21:06.763658 24 utils.go:355] Waiting for responses: map[]
  I0507 17:21:06.763666 24 utils.go:359] reached 192.168.125.204 after 0/1 tries
  I0507 17:21:06.763673 24 networking.go:42] Breadth first check of 192.168.158.189 on host 10.221.190.32...
  I0507 17:21:06.767384 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.158.191:9080/dial?request=hostname&protocol=udp&host=192.168.158.189&port=8081&tries=1'] Namespace:pod-network-test-705 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:21:06.767395 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:21:06.767416 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-705/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.158.191%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.158.189%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0507 17:21:06.804662 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:21:06.804695 24 utils.go:355] Waiting for responses: map[]
  I0507 17:21:06.804702 24 utils.go:359] reached 192.168.158.189 after 0/1 tries
  I0507 17:21:06.804716 24 networking.go:53] Going to retry 0 out of 2 pods....
  I0507 17:21:06.804799 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-705" for this suite. @ 05/07/25 17:21:06.809
• [16.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/07/25 17:21:06.816
  I0507 17:21:06.816212 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename deployment @ 05/07/25 17:21:06.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:21:06.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:21:06.835
  I0507 17:21:06.838054 24 deployment.go:1664] Creating simple deployment test-new-deployment
  I0507 17:21:06.852630 24 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 05/07/25 17:21:08.865
  STEP: updating a scale subresource @ 05/07/25 17:21:08.868
  STEP: verifying the deployment Spec.Replicas was modified @ 05/07/25 17:21:08.874
  STEP: Patch a scale subresource @ 05/07/25 17:21:08.88
  I0507 17:21:08.906274 24 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9450",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3fe035b-60fb-454b-942b-956806ca6a2e",
      ResourceVersion: (string) (len=7) "2231686",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235266,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 17:21:08.914185 24 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9450",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ee35216-df8d-49a5-898f-edc689b5f5f3",
      ResourceVersion: (string) (len=7) "2231692",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235266,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "b3fe035b-60fb-454b-942b-956806ca6a2e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 33 66 65 30 33  35 62 2d 36 30 66 62 2d  |\"b3fe035b-60fb-|
              00000120  34 35 34 62 2d 39 34 32  62 2d 39 35 36 38 30 36  |454b-942b-956806|
              00000130  63 61 36 61 32 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ca6a2e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 17:21:08.921104 24 deployment.go:68] Pod "test-new-deployment-685b768f58-6rsgc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-6rsgc",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9450",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "795f1fef-94c3-42ca-8963-dc20aa6eaff9",
      ResourceVersion: (string) (len=7) "2231691",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235268,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "3ee35216-df8d-49a5-898f-edc689b5f5f3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 65  65 33 35 32 31 36 2d 64  |d\":\"3ee35216-d|
              00000090  66 38 64 2d 34 39 61 35  2d 38 39 38 66 2d 65 64  |f8d-49a5-898f-ed|
              000000a0  63 36 38 39 62 35 66 35  66 33 5c 22 7d 22 3a 7b  |c689b5f5f3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hxb8l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hxb8l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 17:21:08.922173 24 deployment.go:68] Pod "test-new-deployment-685b768f58-8tcmg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-8tcmg",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9450",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f66051fe-85a1-4e62-a1cd-3da72c84abe4",
      ResourceVersion: (string) (len=7) "2231681",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235266,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e4b77c118a698665ad737af97ea1b3b328e5f26b1874a32db07f8d3a6e7f8a25",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.203/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.203/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "3ee35216-df8d-49a5-898f-edc689b5f5f3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 65  65 33 35 32 31 36 2d 64  |d\":\"3ee35216-d|
              00000090  66 38 64 2d 34 39 61 35  2d 38 39 38 66 2d 65 64  |f8d-49a5-898f-ed|
              000000a0  63 36 38 39 62 35 66 35  66 33 5c 22 7d 22 3a 7b  |c689b5f5f3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235267,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 32 30 33 5c 22 7d  |2.168.125.203\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxgxh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxgxh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235268,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235266,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) (len=15) "192.168.125.203",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.125.203"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235266,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882235267,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1999bd73e75bec792761fa277a5d174f2d6ea79a6b0b04fe403dcc887621d6b0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nxgxh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 17:21:08.923435 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9450" for this suite. @ 05/07/25 17:21:08.931
• [2.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 05/07/25 17:21:08.953
  I0507 17:21:08.953404 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:21:08.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:21:08.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:21:08.986
  STEP: Creating the pod @ 05/07/25 17:21:08.989
  I0507 17:21:11.563428 24 pod_client.go:173] Successfully updated pod "annotationupdate91aa580e-a5c6-4775-af7b-302439d097f0"
  I0507 17:21:13.578088 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3970" for this suite. @ 05/07/25 17:21:13.583
• [4.637 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 05/07/25 17:21:13.59
  I0507 17:21:13.590330 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 17:21:13.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:21:13.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:21:13.603
  STEP: creating service in namespace services-332 @ 05/07/25 17:21:13.604
  STEP: creating service affinity-nodeport in namespace services-332 @ 05/07/25 17:21:13.604
  I0507 17:21:13.657242 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0507 17:21:15.662102 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 21, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 21, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 21, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 21, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-85dffb5fc7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0507 17:21:17.676993 24 resource.go:361] Creating new exec pod
  I0507 17:21:19.704207 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-332 exec execpod-affinitysdkpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0507 17:21:19.774537 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.108.100.223) 80 port [tcp/http] succeeded!\n"
  I0507 17:21:19.774569 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:21:19.774615 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-332 exec execpod-affinitysdkpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.100.223 80'
  I0507 17:21:19.848406 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.100.223 80\nConnection to 10.108.100.223 80 port [tcp/http] succeeded!\n"
  I0507 17:21:19.848431 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:21:19.848473 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-332 exec execpod-affinitysdkpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.31 30722'
  I0507 17:21:19.917876 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.31 30722\nConnection to 10.221.190.31 30722 port [tcp/*] succeeded!\n"
  I0507 17:21:19.917902 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:21:19.917950 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-332 exec execpod-affinitysdkpr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.32 30722'
  I0507 17:21:19.989406 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.32 30722\nConnection to 10.221.190.32 30722 port [tcp/*] succeeded!\n"
  I0507 17:21:19.989440 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:21:19.989484 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-332 exec execpod-affinitysdkpr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/ ; done'
  I0507 17:21:20.106916 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30722/\n"
  I0507 17:21:20.106945 24 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx\naffinity-nodeport-85dffb5fc7-787gx"
  I0507 17:21:20.106958 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.106964 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.106972 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.106977 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.106982 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.106987 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.106992 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.106996 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.107001 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.107006 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.107012 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.107017 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.107028 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.107035 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.107045 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.107053 24 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-787gx
  I0507 17:21:20.107105 24 service.go:4352] Cleaning up the exec pod
  I0507 17:21:20.219182 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-332" for this suite. @ 05/07/25 17:21:20.227
• [6.649 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 05/07/25 17:21:20.239
  I0507 17:21:20.239680 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/07/25 17:21:20.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:21:20.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:21:20.257
  STEP: create the container to handle the HTTPGet hook request. @ 05/07/25 17:21:20.325
  STEP: create the pod with lifecycle hook @ 05/07/25 17:21:24.355
  STEP: delete the pod with lifecycle hook @ 05/07/25 17:21:26.375
  STEP: check prestop hook @ 05/07/25 17:21:30.397
  I0507 17:21:30.401666 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8264" for this suite. @ 05/07/25 17:21:30.405
• [10.171 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/07/25 17:21:30.41
  I0507 17:21:30.410966 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename events @ 05/07/25 17:21:30.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:21:30.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:21:30.432
  STEP: Create set of events @ 05/07/25 17:21:30.434
  STEP: get a list of Events with a label in the current namespace @ 05/07/25 17:21:30.445
  STEP: delete a list of events @ 05/07/25 17:21:30.448
  I0507 17:21:30.448377 24 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/07/25 17:21:30.463
  I0507 17:21:30.466027 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9816" for this suite. @ 05/07/25 17:21:30.505
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 05/07/25 17:21:30.512
  I0507 17:21:30.512967 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:21:30.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:21:30.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:21:30.528
  STEP: Setting up server cert @ 05/07/25 17:21:30.552
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:21:30.887
  STEP: Deploying the webhook pod @ 05/07/25 17:21:30.893
  STEP: Wait for the deployment to be ready @ 05/07/25 17:21:30.903
  I0507 17:21:30.922623 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0507 17:21:32.940143 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 21, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 21, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 21, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 21, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/07/25 17:21:34.945
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:21:34.969
  I0507 17:21:35.969833 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/07/25 17:21:35.973
  STEP: create a pod that should be denied by the webhook @ 05/07/25 17:21:35.985
  STEP: create a pod that causes the webhook to hang @ 05/07/25 17:21:35.992
  STEP: create a configmap that should be denied by the webhook @ 05/07/25 17:21:45.999
  STEP: create a configmap that should be admitted by the webhook @ 05/07/25 17:21:46.006
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/07/25 17:21:46.015
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/07/25 17:21:46.023
  STEP: create a namespace that bypass the webhook @ 05/07/25 17:21:46.027
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/07/25 17:21:46.04
  I0507 17:21:46.132770 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2633" for this suite. @ 05/07/25 17:21:46.139
  STEP: Destroying namespace "webhook-markers-156" for this suite. @ 05/07/25 17:21:46.146
  STEP: Destroying namespace "exempted-namespace-3918" for this suite. @ 05/07/25 17:21:46.153
• [15.648 seconds]
------------------------------
S
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 05/07/25 17:21:46.16
  I0507 17:21:46.160822 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename volumeattachment @ 05/07/25 17:21:46.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:21:46.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:21:46.175
  STEP: Create VolumeAttachment "va-e2e-b4z4f" on node "mini-2" @ 05/07/25 17:21:46.239
  STEP: Patch VolumeAttachment "va-e2e-b4z4f" on node "mini-2" @ 05/07/25 17:21:46.245
  STEP: Reading "va-e2e-b4z4f" Status @ 05/07/25 17:21:46.251
  STEP: Patching "va-e2e-b4z4f" Status @ 05/07/25 17:21:46.256
  I0507 17:21:46.260695 24 volume_attachment.go:224] "va-e2e-b4z4f" Status.Attached: true
  STEP: Updating "va-e2e-b4z4f" Status @ 05/07/25 17:21:46.26
  I0507 17:21:46.270705 24 volume_attachment.go:240] "va-e2e-b4z4f" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-b4z4f" on node "mini-2" @ 05/07/25 17:21:46.27
  STEP: Confirm deletion of VolumeAttachment "va-e2e-b4z4f" on node "mini-2" @ 05/07/25 17:21:46.278
  I0507 17:21:46.284384 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1400" for this suite. @ 05/07/25 17:21:46.34
• [0.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/07/25 17:21:46.35
  I0507 17:21:46.350613 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:21:46.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:21:46.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:21:46.417
  STEP: Creating secret with name s-test-opt-del-d74ff620-f2ea-4d4d-ba06-5a37c1a13d20 @ 05/07/25 17:21:46.44
  STEP: Creating secret with name s-test-opt-upd-3b600c52-c0e8-4969-b5a2-6a507dfbf23d @ 05/07/25 17:21:46.445
  STEP: Creating the pod @ 05/07/25 17:21:46.45
  STEP: Deleting secret s-test-opt-del-d74ff620-f2ea-4d4d-ba06-5a37c1a13d20 @ 05/07/25 17:21:50.492
  STEP: Updating secret s-test-opt-upd-3b600c52-c0e8-4969-b5a2-6a507dfbf23d @ 05/07/25 17:21:50.498
  STEP: Creating secret with name s-test-opt-create-780551a2-9871-4c81-8f4a-49f356638f2a @ 05/07/25 17:21:50.503
  STEP: waiting to observe update in volume @ 05/07/25 17:21:50.507
  I0507 17:23:14.848589 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2859" for this suite. @ 05/07/25 17:23:14.852
• [88.509 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 05/07/25 17:23:14.859
  I0507 17:23:14.859727 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 17:23:14.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:23:14.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:23:14.882
  STEP: creating a Service @ 05/07/25 17:23:14.889
  STEP: watching for the Service to be added @ 05/07/25 17:23:14.917
  I0507 17:23:14.919030 24 service.go:3456] Found Service test-service-n9pxq in namespace services-236 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31094}]
  I0507 17:23:14.919050 24 service.go:3463] Service test-service-n9pxq created
  STEP: Getting /status @ 05/07/25 17:23:14.919
  I0507 17:23:14.924873 24 service.go:3474] Service test-service-n9pxq has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/07/25 17:23:14.924
  STEP: watching for the Service to be patched @ 05/07/25 17:23:14.933
  I0507 17:23:14.934316 24 service.go:3497] observed Service test-service-n9pxq in namespace services-236 with annotations: map[] & LoadBalancer: {[]}
  I0507 17:23:14.934754 24 service.go:3500] Found Service test-service-n9pxq in namespace services-236 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0064348b0 []}]}
  I0507 17:23:14.934771 24 service.go:3507] Service test-service-n9pxq has service status patched
  STEP: updating the ServiceStatus @ 05/07/25 17:23:14.934
  I0507 17:23:14.946338 24 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/07/25 17:23:14.946
  I0507 17:23:14.949352 24 service.go:3538] Observed Service test-service-n9pxq in namespace services-236 with annotations: map[] & Conditions: []
  I0507 17:23:14.949367 24 service.go:3549] Observed Service test-service-n9pxq in namespace services-236 with annotations: map[patchedstatus:true] & Conditions: []
  I0507 17:23:14.949381 24 service.go:3545] Found Service test-service-n9pxq in namespace services-236 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0507 17:23:14.949394 24 service.go:3556] Service test-service-n9pxq has service status updated
  STEP: patching the service @ 05/07/25 17:23:14.949
  STEP: watching for the Service to be patched @ 05/07/25 17:23:14.955
  I0507 17:23:14.956485 24 service.go:3579] observed Service test-service-n9pxq in namespace services-236 with labels: map[test-service-static:true]
  I0507 17:23:14.956502 24 service.go:3579] observed Service test-service-n9pxq in namespace services-236 with labels: map[test-service-static:true]
  I0507 17:23:14.956584 24 service.go:3579] observed Service test-service-n9pxq in namespace services-236 with labels: map[test-service-static:true]
  I0507 17:23:14.956597 24 service.go:3582] Found Service test-service-n9pxq in namespace services-236 with labels: map[test-service:patched test-service-static:true]
  I0507 17:23:14.956605 24 service.go:3589] Service test-service-n9pxq patched
  STEP: deleting the service @ 05/07/25 17:23:14.956
  STEP: watching for the Service to be deleted @ 05/07/25 17:23:14.988
  I0507 17:23:14.990080 24 service.go:3613] Observed event: ADDED
  I0507 17:23:14.990118 24 service.go:3613] Observed event: MODIFIED
  I0507 17:23:14.990220 24 service.go:3613] Observed event: MODIFIED
  I0507 17:23:14.990230 24 service.go:3613] Observed event: MODIFIED
  I0507 17:23:14.990239 24 service.go:3609] Found Service test-service-n9pxq in namespace services-236 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0507 17:23:14.990245 24 service.go:3618] Service test-service-n9pxq deleted
  I0507 17:23:14.990295 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-236" for this suite. @ 05/07/25 17:23:14.994
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/07/25 17:23:15
  I0507 17:23:15.000975 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename events @ 05/07/25 17:23:15.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:23:15.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:23:15.016
  STEP: creating a test event @ 05/07/25 17:23:15.018
  STEP: listing events in all namespaces @ 05/07/25 17:23:15.026
  STEP: listing events in test namespace @ 05/07/25 17:23:15.03
  STEP: listing events with field selection filtering on source @ 05/07/25 17:23:15.032
  STEP: listing events with field selection filtering on reportingController @ 05/07/25 17:23:15.035
  STEP: getting the test event @ 05/07/25 17:23:15.038
  STEP: patching the test event @ 05/07/25 17:23:15.04
  STEP: getting the test event @ 05/07/25 17:23:15.046
  STEP: updating the test event @ 05/07/25 17:23:15.049
  STEP: getting the test event @ 05/07/25 17:23:15.054
  STEP: deleting the test event @ 05/07/25 17:23:15.056
  STEP: listing events in all namespaces @ 05/07/25 17:23:15.062
  STEP: listing events in test namespace @ 05/07/25 17:23:15.066
  I0507 17:23:15.069184 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5965" for this suite. @ 05/07/25 17:23:15.097
• [0.103 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 05/07/25 17:23:15.103
  I0507 17:23:15.103811 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 17:23:15.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:23:15.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:23:15.117
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/07/25 17:23:15.119
  STEP: Saw pod success @ 05/07/25 17:23:19.143
  I0507 17:23:19.146817 24 output.go:207] Trying to get logs from node mini-2 pod pod-9dbfb406-6932-4da5-870c-bf1b7cc356a0 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 17:23:19.159
  I0507 17:23:19.174247 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3532" for this suite. @ 05/07/25 17:23:19.178
• [4.083 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/07/25 17:23:19.187
  I0507 17:23:19.187298 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-runtime @ 05/07/25 17:23:19.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:23:19.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:23:19.206
  STEP: create the container @ 05/07/25 17:23:19.208
  I0507 17:23:19.215549      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/07/25 17:23:19.215
  STEP: get the container status @ 05/07/25 17:23:23.234
  STEP: the container should be terminated @ 05/07/25 17:23:23.237
  STEP: the termination message should be set @ 05/07/25 17:23:23.237
  I0507 17:23:23.237855 24 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/07/25 17:23:23.237
  I0507 17:23:23.256120 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2964" for this suite. @ 05/07/25 17:23:23.259
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 05/07/25 17:23:23.265
  I0507 17:23:23.265718 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 17:23:23.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:23:23.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:23:23.281
  STEP: creating Agnhost RC @ 05/07/25 17:23:23.284
  I0507 17:23:23.284876 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6269 create -f -'
  I0507 17:23:23.357747 24 builder.go:146] stderr: ""
  I0507 17:23:23.357784 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/07/25 17:23:23.357
  I0507 17:23:24.362056 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 17:23:24.362073 24 framework.go:733] Found 0 / 1
  I0507 17:23:25.361587 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 17:23:25.361619 24 framework.go:733] Found 1 / 1
  I0507 17:23:25.361641 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/07/25 17:23:25.361
  I0507 17:23:25.364340 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 17:23:25.364366 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0507 17:23:25.364413 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6269 patch pod agnhost-primary-nb9lb -p {"metadata":{"annotations":{"x":"y"}}}'
  I0507 17:23:25.410255 24 builder.go:146] stderr: ""
  I0507 17:23:25.410279 24 builder.go:147] stdout: "pod/agnhost-primary-nb9lb patched\n"
  STEP: checking annotations @ 05/07/25 17:23:25.41
  I0507 17:23:25.415397 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 17:23:25.415412 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0507 17:23:25.415489 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6269" for this suite. @ 05/07/25 17:23:25.425
• [2.170 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/07/25 17:23:25.435
  I0507 17:23:25.435405 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pod-network-test @ 05/07/25 17:23:25.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:23:25.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:23:25.459
  STEP: Performing setup for networking test in namespace pod-network-test-5885 @ 05/07/25 17:23:25.462
  STEP: creating a selector @ 05/07/25 17:23:25.462
  STEP: Creating the service pods in kubernetes @ 05/07/25 17:23:25.462
  I0507 17:23:25.462316 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/07/25 17:23:39.596
  I0507 17:23:41.616527 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0507 17:23:41.616547 24 networking.go:42] Breadth first check of 192.168.125.210 on host 10.221.190.31...
  I0507 17:23:41.619218 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.158.136:9080/dial?request=hostname&protocol=http&host=192.168.125.210&port=8083&tries=1'] Namespace:pod-network-test-5885 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:23:41.619232 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:23:41.619281 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5885/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.158.136%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.125.210%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0507 17:23:41.655353 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:23:41.655398 24 utils.go:355] Waiting for responses: map[]
  I0507 17:23:41.655405 24 utils.go:359] reached 192.168.125.210 after 0/1 tries
  I0507 17:23:41.655427 24 networking.go:42] Breadth first check of 192.168.158.138 on host 10.221.190.32...
  I0507 17:23:41.658421 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.158.136:9080/dial?request=hostname&protocol=http&host=192.168.158.138&port=8083&tries=1'] Namespace:pod-network-test-5885 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:23:41.658446 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:23:41.658493 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5885/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.158.136%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.158.138%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0507 17:23:41.695243 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:23:41.695273 24 utils.go:355] Waiting for responses: map[]
  I0507 17:23:41.695280 24 utils.go:359] reached 192.168.158.138 after 0/1 tries
  I0507 17:23:41.695285 24 networking.go:53] Going to retry 0 out of 2 pods....
  I0507 17:23:41.695369 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5885" for this suite. @ 05/07/25 17:23:41.7
• [16.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/07/25 17:23:41.707
  I0507 17:23:41.707712 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename deployment @ 05/07/25 17:23:41.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:23:41.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:23:41.722
  I0507 17:23:41.725131 24 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0507 17:23:41.730238 24 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0507 17:23:41.744149 24 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0507 17:23:43.752388 24 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0507 17:23:43.755002 24 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0507 17:23:43.763415 24 deployment.go:314] Updating deployment test-recreate-deployment
  I0507 17:23:43.763429 24 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0507 17:23:43.855692 24 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3974",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2fd6a8f0-5b08-4805-810a-43ed1791c345",
      ResourceVersion: (string) (len=7) "2232816",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 17:23:43.860204 24 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3974",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28233750-cd02-40ab-bf20-97e64763b194",
      ResourceVersion: (string) (len=7) "2232815",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2fd6a8f0-5b08-4805-810a-43ed1791c345",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 66 64 36 61 38  66 30 2d 35 62 30 38 2d  |\"2fd6a8f0-5b08-|
              00000120  34 38 30 35 2d 38 31 30  61 2d 34 33 65 64 31 37  |4805-810a-43ed17|
              00000130  39 31 63 33 34 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |91c345\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 17:23:43.860802 24 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0507 17:23:43.860916 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3974",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6351cac-c577-4d50-b02f-042a9fbca5c6",
      ResourceVersion: (string) (len=7) "2232805",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2fd6a8f0-5b08-4805-810a-43ed1791c345",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 66 64 36 61 38  66 30 2d 35 62 30 38 2d  |\"2fd6a8f0-5b08-|
              00000120  34 38 30 35 2d 38 31 30  61 2d 34 33 65 64 31 37  |4805-810a-43ed17|
              00000130  39 31 63 33 34 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |91c345\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 17:23:43.864570 24 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-mrxhv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-mrxhv",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-3974",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ecae3018-a026-4987-a62d-3f997d3146f4",
      ResourceVersion: (string) (len=7) "2232817",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "28233750-cd02-40ab-bf20-97e64763b194",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  32 33 33 37 35 30 2d 63  |d\":\"28233750-c|
              00000090  64 30 32 2d 34 30 61 62  2d 62 66 32 30 2d 39 37  |d02-40ab-bf20-97|
              000000a0  65 36 34 37 36 33 62 31  39 34 5c 22 7d 22 3a 7b  |e64763b194\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2gcpf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2gcpf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2gcpf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 17:23:43.865784 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3974" for this suite. @ 05/07/25 17:23:43.869
• [2.168 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/07/25 17:23:43.876
  I0507 17:23:43.876190 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename discovery @ 05/07/25 17:23:43.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:23:43.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:23:43.901
  STEP: Setting up server cert @ 05/07/25 17:23:43.903
  I0507 17:23:44.137715 24 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0507 17:23:44.138705 24 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0507 17:23:44.138742 24 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0507 17:23:44.138761 24 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0507 17:23:44.138765 24 discovery.go:139] Checking APIGroup: apps
  I0507 17:23:44.139547 24 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0507 17:23:44.139580 24 discovery.go:148] Versions found [{apps/v1 v1}]
  I0507 17:23:44.139601 24 discovery.go:154] apps/v1 matches apps/v1
  I0507 17:23:44.139620 24 discovery.go:139] Checking APIGroup: events.k8s.io
  I0507 17:23:44.140437 24 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0507 17:23:44.140477 24 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0507 17:23:44.140483 24 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0507 17:23:44.140501 24 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0507 17:23:44.141113 24 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0507 17:23:44.141123 24 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0507 17:23:44.141128 24 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0507 17:23:44.141131 24 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0507 17:23:44.141991 24 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0507 17:23:44.142003 24 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0507 17:23:44.142021 24 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0507 17:23:44.142027 24 discovery.go:139] Checking APIGroup: autoscaling
  I0507 17:23:44.142703 24 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0507 17:23:44.142727 24 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0507 17:23:44.142745 24 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0507 17:23:44.142750 24 discovery.go:139] Checking APIGroup: batch
  I0507 17:23:44.143372 24 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0507 17:23:44.143396 24 discovery.go:148] Versions found [{batch/v1 v1}]
  I0507 17:23:44.143414 24 discovery.go:154] batch/v1 matches batch/v1
  I0507 17:23:44.143419 24 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0507 17:23:44.144497 24 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0507 17:23:44.144508 24 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0507 17:23:44.144525 24 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0507 17:23:44.144530 24 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0507 17:23:44.145082 24 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0507 17:23:44.145106 24 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0507 17:23:44.145124 24 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0507 17:23:44.145128 24 discovery.go:139] Checking APIGroup: policy
  I0507 17:23:44.145641 24 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0507 17:23:44.145661 24 discovery.go:148] Versions found [{policy/v1 v1}]
  I0507 17:23:44.145670 24 discovery.go:154] policy/v1 matches policy/v1
  I0507 17:23:44.145678 24 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0507 17:23:44.146195 24 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0507 17:23:44.146207 24 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0507 17:23:44.146213 24 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0507 17:23:44.146218 24 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0507 17:23:44.146935 24 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0507 17:23:44.146947 24 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0507 17:23:44.146951 24 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0507 17:23:44.146956 24 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0507 17:23:44.147522 24 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0507 17:23:44.147534 24 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0507 17:23:44.147540 24 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0507 17:23:44.147545 24 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0507 17:23:44.148132 24 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0507 17:23:44.148143 24 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0507 17:23:44.148148 24 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0507 17:23:44.148152 24 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0507 17:23:44.148694 24 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0507 17:23:44.148706 24 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0507 17:23:44.148713 24 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0507 17:23:44.148719 24 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0507 17:23:44.149264 24 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0507 17:23:44.149279 24 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0507 17:23:44.149285 24 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0507 17:23:44.149299 24 discovery.go:139] Checking APIGroup: node.k8s.io
  I0507 17:23:44.149808 24 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0507 17:23:44.149820 24 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0507 17:23:44.149825 24 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0507 17:23:44.149830 24 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0507 17:23:44.150460 24 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0507 17:23:44.150473 24 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0507 17:23:44.150478 24 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0507 17:23:44.150483 24 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0507 17:23:44.150992 24 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0507 17:23:44.151003 24 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0507 17:23:44.151008 24 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0507 17:23:44.151012 24 discovery.go:139] Checking APIGroup: acme.cert-manager.io
  I0507 17:23:44.151557 24 discovery.go:147] PreferredVersion.GroupVersion: acme.cert-manager.io/v1
  I0507 17:23:44.151569 24 discovery.go:148] Versions found [{acme.cert-manager.io/v1 v1}]
  I0507 17:23:44.151574 24 discovery.go:154] acme.cert-manager.io/v1 matches acme.cert-manager.io/v1
  I0507 17:23:44.151579 24 discovery.go:139] Checking APIGroup: cert-manager.io
  I0507 17:23:44.152155 24 discovery.go:147] PreferredVersion.GroupVersion: cert-manager.io/v1
  I0507 17:23:44.152168 24 discovery.go:148] Versions found [{cert-manager.io/v1 v1}]
  I0507 17:23:44.152175 24 discovery.go:154] cert-manager.io/v1 matches cert-manager.io/v1
  I0507 17:23:44.152181 24 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0507 17:23:44.152824 24 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0507 17:23:44.152835 24 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0507 17:23:44.152840 24 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0507 17:23:44.152844 24 discovery.go:139] Checking APIGroup: monitoring.coreos.com
  I0507 17:23:44.153482 24 discovery.go:147] PreferredVersion.GroupVersion: monitoring.coreos.com/v1
  I0507 17:23:44.153493 24 discovery.go:148] Versions found [{monitoring.coreos.com/v1 v1} {monitoring.coreos.com/v1alpha1 v1alpha1}]
  I0507 17:23:44.153498 24 discovery.go:154] monitoring.coreos.com/v1 matches monitoring.coreos.com/v1
  I0507 17:23:44.153502 24 discovery.go:139] Checking APIGroup: orka.macstadium.com
  I0507 17:23:44.154009 24 discovery.go:147] PreferredVersion.GroupVersion: orka.macstadium.com/v1
  I0507 17:23:44.154020 24 discovery.go:148] Versions found [{orka.macstadium.com/v1 v1}]
  I0507 17:23:44.154025 24 discovery.go:154] orka.macstadium.com/v1 matches orka.macstadium.com/v1
  I0507 17:23:44.154031 24 discovery.go:139] Checking APIGroup: metallb.io
  I0507 17:23:44.154607 24 discovery.go:147] PreferredVersion.GroupVersion: metallb.io/v1beta2
  I0507 17:23:44.154623 24 discovery.go:148] Versions found [{metallb.io/v1beta2 v1beta2} {metallb.io/v1beta1 v1beta1} {metallb.io/v1alpha1 v1alpha1}]
  I0507 17:23:44.154629 24 discovery.go:154] metallb.io/v1beta2 matches metallb.io/v1beta2
  I0507 17:23:44.154633 24 discovery.go:139] Checking APIGroup: traefik.containo.us
  I0507 17:23:44.155634 24 discovery.go:147] PreferredVersion.GroupVersion: traefik.containo.us/v1alpha1
  I0507 17:23:44.155645 24 discovery.go:148] Versions found [{traefik.containo.us/v1alpha1 v1alpha1}]
  I0507 17:23:44.155649 24 discovery.go:154] traefik.containo.us/v1alpha1 matches traefik.containo.us/v1alpha1
  I0507 17:23:44.155654 24 discovery.go:139] Checking APIGroup: traefik.io
  I0507 17:23:44.156179 24 discovery.go:147] PreferredVersion.GroupVersion: traefik.io/v1alpha1
  I0507 17:23:44.156190 24 discovery.go:148] Versions found [{traefik.io/v1alpha1 v1alpha1}]
  I0507 17:23:44.156195 24 discovery.go:154] traefik.io/v1alpha1 matches traefik.io/v1alpha1
  I0507 17:23:44.156252 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3573" for this suite. @ 05/07/25 17:23:44.159
• [0.289 seconds]
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 05/07/25 17:23:44.165
  I0507 17:23:44.165612 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:23:44.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:23:44.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:23:44.182
  STEP: Creating a pod to test downward api env vars @ 05/07/25 17:23:44.185
  STEP: Saw pod success @ 05/07/25 17:23:48.21
  I0507 17:23:48.213754 24 output.go:207] Trying to get logs from node mini-1 pod downward-api-7691ad49-99cf-4b64-879a-4c403351b41c container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 17:23:48.219
  I0507 17:23:48.232967 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2213" for this suite. @ 05/07/25 17:23:48.236
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 05/07/25 17:23:48.241
  I0507 17:23:48.242004 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 17:23:48.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:23:48.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:23:48.261
  STEP: Creating service test in namespace statefulset-9016 @ 05/07/25 17:23:48.262
  STEP: Looking for a node to schedule stateful set and pod @ 05/07/25 17:23:48.268
  STEP: Creating pod with conflicting port in namespace statefulset-9016 @ 05/07/25 17:23:48.337
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9016 @ 05/07/25 17:23:48.345
  STEP: Creating statefulset with conflicting port in namespace statefulset-9016 @ 05/07/25 17:23:50.353
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9016 @ 05/07/25 17:23:50.359
  I0507 17:23:50.371587 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-9016, name: ss-0, uid: 6d222a19-784b-419d-8840-de40b995d0c2, status phase: Pending. Waiting for statefulset controller to delete.
  I0507 17:23:50.390398 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-9016, name: ss-0, uid: 6d222a19-784b-419d-8840-de40b995d0c2, status phase: Failed. Waiting for statefulset controller to delete.
  I0507 17:23:50.404952 24 statefulset.go:884] Observed stateful pod in namespace: statefulset-9016, name: ss-0, uid: 6d222a19-784b-419d-8840-de40b995d0c2, status phase: Failed. Waiting for statefulset controller to delete.
  I0507 17:23:50.410299 24 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-9016
  STEP: Removing pod with conflicting port in namespace statefulset-9016 @ 05/07/25 17:23:50.41
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9016 and will be in running state @ 05/07/25 17:23:50.427
  I0507 17:23:52.435267 24 statefulset.go:138] Deleting all statefulset in ns statefulset-9016
  I0507 17:23:52.438203 24 rest.go:153] Scaling statefulset ss to 0
  I0507 17:24:02.451347 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0507 17:24:02.454334 24 rest.go:91] Deleting statefulset ss
  I0507 17:24:02.467449 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9016" for this suite. @ 05/07/25 17:24:02.472
• [14.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 05/07/25 17:24:02.479
  I0507 17:24:02.479681 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 17:24:02.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:24:02.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:24:02.497
  STEP: Given a ReplicationController is created @ 05/07/25 17:24:02.499
  STEP: When the matched label of one of its pods change @ 05/07/25 17:24:02.504
  I0507 17:24:02.512663 24 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/07/25 17:24:03.55
  I0507 17:24:04.563205 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-403" for this suite. @ 05/07/25 17:24:04.567
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 05/07/25 17:24:04.575
  I0507 17:24:04.575398 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename dns @ 05/07/25 17:24:04.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:24:04.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:24:04.598
  STEP: Creating a test headless service @ 05/07/25 17:24:04.6
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4553 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-4553;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4553 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-4553;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4553.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-4553.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4553.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-4553.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4553.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-4553.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4553.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-4553.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4553.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-4553.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4553.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-4553.svc;check="$$(dig +notcp +noall +answer +search 209.131.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.131.209_udp@PTR;check="$$(dig +tcp +noall +answer +search 209.131.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.131.209_tcp@PTR;sleep 1; done
   @ 05/07/25 17:24:04.63
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4553 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4553;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4553 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4553;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4553.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4553.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4553.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4553.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4553.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4553.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4553.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4553.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4553.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4553.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4553.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4553.svc;check="$$(dig +notcp +noall +answer +search 209.131.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.131.209_udp@PTR;check="$$(dig +tcp +noall +answer +search 209.131.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.131.209_tcp@PTR;sleep 1; done
   @ 05/07/25 17:24:04.63
  STEP: creating a pod to probe DNS @ 05/07/25 17:24:04.63
  STEP: submitting the pod to kubernetes @ 05/07/25 17:24:04.63
  STEP: retrieving the pod @ 05/07/25 17:24:08.671
  STEP: looking for the results for each expected name from probers @ 05/07/25 17:24:08.674
  I0507 17:24:08.760587 24 dns_common.go:546] DNS probes using dns-4553/dns-test-fa742648-0d84-42ec-a910-3ed1d93dbf0c succeeded

  STEP: deleting the pod @ 05/07/25 17:24:08.76
  STEP: deleting the test service @ 05/07/25 17:24:08.777
  STEP: deleting the test headless service @ 05/07/25 17:24:08.823
  I0507 17:24:08.847503 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4553" for this suite. @ 05/07/25 17:24:08.854
• [4.286 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/07/25 17:24:08.861
  I0507 17:24:08.861338 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename conformance-tests @ 05/07/25 17:24:08.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:24:08.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:24:08.873
  STEP: Getting node addresses @ 05/07/25 17:24:08.876
  I0507 17:24:08.876591 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0507 17:24:08.955302 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8357" for this suite. @ 05/07/25 17:24:08.958
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 05/07/25 17:24:08.965
  I0507 17:24:08.965094 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubelet-test @ 05/07/25 17:24:08.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:24:08.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:24:08.98
  I0507 17:24:09.010871 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1484" for this suite. @ 05/07/25 17:24:09.056
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 05/07/25 17:24:09.063
  I0507 17:24:09.063844 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 17:24:09.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:24:09.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:24:09.08
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/07/25 17:24:09.082
  I0507 17:24:09.082511 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-5793 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0507 17:24:09.123687 24 builder.go:146] stderr: ""
  I0507 17:24:09.123709 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/07/25 17:24:09.123
  I0507 17:24:09.123753 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-5793 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0507 17:24:09.164299 24 builder.go:146] stderr: ""
  I0507 17:24:09.164324 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/07/25 17:24:09.164
  I0507 17:24:09.167199 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-5793 delete pods e2e-test-httpd-pod'
  I0507 17:24:11.023165 24 builder.go:146] stderr: ""
  I0507 17:24:11.023189 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0507 17:24:11.023254 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5793" for this suite. @ 05/07/25 17:24:11.027
• [1.969 seconds]
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 05/07/25 17:24:11.032
  I0507 17:24:11.032860 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 17:24:11.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:24:11.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:24:11.048
  STEP: creating the pod with failed condition @ 05/07/25 17:24:11.051
  STEP: updating the pod @ 05/07/25 17:26:11.059
  I0507 17:26:11.573501 24 pod_client.go:173] Successfully updated pod "var-expansion-af7402be-183e-41e0-a2fa-94eee9f565e7"
  STEP: waiting for pod running @ 05/07/25 17:26:11.573
  STEP: deleting the pod gracefully @ 05/07/25 17:26:13.583
  I0507 17:26:13.583482 24 delete.go:62] Deleting pod "var-expansion-af7402be-183e-41e0-a2fa-94eee9f565e7" in namespace "var-expansion-825"
  I0507 17:26:13.591266 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-af7402be-183e-41e0-a2fa-94eee9f565e7" to be fully deleted
  I0507 17:26:45.679285 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-825" for this suite. @ 05/07/25 17:26:45.683
• [154.657 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 05/07/25 17:26:45.69
  I0507 17:26:45.690200 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 17:26:45.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:26:45.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:26:45.709
  STEP: Creating simple DaemonSet "daemon-set" @ 05/07/25 17:26:45.792
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 17:26:45.798
  I0507 17:26:45.885264 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:26:45.885296 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:26:45.885319 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:26:45.888999 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 17:26:45.889013 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 17:26:46.804008 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:26:46.804045 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:26:46.804071 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:26:46.807591 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 17:26:46.807605 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  I0507 17:26:47.803331 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:26:47.803368 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:26:47.803393 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:26:47.807064 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 17:26:47.807078 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 05/07/25 17:26:47.809
  I0507 17:26:47.812718 24 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/07/25 17:26:47.812
  I0507 17:26:47.821241 24 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/07/25 17:26:47.821
  I0507 17:26:47.823144 24 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0507 17:26:47.823224 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0507 17:26:47.823268 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0507 17:26:47.823376 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0507 17:26:47.823419 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0507 17:26:47.823431 24 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-7645 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0507 17:26:47.823439 24 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/07/25 17:26:47.823
  STEP: watching for the daemon set status to be patched @ 05/07/25 17:26:47.83
  I0507 17:26:47.832060 24 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0507 17:26:47.832133 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0507 17:26:47.832172 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0507 17:26:47.832278 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0507 17:26:47.832333 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0507 17:26:47.832347 24 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-7645 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0507 17:26:47.832391 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0507 17:26:47.832404 24 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-7645 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0507 17:26:47.832412 24 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 17:26:47.837
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7645, will wait for the garbage collector to delete the pods @ 05/07/25 17:26:47.837
  I0507 17:26:47.899433 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.916992ms
  I0507 17:26:47.999523 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.084339ms
  I0507 17:26:50.602996 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 17:26:50.603016 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 17:26:50.605730 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2233800"},"items":null}

  I0507 17:26:50.608053 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2233800"},"items":null}

  I0507 17:26:50.617059 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7645" for this suite. @ 05/07/25 17:26:50.619
• [4.935 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/07/25 17:26:50.625
  I0507 17:26:50.625368 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename podtemplate @ 05/07/25 17:26:50.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:26:50.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:26:50.645
  I0507 17:26:50.673850 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1496" for this suite. @ 05/07/25 17:26:50.712
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/07/25 17:26:50.719
  I0507 17:26:50.719398 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename cronjob @ 05/07/25 17:26:50.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:26:50.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:26:50.734
  STEP: Creating a ForbidConcurrent cronjob @ 05/07/25 17:26:50.736
  STEP: Ensuring a job is scheduled @ 05/07/25 17:26:50.742
  STEP: Ensuring exactly one is scheduled @ 05/07/25 17:27:00.747
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/07/25 17:27:00.75
  STEP: Ensuring no more jobs are scheduled @ 05/07/25 17:27:00.754
  STEP: Removing cronjob @ 05/07/25 17:27:00.756
  I0507 17:27:00.762368 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8025" for this suite. @ 05/07/25 17:27:00.767
• [10.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 05/07/25 17:27:00.779
  I0507 17:27:00.779014 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:27:00.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:27:00.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:27:00.803
  STEP: Creating configMap with name projected-configmap-test-volume-map-979d3927-174d-4026-a14c-5fe83aa28e7f @ 05/07/25 17:27:00.805
  STEP: Creating a pod to test consume configMaps @ 05/07/25 17:27:00.81
  STEP: Saw pod success @ 05/07/25 17:27:04.838
  I0507 17:27:04.844249 24 output.go:207] Trying to get logs from node mini-1 pod pod-projected-configmaps-3787961d-9965-4545-b752-6d914eb779d3 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 17:27:04.859
  I0507 17:27:04.876057 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4910" for this suite. @ 05/07/25 17:27:04.88
• [4.109 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/07/25 17:27:04.887
  I0507 17:27:04.887670 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 17:27:04.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:27:04.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:27:04.903
  STEP: Creating secret with name secret-test-816b0cca-ae39-42b1-97d9-6e74b38e1c25 @ 05/07/25 17:27:04.905
  STEP: Creating a pod to test consume secrets @ 05/07/25 17:27:04.91
  STEP: Saw pod success @ 05/07/25 17:27:08.937
  I0507 17:27:08.941143 24 output.go:207] Trying to get logs from node mini-2 pod pod-secrets-3984fd51-9572-4698-90e6-8356ad108335 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 17:27:08.953
  I0507 17:27:08.970202 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2464" for this suite. @ 05/07/25 17:27:08.974
• [4.093 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 05/07/25 17:27:08.98
  I0507 17:27:08.980787 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:27:08.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:27:08.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:27:08.999
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:27:09.001
  STEP: Saw pod success @ 05/07/25 17:27:13.032
  I0507 17:27:13.035960 24 output.go:207] Trying to get logs from node mini-1 pod downwardapi-volume-1aa4c86c-364f-46ba-bad7-e06616b075e3 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:27:13.042
  I0507 17:27:13.057332 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7299" for this suite. @ 05/07/25 17:27:13.061
• [4.087 seconds]
------------------------------
S
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 05/07/25 17:27:13.067
  I0507 17:27:13.067551 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename csinodes @ 05/07/25 17:27:13.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:27:13.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:27:13.083
  STEP: Creating initial csiNode "e2e-csinode-xmdhz" @ 05/07/25 17:27:13.085
  STEP: Getting initial csiNode "e2e-csinode-xmdhz" @ 05/07/25 17:27:13.09
  STEP: Patching initial csiNode: "e2e-csinode-xmdhz" @ 05/07/25 17:27:13.095
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-xmdhz=patched" @ 05/07/25 17:27:13.103
  STEP: Delete initial csiNode: "e2e-csinode-xmdhz" @ 05/07/25 17:27:13.108
  STEP: Confirm deletion of csiNode "e2e-csinode-xmdhz" @ 05/07/25 17:27:13.114
  STEP: Creating replacement csiNode "e2e-csinode-w8969" @ 05/07/25 17:27:13.116
  STEP: Getting replacement csiNode "e2e-csinode-w8969" @ 05/07/25 17:27:13.119
  STEP: Updating replacement csiNode "e2e-csinode-w8969" @ 05/07/25 17:27:13.122
  STEP: DeleteCollection of CSINodes with "e2e-csinode-w8969=updated" label @ 05/07/25 17:27:13.129
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-w8969=updated" @ 05/07/25 17:27:13.137
  I0507 17:27:13.139460 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-4020" for this suite. @ 05/07/25 17:27:13.161
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/07/25 17:27:13.184
  I0507 17:27:13.184796 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename runtimeclass @ 05/07/25 17:27:13.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:27:13.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:27:13.201
  I0507 17:27:13.210891 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9542" for this suite. @ 05/07/25 17:27:13.262
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/07/25 17:27:13.271
  I0507 17:27:13.271661 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename ingressclass @ 05/07/25 17:27:13.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:27:13.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:27:13.29
  STEP: getting /apis @ 05/07/25 17:27:13.292
  STEP: getting /apis/networking.k8s.io @ 05/07/25 17:27:13.294
  STEP: getting /apis/networking.k8s.iov1 @ 05/07/25 17:27:13.295
  STEP: creating @ 05/07/25 17:27:13.295
  STEP: getting @ 05/07/25 17:27:13.31
  STEP: listing @ 05/07/25 17:27:13.313
  STEP: watching @ 05/07/25 17:27:13.32
  I0507 17:27:13.320184 24 ingressclass.go:348] starting watch
  STEP: patching @ 05/07/25 17:27:13.321
  STEP: updating @ 05/07/25 17:27:13.326
  I0507 17:27:13.332052 24 ingressclass.go:364] waiting for watch events with expected annotations
  I0507 17:27:13.332070 24 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 05/07/25 17:27:13.332
  STEP: deleting a collection @ 05/07/25 17:27:13.342
  I0507 17:27:13.357547 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4629" for this suite. @ 05/07/25 17:27:13.362
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 05/07/25 17:27:13.368
  I0507 17:27:13.368309 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:27:13.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:27:13.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:27:13.385
  STEP: Setting up server cert @ 05/07/25 17:27:13.409
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:27:13.784
  STEP: Deploying the webhook pod @ 05/07/25 17:27:13.789
  STEP: Wait for the deployment to be ready @ 05/07/25 17:27:13.801
  I0507 17:27:13.813284 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 17:27:15.825
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:27:15.849
  I0507 17:27:16.849145 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/07/25 17:27:16.907
  STEP: Creating a configMap that should be mutated @ 05/07/25 17:27:16.916
  STEP: Deleting the collection of validation webhooks @ 05/07/25 17:27:16.937
  STEP: Creating a configMap that should not be mutated @ 05/07/25 17:27:16.982
  I0507 17:27:17.106822 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4265" for this suite. @ 05/07/25 17:27:17.127
  STEP: Destroying namespace "webhook-markers-2089" for this suite. @ 05/07/25 17:27:17.171
• [3.828 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 05/07/25 17:27:17.196
  I0507 17:27:17.196295 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 17:27:17.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:27:17.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:27:17.248
  STEP: Creating a test namespace @ 05/07/25 17:27:17.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:27:17.282
  STEP: Creating a pod in the namespace @ 05/07/25 17:27:17.285
  STEP: Waiting for the pod to have running status @ 05/07/25 17:27:17.328
  STEP: Deleting the namespace @ 05/07/25 17:27:19.346
  STEP: Waiting for the namespace to be removed. @ 05/07/25 17:27:19.354
  STEP: Recreating the namespace @ 05/07/25 17:27:30.361
  STEP: Verifying there are no pods in the namespace @ 05/07/25 17:27:30.376
  I0507 17:27:30.379589 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4255" for this suite. @ 05/07/25 17:27:30.384
  STEP: Destroying namespace "nsdeletetest-5014" for this suite. @ 05/07/25 17:27:30.39
  I0507 17:27:30.393275 24 framework.go:370] Namespace nsdeletetest-5014 was already deleted
  STEP: Destroying namespace "nsdeletetest-401" for this suite. @ 05/07/25 17:27:30.393
• [13.203 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:470
  STEP: Creating a kubernetes client @ 05/07/25 17:27:30.399
  I0507 17:27:30.399026 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sched-preemption @ 05/07/25 17:27:30.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:27:30.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:27:30.414
  I0507 17:27:30.440689 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0507 17:28:30.446433 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 05/07/25 17:28:30.449
  STEP: Adding a custom resource @ 05/07/25 17:28:30.449
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 05/07/25 17:28:30.458
  I0507 17:28:30.471890 24 preemption.go:504] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 05/07/25 17:28:30.471
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 05/07/25 17:28:32.479
  I0507 17:28:32.485395 24 preemption.go:522] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 05/07/25 17:28:32.485
  STEP: Verifying the pod has the pod disruption condition @ 05/07/25 17:28:34.495
  I0507 17:28:34.500448 24 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0507 17:28:35.013073 24 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 05/07/25 17:28:35.028
  STEP: Removing a custom resource @ 05/07/25 17:28:35.041
  I0507 17:28:35.060828 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8235" for this suite. @ 05/07/25 17:28:35.066
• [64.675 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 05/07/25 17:28:35.074
  I0507 17:28:35.074343 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename deployment @ 05/07/25 17:28:35.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:28:35.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:28:35.095
  STEP: creating a Deployment @ 05/07/25 17:28:35.105
  I0507 17:28:35.105067 24 deployment.go:506] Creating simple deployment test-deployment-2tgrn
  I0507 17:28:35.117954 24 deployment.go:223] deployment "test-deployment-2tgrn" doesn't have the required revision set
  STEP: Getting /status @ 05/07/25 17:28:37.13
  I0507 17:28:37.133171 24 deployment.go:531] Deployment test-deployment-2tgrn has Conditions: [{Available True 2025-05-07 17:28:36 +0000 UTC 2025-05-07 17:28:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-05-07 17:28:36 +0000 UTC 2025-05-07 17:28:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2tgrn-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/07/25 17:28:37.133
  I0507 17:28:37.141538 24 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 28, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 28, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 28, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 28, 35, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-2tgrn-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/07/25 17:28:37.141
  I0507 17:28:37.142951 24 deployment.go:578] Observed &Deployment event: ADDED
  I0507 17:28:37.142984 24 deployment.go:574] Observed Deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 17:28:35 +0000 UTC 2025-05-07 17:28:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2tgrn-6fb4c74686"}
  I0507 17:28:37.143080 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0507 17:28:37.143099 24 deployment.go:574] Observed Deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 17:28:35 +0000 UTC 2025-05-07 17:28:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2tgrn-6fb4c74686"}
  I0507 17:28:37.143109 24 deployment.go:574] Observed Deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-07 17:28:35 +0000 UTC 2025-05-07 17:28:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0507 17:28:37.143160 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0507 17:28:37.143180 24 deployment.go:574] Observed Deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-07 17:28:35 +0000 UTC 2025-05-07 17:28:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0507 17:28:37.143192 24 deployment.go:574] Observed Deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 17:28:35 +0000 UTC 2025-05-07 17:28:35 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-2tgrn-6fb4c74686" is progressing.}
  I0507 17:28:37.143242 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0507 17:28:37.143260 24 deployment.go:574] Observed Deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-07 17:28:36 +0000 UTC 2025-05-07 17:28:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0507 17:28:37.143269 24 deployment.go:574] Observed Deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 17:28:36 +0000 UTC 2025-05-07 17:28:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2tgrn-6fb4c74686" has successfully progressed.}
  I0507 17:28:37.143321 24 deployment.go:578] Observed &Deployment event: MODIFIED
  I0507 17:28:37.143335 24 deployment.go:574] Observed Deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-07 17:28:36 +0000 UTC 2025-05-07 17:28:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0507 17:28:37.143343 24 deployment.go:574] Observed Deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 17:28:36 +0000 UTC 2025-05-07 17:28:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2tgrn-6fb4c74686" has successfully progressed.}
  I0507 17:28:37.143351 24 deployment.go:571] Found Deployment test-deployment-2tgrn in namespace deployment-8457 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 17:28:37.143360 24 deployment.go:582] Deployment test-deployment-2tgrn has an updated status
  STEP: patching the Statefulset Status @ 05/07/25 17:28:37.143
  I0507 17:28:37.143382 24 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0507 17:28:37.150019 24 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/07/25 17:28:37.15
  I0507 17:28:37.152543 24 deployment.go:615] Observed &Deployment event: ADDED
  I0507 17:28:37.152578 24 deployment.go:611] Observed deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 17:28:35 +0000 UTC 2025-05-07 17:28:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2tgrn-6fb4c74686"}
  I0507 17:28:37.152645 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0507 17:28:37.152662 24 deployment.go:611] Observed deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 17:28:35 +0000 UTC 2025-05-07 17:28:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-2tgrn-6fb4c74686"}
  I0507 17:28:37.152678 24 deployment.go:611] Observed deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-07 17:28:35 +0000 UTC 2025-05-07 17:28:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0507 17:28:37.152735 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0507 17:28:37.152752 24 deployment.go:611] Observed deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-07 17:28:35 +0000 UTC 2025-05-07 17:28:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0507 17:28:37.152765 24 deployment.go:611] Observed deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 17:28:35 +0000 UTC 2025-05-07 17:28:35 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-2tgrn-6fb4c74686" is progressing.}
  I0507 17:28:37.152818 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0507 17:28:37.152834 24 deployment.go:611] Observed deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-07 17:28:36 +0000 UTC 2025-05-07 17:28:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0507 17:28:37.152848 24 deployment.go:611] Observed deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 17:28:36 +0000 UTC 2025-05-07 17:28:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2tgrn-6fb4c74686" has successfully progressed.}
  I0507 17:28:37.152897 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0507 17:28:37.152914 24 deployment.go:611] Observed deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-07 17:28:36 +0000 UTC 2025-05-07 17:28:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0507 17:28:37.152927 24 deployment.go:611] Observed deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-07 17:28:36 +0000 UTC 2025-05-07 17:28:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-2tgrn-6fb4c74686" has successfully progressed.}
  I0507 17:28:37.152940 24 deployment.go:611] Observed deployment test-deployment-2tgrn in namespace deployment-8457 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 17:28:37.152998 24 deployment.go:615] Observed &Deployment event: MODIFIED
  I0507 17:28:37.153016 24 deployment.go:608] Found deployment test-deployment-2tgrn in namespace deployment-8457 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0507 17:28:37.153028 24 deployment.go:619] Deployment test-deployment-2tgrn has a patched status
  I0507 17:28:37.156789 24 deployment.go:632] Deployment "test-deployment-2tgrn":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-2tgrn",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8457",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a549dd4f-9714-4b8e-b0ac-9aa401036424",
      ResourceVersion: (string) (len=7) "2234515",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-2tgrn-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 17:28:37.226387 24 deployment.go:40] New ReplicaSet "test-deployment-2tgrn-6fb4c74686" of Deployment "test-deployment-2tgrn":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-2tgrn-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8457",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a37dd8fa-f2f7-42be-86dc-367daebbff59",
      ResourceVersion: (string) (len=7) "2234509",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-2tgrn",
          UID: (types.UID) (len=36) "a549dd4f-9714-4b8e-b0ac-9aa401036424",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 61 35 34  |k:{\"uid\":\"a54|
              00000120  39 64 64 34 66 2d 39 37  31 34 2d 34 62 38 65 2d  |9dd4f-9714-4b8e-|
              00000130  62 30 61 63 2d 39 61 61  34 30 31 30 33 36 34 32  |b0ac-9aa40103642|
              00000140  34 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |4\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 17:28:37.231931 24 deployment.go:68] Pod "test-deployment-2tgrn-6fb4c74686-vsdjx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-2tgrn-6fb4c74686-vsdjx",
      GenerateName: (string) (len=33) "test-deployment-2tgrn-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-8457",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ac5f113-69a9-40f7-8c19-bda370f3da50",
      ResourceVersion: (string) (len=7) "2234508",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b9bab62d3e13c8b0b0c215e05ad9a446a8aedd1b6fedee4f7d533aeebce4ed42",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.147/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.147/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-2tgrn-6fb4c74686",
          UID: (types.UID) (len=36) "a37dd8fa-f2f7-42be-86dc-367daebbff59",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 61 33 37 64 64 38 66  61 2d 66 32 66 37 2d 34  |"a37dd8fa-f2f7-4|
              000000a0  32 62 65 2d 38 36 64 63  2d 33 36 37 64 61 65 62  |2be-86dc-367daeb|
              000000b0  62 66 66 35 39 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |bff59\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  38 2e 31 34 37 5c 22 7d  |2.168.158.147\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fr4zj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fr4zj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882235715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) (len=15) "192.168.158.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.158.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882235715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882235716,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://aa007c86a85db73dd80d377e458342b5b2ef93ec023412a0dfe91804379142e5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fr4zj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 17:28:37.233199 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8457" for this suite. @ 05/07/25 17:28:37.237
• [2.170 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 05/07/25 17:28:37.244
  I0507 17:28:37.244732 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename runtimeclass @ 05/07/25 17:28:37.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:28:37.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:28:37.261
  I0507 17:28:37.289133 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1050" for this suite. @ 05/07/25 17:28:37.338
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 05/07/25 17:28:37.344
  I0507 17:28:37.344876 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/07/25 17:28:37.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:28:37.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:28:37.365
  STEP: getting /apis @ 05/07/25 17:28:37.372
  STEP: getting /apis/admissionregistration.k8s.io @ 05/07/25 17:28:37.376
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/07/25 17:28:37.377
  STEP: creating @ 05/07/25 17:28:37.379
  STEP: getting @ 05/07/25 17:28:37.406
  STEP: listing @ 05/07/25 17:28:37.421
  STEP: watching @ 05/07/25 17:28:37.435
  I0507 17:28:37.435568 24 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 05/07/25 17:28:37.437
  STEP: updating @ 05/07/25 17:28:37.451
  I0507 17:28:37.472618 24 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 05/07/25 17:28:37.472
  STEP: patching /status @ 05/07/25 17:28:37.49
  STEP: updating /status @ 05/07/25 17:28:37.502
  STEP: deleting @ 05/07/25 17:28:37.515
  STEP: deleting a collection @ 05/07/25 17:28:37.527
  I0507 17:28:37.557084 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6950" for this suite. @ 05/07/25 17:28:37.561
• [0.223 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 05/07/25 17:28:37.567
  I0507 17:28:37.567627 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:28:37.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:28:37.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:28:37.587
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:28:37.588
  STEP: Saw pod success @ 05/07/25 17:28:41.614
  I0507 17:28:41.617472 24 output.go:207] Trying to get logs from node mini-1 pod downwardapi-volume-96a174ff-19a2-40e0-b518-e2e30b14feac container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:28:41.624
  I0507 17:28:41.640013 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1735" for this suite. @ 05/07/25 17:28:41.644
• [4.084 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 05/07/25 17:28:41.651
  I0507 17:28:41.651832 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 17:28:41.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:28:41.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:28:41.668
  STEP: Creating a pod to test substitution in container's args @ 05/07/25 17:28:41.672
  STEP: Saw pod success @ 05/07/25 17:28:45.695
  I0507 17:28:45.699883 24 output.go:207] Trying to get logs from node mini-1 pod var-expansion-ac024f6a-3e63-4c99-bc3a-938d3d6b8ff2 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 17:28:45.706
  I0507 17:28:45.724668 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4786" for this suite. @ 05/07/25 17:28:45.728
• [4.085 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 05/07/25 17:28:45.736
  I0507 17:28:45.736779 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:28:45.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:28:45.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:28:45.756
  STEP: Setting up server cert @ 05/07/25 17:28:45.778
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:28:46.061
  STEP: Deploying the webhook pod @ 05/07/25 17:28:46.069
  STEP: Wait for the deployment to be ready @ 05/07/25 17:28:46.095
  I0507 17:28:46.108133 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 17:28:48.118
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:28:48.139
  I0507 17:28:49.140121 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/07/25 17:28:49.213
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/07/25 17:28:49.241
  STEP: Deleting the collection of validation webhooks @ 05/07/25 17:28:49.262
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/07/25 17:28:49.318
  I0507 17:28:49.398149 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2537" for this suite. @ 05/07/25 17:28:49.404
  STEP: Destroying namespace "webhook-markers-2720" for this suite. @ 05/07/25 17:28:49.425
• [3.695 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 05/07/25 17:28:49.432
  I0507 17:28:49.432018 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename containers @ 05/07/25 17:28:49.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:28:49.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:28:49.448
  STEP: Creating a pod to test override command @ 05/07/25 17:28:49.451
  STEP: Saw pod success @ 05/07/25 17:28:53.484
  I0507 17:28:53.487040 24 output.go:207] Trying to get logs from node mini-2 pod client-containers-a6d35fa3-1cdc-4681-ab45-c5e10f58eee7 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 17:28:53.498
  I0507 17:28:53.514047 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3059" for this suite. @ 05/07/25 17:28:53.518
• [4.092 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/07/25 17:28:53.524
  I0507 17:28:53.524276 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:28:53.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:28:53.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:28:53.54
  STEP: Creating projection with secret that has name projected-secret-test-map-d9671e11-1821-471f-a567-d801e06a2ea1 @ 05/07/25 17:28:53.542
  STEP: Creating a pod to test consume secrets @ 05/07/25 17:28:53.547
  STEP: Saw pod success @ 05/07/25 17:28:57.569
  I0507 17:28:57.572445 24 output.go:207] Trying to get logs from node mini-2 pod pod-projected-secrets-8145b0a0-364c-48d7-9a37-3d45a0a091c2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 17:28:57.578
  I0507 17:28:57.595166 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5978" for this suite. @ 05/07/25 17:28:57.599
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 05/07/25 17:28:57.604
  I0507 17:28:57.604538 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:28:57.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:28:57.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:28:57.618
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:28:57.621
  STEP: Saw pod success @ 05/07/25 17:29:01.642
  I0507 17:29:01.646333 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-324b6c2d-f453-4a84-ab23-8504ddeb09f8 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:29:01.651
  I0507 17:29:01.667005 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7949" for this suite. @ 05/07/25 17:29:01.67
• [4.073 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/07/25 17:29:01.677
  I0507 17:29:01.677736 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/07/25 17:29:01.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:29:01.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:29:01.701
  STEP: getting /apis @ 05/07/25 17:29:01.704
  STEP: getting /apis/storage.k8s.io @ 05/07/25 17:29:01.708
  STEP: getting /apis/storage.k8s.io/v1 @ 05/07/25 17:29:01.709
  STEP: creating @ 05/07/25 17:29:01.71
  STEP: watching @ 05/07/25 17:29:01.726
  I0507 17:29:01.726612 24 csistoragecapacity.go:143] starting watch
  STEP: getting @ 05/07/25 17:29:01.733
  STEP: listing in namespace @ 05/07/25 17:29:01.736
  STEP: listing across namespaces @ 05/07/25 17:29:01.739
  STEP: patching @ 05/07/25 17:29:01.741
  STEP: updating @ 05/07/25 17:29:01.747
  I0507 17:29:01.752297 24 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0507 17:29:01.752338 24 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/07/25 17:29:01.752
  STEP: deleting a collection @ 05/07/25 17:29:01.762
  I0507 17:29:01.782268 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-1336" for this suite. @ 05/07/25 17:29:01.785
• [0.115 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 05/07/25 17:29:01.792
  I0507 17:29:01.792529 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 17:29:01.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:29:01.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:29:01.809
  I0507 17:29:01.826804 24 service_accounts.go:646] created pod
  STEP: Saw pod success @ 05/07/25 17:29:05.843
  I0507 17:29:35.846797 24 service_accounts.go:652] polling logs
  I0507 17:29:35.853062 24 service_accounts.go:662] Pod logs: 
  I0507 17:29:02.969897       1 log.go:245] OK: Got token
  I0507 17:29:02.969945       1 log.go:245] validating with in-cluster discovery
  I0507 17:29:02.970098       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0507 17:29:02.970111       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9435:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012940), NotBefore:(*jwt.NumericDate)(0xc000012a30), IssuedAt:(*jwt.NumericDate)(0xc000012950), ID:"1cdfeb19-83c0-428a-8f15-e6ccdc9c33e7"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9435", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"90073f72-cdb8-472c-b8ec-512d1ef0b93b"}}}
  I0507 17:29:02.980679       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0507 17:29:02.991984       1 log.go:245] OK: Validated signature on JWT
  I0507 17:29:02.992265       1 log.go:245] OK: Got valid claims from token!
  I0507 17:29:02.992293       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9435:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001d2500), NotBefore:(*jwt.NumericDate)(0xc0001d25b8), IssuedAt:(*jwt.NumericDate)(0xc0001d2508), ID:"1cdfeb19-83c0-428a-8f15-e6ccdc9c33e7"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9435", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"90073f72-cdb8-472c-b8ec-512d1ef0b93b"}}}

  I0507 17:29:35.853154 24 service_accounts.go:666] completed pod
  I0507 17:29:35.858936 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9435" for this suite. @ 05/07/25 17:29:35.862
• [34.077 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 05/07/25 17:29:35.869
  I0507 17:29:35.869466 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:29:35.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:29:35.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:29:35.889
  STEP: Setting up server cert @ 05/07/25 17:29:35.912
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:29:36.025
  STEP: Deploying the webhook pod @ 05/07/25 17:29:36.031
  STEP: Wait for the deployment to be ready @ 05/07/25 17:29:36.042
  I0507 17:29:36.053770 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/07/25 17:29:38.066
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:29:38.089
  I0507 17:29:39.089683 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0507 17:29:39.097321 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6820-crds.webhook.example.com via the AdmissionRegistration API @ 05/07/25 17:29:39.611
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/07/25 17:29:39.624
  I0507 17:29:42.257190 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9998" for this suite. @ 05/07/25 17:29:42.261
  STEP: Destroying namespace "webhook-markers-8525" for this suite. @ 05/07/25 17:29:42.269
• [6.407 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 05/07/25 17:29:42.277
  I0507 17:29:42.277009 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:29:42.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:29:42.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:29:42.292
  STEP: Creating a pod to test downward api env vars @ 05/07/25 17:29:42.294
  STEP: Saw pod success @ 05/07/25 17:29:46.319
  I0507 17:29:46.324183 24 output.go:207] Trying to get logs from node mini-2 pod downward-api-ca607dce-c32d-4708-aa3e-6713186b83c1 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 17:29:46.33
  I0507 17:29:46.347695 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5625" for this suite. @ 05/07/25 17:29:46.351
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 05/07/25 17:29:46.358
  I0507 17:29:46.358505 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 17:29:46.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:29:46.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:29:46.376
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/07/25 17:29:46.378
  STEP: Saw pod success @ 05/07/25 17:29:50.429
  I0507 17:29:50.432542 24 output.go:207] Trying to get logs from node mini-2 pod pod-28fa98b8-a88f-46c3-b22a-1c4a6a073ec5 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 17:29:50.438
  I0507 17:29:50.453549 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3633" for this suite. @ 05/07/25 17:29:50.457
• [4.105 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 05/07/25 17:29:50.463
  I0507 17:29:50.463748 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 17:29:50.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:29:50.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:29:50.476
  I0507 17:29:52.498331 24 delete.go:62] Deleting pod "var-expansion-0c08e568-b38f-4cd4-86d1-bcba7ce0390e" in namespace "var-expansion-2787"
  I0507 17:29:52.506367 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-0c08e568-b38f-4cd4-86d1-bcba7ce0390e" to be fully deleted
  I0507 17:29:56.518836 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2787" for this suite. @ 05/07/25 17:29:56.523
• [6.066 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/07/25 17:29:56.529
  I0507 17:29:56.529653 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename events @ 05/07/25 17:29:56.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:29:56.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:29:56.545
  STEP: Create set of events @ 05/07/25 17:29:56.546
  I0507 17:29:56.551331 24 core_events.go:198] created test-event-1
  I0507 17:29:56.554959 24 core_events.go:198] created test-event-2
  I0507 17:29:56.558337 24 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/07/25 17:29:56.558
  STEP: delete collection of events @ 05/07/25 17:29:56.56
  I0507 17:29:56.560794 24 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/07/25 17:29:56.579
  I0507 17:29:56.579680 24 core_events.go:230] requesting list of events to confirm quantity
  I0507 17:29:56.584335 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9771" for this suite. @ 05/07/25 17:29:56.624
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 05/07/25 17:29:56.63
  I0507 17:29:56.630667 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 17:29:56.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:29:56.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:29:56.647
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6362 @ 05/07/25 17:29:56.648
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/07/25 17:29:56.675
  STEP: creating service externalsvc in namespace services-6362 @ 05/07/25 17:29:56.675
  I0507 17:29:56.774869 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0507 17:29:58.779450 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 29, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 29, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 29, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 29, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalsvc-7576cd9b5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 05/07/25 17:30:00.788
  I0507 17:30:00.832739 24 resource.go:361] Creating new exec pod
  I0507 17:30:02.865351 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6362 exec execpodpv5h2 -- /bin/sh -x -c nslookup nodeport-service.services-6362.svc.cluster.local'
  I0507 17:30:02.960834 24 builder.go:146] stderr: "+ nslookup nodeport-service.services-6362.svc.cluster.local\n"
  I0507 17:30:02.960873 24 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-6362.svc.cluster.local\tcanonical name = externalsvc.services-6362.svc.cluster.local.\nName:\texternalsvc.services-6362.svc.cluster.local\nAddress: 10.109.43.20\n\n"
  I0507 17:30:03.121787 24 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0507 17:30:03.165150 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6362" for this suite. @ 05/07/25 17:30:03.174
• [6.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/07/25 17:30:03.199
  I0507 17:30:03.199642 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename security-context @ 05/07/25 17:30:03.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:30:03.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:30:03.28
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/07/25 17:30:03.282
  STEP: Saw pod success @ 05/07/25 17:30:07.348
  I0507 17:30:07.351030 24 output.go:207] Trying to get logs from node mini-2 pod security-context-4f6d9a94-73fd-49b0-a1ed-5816e96614c6 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 17:30:07.355
  I0507 17:30:07.369894 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7287" for this suite. @ 05/07/25 17:30:07.373
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 05/07/25 17:30:07.379
  I0507 17:30:07.379335 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename cronjob @ 05/07/25 17:30:07.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:30:07.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:30:07.396
  STEP: Creating a cronjob @ 05/07/25 17:30:07.398
  STEP: creating @ 05/07/25 17:30:07.398
  STEP: getting @ 05/07/25 17:30:07.404
  STEP: listing @ 05/07/25 17:30:07.407
  STEP: watching @ 05/07/25 17:30:07.41
  I0507 17:30:07.410093 24 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 05/07/25 17:30:07.411
  STEP: cluster-wide watching @ 05/07/25 17:30:07.413
  I0507 17:30:07.413580 24 cronjob.go:407] starting watch
  STEP: patching @ 05/07/25 17:30:07.414
  STEP: updating @ 05/07/25 17:30:07.42
  I0507 17:30:07.432850 24 cronjob.go:431] waiting for watch events with expected annotations
  I0507 17:30:07.432864 24 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 05/07/25 17:30:07.432
  STEP: updating /status @ 05/07/25 17:30:07.439
  STEP: get /status @ 05/07/25 17:30:07.446
  STEP: deleting @ 05/07/25 17:30:07.449
  STEP: deleting a collection @ 05/07/25 17:30:07.46
  I0507 17:30:07.470070 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2659" for this suite. @ 05/07/25 17:30:07.473
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 05/07/25 17:30:07.484
  I0507 17:30:07.484109 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 17:30:07.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:30:07.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:30:07.503
  STEP: creating the pod @ 05/07/25 17:30:07.505
  STEP: waiting for pod running @ 05/07/25 17:30:07.512
  STEP: creating a file in subpath @ 05/07/25 17:30:09.522
  I0507 17:30:09.525563 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9619 PodName:var-expansion-22c856ba-5628-4114-a29c-3fe354ec7420 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:30:09.525577 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:30:09.525628 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/var-expansion-9619/pods/var-expansion-22c856ba-5628-4114-a29c-3fe354ec7420/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0507 17:30:09.566552 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 05/07/25 17:30:09.566
  I0507 17:30:09.570726 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9619 PodName:var-expansion-22c856ba-5628-4114-a29c-3fe354ec7420 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:30:09.570750 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:30:09.570796 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/var-expansion-9619/pods/var-expansion-22c856ba-5628-4114-a29c-3fe354ec7420/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0507 17:30:09.602849 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 05/07/25 17:30:09.602
  I0507 17:30:10.114858 24 pod_client.go:173] Successfully updated pod "var-expansion-22c856ba-5628-4114-a29c-3fe354ec7420"
  STEP: waiting for annotated pod running @ 05/07/25 17:30:10.114
  STEP: deleting the pod gracefully @ 05/07/25 17:30:10.118
  I0507 17:30:10.118377 24 delete.go:62] Deleting pod "var-expansion-22c856ba-5628-4114-a29c-3fe354ec7420" in namespace "var-expansion-9619"
  I0507 17:30:10.125429 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-22c856ba-5628-4114-a29c-3fe354ec7420" to be fully deleted
  I0507 17:30:44.221368 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9619" for this suite. @ 05/07/25 17:30:44.225
• [36.748 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 05/07/25 17:30:44.231
  I0507 17:30:44.231719 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename disruption @ 05/07/25 17:30:44.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:30:44.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:30:44.249
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/07/25 17:30:44.251
  STEP: Waiting for the pdb to be processed @ 05/07/25 17:30:44.256
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/07/25 17:30:46.265
  STEP: Waiting for all pods to be running @ 05/07/25 17:30:46.265
  I0507 17:30:46.269745 24 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 05/07/25 17:30:48.271
  STEP: Updating the pdb to allow a pod to be evicted @ 05/07/25 17:30:48.279
  STEP: Waiting for the pdb to be processed @ 05/07/25 17:30:48.287
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/07/25 17:30:50.292
  STEP: Waiting for all pods to be running @ 05/07/25 17:30:50.292
  STEP: Waiting for the pdb to observed all healthy pods @ 05/07/25 17:30:50.295
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/07/25 17:30:50.322
  STEP: Waiting for the pdb to be processed @ 05/07/25 17:30:50.346
  STEP: Waiting for all pods to be running @ 05/07/25 17:30:52.349
  STEP: locating a running pod @ 05/07/25 17:30:52.352
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/07/25 17:30:52.36
  STEP: Waiting for the pdb to be deleted @ 05/07/25 17:30:52.364
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/07/25 17:30:52.366
  STEP: Waiting for all pods to be running @ 05/07/25 17:30:52.366
  I0507 17:30:52.470665 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2364" for this suite. @ 05/07/25 17:30:52.484
• [8.276 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 05/07/25 17:30:52.507
  I0507 17:30:52.507546 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 17:30:52.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:30:52.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:30:52.526
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/07/25 17:30:52.528
  STEP: Saw pod success @ 05/07/25 17:30:56.554
  I0507 17:30:56.557551 24 output.go:207] Trying to get logs from node mini-1 pod pod-c00b2d92-12dd-4331-ab2f-68e95c303f9f container test-container: <nil>
  STEP: delete the pod @ 05/07/25 17:30:56.568
  I0507 17:30:56.584118 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8753" for this suite. @ 05/07/25 17:30:56.589
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 05/07/25 17:30:56.605
  I0507 17:30:56.605782 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 17:30:56.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:30:56.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:30:56.631
  I0507 17:31:56.646696 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-771" for this suite. @ 05/07/25 17:31:56.653
• [60.056 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 05/07/25 17:31:56.662
  I0507 17:31:56.662204 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 17:31:56.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:31:56.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:31:56.688
  STEP: creating a ServiceAccount @ 05/07/25 17:31:56.695
  STEP: watching for the ServiceAccount to be added @ 05/07/25 17:31:56.706
  STEP: patching the ServiceAccount @ 05/07/25 17:31:56.707
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/07/25 17:31:56.713
  STEP: deleting the ServiceAccount @ 05/07/25 17:31:56.717
  I0507 17:31:56.734102 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6557" for this suite. @ 05/07/25 17:31:56.754
• [0.099 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/07/25 17:31:56.761
  I0507 17:31:56.761272 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-watch @ 05/07/25 17:31:56.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:31:56.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:31:56.777
  I0507 17:31:56.781074 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Creating first CR  @ 05/07/25 17:31:59.319
  I0507 17:31:59.326087 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T17:31:59Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T17:31:59Z]] name:name1 resourceVersion:2236116 uid:c12b0fcb-04a3-4194-9150-24d25af55ca5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 05/07/25 17:32:09.328
  I0507 17:32:09.333905 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T17:32:09Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T17:32:09Z]] name:name2 resourceVersion:2236165 uid:5730388c-e7bc-4d9b-b54f-f9fb31aec826] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 05/07/25 17:32:19.336
  I0507 17:32:19.342145 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T17:31:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T17:32:19Z]] name:name1 resourceVersion:2236195 uid:c12b0fcb-04a3-4194-9150-24d25af55ca5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 05/07/25 17:32:29.342
  I0507 17:32:29.348693 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T17:32:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T17:32:29Z]] name:name2 resourceVersion:2236224 uid:5730388c-e7bc-4d9b-b54f-f9fb31aec826] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 05/07/25 17:32:39.348
  I0507 17:32:39.358122 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T17:31:59Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T17:32:19Z]] name:name1 resourceVersion:2236252 uid:c12b0fcb-04a3-4194-9150-24d25af55ca5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 05/07/25 17:32:49.36
  I0507 17:32:49.367525 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-07T17:32:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-07T17:32:29Z]] name:name2 resourceVersion:2236281 uid:5730388c-e7bc-4d9b-b54f-f9fb31aec826] num:map[num1:9223372036854775807 num2:1000000]]}
  I0507 17:32:59.877197 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4225" for this suite. @ 05/07/25 17:32:59.881
• [63.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 05/07/25 17:32:59.886
  I0507 17:32:59.886726 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 17:32:59.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:32:59.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:32:59.9
  STEP: validating api versions @ 05/07/25 17:32:59.902
  I0507 17:32:59.902178 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-9089 api-versions'
  I0507 17:32:59.938468 24 builder.go:146] stderr: ""
  I0507 17:32:59.938511 24 builder.go:147] stdout: "acme.cert-manager.io/v1\nadmissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncert-manager.io/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetallb.io/v1alpha1\nmetallb.io/v1beta1\nmetallb.io/v1beta2\nmonitoring.coreos.com/v1\nmonitoring.coreos.com/v1alpha1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\norka.macstadium.com/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.containo.us/v1alpha1\ntraefik.io/v1alpha1\nv1\n"
  I0507 17:32:59.938603 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9089" for this suite. @ 05/07/25 17:32:59.982
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 05/07/25 17:32:59.988
  I0507 17:32:59.988317 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 17:32:59.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:33:00.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:33:00.005
  STEP: Creating a ResourceQuota with best effort scope @ 05/07/25 17:33:00.007
  STEP: Ensuring ResourceQuota status is calculated @ 05/07/25 17:33:00.011
  STEP: Creating a ResourceQuota with not best effort scope @ 05/07/25 17:33:02.015
  STEP: Ensuring ResourceQuota status is calculated @ 05/07/25 17:33:02.02
  STEP: Creating a best-effort pod @ 05/07/25 17:33:04.024
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/07/25 17:33:04.048
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/07/25 17:33:06.052
  STEP: Deleting the pod @ 05/07/25 17:33:08.057
  STEP: Ensuring resource quota status released the pod usage @ 05/07/25 17:33:08.066
  STEP: Creating a not best-effort pod @ 05/07/25 17:33:10.072
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/07/25 17:33:10.082
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/07/25 17:33:12.086
  STEP: Deleting the pod @ 05/07/25 17:33:14.09
  STEP: Ensuring resource quota status released the pod usage @ 05/07/25 17:33:14.113
  I0507 17:33:16.117550 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8654" for this suite. @ 05/07/25 17:33:16.121
• [16.138 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 05/07/25 17:33:16.126
  I0507 17:33:16.126297 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 17:33:16.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:33:16.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:33:16.162
  STEP: Creating service test in namespace statefulset-2946 @ 05/07/25 17:33:16.164
  I0507 17:33:16.211710 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I0507 17:33:26.182322 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/07/25 17:33:26.187
  I0507 17:33:26.210111 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 17:33:26.210138 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0507 17:33:36.208686 24 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 17:33:36.208721 24 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/07/25 17:33:36.213
  STEP: Delete all of the StatefulSets @ 05/07/25 17:33:36.216
  STEP: Verify that StatefulSets have been deleted @ 05/07/25 17:33:36.223
  I0507 17:33:36.228275 24 statefulset.go:138] Deleting all statefulset in ns statefulset-2946
  I0507 17:33:36.244433 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2946" for this suite. @ 05/07/25 17:33:36.254
• [20.137 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 05/07/25 17:33:36.263
  I0507 17:33:36.263240 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename gc @ 05/07/25 17:33:36.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:33:36.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:33:36.284
  STEP: create the deployment @ 05/07/25 17:33:36.285
  I0507 17:33:36.290449      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/07/25 17:33:36.29
  STEP: delete the deployment @ 05/07/25 17:33:36.4
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/07/25 17:33:36.405
  STEP: Gathering metrics @ 05/07/25 17:33:36.918
  I0507 17:33:36.991678 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 17:33:36.991784 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3630" for this suite. @ 05/07/25 17:33:37.004
• [0.747 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/07/25 17:33:37.01
  I0507 17:33:37.010495 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/07/25 17:33:37.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:33:37.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:33:37.027
  STEP: fetching the /apis discovery document @ 05/07/25 17:33:37.029
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/07/25 17:33:37.03
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/07/25 17:33:37.03
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/07/25 17:33:37.03
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/07/25 17:33:37.03
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/07/25 17:33:37.03
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/07/25 17:33:37.031
  I0507 17:33:37.031349 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2628" for this suite. @ 05/07/25 17:33:37.103
• [0.099 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 05/07/25 17:33:37.109
  I0507 17:33:37.109612 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename gc @ 05/07/25 17:33:37.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:33:37.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:33:37.132
  STEP: create the rc @ 05/07/25 17:33:37.134
  I0507 17:33:37.138349      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 05/07/25 17:33:42.143
  STEP: wait for all pods to be garbage collected @ 05/07/25 17:33:42.149
  STEP: Gathering metrics @ 05/07/25 17:33:47.169
  I0507 17:33:47.226874 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 17:33:47.226997 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4173" for this suite. @ 05/07/25 17:33:47.231
• [10.129 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 05/07/25 17:33:47.238
  I0507 17:33:47.238642 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 17:33:47.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:33:47.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:33:47.257
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1175 @ 05/07/25 17:33:47.258
  STEP: changing the ExternalName service to type=ClusterIP @ 05/07/25 17:33:47.264
  I0507 17:33:47.322270 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0507 17:33:49.326212 24 resource.go:361] Creating new exec pod
  I0507 17:33:51.345699 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-1175 exec execpoddrf2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 17:33:51.421977 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.109.78.183) 80 port [tcp/http] succeeded!\n"
  I0507 17:33:51.422002 24 builder.go:147] stdout: ""
  I0507 17:33:52.346092 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-1175 exec execpoddrf2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 17:33:52.441515 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.109.78.183) 80 port [tcp/http] succeeded!\n"
  I0507 17:33:52.441539 24 builder.go:147] stdout: ""
  I0507 17:33:53.345792 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-1175 exec execpoddrf2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 17:33:53.422145 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.109.78.183) 80 port [tcp/http] succeeded!\n"
  I0507 17:33:53.422167 24 builder.go:147] stdout: ""
  I0507 17:33:54.346128 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-1175 exec execpoddrf2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 17:33:54.419299 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.109.78.183) 80 port [tcp/http] succeeded!\n"
  I0507 17:33:54.419323 24 builder.go:147] stdout: ""
  I0507 17:33:55.346259 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-1175 exec execpoddrf2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0507 17:33:55.439927 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.109.78.183) 80 port [tcp/http] succeeded!\n"
  I0507 17:33:55.439953 24 builder.go:147] stdout: "externalname-service-59b5cff5b6-4vmng"
  I0507 17:33:55.439995 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-1175 exec execpoddrf2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.78.183 80'
  I0507 17:33:55.517746 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.78.183 80\nConnection to 10.109.78.183 80 port [tcp/http] succeeded!\n"
  I0507 17:33:55.517771 24 builder.go:147] stdout: ""
  I0507 17:33:56.440769 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-1175 exec execpoddrf2z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.78.183 80'
  I0507 17:33:56.511897 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.78.183 80\nConnection to 10.109.78.183 80 port [tcp/http] succeeded!\n"
  I0507 17:33:56.511921 24 builder.go:147] stdout: "externalname-service-59b5cff5b6-4vmng"
  I0507 17:33:56.511972 24 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0507 17:33:56.558543 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1175" for this suite. @ 05/07/25 17:33:56.568
• [9.339 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/07/25 17:33:56.577
  I0507 17:33:56.577787 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:33:56.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:33:56.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:33:56.597
  STEP: Creating projection with secret that has name projected-secret-test-289da3f7-8437-4fc6-a4f9-67bb642f7f7f @ 05/07/25 17:33:56.6
  STEP: Creating a pod to test consume secrets @ 05/07/25 17:33:56.607
  STEP: Saw pod success @ 05/07/25 17:34:00.637
  I0507 17:34:00.639512 24 output.go:207] Trying to get logs from node mini-2 pod pod-projected-secrets-d07ad8ed-2e43-4020-89b6-712e11c5b69d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 17:34:00.651
  I0507 17:34:00.666466 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7264" for this suite. @ 05/07/25 17:34:00.669
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 05/07/25 17:34:00.676
  I0507 17:34:00.676398 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 17:34:00.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:34:00.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:34:00.693
  STEP: Counting existing ResourceQuota @ 05/07/25 17:34:00.694
  STEP: Creating a ResourceQuota @ 05/07/25 17:34:05.698
  STEP: Ensuring resource quota status is calculated @ 05/07/25 17:34:05.704
  I0507 17:34:07.708080 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8356" for this suite. @ 05/07/25 17:34:07.712
• [7.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 05/07/25 17:34:07.719
  I0507 17:34:07.719338 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 17:34:07.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:34:07.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:34:07.735
  STEP: Creating pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219 @ 05/07/25 17:34:07.737
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 17:34:09.754
  I0507 17:34:09.757180 24 container_probe.go:1748] Initial restart count of pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 is 0
  I0507 17:34:09.759599 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:11.763338 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:13.767657 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:15.772443 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:17.780805 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:19.784872 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:21.788173 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:23.793430 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:25.797954 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:27.802052 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:29.806825 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:29.806885 24 container_probe.go:1762] Restart count of pod container-probe-9219/liveness-3cda995b-e4db-4907-bfec-fe80510d7413 is now 1 (20.049663216s elapsed)
  I0507 17:34:31.810736 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:33.814842 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:35.818879 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:37.822657 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:39.826559 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:41.830542 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:43.834013 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:45.838269 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:47.842515 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:49.847204 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:49.847227 24 container_probe.go:1762] Restart count of pod container-probe-9219/liveness-3cda995b-e4db-4907-bfec-fe80510d7413 is now 2 (40.090017231s elapsed)
  I0507 17:34:51.851730 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:53.856377 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:55.860712 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:57.864476 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:34:59.868959 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:01.873575 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:03.878366 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:05.882829 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:07.887438 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:09.892366 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:09.892401 24 container_probe.go:1762] Restart count of pod container-probe-9219/liveness-3cda995b-e4db-4907-bfec-fe80510d7413 is now 3 (1m0.135191967s elapsed)
  I0507 17:35:11.895987 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:13.900643 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:15.905351 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:17.908812 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:19.913517 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:21.917871 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:23.922488 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:25.926888 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:27.932427 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:29.936816 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:29.936849 24 container_probe.go:1762] Restart count of pod container-probe-9219/liveness-3cda995b-e4db-4907-bfec-fe80510d7413 is now 4 (1m20.179626812s elapsed)
  I0507 17:35:31.940689 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:33.945312 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:35.949932 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:37.954273 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:39.959072 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:41.963148 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:43.967708 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:45.972342 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:47.975189 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:49.980298 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:51.983985 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:53.988297 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:55.992935 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:35:57.997141 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:00.001522 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:02.005300 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:04.010210 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:06.013853 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:08.018109 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:10.023055 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:12.026567 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:14.030253 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:16.034711 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:18.038856 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:20.044358 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:22.048041 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:24.052915 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:26.057361 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:28.062063 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:30.067390 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:32.072045 24 container_probe.go:1758] Get pod liveness-3cda995b-e4db-4907-bfec-fe80510d7413 in namespace container-probe-9219
  I0507 17:36:32.072078 24 container_probe.go:1762] Restart count of pod container-probe-9219/liveness-3cda995b-e4db-4907-bfec-fe80510d7413 is now 5 (2m22.314856042s elapsed)
  STEP: deleting the pod @ 05/07/25 17:36:32.072
  I0507 17:36:32.087542 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9219" for this suite. @ 05/07/25 17:36:32.091
• [144.381 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 05/07/25 17:36:32.1
  I0507 17:36:32.100628 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 17:36:32.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:36:32.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:36:32.122
  STEP: Creating a test namespace @ 05/07/25 17:36:32.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:36:32.136
  STEP: Creating a service in the namespace @ 05/07/25 17:36:32.139
  STEP: Deleting the namespace @ 05/07/25 17:36:32.158
  STEP: Waiting for the namespace to be removed. @ 05/07/25 17:36:32.173
  STEP: Recreating the namespace @ 05/07/25 17:36:38.176
  STEP: Verifying there is no service in the namespace @ 05/07/25 17:36:38.19
  I0507 17:36:38.193362 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2689" for this suite. @ 05/07/25 17:36:38.196
  STEP: Destroying namespace "nsdeletetest-9799" for this suite. @ 05/07/25 17:36:38.201
  I0507 17:36:38.205346 24 framework.go:370] Namespace nsdeletetest-9799 was already deleted
  STEP: Destroying namespace "nsdeletetest-2603" for this suite. @ 05/07/25 17:36:38.205
• [6.110 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 05/07/25 17:36:38.21
  I0507 17:36:38.210603 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 17:36:38.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:36:38.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:36:38.225
  STEP: Creating configMap with name configmap-test-upd-9190938a-c19b-451a-9cfd-0d78cbbb22f2 @ 05/07/25 17:36:38.297
  STEP: Creating the pod @ 05/07/25 17:36:38.301
  STEP: Updating configmap configmap-test-upd-9190938a-c19b-451a-9cfd-0d78cbbb22f2 @ 05/07/25 17:36:42.336
  STEP: waiting to observe update in volume @ 05/07/25 17:36:42.341
  I0507 17:37:50.578865 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6378" for this suite. @ 05/07/25 17:37:50.582
• [72.377 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 05/07/25 17:37:50.588
  I0507 17:37:50.588091 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pv @ 05/07/25 17:37:50.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:37:50.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:37:50.623
  STEP: Creating initial PV and PVC @ 05/07/25 17:37:50.624
  I0507 17:37:50.624908 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9773" @ 05/07/25 17:37:50.64
  STEP: Listing PVCs in namespace "pv-9773" @ 05/07/25 17:37:50.644
  STEP: Patching the PV "pv-9773-gpksg" @ 05/07/25 17:37:50.648
  STEP: Patching the PVC "pvc-rr49b" @ 05/07/25 17:37:50.663
  STEP: Getting PV "pv-9773-gpksg" @ 05/07/25 17:37:50.673
  STEP: Getting PVC "pvc-rr49b" @ 05/07/25 17:37:50.679
  STEP: Deleting PVC "pvc-rr49b" @ 05/07/25 17:37:50.685
  STEP: Confirm deletion of PVC "pvc-rr49b" @ 05/07/25 17:37:50.692
  STEP: Deleting PV "pv-9773-gpksg" @ 05/07/25 17:37:52.701
  STEP: Confirm deletion of PV "pv-9773-gpksg" @ 05/07/25 17:37:52.706
  STEP: Recreating another PV & PVC @ 05/07/25 17:37:54.714
  I0507 17:37:54.714340 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-9773-4l5gc" @ 05/07/25 17:37:54.723
  STEP: Updating the PVC "pvc-khjvs" @ 05/07/25 17:37:54.751
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-khjvs=updated" @ 05/07/25 17:37:54.758
  STEP: Deleting PVC "pvc-khjvs" via DeleteCollection @ 05/07/25 17:37:54.76
  STEP: Confirm deletion of PVC "pvc-khjvs" @ 05/07/25 17:37:54.787
  STEP: Deleting PV "pv-9773-4l5gc" via DeleteCollection @ 05/07/25 17:37:56.795
  STEP: Confirm deletion of PV "pv-9773-4l5gc" @ 05/07/25 17:37:56.803
  I0507 17:37:58.812862 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0507 17:37:58.812895 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-khjvs"
  I0507 17:37:58.815366 24 pv.go:193] Deleting PersistentVolume "pv-9773-4l5gc"
  I0507 17:37:58.817609 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9773" for this suite. @ 05/07/25 17:37:58.821
• [8.239 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 05/07/25 17:37:58.827
  I0507 17:37:58.827577 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:37:58.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:37:58.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:37:58.841
  STEP: Creating the pod @ 05/07/25 17:37:58.842
  I0507 17:38:01.404400 24 pod_client.go:173] Successfully updated pod "annotationupdateeb35f16d-755c-4c71-acd1-37600d870f3b"
  I0507 17:38:03.457969 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3192" for this suite. @ 05/07/25 17:38:03.461
• [4.640 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 05/07/25 17:38:03.467
  I0507 17:38:03.467808 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:38:03.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:38:03.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:38:03.484
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:38:03.486
  STEP: Saw pod success @ 05/07/25 17:38:07.513
  I0507 17:38:07.515989 24 output.go:207] Trying to get logs from node mini-1 pod downwardapi-volume-cdfbc7ea-7830-4c0c-807f-5a0601af73ac container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:38:07.527
  I0507 17:38:07.548056 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9844" for this suite. @ 05/07/25 17:38:07.552
• [4.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 05/07/25 17:38:07.559
  I0507 17:38:07.559249 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 17:38:07.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:38:07.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:38:07.571
  STEP: Creating configMap that has name configmap-test-emptyKey-ddc2e19f-19a7-414f-99d5-c79e7050b345 @ 05/07/25 17:38:07.573
  I0507 17:38:07.574490 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7807" for this suite. @ 05/07/25 17:38:07.653
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 05/07/25 17:38:07.66
  I0507 17:38:07.660447 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 17:38:07.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:38:07.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:38:07.678
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/07/25 17:38:07.68
  I0507 17:38:07.680250 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/07/25 17:38:15.116
  I0507 17:38:15.116770 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  I0507 17:38:17.766133 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  I0507 17:38:26.401851 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-82" for this suite. @ 05/07/25 17:38:27.419
• [19.770 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 05/07/25 17:38:27.43
  I0507 17:38:27.430134 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 17:38:27.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:38:27.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:38:27.449
  STEP: Creating service test in namespace statefulset-887 @ 05/07/25 17:38:27.452
  STEP: Creating stateful set ss in namespace statefulset-887 @ 05/07/25 17:38:27.46
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-887 @ 05/07/25 17:38:27.469
  I0507 17:38:27.473708 24 wait.go:44] Found 0 stateful pods, waiting for 1
  I0507 17:38:37.474320 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/07/25 17:38:37.474
  I0507 17:38:37.477420 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-887 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 17:38:37.556754 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 17:38:37.556787 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 17:38:37.556796 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 17:38:37.560382 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0507 17:38:47.562264 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0507 17:38:47.562286 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0507 17:38:47.580464 24 resource.go:168] POD   NODE    PHASE    GRACE  CONDITIONS
  I0507 17:38:47.580505 24 resource.go:175] ss-0  mini-2  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:29 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:27 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:27 +0000 UTC  }]
  I0507 17:38:47.580512 24 resource.go:175] ss-2          Pending         []
  I0507 17:38:47.580516 24 resource.go:178] 
  I0507 17:38:47.580535 24 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 2
  I0507 17:38:48.584893 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.991869967s
  I0507 17:38:49.588244 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.988225779s
  I0507 17:38:50.592872 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.984165697s
  I0507 17:38:51.597567 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.979444892s
  I0507 17:38:52.601615 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.975607661s
  I0507 17:38:53.605966 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.971089926s
  I0507 17:38:54.610516 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.966780579s
  I0507 17:38:55.615517 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.961630465s
  I0507 17:38:56.619689 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 957.029155ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-887 @ 05/07/25 17:38:57.619
  I0507 17:38:57.624104 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-887 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 17:38:57.700579 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 17:38:57.700603 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 17:38:57.700611 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 17:38:57.700639 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-887 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 17:38:57.777903 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0507 17:38:57.777927 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 17:38:57.777936 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 17:38:57.777961 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-887 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 17:38:57.858589 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0507 17:38:57.858613 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 17:38:57.858621 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 17:38:57.862044 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0507 17:39:07.863417 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 17:39:07.863452 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0507 17:39:07.863458 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/07/25 17:39:07.863
  I0507 17:39:07.866356 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-887 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 17:39:07.939119 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 17:39:07.939143 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 17:39:07.939153 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 17:39:07.939185 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-887 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 17:39:08.034452 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 17:39:08.034477 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 17:39:08.034485 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 17:39:08.034508 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-887 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 17:39:08.137457 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 17:39:08.137481 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 17:39:08.137489 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 17:39:08.137496 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0507 17:39:08.140899 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0507 17:39:18.145024 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0507 17:39:18.145056 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0507 17:39:18.145062 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0507 17:39:18.160405 24 resource.go:168] POD   NODE    PHASE    GRACE  CONDITIONS
  I0507 17:39:18.160453 24 resource.go:175] ss-0  mini-2  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:29 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:27 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:27 +0000 UTC  }]
  I0507 17:39:18.160482 24 resource.go:175] ss-1  mini-2  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:49 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:47 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:47 +0000 UTC  }]
  I0507 17:39:18.160505 24 resource.go:175] ss-2  mini-1  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:49 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:47 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:47 +0000 UTC  }]
  I0507 17:39:18.160511 24 resource.go:178] 
  I0507 17:39:18.160517 24 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  I0507 17:39:19.164619 24 resource.go:168] POD   NODE    PHASE      GRACE  CONDITIONS
  I0507 17:39:19.164665 24 resource.go:175] ss-0  mini-2  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:18 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:27 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:08 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:08 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:27 +0000 UTC  }]
  I0507 17:39:19.164720 24 resource.go:175] ss-2  mini-1  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:18 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:47 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:08 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:39:08 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-07 17:38:47 +0000 UTC  }]
  I0507 17:39:19.164728 24 resource.go:178] 
  I0507 17:39:19.164733 24 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 2
  I0507 17:39:20.168772 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.988187932s
  I0507 17:39:21.172621 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.984129786s
  I0507 17:39:22.176538 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.980362373s
  I0507 17:39:23.179571 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.976371926s
  I0507 17:39:24.184468 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.972670861s
  I0507 17:39:25.188906 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.96845265s
  I0507 17:39:26.192791 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.963997411s
  I0507 17:39:27.196469 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 960.187199ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-887 @ 05/07/25 17:39:28.196
  I0507 17:39:28.200604 24 rest.go:153] Scaling statefulset ss to 0
  I0507 17:39:28.206437 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0507 17:39:28.208795 24 statefulset.go:138] Deleting all statefulset in ns statefulset-887
  I0507 17:39:28.211477 24 rest.go:153] Scaling statefulset ss to 0
  I0507 17:39:28.216396 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0507 17:39:28.218669 24 rest.go:91] Deleting statefulset ss
  I0507 17:39:28.236668 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-887" for this suite. @ 05/07/25 17:39:28.24
• [60.816 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 05/07/25 17:39:28.246
  I0507 17:39:28.246019 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:39:28.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:39:28.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:39:28.259
  STEP: Setting up server cert @ 05/07/25 17:39:28.278
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:39:28.998
  STEP: Deploying the webhook pod @ 05/07/25 17:39:29.003
  STEP: Wait for the deployment to be ready @ 05/07/25 17:39:29.018
  I0507 17:39:29.023586 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/07/25 17:39:31.035
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:39:31.051
  I0507 17:39:32.051447 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/07/25 17:39:32.055
  STEP: create a namespace for the webhook @ 05/07/25 17:39:32.066
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/07/25 17:39:32.081
  I0507 17:39:32.138362 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3419" for this suite. @ 05/07/25 17:39:32.142
  STEP: Destroying namespace "webhook-markers-754" for this suite. @ 05/07/25 17:39:32.156
  STEP: Destroying namespace "fail-closed-namespace-9540" for this suite. @ 05/07/25 17:39:32.164
• [3.923 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 05/07/25 17:39:32.169
  I0507 17:39:32.169254 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 17:39:32.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:39:32.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:39:32.184
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 05/07/25 17:39:32.186
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 05/07/25 17:39:32.191
  STEP: Ensure that the job reaches completions @ 05/07/25 17:39:36.201
  STEP: Verifying that the job status to ensure correct final state @ 05/07/25 17:39:36.206
  I0507 17:39:36.208259 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-709" for this suite. @ 05/07/25 17:39:36.211
• [4.047 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/07/25 17:39:36.216
  I0507 17:39:36.216408 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename watch @ 05/07/25 17:39:36.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:39:36.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:39:36.232
  STEP: creating a watch on configmaps with label A @ 05/07/25 17:39:36.234
  STEP: creating a watch on configmaps with label B @ 05/07/25 17:39:36.235
  STEP: creating a watch on configmaps with label A or B @ 05/07/25 17:39:36.236
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/07/25 17:39:36.237
  I0507 17:39:36.241676 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9221  400b0025-88d8-4a48-8f5b-86b9781c8884 2238471 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 17:39:36.241750 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9221  400b0025-88d8-4a48-8f5b-86b9781c8884 2238471 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/07/25 17:39:36.241
  I0507 17:39:36.248409 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9221  400b0025-88d8-4a48-8f5b-86b9781c8884 2238472 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 17:39:36.248494 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9221  400b0025-88d8-4a48-8f5b-86b9781c8884 2238472 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/07/25 17:39:36.248
  I0507 17:39:36.255334 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9221  400b0025-88d8-4a48-8f5b-86b9781c8884 2238473 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 17:39:36.255389 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9221  400b0025-88d8-4a48-8f5b-86b9781c8884 2238473 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/07/25 17:39:36.255
  I0507 17:39:36.260028 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9221  400b0025-88d8-4a48-8f5b-86b9781c8884 2238474 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 17:39:36.260090 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9221  400b0025-88d8-4a48-8f5b-86b9781c8884 2238474 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/07/25 17:39:36.26
  I0507 17:39:36.263967 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9221  91d06293-51ed-4978-bf8a-dd9e96691e59 2238475 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 17:39:36.264043 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9221  91d06293-51ed-4978-bf8a-dd9e96691e59 2238475 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/07/25 17:39:46.268
  I0507 17:39:46.276403 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9221  91d06293-51ed-4978-bf8a-dd9e96691e59 2238541 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 17:39:46.276470 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9221  91d06293-51ed-4978-bf8a-dd9e96691e59 2238541 0 2025-05-07 17:39:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-07 17:39:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 17:39:56.280705 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9221" for this suite. @ 05/07/25 17:39:56.286
• [20.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 05/07/25 17:39:56.292
  I0507 17:39:56.292966 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 17:39:56.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:39:56.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:39:56.311
  STEP: creating the pod @ 05/07/25 17:39:56.314
  I0507 17:39:56.314146 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3324 create -f -'
  I0507 17:39:56.391142 24 builder.go:146] stderr: ""
  I0507 17:39:56.391167 24 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/07/25 17:39:58.401
  I0507 17:39:58.401879 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3324 label pods pause testing-label=testing-label-value'
  I0507 17:39:58.446951 24 builder.go:146] stderr: ""
  I0507 17:39:58.446994 24 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/07/25 17:39:58.447
  I0507 17:39:58.447049 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3324 get pod pause -L testing-label'
  I0507 17:39:58.483912 24 builder.go:146] stderr: ""
  I0507 17:39:58.483962 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/07/25 17:39:58.483
  I0507 17:39:58.484018 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3324 label pods pause testing-label-'
  I0507 17:39:58.527427 24 builder.go:146] stderr: ""
  I0507 17:39:58.527450 24 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/07/25 17:39:58.527
  I0507 17:39:58.527491 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3324 get pod pause -L testing-label'
  I0507 17:39:58.562191 24 builder.go:146] stderr: ""
  I0507 17:39:58.562213 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/07/25 17:39:58.562
  I0507 17:39:58.562287 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3324 delete --grace-period=0 --force -f -'
  I0507 17:39:58.612486 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 17:39:58.612508 24 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0507 17:39:58.612534 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3324 get rc,svc -l name=pause --no-headers'
  I0507 17:39:58.656271 24 builder.go:146] stderr: "No resources found in kubectl-3324 namespace.\n"
  I0507 17:39:58.656300 24 builder.go:147] stdout: ""
  I0507 17:39:58.656326 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-3324 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0507 17:39:58.692689 24 builder.go:146] stderr: ""
  I0507 17:39:58.692715 24 builder.go:147] stdout: ""
  I0507 17:39:58.692784 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3324" for this suite. @ 05/07/25 17:39:58.697
• [2.421 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 05/07/25 17:39:58.713
  I0507 17:39:58.713708 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 17:39:58.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:39:58.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:39:58.73
  STEP: creating a ReplicationController @ 05/07/25 17:39:58.736
  STEP: waiting for RC to be added @ 05/07/25 17:39:58.742
  STEP: waiting for available Replicas @ 05/07/25 17:39:58.743
  STEP: patching ReplicationController @ 05/07/25 17:40:00.643
  STEP: waiting for RC to be modified @ 05/07/25 17:40:00.652
  STEP: patching ReplicationController status @ 05/07/25 17:40:00.652
  STEP: waiting for RC to be modified @ 05/07/25 17:40:00.659
  STEP: waiting for available Replicas @ 05/07/25 17:40:00.659
  STEP: fetching ReplicationController status @ 05/07/25 17:40:00.663
  STEP: patching ReplicationController scale @ 05/07/25 17:40:00.666
  STEP: waiting for RC to be modified @ 05/07/25 17:40:00.674
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/07/25 17:40:00.674
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/07/25 17:40:02.338
  STEP: updating ReplicationController status @ 05/07/25 17:40:02.342
  STEP: waiting for RC to be modified @ 05/07/25 17:40:02.349
  STEP: listing all ReplicationControllers @ 05/07/25 17:40:02.349
  STEP: checking that ReplicationController has expected values @ 05/07/25 17:40:02.354
  STEP: deleting ReplicationControllers by collection @ 05/07/25 17:40:02.354
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/07/25 17:40:02.364
  I0507 17:40:02.483897 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0507 17:40:02.483950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-1688" for this suite. @ 05/07/25 17:40:02.488
• [3.782 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/07/25 17:40:02.496
  I0507 17:40:02.496193 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 17:40:02.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:40:02.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:40:02.521
  STEP: Creating simple DaemonSet "daemon-set" @ 05/07/25 17:40:02.599
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 17:40:02.606
  I0507 17:40:02.690685 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:02.690708 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:02.690719 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:02.694559 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 17:40:02.694572 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  E0507 17:40:03.484402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:40:03.612320 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:03.612354 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:03.612381 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:03.616119 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 17:40:03.616130 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  E0507 17:40:04.485003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:40:04.611655 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:04.611693 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:04.611719 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:04.616103 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 17:40:04.616116 24 fixtures.go:131] Node mini-2 is running 0 daemon pod, expected 1
  E0507 17:40:05.485055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:40:05.611975 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:05.612008 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:05.612032 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:05.616527 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 17:40:05.616541 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/07/25 17:40:05.619
  I0507 17:40:05.713100 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:05.713135 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:05.713148 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:05.717081 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 17:40:05.717093 24 fixtures.go:131] Node mini-2 is running 0 daemon pod, expected 1
  E0507 17:40:06.485945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:40:06.638183 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:06.638218 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:06.638242 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:06.642280 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 17:40:06.642310 24 fixtures.go:131] Node mini-2 is running 0 daemon pod, expected 1
  E0507 17:40:07.486052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:40:07.638375 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:07.638404 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:07.638418 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:07.641833 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 17:40:07.641853 24 fixtures.go:131] Node mini-2 is running 0 daemon pod, expected 1
  E0507 17:40:08.486669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:40:08.639133 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:08.639169 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:08.639194 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:08.643479 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 17:40:08.643492 24 fixtures.go:131] Node mini-2 is running 0 daemon pod, expected 1
  E0507 17:40:09.487297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:40:09.638197 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:09.638221 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:09.638237 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 17:40:09.642254 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 17:40:09.642268 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 17:40:09.645
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7848, will wait for the garbage collector to delete the pods @ 05/07/25 17:40:09.645
  I0507 17:40:09.708263 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.988514ms
  I0507 17:40:09.808762 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.495547ms
  E0507 17:40:10.488330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:11.488391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:40:11.713768 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 17:40:11.713786 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 17:40:11.717202 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2238784"},"items":null}

  I0507 17:40:11.720112 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2238784"},"items":null}

  I0507 17:40:11.730676 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7848" for this suite. @ 05/07/25 17:40:11.734
• [9.245 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 05/07/25 17:40:11.741
  I0507 17:40:11.741389 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:40:11.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:40:11.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:40:11.757
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:40:11.76
  E0507 17:40:12.489339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:13.489506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:14.489905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:15.490055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:40:15.785
  I0507 17:40:15.788900 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-ab5e77a3-ed83-4044-a2f9-71edce596430 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:40:15.802
  I0507 17:40:15.823736 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1289" for this suite. @ 05/07/25 17:40:15.828
• [4.095 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 05/07/25 17:40:15.836
  I0507 17:40:15.836088 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 17:40:15.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:40:15.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:40:15.852
  STEP: Creating service test in namespace statefulset-4171 @ 05/07/25 17:40:15.854
  STEP: Creating a new StatefulSet @ 05/07/25 17:40:15.859
  I0507 17:40:15.872137 24 wait.go:44] Found 0 stateful pods, waiting for 3
  E0507 17:40:16.490929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:17.491095      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:18.491473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:19.491628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:20.492429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:21.492594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:22.492710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:23.492887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:24.493071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:25.493445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:40:25.873173 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 17:40:25.873190 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0507 17:40:25.873209 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/07/25 17:40:25.883
  I0507 17:40:25.893838 24 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 05/07/25 17:40:25.893
  E0507 17:40:26.494091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:27.494180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:28.494371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:29.494534      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:30.494686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:31.494852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:32.495060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:33.495232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:34.495413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:35.495571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/07/25 17:40:35.902
  STEP: Performing a canary update @ 05/07/25 17:40:35.902
  I0507 17:40:35.913487 24 statefulset.go:2542] Updating stateful set ss2
  I0507 17:40:35.920762 24 wait.go:74] Waiting for Pod statefulset-4171/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0507 17:40:36.496497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:37.496656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:38.496810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:39.496951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:40.497102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:41.497250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:42.497437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:43.497607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:44.498503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:45.499465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/07/25 17:40:45.922
  I0507 17:40:45.978577 24 wait.go:44] Found 2 stateful pods, waiting for 3
  E0507 17:40:46.500206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:47.500363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:48.500519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:49.500813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:50.501447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:51.501620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:52.501753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:53.501917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:54.502070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:55.502481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:40:55.966563 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 17:40:55.966580 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0507 17:40:55.966600 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/07/25 17:40:55.972
  I0507 17:40:55.980155 24 statefulset.go:2542] Updating stateful set ss2
  I0507 17:40:55.987362 24 wait.go:74] Waiting for Pod statefulset-4171/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0507 17:40:56.502941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:57.503443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:58.503546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:40:59.503727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:00.503859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:01.503984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:02.504124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:03.504266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:04.504433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:05.504541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:41:05.996314 24 statefulset.go:2542] Updating stateful set ss2
  I0507 17:41:06.002988 24 wait.go:56] Waiting for StatefulSet statefulset-4171/ss2 to complete update
  I0507 17:41:06.003006 24 wait.go:63] Waiting for Pod statefulset-4171/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0507 17:41:06.505618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:07.505719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:08.505852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:09.505993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:10.506486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:11.506628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:12.506750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:13.506920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:14.507037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:15.507172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:41:16.003546 24 statefulset.go:138] Deleting all statefulset in ns statefulset-4171
  I0507 17:41:16.006136 24 rest.go:153] Scaling statefulset ss2 to 0
  E0507 17:41:16.508017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:17.508158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:18.508315      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:19.508504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:20.508638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:21.509481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:22.509686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:23.509823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:24.509990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:25.510119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:41:26.019253 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0507 17:41:26.021849 24 rest.go:91] Deleting statefulset ss2
  I0507 17:41:26.032523 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4171" for this suite. @ 05/07/25 17:41:26.036
• [70.209 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 05/07/25 17:41:26.045
  I0507 17:41:26.045138 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 17:41:26.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:41:26.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:41:26.061
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/07/25 17:41:26.064
  E0507 17:41:26.510707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:27.510767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:28.510988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:29.511136      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:41:30.094
  I0507 17:41:30.097060 24 output.go:207] Trying to get logs from node mini-2 pod pod-67a30f71-1d36-4536-bd22-3a000fdebd3e container test-container: <nil>
  STEP: delete the pod @ 05/07/25 17:41:30.101
  I0507 17:41:30.113236 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2542" for this suite. @ 05/07/25 17:41:30.116
• [4.076 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/07/25 17:41:30.121
  I0507 17:41:30.121616 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename deployment @ 05/07/25 17:41:30.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:41:30.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:41:30.134
  STEP: creating a Deployment @ 05/07/25 17:41:30.138
  STEP: waiting for Deployment to be created @ 05/07/25 17:41:30.142
  STEP: waiting for all Replicas to be Ready @ 05/07/25 17:41:30.144
  I0507 17:41:30.144984 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 17:41:30.145011 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 17:41:30.168942 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 17:41:30.168955 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 17:41:30.198568 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 17:41:30.198581 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 17:41:30.218333 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0507 17:41:30.218344 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0507 17:41:30.511723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:41:31.468413 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0507 17:41:31.468433 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0507 17:41:31.512504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:41:31.780608 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/07/25 17:41:31.78
  I0507 17:41:31.787569 24 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/07/25 17:41:31.787
  I0507 17:41:31.788700 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0
  I0507 17:41:31.788715 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0
  I0507 17:41:31.788727 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0
  I0507 17:41:31.788734 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0
  I0507 17:41:31.788741 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0
  I0507 17:41:31.788747 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0
  I0507 17:41:31.788794 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0
  I0507 17:41:31.788806 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 0
  I0507 17:41:31.788815 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  I0507 17:41:31.788826 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  I0507 17:41:31.788839 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:31.788850 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:31.788886 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:31.788894 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:31.798109 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:31.798122 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:31.831215 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:31.831226 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:31.842669 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  I0507 17:41:31.842682 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  I0507 17:41:31.855935 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  I0507 17:41:31.855945 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  E0507 17:41:32.513510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:33.513669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:41:33.796619 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:33.796634 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:33.822626 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  STEP: listing Deployments @ 05/07/25 17:41:33.822
  I0507 17:41:33.825049 24 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/07/25 17:41:33.825
  I0507 17:41:33.833068 24 deployment.go:360] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/07/25 17:41:33.833
  I0507 17:41:33.838832 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 17:41:33.844409 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 17:41:33.882272 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 17:41:33.903883 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 17:41:33.910819 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0507 17:41:34.514471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:41:35.487886 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 17:41:35.505046 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0507 17:41:35.515241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:41:35.516005 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 17:41:35.540072 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0507 17:41:35.564071 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0507 17:41:36.516106      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:41:36.798829 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/07/25 17:41:36.831
  STEP: fetching the DeploymentStatus @ 05/07/25 17:41:36.84
  I0507 17:41:36.846557 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  I0507 17:41:36.846587 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  I0507 17:41:36.846593 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  I0507 17:41:36.846699 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  I0507 17:41:36.846712 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 1
  I0507 17:41:36.846808 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:36.846821 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:36.846829 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 3
  I0507 17:41:36.846873 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 3
  I0507 17:41:36.846890 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 2
  I0507 17:41:36.846911 24 deployment.go:448] observed Deployment test-deployment in namespace deployment-3327 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/07/25 17:41:36.846
  I0507 17:41:36.856770 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.856786 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.856796 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.856882 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.856894 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.856904 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.856960 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.856970 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.856980 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.857034 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.857050 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.857058 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.857111 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.857123 24 deployment.go:474] observed event type MODIFIED
  I0507 17:41:36.859703 24 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0507 17:41:36.862489 24 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3327",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "876a115f-a0ae-4392-ba84-d481c3343545",
      ResourceVersion: (string) (len=7) "2239517",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "5098b725-6660-4028-851d-15b9ccdf8cd6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 35 30 39 38  62 37 32 35 2d 36 36 36  |":\"5098b725-666|
              00000130  30 2d 34 30 32 38 2d 38  35 31 64 2d 31 35 62 39  |0-4028-851d-15b9|
              00000140  63 63 64 66 38 63 64 36  5c 22 7d 22 3a 7b 7d 7d  |ccdf8cd6\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0507 17:41:36.865993 24 deployment.go:656] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3327",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c34fba39-4c3a-4299-b7f6-d25071aa9cc3",
      ResourceVersion: (string) (len=7) "2239617",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236493,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "5098b725-6660-4028-851d-15b9ccdf8cd6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 35 30 39 38  62 37 32 35 2d 36 36 36  |":\"5098b725-666|
              00000130  30 2d 34 30 32 38 2d 38  35 31 64 2d 31 35 62 39  |0-4028-851d-15b9|
              00000140  63 63 64 66 38 63 64 36  5c 22 7d 22 3a 7b 7d 7d  |ccdf8cd6\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0507 17:41:36.878584 24 deployment.go:668] pod: "test-deployment-79899bcfcc-8x4bp":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-8x4bp",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-3327",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0daeee23-1fdc-4de2-a2d0-d3311ec2fe39",
      ResourceVersion: (string) (len=7) "2239616",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9c2b30a8552750a7ec6bf946d440b7b50e0a036bfec5a1c6f44a09f740599acc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.135/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.135/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "c34fba39-4c3a-4299-b7f6-d25071aa9cc3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 33 34 66 62 61 33 39  |uid\":\"c34fba39|
              000000a0  2d 34 63 33 61 2d 34 32  39 39 2d 62 37 66 36 2d  |-4c3a-4299-b7f6-|
              000000b0  64 32 35 30 37 31 61 61  39 63 63 33 5c 22 7d 22  |d25071aa9cc3\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  38 2e 31 33 35 5c 22 7d  |2.168.158.135\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-scbhs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-scbhs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) (len=15) "192.168.158.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.158.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882236496,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1446ddcf9434fc20225dc850fb0c66f06d5bd223a6c012f8302152126dec76fd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-scbhs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0507 17:41:36.880418 24 deployment.go:668] pod: "test-deployment-79899bcfcc-tw8lf":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-tw8lf",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-3327",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd2ddc49-fd1c-4b89-b174-340fe8582a2c",
      ResourceVersion: (string) (len=7) "2239633",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236493,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "30c49eb22b85feea28781efed2375aabfa955d87bb274c9aa444e140f9fa5b6c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.240/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.240/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "c34fba39-4c3a-4299-b7f6-d25071aa9cc3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 33 34 66 62 61 33 39  |uid\":\"c34fba39|
              000000a0  2d 34 63 33 61 2d 34 32  39 39 2d 62 37 66 36 2d  |-4c3a-4299-b7f6-|
              000000b0  64 32 35 30 37 31 61 61  39 63 63 33 5c 22 7d 22  |d25071aa9cc3\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236494,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 32 34 30 5c 22 7d  |2.168.125.240\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7bmc5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7bmc5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) (len=15) "192.168.125.240",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.125.240"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236493,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882236495,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://49355abe9d86cf21aa890283b13ade2530d0e261f64d8eefdf3f9ad1eaee51b4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7bmc5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0507 17:41:36.881866 24 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3327",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "084444e1-5f48-4c1e-ac24-35041f9b2944",
      ResourceVersion: (string) (len=7) "2239625",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236491,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "5098b725-6660-4028-851d-15b9ccdf8cd6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 35 30 39 38  62 37 32 35 2d 36 36 36  |":\"5098b725-666|
              00000130  30 2d 34 30 32 38 2d 38  35 31 64 2d 31 35 62 39  |0-4028-851d-15b9|
              00000140  63 63 64 66 38 63 64 36  5c 22 7d 22 3a 7b 7d 7d  |ccdf8cd6\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0507 17:41:36.885469 24 deployment.go:668] pod: "test-deployment-f78d658f9-2jv4c":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-2jv4c",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-3327",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ddecb634-9a15-432f-b0b6-780ba59b94d5",
      ResourceVersion: (string) (len=7) "2239592",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236493,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "28dc50d2f35160c976a12044be5bcc7e25207cd4065f06ff273c73cd46a2fee6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.239/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.239/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "084444e1-5f48-4c1e-ac24-35041f9b2944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 38 34 34 34 34 65 31  |uid\":\"084444e1|
              000000a0  2d 35 66 34 38 2d 34 63  31 65 2d 61 63 32 34 2d  |-5f48-4c1e-ac24-|
              000000b0  33 35 30 34 31 66 39 62  32 39 34 34 5c 22 7d 22  |35041f9b2944\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236494,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 32 33 39 5c 22 7d  |2.168.125.239\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bsg9w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bsg9w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) (len=15) "192.168.125.239",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.125.239"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236493,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882236495,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://9145f25d80be029181a185435214f6bbc578dd1bb23e43ab8083994ac26d4a6b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bsg9w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0507 17:41:36.886922 24 deployment.go:668] pod: "test-deployment-f78d658f9-fvqzf":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-fvqzf",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-3327",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5689e56-cb9e-4129-90de-00ff56641915",
      ResourceVersion: (string) (len=7) "2239621",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236491,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2e92714118fbbd18a57325a7ab004a329454e3706616106d917f2e56bd395968",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.134/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.134/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "084444e1-5f48-4c1e-ac24-35041f9b2944",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236491,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 38 34 34 34 34 65 31  |uid\":\"084444e1|
              000000a0  2d 35 66 34 38 2d 34 63  31 65 2d 61 63 32 34 2d  |-5f48-4c1e-ac24-|
              000000b0  33 35 30 34 31 66 39 62  32 39 34 34 5c 22 7d 22  |35041f9b2944\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236492,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  38 2e 31 33 34 5c 22 7d  |2.168.158.134\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qmr28",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qmr28",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236491,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236491,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) (len=15) "192.168.158.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.158.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236491,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882236492,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://9ed4d799b1a93eae4c24b3221e5c9d31ca3eb207004e01449b490af09b698465",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qmr28",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0507 17:41:36.888230 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3327" for this suite. @ 05/07/25 17:41:36.891
• [6.776 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 05/07/25 17:41:36.897
  I0507 17:41:36.897533 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename cronjob @ 05/07/25 17:41:36.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:41:36.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:41:36.911
  STEP: Creating a ReplaceConcurrent cronjob @ 05/07/25 17:41:36.913
  STEP: Ensuring a job is scheduled @ 05/07/25 17:41:36.918
  E0507 17:41:37.516432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:38.517467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:39.518092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:40.518260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:41.519213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:42.519362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:43.519766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:44.519936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:45.520736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:46.520914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:47.521426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:48.521548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:49.522462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:50.523432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:51.524188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:52.524351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:53.524691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:54.524856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:55.524977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:56.525134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:57.525194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:58.525388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:41:59.526197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:00.526424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/07/25 17:42:00.923
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/07/25 17:42:00.927
  STEP: Ensuring the job is replaced with a new one @ 05/07/25 17:42:00.931
  E0507 17:42:01.527420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:02.527606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:03.528218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:04.528355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:05.528382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:06.528544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:07.528630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:08.528786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:09.529355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:10.530453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:11.530661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:12.531451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:13.532485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:14.532657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:15.533164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:16.533341      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:17.533672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:18.533799      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:19.534349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:20.534372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:21.534908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:22.535078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:23.535924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:24.536481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:25.536730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:26.537372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:27.538233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:28.538444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:29.539348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:30.539406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:31.539415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:32.540462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:33.540979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:34.541057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:35.541417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:36.541601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:37.541683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:38.541853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:39.542830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:40.543468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:41.544254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:42.544531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:43.544863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:44.545027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:45.545847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:46.546016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:47.546364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:48.546484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:49.547362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:50.547435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:51.548426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:52.548627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:53.549409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:54.549588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:55.550395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:56.551416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:57.551550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:58.552475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:42:59.553398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:00.554463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 05/07/25 17:43:00.935
  I0507 17:43:00.943124 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8264" for this suite. @ 05/07/25 17:43:00.946
• [84.057 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 05/07/25 17:43:00.957
  I0507 17:43:00.957142 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/07/25 17:43:00.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:00.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:00.977
  STEP: creating a policy with variables @ 05/07/25 17:43:00.984
  STEP: waiting until the marker is denied @ 05/07/25 17:43:01.003
  E0507 17:43:01.554976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 05/07/25 17:43:02.01
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/07/25 17:43:02.023
  I0507 17:43:02.053027 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4689" for this suite. @ 05/07/25 17:43:02.056
• [1.123 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 05/07/25 17:43:02.08
  I0507 17:43:02.080388 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 17:43:02.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:02.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:02.108
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 05/07/25 17:43:02.11
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 05/07/25 17:43:02.118
  E0507 17:43:02.555423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:03.555560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:04.555881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:05.556051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 05/07/25 17:43:06.128
  STEP: Verifying that the only appropriately index succeeded @ 05/07/25 17:43:06.136
  I0507 17:43:06.140026 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5233" for this suite. @ 05/07/25 17:43:06.145
• [4.072 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 05/07/25 17:43:06.152
  I0507 17:43:06.152903 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 17:43:06.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:06.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:06.17
  E0507 17:43:06.556796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:07.556934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:43:08.198853 24 delete.go:62] Deleting pod "var-expansion-1519efad-720b-46ab-8f15-a53f7f44450b" in namespace "var-expansion-9469"
  I0507 17:43:08.211868 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-1519efad-720b-46ab-8f15-a53f7f44450b" to be fully deleted
  E0507 17:43:08.557978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:09.558102      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:10.558194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:11.558361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:43:12.224496 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9469" for this suite. @ 05/07/25 17:43:12.228
• [6.083 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/07/25 17:43:12.236
  I0507 17:43:12.236085 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename init-container @ 05/07/25 17:43:12.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:12.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:12.253
  STEP: creating the pod @ 05/07/25 17:43:12.256
  I0507 17:43:12.256410 24 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0507 17:43:12.559139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:13.559476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:14.559636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:15.559826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:43:15.619510 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6668" for this suite. @ 05/07/25 17:43:15.625
• [3.397 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/07/25 17:43:15.633
  I0507 17:43:15.633378 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pods @ 05/07/25 17:43:15.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:15.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:15.651
  E0507 17:43:16.560613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:17.560767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:18.561622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:19.561787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:20.562042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:21.562880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:43:21.726
  I0507 17:43:21.729451 24 output.go:207] Trying to get logs from node mini-2 pod client-envvars-cd1121ad-0be6-4a19-a0ab-e6a3fc21f052 container env3cont: <nil>
  STEP: delete the pod @ 05/07/25 17:43:21.74
  I0507 17:43:21.756908 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3784" for this suite. @ 05/07/25 17:43:21.76
• [6.134 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:466
  STEP: Creating a kubernetes client @ 05/07/25 17:43:21.767
  I0507 17:43:21.767510 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sched-pred @ 05/07/25 17:43:21.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:21.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:21.784
  I0507 17:43:21.786234 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0507 17:43:21.866369 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0507 17:43:21.869921 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node mini-1 before test
  I0507 17:43:21.874020 24 predicates.go:956] calico-node-ptbd6 from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.874032 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0507 17:43:21.874038 24 predicates.go:956] kube-proxy-xrhlg from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.874042 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0507 17:43:21.874046 24 predicates.go:956] helm-charts-fluent-bit-ss6bs from logging started at 2025-04-29 11:28:41 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.874051 24 predicates.go:958] 	Container fluent-bit ready: true, restart count 0
  I0507 17:43:21.874055 24 predicates.go:956] kps-prometheus-node-exporter-x49ph from monitoring started at 2025-04-29 11:29:50 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.874058 24 predicates.go:958] 	Container node-exporter ready: true, restart count 0
  I0507 17:43:21.874063 24 predicates.go:956] server-envvars-9566fbda-1e93-4318-b899-45638cddfb62 from pods-3784 started at 2025-05-07 17:43:15 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.874066 24 predicates.go:958] 	Container srv ready: true, restart count 0
  I0507 17:43:21.874071 24 predicates.go:956] sonobuoy-e2e-job-07fd652a611c431c from sonobuoy started at 2025-05-07 16:48:04 +0000 UTC (2 container statuses recorded)
  I0507 17:43:21.874074 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0507 17:43:21.874079 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 17:43:21.874084 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-a7c958b54b254fc6-pd8t9 from sonobuoy started at 2025-05-07 16:48:04 +0000 UTC (2 container statuses recorded)
  I0507 17:43:21.874088 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 17:43:21.874092 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0507 17:43:21.874097 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node mini-2 before test
  I0507 17:43:21.877629 24 predicates.go:956] replace-29110662-k45pq from cronjob-8264 started at 2025-05-07 17:42:00 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.877641 24 predicates.go:958] 	Container c ready: true, restart count 0
  I0507 17:43:21.877647 24 predicates.go:956] replace-29110663-mckdq from cronjob-8264 started at 2025-05-07 17:43:00 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.877651 24 predicates.go:958] 	Container c ready: true, restart count 0
  I0507 17:43:21.877657 24 predicates.go:956] calico-node-58sqm from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.877661 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0507 17:43:21.877665 24 predicates.go:956] kube-proxy-xvk88 from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.877669 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0507 17:43:21.877673 24 predicates.go:956] helm-charts-fluent-bit-zrh72 from logging started at 2025-04-29 11:28:41 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.877677 24 predicates.go:958] 	Container fluent-bit ready: true, restart count 0
  I0507 17:43:21.877681 24 predicates.go:956] kps-prometheus-node-exporter-j85gt from monitoring started at 2025-04-29 11:29:50 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.877685 24 predicates.go:958] 	Container node-exporter ready: true, restart count 0
  I0507 17:43:21.877689 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-07 16:48:03 +0000 UTC (1 container statuses recorded)
  I0507 17:43:21.877693 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0507 17:43:21.877697 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-a7c958b54b254fc6-sfkx7 from sonobuoy started at 2025-05-07 16:48:05 +0000 UTC (2 container statuses recorded)
  I0507 17:43:21.877701 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 17:43:21.877705 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/07/25 17:43:21.877
  E0507 17:43:22.563097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:23.563257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:24.563706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:25.563892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/07/25 17:43:25.906
  STEP: Trying to apply a random label on the found node. @ 05/07/25 17:43:25.923
  STEP: verifying the node has the label kubernetes.io/e2e-b29ed713-8087-4bf4-9841-f099532b9660 42 @ 05/07/25 17:43:25.934
  STEP: Trying to relaunch the pod, now with labels. @ 05/07/25 17:43:25.938
  E0507 17:43:26.564090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:27.564253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-b29ed713-8087-4bf4-9841-f099532b9660 off the node mini-2 @ 05/07/25 17:43:27.955
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-b29ed713-8087-4bf4-9841-f099532b9660 @ 05/07/25 17:43:27.967
  I0507 17:43:27.974222 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6894" for this suite. @ 05/07/25 17:43:27.978
• [6.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/07/25 17:43:27.985
  I0507 17:43:27.985736 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename certificates @ 05/07/25 17:43:27.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:27.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:28.003
  STEP: getting /apis @ 05/07/25 17:43:28.54
  STEP: getting /apis/certificates.k8s.io @ 05/07/25 17:43:28.544
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/07/25 17:43:28.546
  STEP: creating @ 05/07/25 17:43:28.546
  STEP: getting @ 05/07/25 17:43:28.564
  E0507 17:43:28.565145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing @ 05/07/25 17:43:28.566
  STEP: watching @ 05/07/25 17:43:28.569
  I0507 17:43:28.569846 24 certificates.go:316] starting watch
  STEP: patching @ 05/07/25 17:43:28.57
  STEP: updating @ 05/07/25 17:43:28.576
  I0507 17:43:28.584071 24 certificates.go:332] waiting for watch events with expected annotations
  I0507 17:43:28.584100 24 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 05/07/25 17:43:28.584
  STEP: patching /approval @ 05/07/25 17:43:28.586
  STEP: updating /approval @ 05/07/25 17:43:28.592
  STEP: getting /status @ 05/07/25 17:43:28.599
  STEP: patching /status @ 05/07/25 17:43:28.603
  STEP: updating /status @ 05/07/25 17:43:28.612
  STEP: deleting @ 05/07/25 17:43:28.619
  STEP: deleting a collection @ 05/07/25 17:43:28.638
  I0507 17:43:28.659511 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9004" for this suite. @ 05/07/25 17:43:28.663
• [0.685 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 05/07/25 17:43:28.67
  I0507 17:43:28.670570 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 17:43:28.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:28.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:28.691
  STEP: Creating configMap with name configmap-test-volume-ec6810dd-6ae8-481e-b5d5-f2847df9360a @ 05/07/25 17:43:28.694
  STEP: Creating a pod to test consume configMaps @ 05/07/25 17:43:28.699
  E0507 17:43:29.565925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:30.566048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:31.567088      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:32.567210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:43:32.723
  I0507 17:43:32.727233 24 output.go:207] Trying to get logs from node mini-1 pod pod-configmaps-b1ee8f59-54a3-4c69-891b-93bd9caaa25e container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 17:43:32.741
  I0507 17:43:32.760949 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-656" for this suite. @ 05/07/25 17:43:32.765
• [4.102 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 05/07/25 17:43:32.772
  I0507 17:43:32.772276 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 17:43:32.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:32.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:32.788
  STEP: creating a Namespace @ 05/07/25 17:43:32.791
  STEP: patching the Namespace @ 05/07/25 17:43:32.802
  STEP: get the Namespace and ensuring it has the label @ 05/07/25 17:43:32.811
  I0507 17:43:32.815823 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3326" for this suite. @ 05/07/25 17:43:32.866
  STEP: Destroying namespace "nspatchtest-eff90bbd-3e84-4293-a11c-722a127794f5-5513" for this suite. @ 05/07/25 17:43:32.873
• [0.108 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 05/07/25 17:43:32.88
  I0507 17:43:32.880713 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 17:43:32.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:32.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:32.898
  I0507 17:43:32.923579 24 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0507 17:43:32.923594 24 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0507 17:43:32.929696 24 service_accounts.go:281] created pod pod-service-account-mountsa
  I0507 17:43:32.929709 24 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0507 17:43:32.936709 24 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0507 17:43:32.936721 24 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0507 17:43:32.949458 24 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0507 17:43:32.949472 24 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0507 17:43:32.956606 24 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0507 17:43:32.956618 24 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0507 17:43:32.965089 24 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0507 17:43:32.965103 24 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0507 17:43:32.976370 24 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0507 17:43:32.976387 24 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0507 17:43:32.985171 24 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0507 17:43:32.985187 24 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0507 17:43:32.993284 24 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0507 17:43:32.993307 24 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0507 17:43:32.993373 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4276" for this suite. @ 05/07/25 17:43:32.998
• [0.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 05/07/25 17:43:33.008
  I0507 17:43:33.008785 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubelet-test @ 05/07/25 17:43:33.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:33.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:33.036
  E0507 17:43:33.567381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:34.567547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:35.568494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:36.568651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:43:37.065044 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3821" for this suite. @ 05/07/25 17:43:37.075
• [4.078 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 05/07/25 17:43:37.086
  I0507 17:43:37.086666 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 17:43:37.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:37.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:37.106
  STEP: Starting the proxy @ 05/07/25 17:43:37.108
  I0507 17:43:37.108952 24 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-9804 proxy --unix-socket=/tmp/kubectl-proxy-unix3191871841/test'
  STEP: retrieving proxy /api/ output @ 05/07/25 17:43:37.134
  I0507 17:43:37.135041 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9804" for this suite. @ 05/07/25 17:43:37.171
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 05/07/25 17:43:37.178
  I0507 17:43:37.178205 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 17:43:37.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:37.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:37.198
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/07/25 17:43:37.2
  I0507 17:43:37.200755 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-153 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0507 17:43:37.243871 24 builder.go:146] stderr: ""
  I0507 17:43:37.243908 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/07/25 17:43:37.243
  E0507 17:43:37.569387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:38.569879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:39.570219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:40.570432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:41.570587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/07/25 17:43:42.295
  I0507 17:43:42.295530 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-153 get pod e2e-test-httpd-pod -o json'
  I0507 17:43:42.332294 24 builder.go:146] stderr: ""
  I0507 17:43:42.332421 24 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"29d0491a9c919bc9f57d449446707ec2d3500c8251a78904cbe781c684f064db\",\n            \"cni.projectcalico.org/podIP\": \"192.168.158.137/32\",\n            \"cni.projectcalico.org/podIPs\": \"192.168.158.137/32\"\n        },\n        \"creationTimestamp\": \"2025-05-07T17:43:37Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-153\",\n        \"resourceVersion\": \"2240794\",\n        \"uid\": \"dfa13d56-8a37-41b2-85af-c8fb50c32626\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-gkmkv\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"mini-2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-gkmkv\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-07T17:43:38Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-07T17:43:37Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-07T17:43:38Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-07T17:43:38Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-07T17:43:37Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://1b1471990d0e01a9968642509b96a609cdba30490294039b44260ddfed82559d\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-05-07T17:43:38Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-gkmkv\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"10.221.190.32\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.221.190.32\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.158.137\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.158.137\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-05-07T17:43:37Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/07/25 17:43:42.332
  I0507 17:43:42.332494 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-153 replace -f -'
  I0507 17:43:42.407764 24 builder.go:146] stderr: ""
  I0507 17:43:42.407787 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/07/25 17:43:42.407
  I0507 17:43:42.411718 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-153 delete pods e2e-test-httpd-pod'
  E0507 17:43:42.570882      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:43.571039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:43:44.004770 24 builder.go:146] stderr: ""
  I0507 17:43:44.004807 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0507 17:43:44.004907 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-153" for this suite. @ 05/07/25 17:43:44.009
• [6.838 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 05/07/25 17:43:44.016
  I0507 17:43:44.016884 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename dns @ 05/07/25 17:43:44.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:44.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:44.033
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/07/25 17:43:44.035
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/07/25 17:43:44.035
  STEP: creating a pod to probe DNS @ 05/07/25 17:43:44.035
  STEP: submitting the pod to kubernetes @ 05/07/25 17:43:44.035
  E0507 17:43:44.571971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:45.572077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:46.572349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:47.572455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/07/25 17:43:48.059
  STEP: looking for the results for each expected name from probers @ 05/07/25 17:43:48.062
  I0507 17:43:48.077879 24 dns_common.go:546] DNS probes using dns-9951/dns-test-08b6e955-235b-487b-b0e9-8c47af1ee469 succeeded

  STEP: deleting the pod @ 05/07/25 17:43:48.077
  I0507 17:43:48.090388 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9951" for this suite. @ 05/07/25 17:43:48.094
• [4.086 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 05/07/25 17:43:48.102
  I0507 17:43:48.102917 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 17:43:48.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:48.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:48.118
  STEP: Creating a pod to test service account token:  @ 05/07/25 17:43:48.121
  E0507 17:43:48.572787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:49.572942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:50.573900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:51.574034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:43:52.147
  I0507 17:43:52.150189 24 output.go:207] Trying to get logs from node mini-2 pod test-pod-c4a5866a-5780-411b-af14-489732dad0c8 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 17:43:52.156
  I0507 17:43:52.170563 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6692" for this suite. @ 05/07/25 17:43:52.173
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/07/25 17:43:52.179
  I0507 17:43:52.179286 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pod-network-test @ 05/07/25 17:43:52.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:43:52.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:43:52.192
  STEP: Performing setup for networking test in namespace pod-network-test-9438 @ 05/07/25 17:43:52.194
  STEP: creating a selector @ 05/07/25 17:43:52.194
  STEP: Creating the service pods in kubernetes @ 05/07/25 17:43:52.194
  I0507 17:43:52.194456 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0507 17:43:52.574087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:53.574240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:54.575230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:55.575398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:56.575427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:57.575528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:58.575759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:43:59.575911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:00.576872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:01.577017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:02.577641      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:03.577766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:04.577834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:05.577950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/07/25 17:44:06.261
  E0507 17:44:06.578981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:07.579146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:08.291893 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0507 17:44:08.291927 24 utils.go:495] Going to poll 192.168.125.248 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0507 17:44:08.294225 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.125.248 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9438 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:44:08.294250 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:44:08.294302 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9438/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.125.248+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0507 17:44:08.579504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:09.336125 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:44:09.336183 24 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0507 17:44:09.336192 24 utils.go:495] Going to poll 192.168.158.145 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0507 17:44:09.339866 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.158.145 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9438 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 17:44:09.339894 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 17:44:09.339917 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9438/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.158.145+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0507 17:44:09.580433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:10.386287 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 17:44:10.386340 24 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0507 17:44:10.386453 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9438" for this suite. @ 05/07/25 17:44:10.39
• [18.217 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 05/07/25 17:44:10.396
  I0507 17:44:10.396663 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 17:44:10.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:44:10.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:44:10.41
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/07/25 17:44:10.411
  I0507 17:44:10.412111 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 17:44:10.580872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:11.581859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:12.582420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:13.131999 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 17:44:13.583006      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:14.583492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:15.583510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:16.584337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:17.584866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:18.584938      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:19.585051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:20.585883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:21.161183 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2333" for this suite. @ 05/07/25 17:44:21.168
• [10.776 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 05/07/25 17:44:21.173
  I0507 17:44:21.173023 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 17:44:21.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:44:21.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:44:21.186
  STEP: creating service in namespace services-9416 @ 05/07/25 17:44:21.188
  STEP: creating service affinity-clusterip-transition in namespace services-9416 @ 05/07/25 17:44:21.188
  I0507 17:44:21.213587 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0507 17:44:21.586064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:22.586159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:23.225751 24 resource.go:361] Creating new exec pod
  E0507 17:44:23.587158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:24.587281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:25.245364 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-9416 exec execpod-affinityf8zxz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0507 17:44:25.323329 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.96.244.54) 80 port [tcp/http] succeeded!\n"
  I0507 17:44:25.323353 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:44:25.323392 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-9416 exec execpod-affinityf8zxz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.244.54 80'
  I0507 17:44:25.394100 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.244.54 80\nConnection to 10.96.244.54 80 port [tcp/http] succeeded!\n"
  I0507 17:44:25.394126 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:44:25.402595 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-9416 exec execpod-affinityf8zxz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/ ; done'
  I0507 17:44:25.511626 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n"
  I0507 17:44:25.511656 24 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-x5fxk\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-jqnd6\naffinity-clusterip-transition-5cffb65545-x5fxk\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-jqnd6\naffinity-clusterip-transition-5cffb65545-jqnd6\naffinity-clusterip-transition-5cffb65545-x5fxk\naffinity-clusterip-transition-5cffb65545-x5fxk\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-jqnd6\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-x5fxk\naffinity-clusterip-transition-5cffb65545-ggnf4"
  I0507 17:44:25.511665 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x5fxk
  I0507 17:44:25.511671 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.511677 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-jqnd6
  I0507 17:44:25.511681 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x5fxk
  I0507 17:44:25.511687 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.511697 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-jqnd6
  I0507 17:44:25.511702 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-jqnd6
  I0507 17:44:25.511707 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x5fxk
  I0507 17:44:25.511712 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x5fxk
  I0507 17:44:25.511717 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.511722 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.511727 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-jqnd6
  I0507 17:44:25.511732 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.511736 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.511742 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-x5fxk
  I0507 17:44:25.511747 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.518890 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-9416 exec execpod-affinityf8zxz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/ ; done'
  E0507 17:44:25.588138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:25.634710 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.96.244.54:80/\n"
  I0507 17:44:25.634737 24 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4\naffinity-clusterip-transition-5cffb65545-ggnf4"
  I0507 17:44:25.634746 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634753 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634759 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634765 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634775 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634780 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634785 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634792 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634797 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634802 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634808 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634813 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634818 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634823 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634827 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634832 24 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-ggnf4
  I0507 17:44:25.634873 24 service.go:4352] Cleaning up the exec pod
  I0507 17:44:25.675287 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9416" for this suite. @ 05/07/25 17:44:25.679
• [4.529 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 05/07/25 17:44:25.702
  I0507 17:44:25.702459 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:44:25.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:44:25.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:44:25.728
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:44:25.738
  E0507 17:44:26.588644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:27.588766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:28.589633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:29.590433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:44:29.756
  I0507 17:44:29.758579 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-8b406b58-b346-453f-b017-6065c2b91e7b container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:44:29.768
  I0507 17:44:29.780242 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6786" for this suite. @ 05/07/25 17:44:29.782
• [4.085 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 05/07/25 17:44:29.787
  I0507 17:44:29.787402 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename dns @ 05/07/25 17:44:29.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:44:29.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:44:29.801
  STEP: Creating a test externalName service @ 05/07/25 17:44:29.803
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3000.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3000.svc.cluster.local; sleep 1; done
   @ 05/07/25 17:44:29.807
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3000.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3000.svc.cluster.local; sleep 1; done
   @ 05/07/25 17:44:29.807
  STEP: creating a pod to probe DNS @ 05/07/25 17:44:29.807
  STEP: submitting the pod to kubernetes @ 05/07/25 17:44:29.807
  E0507 17:44:30.590873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:31.591426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:32.592438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:33.592605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/07/25 17:44:33.826
  STEP: looking for the results for each expected name from probers @ 05/07/25 17:44:33.828
  I0507 17:44:33.833786 24 dns_common.go:571] DNS probes using dns-test-106eac9a-856b-461b-93e2-b2ea25393d02 succeeded

  STEP: changing the externalName to bar.example.com @ 05/07/25 17:44:33.833
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3000.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3000.svc.cluster.local; sleep 1; done
   @ 05/07/25 17:44:33.839
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3000.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3000.svc.cluster.local; sleep 1; done
   @ 05/07/25 17:44:33.839
  STEP: creating a second pod to probe DNS @ 05/07/25 17:44:33.839
  STEP: submitting the pod to kubernetes @ 05/07/25 17:44:33.839
  E0507 17:44:34.593463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:35.594491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/07/25 17:44:35.854
  STEP: looking for the results for each expected name from probers @ 05/07/25 17:44:35.856
  I0507 17:44:35.861495 24 dns_common.go:571] DNS probes using dns-test-4bb61d53-8422-4027-8d4a-33ba1ae19dc7 succeeded

  STEP: changing the service to type=ClusterIP @ 05/07/25 17:44:35.861
  I0507 17:44:35.879700      24 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3000.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-3000.svc.cluster.local; sleep 1; done
   @ 05/07/25 17:44:35.879
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3000.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3000.svc.cluster.local; sleep 1; done
   @ 05/07/25 17:44:35.879
  STEP: creating a third pod to probe DNS @ 05/07/25 17:44:35.879
  STEP: submitting the pod to kubernetes @ 05/07/25 17:44:35.887
  E0507 17:44:36.595576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:37.595732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:38.596729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:39.596883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/07/25 17:44:39.91
  STEP: looking for the results for each expected name from probers @ 05/07/25 17:44:39.913
  I0507 17:44:39.919642 24 dns_common.go:571] DNS probes using dns-test-6a9cac40-6b05-4d4a-b025-52fb6e4cdebf succeeded

  STEP: deleting the pod @ 05/07/25 17:44:39.919
  STEP: deleting the pod @ 05/07/25 17:44:39.93
  STEP: deleting the pod @ 05/07/25 17:44:39.939
  STEP: deleting the test externalName service @ 05/07/25 17:44:39.952
  I0507 17:44:39.980597 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3000" for this suite. @ 05/07/25 17:44:39.983
• [10.202 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 05/07/25 17:44:39.989
  I0507 17:44:39.989385 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 17:44:39.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:44:40.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:44:40.008
  STEP: creating service endpoint-test2 in namespace services-2883 @ 05/07/25 17:44:40.01
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2883 to expose endpoints map[] @ 05/07/25 17:44:40.027
  I0507 17:44:40.030338      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:44:40.030362 24 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0507 17:44:40.596985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:41.033184      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:44:41.036549 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-2883 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2883 @ 05/07/25 17:44:41.036
  E0507 17:44:41.597218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:42.597563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:43.598271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:44.598445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2883 to expose endpoints map[pod1:[80]] @ 05/07/25 17:44:45.055
  I0507 17:44:45.059773      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:44:45.062808 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-2883 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/07/25 17:44:45.062
  I0507 17:44:45.062858 24 resource.go:361] Creating new exec pod
  E0507 17:44:45.599464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:46.600247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:47.075144 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2883 exec execpodttsgv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0507 17:44:47.157088 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.108.218.190) 80 port [tcp/http] succeeded!\n"
  I0507 17:44:47.157113 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:44:47.157157 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2883 exec execpodttsgv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.218.190 80'
  I0507 17:44:47.232599 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.218.190 80\nConnection to 10.108.218.190 80 port [tcp/http] succeeded!\n"
  I0507 17:44:47.232630 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2883 @ 05/07/25 17:44:47.232
  E0507 17:44:47.600889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:48.601893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2883 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/07/25 17:44:49.246
  I0507 17:44:49.253519      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:44:49.256862 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-2883 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/07/25 17:44:49.256
  I0507 17:44:49.259163 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2883 exec execpodttsgv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0507 17:44:49.340833 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.108.218.190) 80 port [tcp/http] succeeded!\n"
  I0507 17:44:49.340860 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:44:49.340900 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2883 exec execpodttsgv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.218.190 80'
  I0507 17:44:49.411806 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.218.190 80\nConnection to 10.108.218.190 80 port [tcp/http] succeeded!\n"
  I0507 17:44:49.411831 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2883 @ 05/07/25 17:44:49.411
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2883 to expose endpoints map[pod2:[80]] @ 05/07/25 17:44:49.423
  I0507 17:44:49.430096      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0507 17:44:49.602451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:50.433212      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:44:50.436731 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-2883 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/07/25 17:44:50.436
  I0507 17:44:50.438872 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2883 exec execpodttsgv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0507 17:44:50.517264 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.108.218.190) 80 port [tcp/http] succeeded!\n"
  I0507 17:44:50.517293 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:44:50.517343 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2883 exec execpodttsgv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.218.190 80'
  I0507 17:44:50.587296 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.218.190 80\nConnection to 10.108.218.190 80 port [tcp/http] succeeded!\n"
  I0507 17:44:50.587321 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2883 @ 05/07/25 17:44:50.587
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2883 to expose endpoints map[] @ 05/07/25 17:44:50.595
  I0507 17:44:50.599819      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0507 17:44:50.605041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:51.605972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:44:51.608301      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 17:44:51.611635 24 service.go:4645] successfully validated that service endpoint-test2 in namespace services-2883 exposes endpoints map[]
  I0507 17:44:51.631258 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2883" for this suite. @ 05/07/25 17:44:51.633
• [11.649 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 05/07/25 17:44:51.638
  I0507 17:44:51.638870 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 17:44:51.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:44:51.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:44:51.652
  STEP: Counting existing ResourceQuota @ 05/07/25 17:44:51.654
  E0507 17:44:52.606456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:53.607384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:54.607425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:55.607447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:56.608355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/07/25 17:44:56.66
  STEP: Ensuring resource quota status is calculated @ 05/07/25 17:44:56.666
  E0507 17:44:57.608473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:44:58.608637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 05/07/25 17:44:58.671
  STEP: Ensuring resource quota status captures replicaset creation @ 05/07/25 17:44:58.68
  E0507 17:44:59.608779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:00.608897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 05/07/25 17:45:00.683
  STEP: Ensuring resource quota status released usage @ 05/07/25 17:45:00.688
  E0507 17:45:01.609307      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:02.609441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:02.691550 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-796" for this suite. @ 05/07/25 17:45:02.694
• [11.061 seconds]
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/07/25 17:45:02.7
  I0507 17:45:02.700107 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pods @ 05/07/25 17:45:02.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:45:02.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:45:02.716
  I0507 17:45:02.717876 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: creating the pod @ 05/07/25 17:45:02.718
  STEP: submitting the pod to kubernetes @ 05/07/25 17:45:02.718
  E0507 17:45:03.609567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:04.609741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:04.776557 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9808" for this suite. @ 05/07/25 17:45:04.78
• [2.086 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 05/07/25 17:45:04.785
  I0507 17:45:04.785752 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 17:45:04.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:45:04.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:45:04.796
  STEP: Counting existing ResourceQuota @ 05/07/25 17:45:04.798
  E0507 17:45:05.610382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:06.611090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:07.611334      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:08.612110      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:09.612476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/07/25 17:45:09.801
  STEP: Ensuring resource quota status is calculated @ 05/07/25 17:45:09.806
  E0507 17:45:10.612516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:11.612647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 05/07/25 17:45:11.81
  STEP: Ensuring resource quota status captures replication controller creation @ 05/07/25 17:45:11.819
  E0507 17:45:12.612814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:13.612952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 05/07/25 17:45:13.822
  STEP: Ensuring resource quota status released usage @ 05/07/25 17:45:13.827
  E0507 17:45:14.613552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:15.613669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:15.831214 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9697" for this suite. @ 05/07/25 17:45:15.834
• [11.053 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/07/25 17:45:15.838
  I0507 17:45:15.838896 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 17:45:15.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:45:15.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:45:15.852
  I0507 17:45:15.864617 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0507 17:45:16.614414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:17.614543      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:18.614662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:19.614782      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:20.614939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:20.868226 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 17:45:20.868
  STEP: Scaling up "test-rs" replicaset @ 05/07/25 17:45:20.868
  I0507 17:45:20.875008 24 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/07/25 17:45:20.875
  I0507 17:45:20.883445 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1064 with ReadyReplicas 1, AvailableReplicas 1
  I0507 17:45:20.897242 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1064 with ReadyReplicas 1, AvailableReplicas 1
  I0507 17:45:20.908748 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1064 with ReadyReplicas 1, AvailableReplicas 1
  I0507 17:45:20.917513 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1064 with ReadyReplicas 1, AvailableReplicas 1
  E0507 17:45:21.615283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:22.615442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:22.812394 24 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1064 with ReadyReplicas 2, AvailableReplicas 2
  I0507 17:45:22.826727 24 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-1064 with ReadyReplicas 3 found true
  I0507 17:45:22.826805 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1064" for this suite. @ 05/07/25 17:45:22.83
• [6.997 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 05/07/25 17:45:22.836
  I0507 17:45:22.836357 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 17:45:22.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:45:22.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:45:22.848
  E0507 17:45:23.615681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:24.615858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 05/07/25 17:45:24.87
  I0507 17:45:24.870357 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2516 pod-service-account-37198458-5287-4e1e-a374-93813a9bd1a8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/07/25 17:45:24.942
  I0507 17:45:24.942467 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2516 pod-service-account-37198458-5287-4e1e-a374-93813a9bd1a8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/07/25 17:45:25.011
  I0507 17:45:25.011971 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2516 pod-service-account-37198458-5287-4e1e-a374-93813a9bd1a8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0507 17:45:25.086948 24 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-2516"
  I0507 17:45:25.089474 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2516" for this suite. @ 05/07/25 17:45:25.092
• [2.262 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 05/07/25 17:45:25.098
  I0507 17:45:25.098654 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:45:25.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:45:25.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:45:25.115
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:45:25.117
  E0507 17:45:25.616605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:26.616746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:27.617481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:28.617640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:45:29.134
  I0507 17:45:29.136826 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-d03ae6f1-1a92-4554-9c5d-a9e1bbcd919d container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:45:29.14
  I0507 17:45:29.151697 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-306" for this suite. @ 05/07/25 17:45:29.154
• [4.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/07/25 17:45:29.159
  I0507 17:45:29.159201 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 17:45:29.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:45:29.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:45:29.17
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/07/25 17:45:29.172
  I0507 17:45:29.179015 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0507 17:45:29.618581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:30.619475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:31.619649      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:32.620428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:33.620570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:34.182065 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 17:45:34.182
  STEP: getting scale subresource @ 05/07/25 17:45:34.182
  STEP: updating a scale subresource @ 05/07/25 17:45:34.184
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/07/25 17:45:34.189
  STEP: Patch a scale subresource @ 05/07/25 17:45:34.191
  I0507 17:45:34.197939 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-755" for this suite. @ 05/07/25 17:45:34.2
• [5.048 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 05/07/25 17:45:34.207
  I0507 17:45:34.207011 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:45:34.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:45:34.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:45:34.22
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:45:34.222
  E0507 17:45:34.620706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:35.620823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:36.620969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:37.621485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:45:38.24
  I0507 17:45:38.242396 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-e7e4c708-79ef-425e-b6ea-fc2916742960 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:45:38.246
  I0507 17:45:38.255926 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7433" for this suite. @ 05/07/25 17:45:38.258
• [4.057 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/07/25 17:45:38.263
  I0507 17:45:38.263675 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename deployment @ 05/07/25 17:45:38.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:45:38.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:45:38.275
  I0507 17:45:38.282725 24 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  E0507 17:45:38.622193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:39.622345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:40.622466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:41.622619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:42.622798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:43.286769 24 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 17:45:43.286
  I0507 17:45:43.286837 24 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0507 17:45:43.623099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:44.623255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:45.289709 24 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0507 17:45:45.297172 24 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0507 17:45:45.623369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:46.623515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:47.302390 24 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0507 17:45:47.307050 24 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0507 17:45:47.310359 24 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0507 17:45:47.316470 24 deployment.go:314] Updating deployment test-rollover-deployment
  I0507 17:45:47.316482 24 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0507 17:45:47.623750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:48.623880      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:49.321836 24 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0507 17:45:49.326067 24 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0507 17:45:49.329901 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0507 17:45:49.329958 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 45, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 17:45:49.624168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:50.624304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:51.337643 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0507 17:45:51.337693 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 45, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 17:45:51.625000      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:52.625159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:53.336704 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0507 17:45:53.336749 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 45, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 17:45:53.626028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:54.626163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:55.336145 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0507 17:45:55.336189 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 45, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 17:45:55.626404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:56.626593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:57.335750 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0507 17:45:57.335795 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 45, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 17:45:57.627076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:45:58.627268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:45:59.337479 24 deployment.go:95] 
  I0507 17:45:59.337518 24 deployment.go:993] Ensure that both old replica sets have no replicas
  I0507 17:45:59.345112 24 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7073",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d630cb6-eb4c-4eab-aeda-c3f25540b3d5",
      ResourceVersion: (string) (len=7) "2242232",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 17:45:59.348930 24 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7073",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d77930f-b7f3-4362-9164-a1d6a85ac717",
      ResourceVersion: (string) (len=7) "2242222",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "8d630cb6-eb4c-4eab-aeda-c3f25540b3d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 64 36 33 30 63  62 36 2d 65 62 34 63 2d  |\"8d630cb6-eb4c-|
              00000120  34 65 61 62 2d 61 65 64  61 2d 63 33 66 32 35 35  |4eab-aeda-c3f255|
              00000130  34 30 62 33 64 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |40b3d5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 17:45:59.349686 24 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0507 17:45:59.349974 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7073",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ce5006e-53c6-4d8f-9a35-b7874ccbb546",
      ResourceVersion: (string) (len=7) "2242231",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "8d630cb6-eb4c-4eab-aeda-c3f25540b3d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  38 64 36 33 30 63 62 36  2d 65 62 34 63 2d 34 65  |8d630cb6-eb4c-4e|
              000000c0  61 62 2d 61 65 64 61 2d  63 33 66 32 35 35 34 30  |ab-aeda-c3f25540|
              000000d0  62 33 64 35 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |b3d5\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236758,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 17:45:59.351324 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7073",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b26f711e-20be-4855-977b-d18f451661f2",
      ResourceVersion: (string) (len=7) "2242167",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "8d630cb6-eb4c-4eab-aeda-c3f25540b3d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 64 36 33 30 63  62 36 2d 65 62 34 63 2d  |\"8d630cb6-eb4c-|
              00000120  34 65 61 62 2d 61 65 64  61 2d 63 33 66 32 35 35  |4eab-aeda-c3f255|
              00000130  34 30 62 33 64 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |40b3d5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 17:45:59.356040 24 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-26xwp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-26xwp",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-7073",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14e2238b-e1b1-4a59-a60d-3ddeac7973eb",
      ResourceVersion: (string) (len=7) "2242191",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9cedf7c41420ce4aa3bb5486d9c546c1df228823ae4f498c6a1515b7ed327bf0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.125.195/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.125.195/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "0d77930f-b7f3-4362-9164-a1d6a85ac717",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  37 37 39 33 30 66 2d 62  |d\":\"0d77930f-b|
              00000090  37 66 33 2d 34 33 36 32  2d 39 31 36 34 2d 61 31  |7f3-4362-9164-a1|
              000000a0  64 36 61 38 35 61 63 37  31 37 5c 22 7d 22 3a 7b  |d6a85ac717\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 31 39 35 5c 22 7d  |2.168.125.195\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pnxnq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pnxnq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882236747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.31",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.31"
        }
      },
      PodIP: (string) (len=15) "192.168.125.195",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.125.195"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882236747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882236748,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://b1485f0c4ed4644d6af8ee83068dc52f44c1c53354c1316bd896039359f096d2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pnxnq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 17:45:59.357516 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7073" for this suite. @ 05/07/25 17:45:59.36
• [21.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 05/07/25 17:45:59.367
  I0507 17:45:59.367119 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename taint-single-pod @ 05/07/25 17:45:59.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:45:59.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:45:59.383
  I0507 17:45:59.385298 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0507 17:45:59.627428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:00.627561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:01.627598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:02.627775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:03.628469      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:04.628604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:05.629362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:06.629547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:07.629595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:08.629754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:09.629902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:10.630031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:11.630625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:12.630800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:13.630947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:14.631096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:15.631798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:16.631974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:17.632837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:18.632977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:19.633296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:20.633754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:21.634397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:22.634647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:23.635206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:24.635383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:25.636151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:26.636317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:27.636519      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:28.636673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:29.637612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:30.637728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:31.637867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:32.638127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:33.638961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:34.639121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:35.639746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:36.639926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:37.640717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:38.640867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:39.641458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:40.641598      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:41.642407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:42.642580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:43.643401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:44.643574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:45.644363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:46.644518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:47.645395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:48.645554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:49.646085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:50.646390      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:51.647383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:52.647608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:53.648548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:54.648718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:55.649520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:56.649659      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:57.650327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:46:58.650479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:46:59.386409 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0507 17:46:59.389623 24 taints.go:144] Starting informer...
  STEP: Starting pod... @ 05/07/25 17:46:59.389
  I0507 17:46:59.598923 24 taints.go:294] Pod is running on mini-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/07/25 17:46:59.598
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/07/25 17:46:59.612
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/07/25 17:46:59.614
  I0507 17:46:59.615015 24 taints.go:313] Pod wasn't evicted. Proceeding
  I0507 17:46:59.615021 24 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/07/25 17:46:59.625
  STEP: Waiting some time to make sure that toleration time passed. @ 05/07/25 17:46:59.632
  E0507 17:46:59.651327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:00.651375      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:01.651459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:02.651650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:03.651804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:04.651948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:05.652073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:06.652225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:07.652296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:08.652452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:09.652547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:10.652675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:11.652804      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:12.653476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:13.653634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:14.653787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:15.653915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:16.654064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:17.654310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:18.654514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:19.654652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:20.654769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:21.654930      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:22.655119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:23.655271      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:24.655498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:25.655613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:26.655772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:27.656247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:28.656397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:29.656547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:30.656676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:31.657278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:32.657457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:33.657578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:34.657749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:35.657891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:36.658046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:37.658224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:38.658369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:39.658496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:40.658618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:41.658736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:42.658891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:43.659038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:44.659194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:45.659477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:46.659622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:47.659800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:48.659964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:49.660121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:50.660256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:51.661151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:52.661384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:53.661529      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:54.661689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:55.661817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:56.661985      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:57.662462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:58.662617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:47:59.662746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:00.663404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:01.663561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:02.663650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:03.663816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:04.663970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:05.664127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:06.664273      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:07.664411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:08.664569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:09.664694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:10.665459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:11.665606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:12.665849      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:13.665967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:48:14.632944 24 taints.go:329] Pod wasn't evicted. Test successful
  I0507 17:48:14.633085 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4980" for this suite. @ 05/07/25 17:48:14.637
• [135.275 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 05/07/25 17:48:14.642
  I0507 17:48:14.642383 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 17:48:14.642
  E0507 17:48:14.666905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:48:14.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:48:14.67
  I0507 17:48:14.672385 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 17:48:15.667739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:16.668274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/07/25 17:48:16.952
  I0507 17:48:16.952457 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-4412 --namespace=crd-publish-openapi-4412 create -f -'
  I0507 17:48:17.008798 24 builder.go:146] stderr: ""
  I0507 17:48:17.008830 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-671-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0507 17:48:17.008858 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-4412 --namespace=crd-publish-openapi-4412 delete e2e-test-crd-publish-openapi-671-crds test-cr'
  I0507 17:48:17.059563 24 builder.go:146] stderr: ""
  I0507 17:48:17.059588 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-671-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0507 17:48:17.059613 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-4412 --namespace=crd-publish-openapi-4412 apply -f -'
  I0507 17:48:17.104125 24 builder.go:146] stderr: ""
  I0507 17:48:17.104149 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-671-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0507 17:48:17.104173 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-4412 --namespace=crd-publish-openapi-4412 delete e2e-test-crd-publish-openapi-671-crds test-cr'
  I0507 17:48:17.153449 24 builder.go:146] stderr: ""
  I0507 17:48:17.153473 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-671-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/07/25 17:48:17.153
  I0507 17:48:17.153536 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-4412 explain e2e-test-crd-publish-openapi-671-crds'
  I0507 17:48:17.189809 24 builder.go:146] stderr: ""
  I0507 17:48:17.189840 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-671-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0507 17:48:17.669063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:18.669676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:48:19.501942 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4412" for this suite. @ 05/07/25 17:48:19.508
• [4.872 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 05/07/25 17:48:19.514
  I0507 17:48:19.514896 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 17:48:19.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:48:19.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:48:19.53
  I0507 17:48:19.533997 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 17:48:19.670018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:20.670696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:21.671355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/07/25 17:48:22.108
  I0507 17:48:22.108267 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-3494 --namespace=crd-publish-openapi-3494 create -f -'
  I0507 17:48:22.165278 24 builder.go:146] stderr: ""
  I0507 17:48:22.165319 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5118-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0507 17:48:22.165343 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-3494 --namespace=crd-publish-openapi-3494 delete e2e-test-crd-publish-openapi-5118-crds test-cr'
  I0507 17:48:22.206981 24 builder.go:146] stderr: ""
  I0507 17:48:22.207007 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5118-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0507 17:48:22.207031 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-3494 --namespace=crd-publish-openapi-3494 apply -f -'
  I0507 17:48:22.250919 24 builder.go:146] stderr: ""
  I0507 17:48:22.250943 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5118-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0507 17:48:22.250966 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-3494 --namespace=crd-publish-openapi-3494 delete e2e-test-crd-publish-openapi-5118-crds test-cr'
  I0507 17:48:22.301677 24 builder.go:146] stderr: ""
  I0507 17:48:22.301704 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5118-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/07/25 17:48:22.301
  I0507 17:48:22.301756 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-3494 explain e2e-test-crd-publish-openapi-5118-crds'
  I0507 17:48:22.336135 24 builder.go:146] stderr: ""
  I0507 17:48:22.336164 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5118-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0507 17:48:22.672205      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:23.672990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:48:24.413153 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3494" for this suite. @ 05/07/25 17:48:24.42
• [4.912 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/07/25 17:48:24.427
  I0507 17:48:24.427245 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename apf @ 05/07/25 17:48:24.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:48:24.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:48:24.439
  STEP: getting /apis @ 05/07/25 17:48:24.441
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/07/25 17:48:24.444
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/07/25 17:48:24.444
  STEP: creating @ 05/07/25 17:48:24.445
  STEP: getting @ 05/07/25 17:48:24.463
  STEP: listing @ 05/07/25 17:48:24.47
  STEP: watching @ 05/07/25 17:48:24.473
  I0507 17:48:24.473726 24 flowcontrol.go:394] starting watch
  STEP: patching @ 05/07/25 17:48:24.474
  STEP: updating @ 05/07/25 17:48:24.479
  I0507 17:48:24.485907 24 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 05/07/25 17:48:24.485
  STEP: patching /status @ 05/07/25 17:48:24.488
  STEP: updating /status @ 05/07/25 17:48:24.492
  STEP: deleting @ 05/07/25 17:48:24.503
  STEP: deleting a collection @ 05/07/25 17:48:24.512
  I0507 17:48:24.526007 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2867" for this suite. @ 05/07/25 17:48:24.528
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 05/07/25 17:48:24.535
  I0507 17:48:24.535020 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename gc @ 05/07/25 17:48:24.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:48:24.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:48:24.548
  STEP: create the rc @ 05/07/25 17:48:24.629
  I0507 17:48:24.634057      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0507 17:48:24.673264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:25.673372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:26.674061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:27.675096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/07/25 17:48:28.661
  STEP: wait for the rc to be deleted @ 05/07/25 17:48:28.671
  E0507 17:48:28.675784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:29.675868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:30.675966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:31.676127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:32.676221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/07/25 17:48:33.675
  E0507 17:48:33.676740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:34.676873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:35.677432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:36.678422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:37.678533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:38.679431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:39.679510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:40.680505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:41.680623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:42.681131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:43.681214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:44.681428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:45.681551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:46.682206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:47.682573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:48.682787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:49.683427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:50.684463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:51.684987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:52.685015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:53.685167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:54.686220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:55.686384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:56.686533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:57.686762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:58.686911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:48:59.687042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:00.687154      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:01.687332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:02.687496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/07/25 17:49:03.685
  E0507 17:49:03.687529      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:49:03.754061 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 17:49:03.754144 24 delete.go:95] Deleting pod "simpletest.rc-27pph" in namespace "gc-8208"
  I0507 17:49:03.762576 24 delete.go:95] Deleting pod "simpletest.rc-28pl5" in namespace "gc-8208"
  I0507 17:49:03.770932 24 delete.go:95] Deleting pod "simpletest.rc-2bjk9" in namespace "gc-8208"
  I0507 17:49:03.779463 24 delete.go:95] Deleting pod "simpletest.rc-2j7dk" in namespace "gc-8208"
  I0507 17:49:03.789755 24 delete.go:95] Deleting pod "simpletest.rc-2lsjj" in namespace "gc-8208"
  I0507 17:49:03.798346 24 delete.go:95] Deleting pod "simpletest.rc-2ltfr" in namespace "gc-8208"
  I0507 17:49:03.811799 24 delete.go:95] Deleting pod "simpletest.rc-2rkhj" in namespace "gc-8208"
  I0507 17:49:03.822835 24 delete.go:95] Deleting pod "simpletest.rc-2xkkk" in namespace "gc-8208"
  I0507 17:49:03.831377 24 delete.go:95] Deleting pod "simpletest.rc-47zln" in namespace "gc-8208"
  I0507 17:49:03.840270 24 delete.go:95] Deleting pod "simpletest.rc-4g7jx" in namespace "gc-8208"
  I0507 17:49:03.850270 24 delete.go:95] Deleting pod "simpletest.rc-4t85f" in namespace "gc-8208"
  I0507 17:49:03.860006 24 delete.go:95] Deleting pod "simpletest.rc-5b9f2" in namespace "gc-8208"
  I0507 17:49:03.870746 24 delete.go:95] Deleting pod "simpletest.rc-5hv5r" in namespace "gc-8208"
  I0507 17:49:03.881158 24 delete.go:95] Deleting pod "simpletest.rc-5lldm" in namespace "gc-8208"
  I0507 17:49:03.890755 24 delete.go:95] Deleting pod "simpletest.rc-5mb8x" in namespace "gc-8208"
  I0507 17:49:03.900364 24 delete.go:95] Deleting pod "simpletest.rc-5pllr" in namespace "gc-8208"
  I0507 17:49:03.935648 24 delete.go:95] Deleting pod "simpletest.rc-5sf9d" in namespace "gc-8208"
  I0507 17:49:03.944553 24 delete.go:95] Deleting pod "simpletest.rc-5tqj6" in namespace "gc-8208"
  I0507 17:49:03.953574 24 delete.go:95] Deleting pod "simpletest.rc-69j8v" in namespace "gc-8208"
  I0507 17:49:03.963005 24 delete.go:95] Deleting pod "simpletest.rc-6bxn9" in namespace "gc-8208"
  I0507 17:49:03.970935 24 delete.go:95] Deleting pod "simpletest.rc-6gx5x" in namespace "gc-8208"
  I0507 17:49:03.978702 24 delete.go:95] Deleting pod "simpletest.rc-6l9k5" in namespace "gc-8208"
  I0507 17:49:03.990164 24 delete.go:95] Deleting pod "simpletest.rc-6mswp" in namespace "gc-8208"
  I0507 17:49:04.058750 24 delete.go:95] Deleting pod "simpletest.rc-6wqwx" in namespace "gc-8208"
  I0507 17:49:04.070834 24 delete.go:95] Deleting pod "simpletest.rc-7q8v8" in namespace "gc-8208"
  I0507 17:49:04.079111 24 delete.go:95] Deleting pod "simpletest.rc-7w8x2" in namespace "gc-8208"
  I0507 17:49:04.091341 24 delete.go:95] Deleting pod "simpletest.rc-8s6vg" in namespace "gc-8208"
  I0507 17:49:04.102143 24 delete.go:95] Deleting pod "simpletest.rc-8wjv5" in namespace "gc-8208"
  I0507 17:49:04.113176 24 delete.go:95] Deleting pod "simpletest.rc-95n69" in namespace "gc-8208"
  I0507 17:49:04.122953 24 delete.go:95] Deleting pod "simpletest.rc-97wxb" in namespace "gc-8208"
  I0507 17:49:04.134045 24 delete.go:95] Deleting pod "simpletest.rc-9rv4n" in namespace "gc-8208"
  I0507 17:49:04.149129 24 delete.go:95] Deleting pod "simpletest.rc-cl5dn" in namespace "gc-8208"
  I0507 17:49:04.158227 24 delete.go:95] Deleting pod "simpletest.rc-cldt9" in namespace "gc-8208"
  I0507 17:49:04.186700 24 delete.go:95] Deleting pod "simpletest.rc-crmgv" in namespace "gc-8208"
  I0507 17:49:04.195017 24 delete.go:95] Deleting pod "simpletest.rc-crqgs" in namespace "gc-8208"
  I0507 17:49:04.206221 24 delete.go:95] Deleting pod "simpletest.rc-d9l48" in namespace "gc-8208"
  I0507 17:49:04.214166 24 delete.go:95] Deleting pod "simpletest.rc-dcwxt" in namespace "gc-8208"
  I0507 17:49:04.223973 24 delete.go:95] Deleting pod "simpletest.rc-dljsk" in namespace "gc-8208"
  I0507 17:49:04.237015 24 delete.go:95] Deleting pod "simpletest.rc-dnc4g" in namespace "gc-8208"
  I0507 17:49:04.250474 24 delete.go:95] Deleting pod "simpletest.rc-dr5gh" in namespace "gc-8208"
  I0507 17:49:04.259092 24 delete.go:95] Deleting pod "simpletest.rc-fccmh" in namespace "gc-8208"
  I0507 17:49:04.271686 24 delete.go:95] Deleting pod "simpletest.rc-fmh5p" in namespace "gc-8208"
  I0507 17:49:04.283176 24 delete.go:95] Deleting pod "simpletest.rc-gwf46" in namespace "gc-8208"
  I0507 17:49:04.296200 24 delete.go:95] Deleting pod "simpletest.rc-hxsxx" in namespace "gc-8208"
  I0507 17:49:04.304020 24 delete.go:95] Deleting pod "simpletest.rc-j55h9" in namespace "gc-8208"
  I0507 17:49:04.316639 24 delete.go:95] Deleting pod "simpletest.rc-jk5ns" in namespace "gc-8208"
  I0507 17:49:04.327189 24 delete.go:95] Deleting pod "simpletest.rc-jsqsx" in namespace "gc-8208"
  I0507 17:49:04.347944 24 delete.go:95] Deleting pod "simpletest.rc-jzvfj" in namespace "gc-8208"
  I0507 17:49:04.367494 24 delete.go:95] Deleting pod "simpletest.rc-kd8j5" in namespace "gc-8208"
  I0507 17:49:04.377543 24 delete.go:95] Deleting pod "simpletest.rc-kqgwd" in namespace "gc-8208"
  I0507 17:49:04.393429 24 delete.go:95] Deleting pod "simpletest.rc-krjcn" in namespace "gc-8208"
  I0507 17:49:04.406039 24 delete.go:95] Deleting pod "simpletest.rc-krpdv" in namespace "gc-8208"
  I0507 17:49:04.416518 24 delete.go:95] Deleting pod "simpletest.rc-ktlq2" in namespace "gc-8208"
  I0507 17:49:04.432443 24 delete.go:95] Deleting pod "simpletest.rc-kxrq4" in namespace "gc-8208"
  I0507 17:49:04.445484 24 delete.go:95] Deleting pod "simpletest.rc-l8vnq" in namespace "gc-8208"
  I0507 17:49:04.491481 24 delete.go:95] Deleting pod "simpletest.rc-lz52f" in namespace "gc-8208"
  I0507 17:49:04.502479 24 delete.go:95] Deleting pod "simpletest.rc-m8qzp" in namespace "gc-8208"
  I0507 17:49:04.512569 24 delete.go:95] Deleting pod "simpletest.rc-mbr74" in namespace "gc-8208"
  I0507 17:49:04.526455 24 delete.go:95] Deleting pod "simpletest.rc-mqszt" in namespace "gc-8208"
  I0507 17:49:04.547770 24 delete.go:95] Deleting pod "simpletest.rc-n7hg6" in namespace "gc-8208"
  I0507 17:49:04.559249 24 delete.go:95] Deleting pod "simpletest.rc-nkrhb" in namespace "gc-8208"
  I0507 17:49:04.577614 24 delete.go:95] Deleting pod "simpletest.rc-pfk6l" in namespace "gc-8208"
  I0507 17:49:04.610923 24 delete.go:95] Deleting pod "simpletest.rc-ptd6m" in namespace "gc-8208"
  I0507 17:49:04.641842 24 delete.go:95] Deleting pod "simpletest.rc-pv8dp" in namespace "gc-8208"
  I0507 17:49:04.659310 24 delete.go:95] Deleting pod "simpletest.rc-q8r8b" in namespace "gc-8208"
  I0507 17:49:04.670673 24 delete.go:95] Deleting pod "simpletest.rc-qc96p" in namespace "gc-8208"
  E0507 17:49:04.689387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:49:04.692075 24 delete.go:95] Deleting pod "simpletest.rc-r6892" in namespace "gc-8208"
  I0507 17:49:04.739840 24 delete.go:95] Deleting pod "simpletest.rc-r8xhz" in namespace "gc-8208"
  I0507 17:49:04.812737 24 delete.go:95] Deleting pod "simpletest.rc-rcrrn" in namespace "gc-8208"
  I0507 17:49:04.854670 24 delete.go:95] Deleting pod "simpletest.rc-rdjkn" in namespace "gc-8208"
  I0507 17:49:04.887430 24 delete.go:95] Deleting pod "simpletest.rc-rgfrv" in namespace "gc-8208"
  I0507 17:49:04.935585 24 delete.go:95] Deleting pod "simpletest.rc-rjzvs" in namespace "gc-8208"
  I0507 17:49:04.984937 24 delete.go:95] Deleting pod "simpletest.rc-rtktk" in namespace "gc-8208"
  I0507 17:49:05.039211 24 delete.go:95] Deleting pod "simpletest.rc-rvktq" in namespace "gc-8208"
  I0507 17:49:05.108372 24 delete.go:95] Deleting pod "simpletest.rc-s5hkj" in namespace "gc-8208"
  I0507 17:49:05.138859 24 delete.go:95] Deleting pod "simpletest.rc-sg5wl" in namespace "gc-8208"
  I0507 17:49:05.192452 24 delete.go:95] Deleting pod "simpletest.rc-srnjb" in namespace "gc-8208"
  I0507 17:49:05.238147 24 delete.go:95] Deleting pod "simpletest.rc-ssphd" in namespace "gc-8208"
  I0507 17:49:05.303063 24 delete.go:95] Deleting pod "simpletest.rc-svhms" in namespace "gc-8208"
  I0507 17:49:05.335516 24 delete.go:95] Deleting pod "simpletest.rc-tplnv" in namespace "gc-8208"
  I0507 17:49:05.394203 24 delete.go:95] Deleting pod "simpletest.rc-tsc5l" in namespace "gc-8208"
  I0507 17:49:05.443620 24 delete.go:95] Deleting pod "simpletest.rc-tx567" in namespace "gc-8208"
  I0507 17:49:05.492084 24 delete.go:95] Deleting pod "simpletest.rc-vpd6v" in namespace "gc-8208"
  I0507 17:49:05.536601 24 delete.go:95] Deleting pod "simpletest.rc-vpk56" in namespace "gc-8208"
  I0507 17:49:05.588662 24 delete.go:95] Deleting pod "simpletest.rc-vq5m7" in namespace "gc-8208"
  I0507 17:49:05.642438 24 delete.go:95] Deleting pod "simpletest.rc-vrnp4" in namespace "gc-8208"
  I0507 17:49:05.688345 24 delete.go:95] Deleting pod "simpletest.rc-wlmgk" in namespace "gc-8208"
  E0507 17:49:05.689442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:49:05.740843 24 delete.go:95] Deleting pod "simpletest.rc-wmz6s" in namespace "gc-8208"
  I0507 17:49:05.789987 24 delete.go:95] Deleting pod "simpletest.rc-wwcp8" in namespace "gc-8208"
  I0507 17:49:05.844710 24 delete.go:95] Deleting pod "simpletest.rc-x4zb7" in namespace "gc-8208"
  I0507 17:49:05.893073 24 delete.go:95] Deleting pod "simpletest.rc-x66zh" in namespace "gc-8208"
  I0507 17:49:05.939192 24 delete.go:95] Deleting pod "simpletest.rc-x7z5w" in namespace "gc-8208"
  I0507 17:49:05.986888 24 delete.go:95] Deleting pod "simpletest.rc-x9ssj" in namespace "gc-8208"
  I0507 17:49:06.042096 24 delete.go:95] Deleting pod "simpletest.rc-xljxn" in namespace "gc-8208"
  I0507 17:49:06.089034 24 delete.go:95] Deleting pod "simpletest.rc-xtcjj" in namespace "gc-8208"
  I0507 17:49:06.140995 24 delete.go:95] Deleting pod "simpletest.rc-xv6gs" in namespace "gc-8208"
  I0507 17:49:06.201535 24 delete.go:95] Deleting pod "simpletest.rc-z266r" in namespace "gc-8208"
  I0507 17:49:06.242377 24 delete.go:95] Deleting pod "simpletest.rc-z6w8f" in namespace "gc-8208"
  I0507 17:49:06.291990 24 delete.go:95] Deleting pod "simpletest.rc-zkqcp" in namespace "gc-8208"
  I0507 17:49:06.338117 24 delete.go:95] Deleting pod "simpletest.rc-zv2t2" in namespace "gc-8208"
  I0507 17:49:06.392204 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8208" for this suite. @ 05/07/25 17:49:06.433
• [41.948 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/07/25 17:49:06.483
  I0507 17:49:06.483113 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 17:49:06.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:49:06.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:49:06.494
  STEP: Creating secret with name secret-test-a393dde9-1757-4575-b7f9-6557c56c57d1 @ 05/07/25 17:49:06.497
  STEP: Creating a pod to test consume secrets @ 05/07/25 17:49:06.501
  E0507 17:49:06.690019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:07.690467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:08.691026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:09.691433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:10.691786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:11.691928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:49:12.523
  I0507 17:49:12.526161 24 output.go:207] Trying to get logs from node mini-2 pod pod-secrets-d4609583-8472-47bf-9046-6a25226ea513 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 17:49:12.536
  I0507 17:49:12.547186 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7651" for this suite. @ 05/07/25 17:49:12.55
• [6.072 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:125
  STEP: Creating a kubernetes client @ 05/07/25 17:49:12.555
  I0507 17:49:12.555375 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sched-preemption @ 05/07/25 17:49:12.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:49:12.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:49:12.568
  I0507 17:49:12.584609 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0507 17:49:12.692327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:13.692419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:14.692791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:15.692932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:16.693225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:17.693448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:18.694255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:19.694425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:20.695197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:21.695369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:22.695407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:23.695540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:24.696167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:25.696324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:26.697300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:27.697454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:28.697515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:29.697570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:30.698238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:31.698719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:32.699717      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:33.699855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:34.699892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:35.700018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:36.700722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:37.700868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:38.701501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:39.702430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:40.702897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:41.702994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:42.704025      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:43.704430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:44.705363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:45.705401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:46.705801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:47.705942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:48.705954      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:49.706064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:50.706109      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:51.706220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:52.707132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:53.707257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:54.707897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:55.708012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:56.709080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:57.709311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:58.709418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:49:59.709516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:00.710027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:01.710127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:02.710750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:03.710926      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:04.710951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:05.711087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:06.711824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:07.711998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:08.712908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:09.713021      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:10.713632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:11.713674      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:50:12.588788 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/07/25 17:50:12.591
  STEP: Adding a custom resource @ 05/07/25 17:50:12.591
  I0507 17:50:12.611779 24 preemption.go:169] Created pod: pod0-0-sched-preemption-low-priority
  I0507 17:50:12.616129 24 preemption.go:169] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 05/07/25 17:50:12.616
  I0507 17:50:12.632837 24 preemption.go:169] Created pod: pod1-0-sched-preemption-medium-priority
  I0507 17:50:12.637622 24 preemption.go:169] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/07/25 17:50:12.637
  E0507 17:50:12.714424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:13.714540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:14.714605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:15.715434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/07/25 17:50:16.703
  E0507 17:50:16.716257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:17.716361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:18.716494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 05/07/25 17:50:18.77
  STEP: Removing a custom resource @ 05/07/25 17:50:18.78
  I0507 17:50:18.790937 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-721" for this suite. @ 05/07/25 17:50:18.793
• [66.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 05/07/25 17:50:18.799
  I0507 17:50:18.799015 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:50:18.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:50:18.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:50:18.814
  STEP: Setting up server cert @ 05/07/25 17:50:18.833
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:50:19.1
  STEP: Deploying the webhook pod @ 05/07/25 17:50:19.104
  STEP: Wait for the deployment to be ready @ 05/07/25 17:50:19.113
  I0507 17:50:19.119634 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0507 17:50:19.717342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:20.717401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 17:50:21.127
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:50:21.14
  E0507 17:50:21.718474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:50:22.141007 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0507 17:50:22.176085 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9487-crds.webhook.example.com via the AdmissionRegistration API @ 05/07/25 17:50:22.699
  STEP: Creating a custom resource while v1 is storage version @ 05/07/25 17:50:22.713
  E0507 17:50:22.718764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:23.718896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:24.719427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/07/25 17:50:24.74
  STEP: Patching the custom resource while v2 is storage version @ 05/07/25 17:50:24.745
  I0507 17:50:25.334016 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-984" for this suite. @ 05/07/25 17:50:25.337
  STEP: Destroying namespace "webhook-markers-1771" for this suite. @ 05/07/25 17:50:25.344
• [6.551 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 05/07/25 17:50:25.349
  I0507 17:50:25.349957 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 17:50:25.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:50:25.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:50:25.361
  STEP: Read namespace status @ 05/07/25 17:50:25.363
  I0507 17:50:25.365498 24 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/07/25 17:50:25.365
  I0507 17:50:25.369733 24 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/07/25 17:50:25.369
  I0507 17:50:25.376002 24 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0507 17:50:25.376076 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5635" for this suite. @ 05/07/25 17:50:25.438
• [0.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 05/07/25 17:50:25.444
  I0507 17:50:25.444304 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 17:50:25.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:50:25.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:50:25.46
  STEP: Creating a pod to test substitution in container's command @ 05/07/25 17:50:25.462
  E0507 17:50:25.719920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:26.720063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:27.720751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:28.720903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:50:29.477
  I0507 17:50:29.480146 24 output.go:207] Trying to get logs from node mini-2 pod var-expansion-f6b97951-b592-4df9-b370-dfee81b7b3d2 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 17:50:29.486
  I0507 17:50:29.496831 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5118" for this suite. @ 05/07/25 17:50:29.499
• [4.059 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 05/07/25 17:50:29.503
  I0507 17:50:29.503860 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 17:50:29.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:50:29.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:50:29.516
  E0507 17:50:29.721643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:30.721871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:31.722427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:32.722596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:33.723464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:34.724098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:35.724465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:36.724632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:37.725282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:38.725423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:39.726485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:40.726668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:41.726741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:42.726927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:43.727606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:44.727792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:45.728768      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:46.728939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:47.729772      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:48.730458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:49.731397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:50.731559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:51.732254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:52.732402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:50:53.576536 24 container_probe.go:91] Container started at 2025-05-07 17:50:30 +0000 UTC, pod became ready at 2025-05-07 17:50:51 +0000 UTC
  I0507 17:50:53.576633 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-725" for this suite. @ 05/07/25 17:50:53.579
• [24.083 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 05/07/25 17:50:53.587
  I0507 17:50:53.587261 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:50:53.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:50:53.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:50:53.599
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:50:53.601
  E0507 17:50:53.732504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:54.733481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:55.734113      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:56.734454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:50:57.616
  I0507 17:50:57.618442 24 output.go:207] Trying to get logs from node mini-1 pod downwardapi-volume-7f6b2c6a-81af-44e9-9948-96d315de7625 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:50:57.629
  I0507 17:50:57.644237 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7922" for this suite. @ 05/07/25 17:50:57.647
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 05/07/25 17:50:57.652
  I0507 17:50:57.652665 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 17:50:57.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:50:57.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:50:57.665
  STEP: Creating a pod to test downward api env vars @ 05/07/25 17:50:57.667
  E0507 17:50:57.734727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:58.734900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:50:59.734908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:00.735060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:51:01.682
  I0507 17:51:01.684051 24 output.go:207] Trying to get logs from node mini-2 pod downward-api-4bad4368-c0cd-4668-94b5-228740d28003 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 17:51:01.687
  I0507 17:51:01.697101 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2218" for this suite. @ 05/07/25 17:51:01.699
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 05/07/25 17:51:01.704
  I0507 17:51:01.704315 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 17:51:01.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:51:01.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:51:01.714
  STEP: creating service in namespace services-6648 @ 05/07/25 17:51:01.715
  STEP: creating service affinity-nodeport-transition in namespace services-6648 @ 05/07/25 17:51:01.715
  E0507 17:51:01.735842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:01.740213 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0507 17:51:02.735981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:03.736625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:03.744647 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:3, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 51, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 51, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 51, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 51, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-7d57658b6c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 17:51:04.736911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:05.737087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:05.755514 24 resource.go:361] Creating new exec pod
  E0507 17:51:06.737668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:07.737835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:07.773607 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6648 exec execpod-affinitykplzm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0507 17:51:07.848775 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.110.240.16) 80 port [tcp/http] succeeded!\n"
  I0507 17:51:07.848802 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:51:07.848851 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6648 exec execpod-affinitykplzm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.240.16 80'
  I0507 17:51:07.917478 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.240.16 80\nConnection to 10.110.240.16 80 port [tcp/http] succeeded!\n"
  I0507 17:51:07.917505 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:51:07.917555 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6648 exec execpod-affinitykplzm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.31 30533'
  I0507 17:51:07.989503 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.31 30533\nConnection to 10.221.190.31 30533 port [tcp/*] succeeded!\n"
  I0507 17:51:07.989530 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:51:07.989580 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6648 exec execpod-affinitykplzm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.221.190.32 30533'
  I0507 17:51:08.055885 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.221.190.32 30533\nConnection to 10.221.190.32 30533 port [tcp/*] succeeded!\n"
  I0507 17:51:08.055910 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 17:51:08.062298 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6648 exec execpod-affinitykplzm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/ ; done'
  I0507 17:51:08.185715 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n"
  I0507 17:51:08.185747 24 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-pnhpl\naffinity-nodeport-transition-7d57658b6c-pnhpl\naffinity-nodeport-transition-7d57658b6c-pnhpl\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-xlg5z\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-pnhpl\naffinity-nodeport-transition-7d57658b6c-pnhpl\naffinity-nodeport-transition-7d57658b6c-xlg5z\naffinity-nodeport-transition-7d57658b6c-pnhpl\naffinity-nodeport-transition-7d57658b6c-xlg5z\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf"
  I0507 17:51:08.185756 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.185767 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.185772 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-pnhpl
  I0507 17:51:08.185777 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-pnhpl
  I0507 17:51:08.185782 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-pnhpl
  I0507 17:51:08.185787 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.185791 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-xlg5z
  I0507 17:51:08.185796 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.185801 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-pnhpl
  I0507 17:51:08.185806 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-pnhpl
  I0507 17:51:08.185811 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-xlg5z
  I0507 17:51:08.185818 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-pnhpl
  I0507 17:51:08.185825 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-xlg5z
  I0507 17:51:08.185830 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.185834 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.185839 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.192688 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-6648 exec execpod-affinitykplzm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/ ; done'
  I0507 17:51:08.312079 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.221.190.31:30533/\n"
  I0507 17:51:08.312110 24 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf\naffinity-nodeport-transition-7d57658b6c-ls8jf"
  I0507 17:51:08.312124 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312131 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312136 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312141 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312147 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312152 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312159 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312163 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312169 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312174 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312181 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312191 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312201 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312212 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312220 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312228 24 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ls8jf
  I0507 17:51:08.312283 24 service.go:4352] Cleaning up the exec pod
  I0507 17:51:08.351024 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6648" for this suite. @ 05/07/25 17:51:08.355
• [6.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 05/07/25 17:51:08.36
  I0507 17:51:08.360440 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 17:51:08.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:51:08.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:51:08.377
  STEP: creating a secret @ 05/07/25 17:51:08.378
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/07/25 17:51:08.386
  STEP: patching the secret @ 05/07/25 17:51:08.389
  STEP: deleting the secret using a LabelSelector @ 05/07/25 17:51:08.399
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/07/25 17:51:08.494
  I0507 17:51:08.496810 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3013" for this suite. @ 05/07/25 17:51:08.499
• [0.144 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 05/07/25 17:51:08.504
  I0507 17:51:08.504831 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:51:08.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:51:08.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:51:08.519
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-61f6dfdf-d53d-43da-84e0-0c142836e4f7 @ 05/07/25 17:51:08.6
  STEP: Creating the pod @ 05/07/25 17:51:08.609
  E0507 17:51:08.738201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:09.738419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-61f6dfdf-d53d-43da-84e0-0c142836e4f7 @ 05/07/25 17:51:10.628
  STEP: waiting to observe update in volume @ 05/07/25 17:51:10.631
  E0507 17:51:10.739100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:11.739306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:12.640146 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1416" for this suite. @ 05/07/25 17:51:12.643
• [4.144 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 05/07/25 17:51:12.649
  I0507 17:51:12.649169 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/07/25 17:51:12.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:51:12.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:51:12.661
  I0507 17:51:12.666418 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0507 17:51:12.739344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "aggregateddiscovery-8868" for this suite. @ 05/07/25 17:51:12.743
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 05/07/25 17:51:12.749
  I0507 17:51:12.749574 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 17:51:12.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:51:12.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:51:12.761
  STEP: Updating Namespace "namespaces-864" @ 05/07/25 17:51:12.762
  I0507 17:51:12.768099 24 namespace.go:390] Namespace "namespaces-864" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"c2c0f22b-a213-4609-bedd-8b9be538904d", "kubernetes.io/metadata.name":"namespaces-864", "namespaces-864":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0507 17:51:12.768151 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-864" for this suite. @ 05/07/25 17:51:12.844
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/07/25 17:51:12.85
  I0507 17:51:12.850506 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:51:12.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:51:12.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:51:12.866
  STEP: Creating projection with secret that has name projected-secret-test-map-1dedc6cd-a3d6-4f6a-bb74-7b6c22ed91c9 @ 05/07/25 17:51:12.868
  STEP: Creating a pod to test consume secrets @ 05/07/25 17:51:12.871
  E0507 17:51:13.739704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:14.739856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:15.740080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:16.740346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:51:16.885
  I0507 17:51:16.887322 24 output.go:207] Trying to get logs from node mini-1 pod pod-projected-secrets-1db1de9f-48f4-43a9-a6fb-8e0630ae02fd container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 17:51:16.891
  I0507 17:51:16.902838 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2661" for this suite. @ 05/07/25 17:51:16.907
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 05/07/25 17:51:16.912
  I0507 17:51:16.912132 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 17:51:16.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:51:16.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:51:16.924
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/07/25 17:51:16.925
  E0507 17:51:17.741239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:18.741401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:19.741754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:20.741946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:51:20.941
  I0507 17:51:20.944325 24 output.go:207] Trying to get logs from node mini-2 pod pod-8c3960cd-dbed-4d3e-8fa8-fcf4c818d04c container test-container: <nil>
  STEP: delete the pod @ 05/07/25 17:51:20.948
  I0507 17:51:20.958651 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3914" for this suite. @ 05/07/25 17:51:20.961
• [4.054 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 05/07/25 17:51:20.965
  I0507 17:51:20.965833 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 17:51:20.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:51:20.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:51:20.978
  STEP: Counting existing ResourceQuota @ 05/07/25 17:51:20.979
  E0507 17:51:21.742183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:22.742924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:23.743065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:24.743423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:25.744181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/07/25 17:51:25.983
  STEP: Ensuring resource quota status is calculated @ 05/07/25 17:51:25.987
  E0507 17:51:26.744550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:27.744693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 05/07/25 17:51:27.99
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/07/25 17:51:28.001
  E0507 17:51:28.745687      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:29.745825      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/07/25 17:51:30.005
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/07/25 17:51:30.007
  STEP: Ensuring a pod cannot update its resource requirements @ 05/07/25 17:51:30.009
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/07/25 17:51:30.012
  E0507 17:51:30.745984      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:31.746193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/07/25 17:51:32.015
  STEP: Ensuring resource quota status released the pod usage @ 05/07/25 17:51:32.024
  E0507 17:51:32.746580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:33.746747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:34.027921 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-247" for this suite. @ 05/07/25 17:51:34.031
• [13.070 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 05/07/25 17:51:34.036
  I0507 17:51:34.036092 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename dns @ 05/07/25 17:51:34.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:51:34.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:51:34.049
  STEP: Creating a test headless service @ 05/07/25 17:51:34.051
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5234.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-5234.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 05/07/25 17:51:34.055
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5234.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5234.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/07/25 17:51:34.055
  STEP: creating a pod to probe DNS @ 05/07/25 17:51:34.055
  STEP: submitting the pod to kubernetes @ 05/07/25 17:51:34.055
  E0507 17:51:34.747393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:35.747532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:36.747740      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:37.747891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/07/25 17:51:38.077
  STEP: looking for the results for each expected name from probers @ 05/07/25 17:51:38.08
  I0507 17:51:38.092248 24 dns_common.go:546] DNS probes using dns-5234/dns-test-c2c5e4a8-5777-4380-8878-8d6cbdf79e7c succeeded

  STEP: deleting the pod @ 05/07/25 17:51:38.092
  STEP: deleting the test headless service @ 05/07/25 17:51:38.1
  I0507 17:51:38.113350 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5234" for this suite. @ 05/07/25 17:51:38.116
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 05/07/25 17:51:38.121
  I0507 17:51:38.121304 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 17:51:38.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:51:38.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:51:38.137
  STEP: Creating pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417 @ 05/07/25 17:51:38.139
  E0507 17:51:38.748779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:39.748915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 17:51:40.151
  I0507 17:51:40.155111 24 container_probe.go:1748] Initial restart count of pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 is 0
  I0507 17:51:40.157181 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:51:40.749948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:41.750163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:42.159959 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:51:42.750357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:43.750514      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:44.164075 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:51:44.750656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:45.750932      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:46.167254 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:51:46.750961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:47.751103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:48.169992 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:51:48.751631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:49.752487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:50.174477 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:51:50.753105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:51.753310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:52.177775 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:51:52.753386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:53.753545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:54.181222 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:51:54.753737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:55.753866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:56.184565 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:51:56.754310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:57.754435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:51:58.187896 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:51:58.754482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:51:59.754617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:00.191710 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:00.755366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:01.755561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:02.194851 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:02.756480      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:03.756631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:04.198150 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:04.756758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:05.756896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:06.201618 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:06.757318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:07.757471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:08.205040 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:08.757542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:09.757713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:10.208523 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:10.758170      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:11.758476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:12.211913 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:12.758541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:13.758668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:14.215441 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:14.759036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:15.759186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:16.218557 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:16.759234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:17.759383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:18.221835 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:18.759445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:19.759550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:20.225423 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:20.759988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:21.760177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:22.228683 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:22.760228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:23.760311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:24.231573 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:24.761283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:25.761404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:26.234929 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:26.761752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:27.762486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:28.239031 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:28.762602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:29.762770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:30.242505 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:30.763129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:31.763392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:32.246533 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:32.764160      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:33.764332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:34.249926 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:34.764451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:35.764590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:36.253437 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:36.765202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:37.765352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:38.257089 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:38.765670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:39.765796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:40.260438 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:40.765967      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:41.766198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:42.263948 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:42.766494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:43.766655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:44.266884 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:44.767495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:45.767650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:46.270269 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:46.768047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:47.768209      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:48.273620 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:48.769200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:49.769378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:50.277204 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:50.769816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:51.770055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:52.280717 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:52.770248      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:53.770412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:54.283857 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:54.771402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:55.771550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:56.287004 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:56.771829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:57.771991      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:52:58.290778 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:52:58.772337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:52:59.772502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:00.294784 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:00.773406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:01.773633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:02.298093 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:02.774681      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:03.774867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:04.301409 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:04.774986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:05.775133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:06.304776 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:06.775399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:07.775545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:08.308577 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:08.776246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:09.776382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:10.312055 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:10.776545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:11.776794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:12.315229 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:12.777793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:13.777962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:14.318851 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:14.778284      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:15.778435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:16.321811 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:16.779422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:17.779552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:18.325192 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:18.779709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:19.780690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:20.329361 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:20.780829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:21.780986      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:22.332211 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:22.781742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:23.781903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:24.335814 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:24.782314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:25.782466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:26.338896 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:26.782462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:27.782675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:28.342273 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:28.782773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:29.782901      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:30.345780 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:30.783212      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:31.783373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:32.349100 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:32.783545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:33.783732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:34.351910 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:34.784357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:35.784503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:36.355429 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:36.785104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:37.785274      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:38.358595 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:38.786007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:39.786167      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:40.362284 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:40.786829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:41.786900      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:42.365275 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:42.787742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:43.787902      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:44.368328 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:44.788847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:45.789009      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:46.371710 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:46.789236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:47.789395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:48.375192 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:48.789572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:49.789758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:50.378661 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:50.790109      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:51.790203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:52.382567 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:52.791050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:53.791200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:54.385682 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:54.792224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:55.792358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:56.388988 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:56.792630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:57.792765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:53:58.393052 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:53:58.793482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:53:59.793609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:00.396640 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:00.794063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:01.794119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:02.399680 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:02.795132      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:03.795298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:04.402692 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:04.796179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:05.796335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:06.406169 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:06.796767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:07.796904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:08.410517 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:08.797956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:09.798099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:10.413975 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:10.798458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:11.799376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:12.418183 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:12.799605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:13.799777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:14.421351 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:14.800836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:15.800976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:16.424497 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:16.801204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:17.801348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:18.427684 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:18.802140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:19.802297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:20.430931 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:20.802418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:21.802571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:22.433812 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:22.803342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:23.803475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:24.437107 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:24.804557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:25.804701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:26.440294 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:26.804813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:27.804983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:28.444142 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:28.805714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:29.805857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:30.447956 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:30.806490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:31.806690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:32.451317 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:32.806703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:33.806841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:34.454547 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:34.806952      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:35.807100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:36.457917 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:36.807524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:37.807652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:38.461520 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:38.807875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:39.808049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:40.464632 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:40.809118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:41.809231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:42.467613 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:42.810081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:43.810236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:44.470798 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:44.811345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:45.811507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:46.474320 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:46.811928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:47.812090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:48.477769 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:48.812214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:49.812365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:50.481138 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:50.812502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:51.812767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:52.484090 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:52.813613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:53.813774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:54.487458 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:54.813830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:55.813970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:56.490662 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:56.814194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:57.814348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:54:58.493992 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:54:58.814410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:54:59.814555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:00.497546 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:00.814877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:01.815124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:02.500600 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:02.816039      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:03.816231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:04.504247 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:04.816506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:05.816636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:06.507917 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:06.817497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:07.817629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:08.511444 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:08.817796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:09.817929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:10.515683 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:10.818099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:11.818346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:12.519169 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:12.818470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:13.818635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:14.522369 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:14.818699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:15.818836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:16.525789 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:16.819272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:17.819429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:18.529301 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:18.819605      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:19.819760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:20.534499 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:20.819807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:21.820567      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:22.538272 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:22.821604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:23.821785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:24.541777 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:24.822200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:25.822360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:26.544911 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:26.823397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:27.823562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:28.548337 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:28.823625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:29.823724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:30.551542 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:30.823843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:31.824002      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:32.554956 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:32.824218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:33.824344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:34.558271 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:34.824510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:35.824680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:36.561450 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:36.824912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:37.825050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:38.564902 24 container_probe.go:1758] Get pod busybox-8abb3915-8882-43df-aa59-0da94e55ce85 in namespace container-probe-6417
  E0507 17:55:38.825145      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:39.825297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/07/25 17:55:40.565
  I0507 17:55:40.577489 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6417" for this suite. @ 05/07/25 17:55:40.58
• [242.465 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/07/25 17:55:40.586
  I0507 17:55:40.586235 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename server-version @ 05/07/25 17:55:40.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:55:40.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:55:40.6
  STEP: Request ServerVersion @ 05/07/25 17:55:40.602
  STEP: Confirm major version @ 05/07/25 17:55:40.603
  I0507 17:55:40.603263 24 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 05/07/25 17:55:40.603
  I0507 17:55:40.603280 24 server_version.go:58] cleanMinorVersion: 33
  I0507 17:55:40.603287 24 server_version.go:62] Minor version: 33
  I0507 17:55:40.603333 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6365" for this suite. @ 05/07/25 17:55:40.681
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 05/07/25 17:55:40.687
  I0507 17:55:40.687474 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 17:55:40.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:55:40.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:55:40.699
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 17:55:40.7
  E0507 17:55:40.826313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:41.826468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:42.827459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:43.827620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:55:44.716
  I0507 17:55:44.718300 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-875aa419-b0f0-45d4-97dc-1928c5108b5e container client-container: <nil>
  STEP: delete the pod @ 05/07/25 17:55:44.728
  I0507 17:55:44.739152 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6386" for this suite. @ 05/07/25 17:55:44.743
• [4.060 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 05/07/25 17:55:44.747
  I0507 17:55:44.747852 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:55:44.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:55:44.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:55:44.759
  STEP: Setting up server cert @ 05/07/25 17:55:44.776
  E0507 17:55:44.828287      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:55:45.059
  STEP: Deploying the webhook pod @ 05/07/25 17:55:45.063
  STEP: Wait for the deployment to be ready @ 05/07/25 17:55:45.075
  I0507 17:55:45.081524 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0507 17:55:45.829376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:46.829535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:47.090483 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 17, 55, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 55, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 17, 55, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 17, 55, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 17:55:47.830387      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:48.830540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 17:55:49.094
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:55:49.111
  E0507 17:55:49.830801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:50.112100 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/07/25 17:55:50.115
  STEP: verifying the mutating webhook match conditions @ 05/07/25 17:55:50.121
  STEP: updating the mutating webhook match conditions @ 05/07/25 17:55:50.124
  STEP: verifying the mutating webhook match conditions @ 05/07/25 17:55:50.132
  I0507 17:55:50.178670 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2869" for this suite. @ 05/07/25 17:55:50.181
  STEP: Destroying namespace "webhook-markers-2365" for this suite. @ 05/07/25 17:55:50.188
• [5.446 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 05/07/25 17:55:50.193
  I0507 17:55:50.193742 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 17:55:50.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:55:50.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:55:50.221
  STEP: Creating replication controller my-hostname-basic-4cd770ed-864f-47b2-983d-4a96e1d9ba40 @ 05/07/25 17:55:50.224
  I0507 17:55:50.232768 24 resource.go:81] Pod name my-hostname-basic-4cd770ed-864f-47b2-983d-4a96e1d9ba40: Found 0 pods out of 1
  E0507 17:55:50.831497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:51.831537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:52.831696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:53.831842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:54.832249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:55.236847 24 resource.go:81] Pod name my-hostname-basic-4cd770ed-864f-47b2-983d-4a96e1d9ba40: Found 1 pods out of 1
  I0507 17:55:55.236864 24 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-4cd770ed-864f-47b2-983d-4a96e1d9ba40" are running
  I0507 17:55:55.239431 24 rc.go:525] Pod "my-hostname-basic-4cd770ed-864f-47b2-983d-4a96e1d9ba40-q5qrb" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 17:55:52 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 17:55:50 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 17:55:52 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 17:55:52 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-07 17:55:50 +0000 UTC Reason: Message:}])
  I0507 17:55:55.239459 24 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/07/25 17:55:55.239
  I0507 17:55:55.248049 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6692" for this suite. @ 05/07/25 17:55:55.251
• [5.063 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 05/07/25 17:55:55.256
  I0507 17:55:55.256577 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 17:55:55.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:55:55.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:55:55.27
  I0507 17:55:55.274482 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8745" for this suite. @ 05/07/25 17:55:55.351
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 05/07/25 17:55:55.356
  I0507 17:55:55.356626 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 17:55:55.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:55:55.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:55:55.372
  I0507 17:55:55.374686 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 17:55:55.832440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:56.833177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:57.833369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:55:57.906314      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0507 17:55:57.906337      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0507 17:55:57.906342      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0507 17:55:57.906362      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0507 17:55:57.906366      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0507 17:55:58.435414 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6713" for this suite. @ 05/07/25 17:55:58.438
• [3.086 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 05/07/25 17:55:58.442
  I0507 17:55:58.442448 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/07/25 17:55:58.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:55:58.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:55:58.455
  I0507 17:55:58.457477 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0507 17:55:58.833934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:55:59.834103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:00.835125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:01.835234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:02.836016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:03.836141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:04.836505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:05.836668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:06.836960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:07.837125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:08.838147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:09.838282      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:10.838441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:11.839185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:12.839558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:13.839682      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:14.840656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:15.840818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:16.841849      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:17.841988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:18.842946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:19.843128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:20.843446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:21.843539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:22.844054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:23.844191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:24.844454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:25.844629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:26.844910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:27.845080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:28.845386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:29.845517      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:30.846176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:31.846693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:32.847636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:33.847812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:34.848636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:35.848786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:36.849569      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:37.849752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:38.850049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:39.850228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:40.851097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:41.851201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:42.851337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:43.851467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:44.852551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:45.852709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:46.853004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:47.853175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:48.853819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:49.853961      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:50.854743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:51.854793      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:52.854972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:53.855486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:54.856177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:55.856395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:56.856610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:57.856771      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:56:58.458546 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0507 17:56:58.461121 24 taints.go:144] Starting informer...
  STEP: Starting pods... @ 05/07/25 17:56:58.461
  I0507 17:56:58.673502 24 taints.go:463] Pod1 is running on mini-2. Tainting Node
  E0507 17:56:58.857033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:56:59.858072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:00.858533      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:57:00.895831 24 taints.go:471] Pod2 is running on mini-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/07/25 17:57:00.895
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/07/25 17:57:00.905
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/07/25 17:57:00.91
  E0507 17:57:01.858688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:02.858832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:03.858939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:04.859065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:05.859222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:57:06.301835 24 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0507 17:57:06.859594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:07.859735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:08.859849      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:09.859969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:10.860104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:11.860158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:12.861185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:13.861342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:14.861472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:15.861590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:16.861688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:17.861814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:18.861939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:19.862073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:20.862222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:21.862344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:22.862488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:23.862620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:24.862773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:25.862915      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:57:26.326922 24 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/07/25 17:57:26.336
  I0507 17:57:26.339515 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6878" for this suite. @ 05/07/25 17:57:26.342
• [87.905 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 05/07/25 17:57:26.349
  I0507 17:57:26.349809 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 17:57:26.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:57:26.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:57:26.377
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/07/25 17:57:26.379
  E0507 17:57:26.863292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:27.863415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:28.863479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:29.863623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 17:57:30.397
  I0507 17:57:30.399957 24 output.go:207] Trying to get logs from node mini-2 pod pod-b569c5b1-4096-4dc6-aacc-97e18e937a38 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 17:57:30.408
  I0507 17:57:30.418162 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7101" for this suite. @ 05/07/25 17:57:30.42
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 05/07/25 17:57:30.425
  I0507 17:57:30.425183 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/07/25 17:57:30.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:57:30.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:57:30.435
  STEP: create the container to handle the HTTPGet hook request. @ 05/07/25 17:57:30.521
  E0507 17:57:30.864574      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:31.864698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/07/25 17:57:32.536
  E0507 17:57:32.865207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:33.865756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/07/25 17:57:34.547
  E0507 17:57:34.865871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:35.866001      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:36.866711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:37.866851      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/07/25 17:57:38.559
  I0507 17:57:38.564024 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2770" for this suite. @ 05/07/25 17:57:38.566
• [8.146 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:935
  STEP: Creating a kubernetes client @ 05/07/25 17:57:38.571
  I0507 17:57:38.571218 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sched-preemption @ 05/07/25 17:57:38.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:57:38.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:57:38.584
  I0507 17:57:38.595434 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0507 17:57:38.867642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:39.867821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:40.868247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:41.868330      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:42.869049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:43.869203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:44.870059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:45.870202      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:46.871128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:47.871279      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:48.871459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:49.871823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:50.872594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:51.872626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:52.873272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:53.873377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:54.874232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:55.874361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:56.874875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:57.875065      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:58.875172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:57:59.875369      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:00.875830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:01.875989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:02.876712      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:03.876869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:04.876950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:05.877111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:06.877903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:07.878081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:08.878913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:09.879059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:10.879193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:11.879979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:12.880923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:13.881099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:14.881544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:15.881671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:16.881977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:17.882134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:18.882907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:19.883070      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:20.883230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:21.883328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:22.883813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:23.883981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:24.884715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:25.884878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:26.884975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:27.885118      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:28.885326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:29.885489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:30.885620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:31.885750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:32.885872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:33.885987      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:34.886703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:35.886843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:36.886960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:37.887093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:58:38.599741 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/07/25 17:58:38.601
  I0507 17:58:38.601987 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/07/25 17:58:38.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:58:38.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:58:38.615
  I0507 17:58:38.626969 24 preemption.go:941] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0507 17:58:38.629253 24 preemption.go:947] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 05/07/25 17:58:38.661
  STEP: Removing a custom resource @ 05/07/25 17:58:38.668
  I0507 17:58:38.676007 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1865" for this suite. @ 05/07/25 17:58:38.7
  I0507 17:58:38.708166 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4906" for this suite. @ 05/07/25 17:58:38.8
• [60.235 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/07/25 17:58:38.806
  I0507 17:58:38.806395 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename lease-test @ 05/07/25 17:58:38.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:58:38.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:58:38.818
  I0507 17:58:38.855524 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0507 17:58:38.887680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "lease-test-6414" for this suite. @ 05/07/25 17:58:38.902
• [0.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 05/07/25 17:58:38.908
  I0507 17:58:38.908328 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/07/25 17:58:38.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:58:38.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:58:38.92
  STEP: create the container to handle the HTTPGet hook request. @ 05/07/25 17:58:39.002
  E0507 17:58:39.888354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:40.888467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:41.889011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:42.889215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/07/25 17:58:43.021
  E0507 17:58:43.889342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:44.889497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/07/25 17:58:45.033
  STEP: delete the pod with lifecycle hook @ 05/07/25 17:58:45.045
  E0507 17:58:45.890130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:46.890200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:47.890769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:48.890935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:58:49.061560 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6055" for this suite. @ 05/07/25 17:58:49.065
• [10.162 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 05/07/25 17:58:49.07
  I0507 17:58:49.070168 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 17:58:49.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:58:49.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:58:49.084
  STEP: Creating pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424 @ 05/07/25 17:58:49.086
  E0507 17:58:49.891399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:50.891527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 17:58:51.097
  I0507 17:58:51.099536 24 container_probe.go:1748] Initial restart count of pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a is 0
  I0507 17:58:51.101089 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:58:51.892201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:52.892348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:58:53.104165 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:58:53.892928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:54.893096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:58:55.107233 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:58:55.894156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:56.894251      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:58:57.111570 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:58:57.894362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:58:58.894511      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:58:59.115323 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:58:59.895092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:00.895235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:01.118939 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:01.895974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:02.896124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:03.122603 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:03.896420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:04.896620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:05.125651 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:05.897579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:06.897668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:07.128959 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:07.897801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:08.897928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:09.132019 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:09.898884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:10.899421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:11.135761 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:11.899562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:12.899725      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:13.138917 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:13.900722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:14.901654      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:15.143121 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:15.901834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:16.901979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:17.146363 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:17.902139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:18.902258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:19.150857 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:19.902667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:20.902843      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:21.154590 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:21.903444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:22.903594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:23.157599 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:23.904349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:24.904728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:25.160642 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:25.905354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:26.905478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:27.163697 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:27.905526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:28.905622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:29.166655 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:29.906555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:30.907526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:31.169891 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:31.907840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:32.907957      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:33.173270 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:33.908010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:34.908172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:35.176263 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:35.909054      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:36.909160      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:37.179238 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:37.910140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:38.910280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:39.182158 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  E0507 17:59:39.910416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:40.911407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:41.186042 24 container_probe.go:1758] Get pod busybox-8784c408-18b9-4985-ad94-88c1c53bb53a in namespace container-probe-7424
  I0507 17:59:41.186074 24 container_probe.go:1762] Restart count of pod container-probe-7424/busybox-8784c408-18b9-4985-ad94-88c1c53bb53a is now 1 (50.086496399s elapsed)
  STEP: deleting the pod @ 05/07/25 17:59:41.186
  I0507 17:59:41.195174 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7424" for this suite. @ 05/07/25 17:59:41.199
• [52.134 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 05/07/25 17:59:41.204
  I0507 17:59:41.204424 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubelet-test @ 05/07/25 17:59:41.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:59:41.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:59:41.221
  E0507 17:59:41.912235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:42.912366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:43.245876 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4102" for this suite. @ 05/07/25 17:59:43.249
• [2.049 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 05/07/25 17:59:43.253
  I0507 17:59:43.253397 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename gc @ 05/07/25 17:59:43.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:59:43.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:59:43.262
  STEP: create the deployment @ 05/07/25 17:59:43.264
  I0507 17:59:43.268598      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/07/25 17:59:43.268
  STEP: delete the deployment @ 05/07/25 17:59:43.771
  STEP: wait for all rs to be garbage collected @ 05/07/25 17:59:43.774
  STEP: expected 0 pods, got 2 pods @ 05/07/25 17:59:43.789
  E0507 17:59:43.913338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/07/25 17:59:44.292
  I0507 17:59:44.364856 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 17:59:44.364991 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4722" for this suite. @ 05/07/25 17:59:44.368
• [1.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 05/07/25 17:59:44.372
  I0507 17:59:44.372513 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 17:59:44.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:59:44.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:59:44.386
  STEP: Setting up server cert @ 05/07/25 17:59:44.405
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 17:59:44.7
  STEP: Deploying the webhook pod @ 05/07/25 17:59:44.705
  STEP: Wait for the deployment to be ready @ 05/07/25 17:59:44.715
  I0507 17:59:44.721694 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0507 17:59:44.913975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:45.914148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 17:59:46.729
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 17:59:46.743
  E0507 17:59:46.914252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 17:59:47.743147 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0507 17:59:47.746414 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 17:59:47.915137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/07/25 17:59:48.252
  STEP: Creating a custom resource that should be denied by the webhook @ 05/07/25 17:59:48.263
  E0507 17:59:48.915767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:49.915913      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/07/25 17:59:50.277
  STEP: Updating the custom resource with disallowed data should be denied @ 05/07/25 17:59:50.282
  STEP: Deleting the custom resource should be denied @ 05/07/25 17:59:50.288
  STEP: Remove the offending key and value from the custom resource data @ 05/07/25 17:59:50.292
  STEP: Deleting the updated custom resource should be successful @ 05/07/25 17:59:50.299
  I0507 17:59:50.861493 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1615" for this suite. @ 05/07/25 17:59:50.864
  STEP: Destroying namespace "webhook-markers-9102" for this suite. @ 05/07/25 17:59:50.869
• [6.502 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 05/07/25 17:59:50.874
  I0507 17:59:50.874182 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 17:59:50.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:59:50.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:59:50.886
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 05/07/25 17:59:50.888
  STEP: Awaiting for the job to fail as all indexes are failed @ 05/07/25 17:59:50.892
  E0507 17:59:50.915977      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:51.916159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:52.916521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:53.916708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 05/07/25 17:59:54.901
  I0507 17:59:54.904727 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7105" for this suite. @ 05/07/25 17:59:54.907
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 05/07/25 17:59:54.913
  I0507 17:59:54.913070 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 17:59:54.913
  E0507 17:59:54.916925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 17:59:54.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 17:59:54.925
  STEP: Creating a ResourceQuota with terminating scope @ 05/07/25 17:59:54.926
  STEP: Ensuring ResourceQuota status is calculated @ 05/07/25 17:59:54.93
  E0507 17:59:55.917404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:56.917486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 05/07/25 17:59:56.933
  STEP: Ensuring ResourceQuota status is calculated @ 05/07/25 17:59:56.937
  E0507 17:59:57.917735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 17:59:58.917903      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 05/07/25 17:59:58.941
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/07/25 17:59:58.952
  E0507 17:59:59.918713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:00.918839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/07/25 18:00:00.956
  E0507 18:00:01.919448      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:02.919583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/07/25 18:00:02.96
  STEP: Ensuring resource quota status released the pod usage @ 05/07/25 18:00:02.969
  E0507 18:00:03.919658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:04.920267      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 05/07/25 18:00:04.973
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/07/25 18:00:04.982
  E0507 18:00:05.921089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:06.921218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/07/25 18:00:06.985
  E0507 18:00:07.921988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:08.922081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/07/25 18:00:08.987
  STEP: Ensuring resource quota status released the pod usage @ 05/07/25 18:00:08.995
  E0507 18:00:09.922491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:10.922656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:00:10.998778 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7509" for this suite. @ 05/07/25 18:00:11.002
• [16.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 05/07/25 18:00:11.007
  I0507 18:00:11.007314 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename security-context-test @ 05/07/25 18:00:11.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:00:11.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:00:11.02
  E0507 18:00:11.923310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:12.923468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:13.923588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:14.923972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:00:15.039042 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7471" for this suite. @ 05/07/25 18:00:15.042
• [4.039 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 05/07/25 18:00:15.046
  I0507 18:00:15.046696 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubelet-test @ 05/07/25 18:00:15.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:00:15.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:00:15.059
  STEP: Waiting for pod completion @ 05/07/25 18:00:15.066
  E0507 18:00:15.924043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:16.924185      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:17.925188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:18.925366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:00:19.084092 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7175" for this suite. @ 05/07/25 18:00:19.087
• [4.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 05/07/25 18:00:19.093
  I0507 18:00:19.093174 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 18:00:19.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:00:19.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:00:19.106
  E0507 18:00:19.925426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:20.925487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:21.925963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:22.926899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:23.927225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:24.927396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:25.928414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:26.929298      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:27.930076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:28.930634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:29.930906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:30.931174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:31.931829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:32.931907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:33.932389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:34.933218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:35.933263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/07/25 18:00:36.112
  E0507 18:00:36.934318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:37.934429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:38.934537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:39.935609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:40.936116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/07/25 18:00:41.116
  STEP: Ensuring resource quota status is calculated @ 05/07/25 18:00:41.12
  E0507 18:00:41.936342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:42.936421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 05/07/25 18:00:43.123
  STEP: Ensuring resource quota status captures configMap creation @ 05/07/25 18:00:43.131
  E0507 18:00:43.936827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:44.937199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 05/07/25 18:00:45.135
  STEP: Ensuring resource quota status released usage @ 05/07/25 18:00:45.139
  E0507 18:00:45.937787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:46.937946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:00:47.143156 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4596" for this suite. @ 05/07/25 18:00:47.146
• [28.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/07/25 18:00:47.151
  I0507 18:00:47.151988 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/07/25 18:00:47.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:00:47.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:00:47.166
  STEP: creating @ 05/07/25 18:00:47.167
  STEP: getting @ 05/07/25 18:00:47.18
  STEP: listing in namespace @ 05/07/25 18:00:47.183
  STEP: patching @ 05/07/25 18:00:47.188
  STEP: deleting @ 05/07/25 18:00:47.193
  I0507 18:00:47.200767 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4770" for this suite. @ 05/07/25 18:00:47.247
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/07/25 18:00:47.252
  I0507 18:00:47.252364 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 18:00:47.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:00:47.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:00:47.263
  STEP: Creating secret with name projected-secret-test-813f54a7-c593-4fdd-bcb1-628518309f14 @ 05/07/25 18:00:47.264
  STEP: Creating a pod to test consume secrets @ 05/07/25 18:00:47.268
  E0507 18:00:47.938235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:48.938424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:49.939381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:50.939534      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:00:51.285
  I0507 18:00:51.291400 24 output.go:207] Trying to get logs from node mini-2 pod pod-projected-secrets-1f9f1c8d-d97c-42e8-9ffd-206e2b9fd2e3 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 18:00:51.297
  I0507 18:00:51.308795 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3959" for this suite. @ 05/07/25 18:00:51.311
• [4.064 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 05/07/25 18:00:51.316
  I0507 18:00:51.316196 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 18:00:51.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:00:51.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:00:51.329
  I0507 18:00:51.331472 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 18:00:51.940325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:52.940468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:00:53.869224      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0507 18:00:53.869250      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0507 18:00:53.869255      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0507 18:00:53.869260      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0507 18:00:53.869279      24 warnings.go:110] "Warning: unknown field \"gamma\""
  E0507 18:00:53.940971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:00:54.396014 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7730" for this suite. @ 05/07/25 18:00:54.398
• [3.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/07/25 18:00:54.404
  I0507 18:00:54.404898 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename deployment @ 05/07/25 18:00:54.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:00:54.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:00:54.416
  I0507 18:00:54.418881 24 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0507 18:00:54.424419 24 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0507 18:00:54.941031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:55.941176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:56.941307      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:57.941462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:00:58.941624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:00:59.428460 24 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/07/25 18:00:59.428
  I0507 18:00:59.428536 24 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0507 18:00:59.432646 24 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0507 18:00:59.437307 24 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0507 18:00:59.941814      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:00.941962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:01:01.443305 24 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0507 18:01:01.445152 24 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0507 18:01:01.451181 24 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-391",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d0ef873-cd8a-482e-9847-9a8f7e8ee9bb",
      ResourceVersion: (string) (len=7) "2249061",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882237659,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0507 18:01:01.454180 24 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-391",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7564400-04ac-4d5c-a1e1-0832e53ed628",
      ResourceVersion: (string) (len=7) "2249051",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882237659,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2d0ef873-cd8a-482e-9847-9a8f7e8ee9bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 64 30 65 66 38  37 33 2d 63 64 38 61 2d  |\"2d0ef873-cd8a-|
              00000120  34 38 32 65 2d 39 38 34  37 2d 39 61 38 66 37 65  |482e-9847-9a8f7e|
              00000130  38 65 65 39 62 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8ee9bb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 18:01:01.454767 24 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0507 18:01:01.454890 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-391",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3839561-df7e-40f0-9ae5-3a2407511068",
      ResourceVersion: (string) (len=7) "2249060",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882237654,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2d0ef873-cd8a-482e-9847-9a8f7e8ee9bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 32 64 30 65 66 38 37  |"uid\":\"2d0ef87|
              000000b0  33 2d 63 64 38 61 2d 34  38 32 65 2d 39 38 34 37  |3-cd8a-482e-9847|
              000000c0  2d 39 61 38 66 37 65 38  65 65 39 62 62 5c 22 7d  |-9a8f7e8ee9bb\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0507 18:01:01.457908 24 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-pwtwd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-pwtwd",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=14) "deployment-391",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ee38a77-934f-43a1-b4a1-a9a1eba2abc4",
      ResourceVersion: (string) (len=7) "2249050",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882237659,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "83904a7ddd4490cd6ba9dca72dfd072ddddcf11323625d14ba1f31d7a3227da9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=18) "192.168.158.138/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=18) "192.168.158.138/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "f7564400-04ac-4d5c-a1e1-0832e53ed628",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 37  35 36 34 34 30 30 2d 30  |d\":\"f7564400-0|
              00000090  34 61 63 2d 34 64 35 63  2d 61 31 65 31 2d 30 38  |4ac-4d5c-a1e1-08|
              000000a0  33 32 65 35 33 65 64 36  32 38 5c 22 7d 22 3a 7b  |32e53ed628\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  38 2e 31 33 38 5c 22 7d  |2.168.158.138\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jffl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jffl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "mini-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882237659,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.221.190.32",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.221.190.32"
        }
      },
      PodIP: (string) (len=15) "192.168.158.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.158.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882237659,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882237660,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://5b94b05e5af3f39affefe4579568fbeb1d507530e13bebab79074b5f74fe6c90",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8jffl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0507 18:01:01.459246 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-391" for this suite. @ 05/07/25 18:01:01.461
• [7.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 05/07/25 18:01:01.465
  I0507 18:01:01.465578 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/07/25 18:01:01.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:01:01.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:01:01.478
  STEP: creating a target pod @ 05/07/25 18:01:01.479
  E0507 18:01:01.942617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:02.942787      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/07/25 18:01:03.493
  E0507 18:01:03.943719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:04.943879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:05.944845      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:06.945030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 05/07/25 18:01:07.511
  STEP: checking pod container endpoints @ 05/07/25 18:01:07.513
  I0507 18:01:07.513911 24 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-740 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 18:01:07.513934 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 18:01:07.513956 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-740/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0507 18:01:07.550335 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 18:01:07.550350 24 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/07/25 18:01:07.557
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/07/25 18:01:07.559
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/07/25 18:01:07.569
  I0507 18:01:07.574847 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-740" for this suite. @ 05/07/25 18:01:07.577
• [6.125 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 05/07/25 18:01:07.591
  I0507 18:01:07.591110 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 18:01:07.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:01:07.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:01:07.603
  STEP: Setting up server cert @ 05/07/25 18:01:07.621
  E0507 18:01:07.945492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 18:01:08.687
  STEP: Deploying the webhook pod @ 05/07/25 18:01:08.691
  STEP: Wait for the deployment to be ready @ 05/07/25 18:01:08.7
  I0507 18:01:08.706097 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0507 18:01:08.946467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:09.946599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 18:01:10.713
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 18:01:10.726
  E0507 18:01:10.946803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:01:11.726618 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/07/25 18:01:11.729
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/07/25 18:01:11.739
  STEP: Creating a dummy validating-webhook-configuration object @ 05/07/25 18:01:11.749
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/07/25 18:01:11.755
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/07/25 18:01:11.759
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/07/25 18:01:11.765
  I0507 18:01:11.817585 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9670" for this suite. @ 05/07/25 18:01:11.823
  STEP: Destroying namespace "webhook-markers-7141" for this suite. @ 05/07/25 18:01:11.829
• [4.243 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 05/07/25 18:01:11.834
  I0507 18:01:11.834031 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 18:01:11.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:01:11.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:01:11.851
  STEP: Creating configMap with name cm-test-opt-del-6506e546-26e8-4d6f-9062-57bb6270f579 @ 05/07/25 18:01:11.923
  STEP: Creating configMap with name cm-test-opt-upd-6dc63f97-5134-4d7c-b2c9-3d57d7e4714d @ 05/07/25 18:01:11.926
  STEP: Creating the pod @ 05/07/25 18:01:11.93
  E0507 18:01:11.947420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:12.947614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:13.947611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:14.948047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:15.948161      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-6506e546-26e8-4d6f-9062-57bb6270f579 @ 05/07/25 18:01:15.963
  STEP: Updating configmap cm-test-opt-upd-6dc63f97-5134-4d7c-b2c9-3d57d7e4714d @ 05/07/25 18:01:15.968
  STEP: Creating configMap with name cm-test-opt-create-465788ae-a50b-4ed7-97b4-fd203a2ad6b8 @ 05/07/25 18:01:15.971
  STEP: waiting to observe update in volume @ 05/07/25 18:01:15.976
  E0507 18:01:16.948994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:17.949127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:18.949887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:19.950031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:20.950627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:21.950718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:22.951224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:23.951497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:24.951671      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:25.951810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:26.952544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:27.952716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:28.952810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:29.952951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:30.953150      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:31.953295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:32.953433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:33.953622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:34.953859      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:35.954668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:36.955178      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:37.955306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:38.956304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:39.956423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:40.957013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:41.957108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:42.957419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:43.957556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:44.957773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:45.957862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:46.958862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:47.958997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:48.959840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:49.959958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:50.960727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:51.960807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:52.961004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:53.961177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:54.961702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:55.961867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:56.962236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:57.962367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:58.962498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:01:59.962668      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:00.962801      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:01.962847      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:02.963418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:03.963580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:04.963877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:05.964036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:06.964481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:07.964639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:08.965676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:09.965832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:10.965906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:11.966033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:12.966743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:13.966878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:14.967351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:15.967510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:16.967943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:17.968097      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:18.968437      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:19.968593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:20.968864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:21.968997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:02:22.180532 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5624" for this suite. @ 05/07/25 18:02:22.183
• [70.355 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 05/07/25 18:02:22.189
  I0507 18:02:22.189154 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename gc @ 05/07/25 18:02:22.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:02:22.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:02:22.201
  STEP: create the rc1 @ 05/07/25 18:02:22.284
  STEP: create the rc2 @ 05/07/25 18:02:22.288
  E0507 18:02:22.969066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:23.969435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:24.970461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:25.971439      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:26.972425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:27.973433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/07/25 18:02:28.302
  E0507 18:02:28.973792      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/07/25 18:02:29.705
  STEP: wait for the rc to be deleted @ 05/07/25 18:02:29.71
  E0507 18:02:29.974312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:30.974595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:31.975312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:32.975430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:33.975512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:02:34.719981 24 garbage_collector.go:770] 71 pods remaining
  I0507 18:02:34.720001 24 garbage_collector.go:777] 71 pods has nil DeletionTimestamp
  I0507 18:02:34.720006 24 garbage_collector.go:778] 
  E0507 18:02:34.975703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:35.976465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:36.977446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:37.978424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:38.979421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/07/25 18:02:39.717
  I0507 18:02:39.781153 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 18:02:39.781210 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2f6vd" in namespace "gc-4453"
  I0507 18:02:39.790821 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2m5wc" in namespace "gc-4453"
  I0507 18:02:39.800397 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2pfdg" in namespace "gc-4453"
  I0507 18:02:39.810441 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2shw6" in namespace "gc-4453"
  I0507 18:02:39.819502 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2ttlk" in namespace "gc-4453"
  I0507 18:02:39.828110 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2v8g7" in namespace "gc-4453"
  I0507 18:02:39.839822 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2vkwq" in namespace "gc-4453"
  I0507 18:02:39.849016 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2zqds" in namespace "gc-4453"
  I0507 18:02:39.856348 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-42mg4" in namespace "gc-4453"
  I0507 18:02:39.864120 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-485ln" in namespace "gc-4453"
  I0507 18:02:39.872568 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-492s8" in namespace "gc-4453"
  I0507 18:02:39.880211 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-49d2p" in namespace "gc-4453"
  I0507 18:02:39.887185 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4k9vt" in namespace "gc-4453"
  I0507 18:02:39.896234 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4zhhk" in namespace "gc-4453"
  I0507 18:02:39.903913 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-57m6g" in namespace "gc-4453"
  I0507 18:02:39.912607 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-595t2" in namespace "gc-4453"
  I0507 18:02:39.920815 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5gbgs" in namespace "gc-4453"
  I0507 18:02:39.928362 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5q6tt" in namespace "gc-4453"
  I0507 18:02:39.934762 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-68qcg" in namespace "gc-4453"
  I0507 18:02:39.942305 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6qts4" in namespace "gc-4453"
  I0507 18:02:39.949175 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6tvln" in namespace "gc-4453"
  I0507 18:02:39.959443 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7bmgh" in namespace "gc-4453"
  I0507 18:02:39.967549 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7lkwk" in namespace "gc-4453"
  I0507 18:02:39.975844 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7q8sb" in namespace "gc-4453"
  E0507 18:02:39.980046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:02:39.996813 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8hf8z" in namespace "gc-4453"
  I0507 18:02:40.009971 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8nmfg" in namespace "gc-4453"
  I0507 18:02:40.019530 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8t6v5" in namespace "gc-4453"
  I0507 18:02:40.027105 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9gsdm" in namespace "gc-4453"
  I0507 18:02:40.036048 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bcnv4" in namespace "gc-4453"
  I0507 18:02:40.045828 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bkc7n" in namespace "gc-4453"
  I0507 18:02:40.059110 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c899k" in namespace "gc-4453"
  I0507 18:02:40.071438 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cgzd8" in namespace "gc-4453"
  I0507 18:02:40.085601 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cmdft" in namespace "gc-4453"
  I0507 18:02:40.095341 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d52p8" in namespace "gc-4453"
  I0507 18:02:40.109161 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d68rs" in namespace "gc-4453"
  I0507 18:02:40.123505 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d85bq" in namespace "gc-4453"
  I0507 18:02:40.144261 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dfbx9" in namespace "gc-4453"
  I0507 18:02:40.158996 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dnqvn" in namespace "gc-4453"
  I0507 18:02:40.174265 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-drqnn" in namespace "gc-4453"
  I0507 18:02:40.184822 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dszv6" in namespace "gc-4453"
  I0507 18:02:40.196870 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f4vzc" in namespace "gc-4453"
  I0507 18:02:40.204426 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f6jlj" in namespace "gc-4453"
  I0507 18:02:40.215262 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fd957" in namespace "gc-4453"
  I0507 18:02:40.221789 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fdw4l" in namespace "gc-4453"
  I0507 18:02:40.229417 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fkssm" in namespace "gc-4453"
  I0507 18:02:40.238895 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ft4kj" in namespace "gc-4453"
  I0507 18:02:40.245652 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fwvld" in namespace "gc-4453"
  I0507 18:02:40.255610 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g6dvn" in namespace "gc-4453"
  I0507 18:02:40.268005 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g6klc" in namespace "gc-4453"
  I0507 18:02:40.275068 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g8m7v" in namespace "gc-4453"
  I0507 18:02:40.290351 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4453" for this suite. @ 05/07/25 18:02:40.294
• [18.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 05/07/25 18:02:40.299
  I0507 18:02:40.299029 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 18:02:40.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:02:40.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:02:40.322
  STEP: apply creating a deployment @ 05/07/25 18:02:40.324
  I0507 18:02:40.335180 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4707" for this suite. @ 05/07/25 18:02:40.394
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 05/07/25 18:02:40.403
  I0507 18:02:40.403465 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-selectable-fields @ 05/07/25 18:02:40.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:02:40.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:02:40.421
  STEP: Setting up server cert @ 05/07/25 18:02:40.423
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/07/25 18:02:40.582
  STEP: Deploying the custom resource conversion webhook pod @ 05/07/25 18:02:40.592
  STEP: Wait for the deployment to be ready @ 05/07/25 18:02:40.601
  I0507 18:02:40.606769 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0507 18:02:40.980229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:41.980767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:02:42.614529 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:02:42.980956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:43.981010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:02:44.617096 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:02:44.981426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:45.982478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:02:46.617466 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:02:46.983011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:47.983122      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:02:48.624191 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:02:48.983424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:49.984473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:02:50.617096 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 2, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:02:50.985432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:51.985502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 18:02:52.617
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 18:02:52.631
  E0507 18:02:52.986421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:02:53.632002 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 05/07/25 18:02:53.635
  I0507 18:02:53.635195 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 18:02:53.986584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource conversion webhook @ 05/07/25 18:02:54.142
  E0507 18:02:54.986586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:55.986715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 05/07/25 18:02:56.181
  STEP: Registering informers with field selectors @ 05/07/25 18:02:56.183
  STEP: Creating custom resources @ 05/07/25 18:02:56.183
  STEP: Listing v2 custom resources with field selector host=host1 @ 05/07/25 18:02:56.199
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 05/07/25 18:02:56.201
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 05/07/25 18:02:56.203
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 05/07/25 18:02:56.204
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 05/07/25 18:02:56.206
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 05/07/25 18:02:56.211
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 05/07/25 18:02:56.211
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 05/07/25 18:02:56.211
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 05/07/25 18:02:56.211
  STEP: Deleting one custom resources to ensure that deletions are observed @ 05/07/25 18:02:56.211
  STEP: Updating one custom resources to ensure that deletions are observed @ 05/07/25 18:02:56.222
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 05/07/25 18:02:56.23
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 05/07/25 18:02:56.232
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 05/07/25 18:02:56.234
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 05/07/25 18:02:56.239
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 05/07/25 18:02:56.239
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 05/07/25 18:02:56.239
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 05/07/25 18:02:56.239
  I0507 18:02:56.790295 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-3024" for this suite. @ 05/07/25 18:02:56.797
• [16.400 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/07/25 18:02:56.803
  I0507 18:02:56.803641 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename init-container @ 05/07/25 18:02:56.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:02:56.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:02:56.822
  STEP: creating the pod @ 05/07/25 18:02:56.824
  I0507 18:02:56.824059 24 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0507 18:02:56.987195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:57.987742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:58.988430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:02:59.989059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:00.989944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:01.990837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:03:02.175531 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5756" for this suite. @ 05/07/25 18:03:02.179
• [5.381 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/07/25 18:03:02.184
  I0507 18:03:02.184659 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 18:03:02.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:03:02.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:03:02.199
  STEP: Creating configMap with name configmap-projected-all-test-volume-32fae836-bf81-41a9-835b-f885185f5cb9 @ 05/07/25 18:03:02.201
  STEP: Creating secret with name secret-projected-all-test-volume-1e985333-eadc-40e7-9c63-1ec6d055d67b @ 05/07/25 18:03:02.204
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/07/25 18:03:02.208
  I0507 18:03:02.214864      24 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E0507 18:03:02.991905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:03.992426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:04.992610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:05.992773      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:03:06.222
  I0507 18:03:06.225640 24 output.go:207] Trying to get logs from node mini-2 pod projected-volume-904b4c47-623c-4776-b3c9-66461b7bad3d container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 18:03:06.229
  I0507 18:03:06.239172 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9607" for this suite. @ 05/07/25 18:03:06.241
• [4.062 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/07/25 18:03:06.246
  I0507 18:03:06.246396 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename proxy @ 05/07/25 18:03:06.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:03:06.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:03:06.259
  STEP: starting an echo server on multiple ports @ 05/07/25 18:03:06.278
  I0507 18:03:06.294002 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0507 18:03:06.992834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:07.992971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:03:08.297475 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 3, 6, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 3, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 3, 6, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 3, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"proxy-service-b9rmm-5b495cb88b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:03:08.993163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:09.994201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:03:10.304034      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:03:10.304098 24 proxy.go:273] setup took 4.042954574s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/07/25 18:03:10.304
  I0507 18:03:10.315336 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 11.160875ms)
  I0507 18:03:10.317412 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 13.218203ms)
  I0507 18:03:10.317417 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 13.208617ms)
  I0507 18:03:10.317436 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 13.270794ms)
  I0507 18:03:10.317454 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 13.228839ms)
  I0507 18:03:10.317453 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 13.268831ms)
  I0507 18:03:10.317460 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 13.221916ms)
  I0507 18:03:10.317492 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 13.261668ms)
  I0507 18:03:10.317495 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 13.282744ms)
  I0507 18:03:10.317990 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 13.815471ms)
  I0507 18:03:10.318212 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 13.987245ms)
  I0507 18:03:10.318224 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 14.014838ms)
  I0507 18:03:10.318231 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 14.074735ms)
  I0507 18:03:10.318249 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 14.052567ms)
  I0507 18:03:10.319139 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 14.92216ms)
  I0507 18:03:10.319710 24 proxy.go:601] (0) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 15.490125ms)
  I0507 18:03:10.328629 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 8.881142ms)
  I0507 18:03:10.328633 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 8.773275ms)
  I0507 18:03:10.328643 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.798878ms)
  I0507 18:03:10.328683 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 8.814273ms)
  I0507 18:03:10.328755 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.937161ms)
  I0507 18:03:10.328782 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 8.981516ms)
  I0507 18:03:10.328877 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 8.99924ms)
  I0507 18:03:10.329061 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 9.175891ms)
  I0507 18:03:10.329065 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 9.193313ms)
  I0507 18:03:10.329095 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 9.20964ms)
  I0507 18:03:10.329111 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 9.315801ms)
  I0507 18:03:10.331221 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 11.331806ms)
  I0507 18:03:10.332154 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 12.288219ms)
  I0507 18:03:10.332183 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 12.352005ms)
  I0507 18:03:10.332265 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 12.428108ms)
  I0507 18:03:10.332350 24 proxy.go:601] (1) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 12.479864ms)
  I0507 18:03:10.340297 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 7.865901ms)
  I0507 18:03:10.340301 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 7.886451ms)
  I0507 18:03:10.340553 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 8.151007ms)
  I0507 18:03:10.340569 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 8.151641ms)
  I0507 18:03:10.340657 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 8.26853ms)
  I0507 18:03:10.341001 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 8.625661ms)
  I0507 18:03:10.341426 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 9.045032ms)
  I0507 18:03:10.341524 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 9.094713ms)
  I0507 18:03:10.341539 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 9.143733ms)
  I0507 18:03:10.341537 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 9.163576ms)
  I0507 18:03:10.341566 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 9.195223ms)
  I0507 18:03:10.341630 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 9.225844ms)
  I0507 18:03:10.341647 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 9.221273ms)
  I0507 18:03:10.341662 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 9.236971ms)
  I0507 18:03:10.343309 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 10.897738ms)
  I0507 18:03:10.343410 24 proxy.go:601] (2) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 11.006979ms)
  I0507 18:03:10.353056 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 9.517116ms)
  I0507 18:03:10.353080 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 9.54626ms)
  I0507 18:03:10.353137 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 9.616034ms)
  I0507 18:03:10.353210 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 9.721362ms)
  I0507 18:03:10.353285 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 9.735817ms)
  I0507 18:03:10.353298 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 9.73931ms)
  I0507 18:03:10.353337 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 9.873623ms)
  I0507 18:03:10.353343 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 9.823692ms)
  I0507 18:03:10.353348 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 9.844291ms)
  I0507 18:03:10.353354 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 9.923787ms)
  I0507 18:03:10.353506 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 10.035077ms)
  I0507 18:03:10.355354 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 11.801265ms)
  I0507 18:03:10.356209 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 12.711697ms)
  I0507 18:03:10.356331 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 12.814366ms)
  I0507 18:03:10.356332 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 12.8615ms)
  I0507 18:03:10.356398 24 proxy.go:601] (3) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 12.852887ms)
  I0507 18:03:10.366564 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 10.101359ms)
  I0507 18:03:10.366702 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 10.239025ms)
  I0507 18:03:10.366751 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 10.278657ms)
  I0507 18:03:10.366768 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 10.298279ms)
  I0507 18:03:10.366769 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 10.318101ms)
  I0507 18:03:10.366780 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 10.335381ms)
  I0507 18:03:10.366791 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 10.345718ms)
  I0507 18:03:10.366822 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 10.338ms)
  I0507 18:03:10.366824 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 10.406027ms)
  I0507 18:03:10.366822 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 10.384895ms)
  I0507 18:03:10.375416 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 18.95891ms)
  I0507 18:03:10.375581 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 19.163784ms)
  I0507 18:03:10.375822 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 19.392366ms)
  I0507 18:03:10.375834 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 19.38137ms)
  I0507 18:03:10.376069 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 19.645008ms)
  I0507 18:03:10.376226 24 proxy.go:601] (4) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 19.755574ms)
  I0507 18:03:10.392003 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 15.703775ms)
  I0507 18:03:10.392035 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 15.707457ms)
  I0507 18:03:10.392047 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 15.741103ms)
  I0507 18:03:10.392045 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 15.73917ms)
  I0507 18:03:10.392239 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 15.991684ms)
  I0507 18:03:10.392243 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 15.908614ms)
  I0507 18:03:10.392254 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 15.992791ms)
  I0507 18:03:10.392293 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 15.970677ms)
  I0507 18:03:10.392323 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 15.995173ms)
  I0507 18:03:10.392327 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 16.015656ms)
  I0507 18:03:10.393179 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 16.910012ms)
  I0507 18:03:10.393238 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 16.952726ms)
  I0507 18:03:10.393320 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 17.002528ms)
  I0507 18:03:10.393321 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 16.98614ms)
  I0507 18:03:10.393381 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 17.056943ms)
  I0507 18:03:10.393562 24 proxy.go:601] (5) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 17.22739ms)
  I0507 18:03:10.402116 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.481956ms)
  I0507 18:03:10.402129 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 8.54784ms)
  I0507 18:03:10.402129 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.505507ms)
  I0507 18:03:10.402138 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 8.475923ms)
  I0507 18:03:10.402181 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 8.546412ms)
  I0507 18:03:10.402192 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 8.533377ms)
  I0507 18:03:10.402388 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 8.719512ms)
  I0507 18:03:10.402408 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 8.778981ms)
  I0507 18:03:10.402457 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 8.793268ms)
  I0507 18:03:10.402470 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 8.824519ms)
  I0507 18:03:10.402476 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 8.819326ms)
  I0507 18:03:10.403884 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 10.213591ms)
  I0507 18:03:10.404625 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 10.97348ms)
  I0507 18:03:10.404731 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 11.054192ms)
  I0507 18:03:10.404754 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 11.114223ms)
  I0507 18:03:10.404983 24 proxy.go:601] (6) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 11.309407ms)
  I0507 18:03:10.409561 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 4.550608ms)
  I0507 18:03:10.409597 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 4.590076ms)
  I0507 18:03:10.412886 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 7.79015ms)
  I0507 18:03:10.413041 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 7.972087ms)
  I0507 18:03:10.413047 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 7.943949ms)
  I0507 18:03:10.413611 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 8.521888ms)
  I0507 18:03:10.413630 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 8.584079ms)
  I0507 18:03:10.413647 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.545215ms)
  I0507 18:03:10.413658 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 8.582861ms)
  I0507 18:03:10.413670 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 8.586227ms)
  I0507 18:03:10.414125 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 9.091537ms)
  I0507 18:03:10.414962 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 9.880434ms)
  I0507 18:03:10.415716 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 10.62036ms)
  I0507 18:03:10.415734 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 10.674049ms)
  I0507 18:03:10.415828 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 10.773293ms)
  I0507 18:03:10.415944 24 proxy.go:601] (7) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 10.855956ms)
  I0507 18:03:10.423930 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 7.859828ms)
  I0507 18:03:10.423947 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 7.916568ms)
  I0507 18:03:10.423994 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 7.97867ms)
  I0507 18:03:10.424000 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 8.035102ms)
  I0507 18:03:10.424115 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 8.070135ms)
  I0507 18:03:10.424129 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 8.038326ms)
  I0507 18:03:10.424143 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 8.085436ms)
  I0507 18:03:10.424153 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.121683ms)
  I0507 18:03:10.424229 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 8.227461ms)
  I0507 18:03:10.424261 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 8.162504ms)
  I0507 18:03:10.424331 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 8.273046ms)
  I0507 18:03:10.426163 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 10.076801ms)
  I0507 18:03:10.426673 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 10.592839ms)
  I0507 18:03:10.426891 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 10.90842ms)
  I0507 18:03:10.426960 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 10.868452ms)
  I0507 18:03:10.426965 24 proxy.go:601] (8) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 10.899604ms)
  I0507 18:03:10.436596 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 9.548696ms)
  I0507 18:03:10.437296 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 10.274002ms)
  I0507 18:03:10.437393 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 10.366918ms)
  I0507 18:03:10.437409 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 10.374658ms)
  I0507 18:03:10.437414 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 10.368406ms)
  I0507 18:03:10.437413 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 10.380953ms)
  I0507 18:03:10.437508 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 10.488529ms)
  I0507 18:03:10.437513 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 10.472421ms)
  I0507 18:03:10.437522 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 10.525362ms)
  I0507 18:03:10.437627 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 10.630517ms)
  I0507 18:03:10.439178 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 12.140912ms)
  I0507 18:03:10.440103 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 13.098587ms)
  I0507 18:03:10.440119 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 13.132113ms)
  I0507 18:03:10.440156 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 13.136363ms)
  I0507 18:03:10.440161 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 13.11779ms)
  I0507 18:03:10.440246 24 proxy.go:601] (9) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 13.233538ms)
  I0507 18:03:10.446502 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 6.23152ms)
  I0507 18:03:10.447681 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 7.377316ms)
  I0507 18:03:10.447702 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 7.384747ms)
  I0507 18:03:10.447857 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 7.569282ms)
  I0507 18:03:10.447865 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 7.535822ms)
  I0507 18:03:10.447962 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 7.635509ms)
  I0507 18:03:10.447966 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 7.660716ms)
  I0507 18:03:10.447980 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 7.68152ms)
  I0507 18:03:10.447999 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 7.675207ms)
  I0507 18:03:10.447999 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 7.718015ms)
  I0507 18:03:10.449521 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 9.189642ms)
  I0507 18:03:10.450150 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 9.875063ms)
  I0507 18:03:10.450210 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 9.906635ms)
  I0507 18:03:10.450307 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 9.98851ms)
  I0507 18:03:10.450468 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 10.199543ms)
  I0507 18:03:10.450484 24 proxy.go:601] (10) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 10.174615ms)
  I0507 18:03:10.457407 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 6.904397ms)
  I0507 18:03:10.459525 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 8.946344ms)
  I0507 18:03:10.459614 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 9.034556ms)
  I0507 18:03:10.459628 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 9.087953ms)
  I0507 18:03:10.459670 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 9.117556ms)
  I0507 18:03:10.459673 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 9.114788ms)
  I0507 18:03:10.460565 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 10.03027ms)
  I0507 18:03:10.460621 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 10.073972ms)
  I0507 18:03:10.461146 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 10.636422ms)
  I0507 18:03:10.461161 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 10.590903ms)
  I0507 18:03:10.461172 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 10.600942ms)
  I0507 18:03:10.461208 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 10.64707ms)
  I0507 18:03:10.461226 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 10.661184ms)
  I0507 18:03:10.461387 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 10.82387ms)
  I0507 18:03:10.461585 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 11.047983ms)
  I0507 18:03:10.461593 24 proxy.go:601] (11) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 11.015943ms)
  I0507 18:03:10.470487 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.811982ms)
  I0507 18:03:10.470567 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 8.942359ms)
  I0507 18:03:10.470642 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.992332ms)
  I0507 18:03:10.470657 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 9.047405ms)
  I0507 18:03:10.470754 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 9.098317ms)
  I0507 18:03:10.470775 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 9.116983ms)
  I0507 18:03:10.470778 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 9.15972ms)
  I0507 18:03:10.471029 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 9.415819ms)
  I0507 18:03:10.471033 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 9.3839ms)
  I0507 18:03:10.471036 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 9.39724ms)
  I0507 18:03:10.471633 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 9.96668ms)
  I0507 18:03:10.471791 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 10.12312ms)
  I0507 18:03:10.471905 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 10.244676ms)
  I0507 18:03:10.471910 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 10.279821ms)
  I0507 18:03:10.472088 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 10.437776ms)
  I0507 18:03:10.472092 24 proxy.go:601] (12) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 10.439896ms)
  I0507 18:03:10.477052 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 4.934384ms)
  I0507 18:03:10.477138 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 5.015403ms)
  I0507 18:03:10.479885 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 7.743061ms)
  I0507 18:03:10.479886 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 7.70812ms)
  I0507 18:03:10.479889 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 7.71107ms)
  I0507 18:03:10.479903 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 7.745377ms)
  I0507 18:03:10.480107 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 7.941188ms)
  I0507 18:03:10.480108 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 7.942537ms)
  I0507 18:03:10.480128 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 7.942635ms)
  I0507 18:03:10.480138 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 7.945061ms)
  I0507 18:03:10.480159 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 7.971875ms)
  I0507 18:03:10.480287 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 8.168427ms)
  I0507 18:03:10.481441 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 9.270449ms)
  I0507 18:03:10.481441 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 9.270268ms)
  I0507 18:03:10.481578 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 9.42897ms)
  I0507 18:03:10.481594 24 proxy.go:601] (13) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 9.433184ms)
  I0507 18:03:10.484597 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 2.976728ms)
  I0507 18:03:10.484982 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 3.368415ms)
  I0507 18:03:10.488759 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 7.12613ms)
  I0507 18:03:10.489158 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 7.519609ms)
  I0507 18:03:10.489324 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 7.684767ms)
  I0507 18:03:10.489642 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 8.016427ms)
  I0507 18:03:10.489658 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 8.00438ms)
  I0507 18:03:10.489818 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.158048ms)
  I0507 18:03:10.492243 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 10.596779ms)
  I0507 18:03:10.492411 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 10.75824ms)
  I0507 18:03:10.492525 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 10.866108ms)
  I0507 18:03:10.492975 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 11.323612ms)
  I0507 18:03:10.493006 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 11.338735ms)
  I0507 18:03:10.495613 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 13.940682ms)
  I0507 18:03:10.495761 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 14.09738ms)
  I0507 18:03:10.497807 24 proxy.go:601] (14) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 16.136574ms)
  I0507 18:03:10.502071 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 4.239095ms)
  I0507 18:03:10.505011 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 7.14558ms)
  I0507 18:03:10.507377 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 9.398566ms)
  I0507 18:03:10.507381 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 9.45309ms)
  I0507 18:03:10.507487 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 9.557382ms)
  I0507 18:03:10.507542 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 9.6014ms)
  I0507 18:03:10.507558 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 9.597852ms)
  I0507 18:03:10.507569 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 9.657439ms)
  I0507 18:03:10.507623 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 9.650845ms)
  I0507 18:03:10.508375 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 10.480028ms)
  I0507 18:03:10.509817 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 11.856685ms)
  I0507 18:03:10.510326 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 12.377506ms)
  I0507 18:03:10.510559 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 12.592329ms)
  I0507 18:03:10.510573 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 12.607459ms)
  I0507 18:03:10.510579 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 12.597879ms)
  I0507 18:03:10.510583 24 proxy.go:601] (15) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 12.67803ms)
  I0507 18:03:10.514751 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 4.147744ms)
  I0507 18:03:10.514847 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 4.244201ms)
  I0507 18:03:10.520824 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 10.189465ms)
  I0507 18:03:10.521226 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 10.61426ms)
  I0507 18:03:10.521227 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 10.556061ms)
  I0507 18:03:10.521229 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 10.611372ms)
  I0507 18:03:10.521398 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 10.738256ms)
  I0507 18:03:10.521515 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 10.865335ms)
  I0507 18:03:10.521517 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 10.868935ms)
  I0507 18:03:10.521542 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 10.859074ms)
  I0507 18:03:10.521588 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 10.910508ms)
  I0507 18:03:10.521587 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 10.899881ms)
  I0507 18:03:10.523323 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 12.65447ms)
  I0507 18:03:10.523722 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 13.114597ms)
  I0507 18:03:10.523940 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 13.258065ms)
  I0507 18:03:10.523970 24 proxy.go:601] (16) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 13.32075ms)
  I0507 18:03:10.529279 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 5.281309ms)
  I0507 18:03:10.529796 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 5.774339ms)
  I0507 18:03:10.530317 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 6.324015ms)
  I0507 18:03:10.530360 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 6.356607ms)
  I0507 18:03:10.530828 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 6.836535ms)
  I0507 18:03:10.530880 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 6.848578ms)
  I0507 18:03:10.532258 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 8.209233ms)
  I0507 18:03:10.532266 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 8.232722ms)
  I0507 18:03:10.532273 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.227214ms)
  I0507 18:03:10.533430 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 9.416396ms)
  I0507 18:03:10.535667 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 11.62411ms)
  I0507 18:03:10.536396 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 12.338308ms)
  I0507 18:03:10.536577 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 12.517172ms)
  I0507 18:03:10.536685 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 12.658388ms)
  I0507 18:03:10.536978 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 12.920506ms)
  I0507 18:03:10.537173 24 proxy.go:601] (17) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 13.12882ms)
  I0507 18:03:10.544809 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 7.605599ms)
  I0507 18:03:10.545558 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 8.335893ms)
  I0507 18:03:10.545574 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 8.344702ms)
  I0507 18:03:10.545606 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 8.338643ms)
  I0507 18:03:10.545647 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.400982ms)
  I0507 18:03:10.545648 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 8.441566ms)
  I0507 18:03:10.545646 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 8.44969ms)
  I0507 18:03:10.545662 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 8.405541ms)
  I0507 18:03:10.545723 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 8.487776ms)
  I0507 18:03:10.545886 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 8.616439ms)
  I0507 18:03:10.545922 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 8.671094ms)
  I0507 18:03:10.546304 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 9.046137ms)
  I0507 18:03:10.546951 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 9.683291ms)
  I0507 18:03:10.547451 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 10.23668ms)
  I0507 18:03:10.547654 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 10.409709ms)
  I0507 18:03:10.547674 24 proxy.go:601] (18) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 10.436071ms)
  I0507 18:03:10.557641 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/rewri... (200; 9.890343ms)
  I0507 18:03:10.557659 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 9.913428ms)
  I0507 18:03:10.557672 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:162/proxy/: bar (200; 9.945371ms)
  I0507 18:03:10.557720 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4/proxy/rewriteme"... (200; 10.005223ms)
  I0507 18:03:10.557900 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:1080/proxy/... (200; 10.142619ms)
  I0507 18:03:10.557902 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/pods/proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 10.147206ms)
  I0507 18:03:10.557940 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname1/proxy/: foo (200; 10.24122ms)
  I0507 18:03:10.557956 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:460/proxy/: tls baz (200; 10.222433ms)
  I0507 18:03:10.557975 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/: <a href="/api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:443/proxy/... (200; 10.269158ms)
  I0507 18:03:10.557975 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/pods/https:proxy-service-b9rmm-5b495cb88b-9rck4:462/proxy/: tls qux (200; 10.278677ms)
  I0507 18:03:10.558164 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/pods/http:proxy-service-b9rmm-5b495cb88b-9rck4:160/proxy/: foo (200; 10.446411ms)
  I0507 18:03:10.560135 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/services/http:proxy-service-b9rmm:portname2/proxy/: bar (200; 12.400026ms)
  I0507 18:03:10.560933 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname2/proxy/: bar (200; 13.1896ms)
  I0507 18:03:10.561066 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname2/proxy/: tls qux (200; 13.318197ms)
  I0507 18:03:10.561083 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/services/https:proxy-service-b9rmm:tlsportname1/proxy/: tls baz (200; 13.342831ms)
  I0507 18:03:10.561177 24 proxy.go:601] (19) /api/v1/namespaces/proxy-5455/services/proxy-service-b9rmm:portname1/proxy/: foo (200; 13.45044ms)
  I0507 18:03:10.565607 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5455" for this suite. @ 05/07/25 18:03:10.568
• [4.327 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 05/07/25 18:03:10.573
  I0507 18:03:10.573786 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 18:03:10.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:03:10.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:03:10.586
  STEP: Setting up server cert @ 05/07/25 18:03:10.612
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 18:03:10.799
  STEP: Deploying the webhook pod @ 05/07/25 18:03:10.805
  STEP: Wait for the deployment to be ready @ 05/07/25 18:03:10.813
  I0507 18:03:10.819693 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0507 18:03:10.994941      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:11.995135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 18:03:12.827
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 18:03:12.842
  E0507 18:03:12.995483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:03:13.842365 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/07/25 18:03:13.845
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/07/25 18:03:13.846
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/07/25 18:03:13.846
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/07/25 18:03:13.846
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/07/25 18:03:13.847
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/07/25 18:03:13.847
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/07/25 18:03:13.847
  I0507 18:03:13.886920 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9876" for this suite. @ 05/07/25 18:03:13.891
  STEP: Destroying namespace "webhook-markers-2890" for this suite. @ 05/07/25 18:03:13.899
• [3.331 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/07/25 18:03:13.905
  I0507 18:03:13.905218 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename chunking @ 05/07/25 18:03:13.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:03:13.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:03:13.917
  STEP: creating a large number of resources @ 05/07/25 18:03:13.919
  E0507 18:03:13.996227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:14.997299      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:15.998193      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:16.998927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:17.999128      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:18.999351      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:19.999891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:21.000416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:22.000753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:23.001486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:24.002354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:25.002642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:26.003159      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:27.004137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:28.004478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:29.005255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:30.005975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:31.006581      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 05/07/25 18:03:31.611
  I0507 18:03:31.660646 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0507 18:03:31.709241 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0507 18:03:31.759529 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0507 18:03:31.809425 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0507 18:03:31.859661 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0507 18:03:31.909352 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0507 18:03:31.959717 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  E0507 18:03:32.007085      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:03:32.012040 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0507 18:03:32.059600 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0507 18:03:32.109039 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0507 18:03:32.159409 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0507 18:03:32.210187 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0507 18:03:32.259684 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0507 18:03:32.308761 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0507 18:03:32.359263 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0507 18:03:32.409904 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0507 18:03:32.459114 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0507 18:03:32.509235 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0507 18:03:32.559555 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0507 18:03:32.609599 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0507 18:03:32.658832 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0507 18:03:32.709015 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0507 18:03:32.759097 24 chunking.go:98] Retrieved 17/17 results with rv 2252244 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0507 18:03:32.809255 24 chunking.go:98] Retrieved 9/17 results with rv 2252244 and continue 
  I0507 18:03:32.860846 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0507 18:03:32.909714 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0507 18:03:32.959019 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  E0507 18:03:33.007428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:03:33.009794 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0507 18:03:33.058794 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0507 18:03:33.109319 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0507 18:03:33.159534 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0507 18:03:33.209436 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0507 18:03:33.259139 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0507 18:03:33.309843 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0507 18:03:33.358951 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0507 18:03:33.409593 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0507 18:03:33.462626 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0507 18:03:33.508955 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0507 18:03:33.559386 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0507 18:03:33.610284 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0507 18:03:33.659577 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0507 18:03:33.709323 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0507 18:03:33.759510 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0507 18:03:33.809519 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0507 18:03:33.858536 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0507 18:03:33.908996 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0507 18:03:33.959042 24 chunking.go:98] Retrieved 17/17 results with rv 2252248 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI0OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  E0507 18:03:34.007443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:03:34.009384 24 chunking.go:98] Retrieved 9/17 results with rv 2252248 and continue 
  I0507 18:03:34.060437 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0507 18:03:34.110131 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0507 18:03:34.159422 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0507 18:03:34.209989 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0507 18:03:34.258884 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0507 18:03:34.309311 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0507 18:03:34.359596 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0507 18:03:34.408990 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0507 18:03:34.460283 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0507 18:03:34.509840 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0507 18:03:34.558879 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0507 18:03:34.609022 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0507 18:03:34.659233 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0507 18:03:34.709338 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0507 18:03:34.759475 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0507 18:03:34.809888 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0507 18:03:34.859552 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0507 18:03:34.909285 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0507 18:03:34.959856 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  E0507 18:03:35.008261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:03:35.009469 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0507 18:03:35.059654 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0507 18:03:35.109415 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0507 18:03:35.159480 24 chunking.go:98] Retrieved 17/17 results with rv 2252251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1MjI1MSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0507 18:03:35.209617 24 chunking.go:98] Retrieved 9/17 results with rv 2252251 and continue 
  STEP: retrieving those results all at once @ 05/07/25 18:03:35.209
  I0507 18:03:35.267979 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9921" for this suite. @ 05/07/25 18:03:35.309
• [21.459 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/07/25 18:03:35.364
  I0507 18:03:35.364176 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename prestop @ 05/07/25 18:03:35.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:03:35.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:03:35.38
  STEP: Creating server pod server in namespace prestop-8274 @ 05/07/25 18:03:35.383
  STEP: Waiting for pods to come up. @ 05/07/25 18:03:35.39
  E0507 18:03:36.008636      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:37.008686      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-8274 @ 05/07/25 18:03:37.397
  E0507 18:03:38.009011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:39.009149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 05/07/25 18:03:39.406
  E0507 18:03:40.009197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:41.009332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:42.009420      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:43.009590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:44.009756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:03:44.415951 24 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/07/25 18:03:44.416
  I0507 18:03:44.424176 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8274" for this suite. @ 05/07/25 18:03:44.427
• [9.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 05/07/25 18:03:44.431
  I0507 18:03:44.431449 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 18:03:44.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:03:44.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:03:44.442
  STEP: Discovering how many secrets are in namespace by default @ 05/07/25 18:03:44.444
  E0507 18:03:45.010200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:46.010861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:47.010966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:48.011051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:49.011405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/07/25 18:03:49.447
  E0507 18:03:50.012365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:51.012624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:52.012721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:53.012716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:54.013716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/07/25 18:03:54.451
  STEP: Ensuring resource quota status is calculated @ 05/07/25 18:03:54.454
  E0507 18:03:55.014475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:56.014630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 05/07/25 18:03:56.457
  STEP: Ensuring resource quota status captures secret creation @ 05/07/25 18:03:56.466
  E0507 18:03:57.015285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:03:58.015451      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 05/07/25 18:03:58.469
  STEP: Ensuring resource quota status released usage @ 05/07/25 18:03:58.474
  E0507 18:03:59.016218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:00.017231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:04:00.477830 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3312" for this suite. @ 05/07/25 18:04:00.481
• [16.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/07/25 18:04:00.485
  I0507 18:04:00.485566 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 18:04:00.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:00.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:00.494
  I0507 18:04:00.526170 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1541" for this suite. @ 05/07/25 18:04:00.582
• [0.101 seconds]
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/07/25 18:04:00.587
  I0507 18:04:00.587035 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-runtime @ 05/07/25 18:04:00.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:00.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:00.598
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/07/25 18:04:00.608
  E0507 18:04:01.017992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:02.018836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:03.019516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:04.019603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:05.020477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:06.020758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:07.021026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:08.021045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:09.021086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:10.021277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:11.021296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:12.021750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:13.022459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:14.023391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:15.023640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:16.024516      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:17.024694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/07/25 18:04:17.664
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/07/25 18:04:17.665
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/07/25 18:04:17.669
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/07/25 18:04:17.669
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/07/25 18:04:17.684
  E0507 18:04:18.025684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:19.026278      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:20.026783      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/07/25 18:04:20.697
  E0507 18:04:21.027481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/07/25 18:04:21.703
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/07/25 18:04:21.707
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/07/25 18:04:21.707
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/07/25 18:04:21.721
  E0507 18:04:22.028003      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/07/25 18:04:22.726
  E0507 18:04:23.028927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:24.029044      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/07/25 18:04:24.735
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/07/25 18:04:24.739
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/07/25 18:04:24.739
  I0507 18:04:24.754032 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3096" for this suite. @ 05/07/25 18:04:24.756
• [24.174 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 05/07/25 18:04:24.76
  I0507 18:04:24.760979 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 18:04:24.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:24.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:24.773
  STEP: Creating a ResourceQuota @ 05/07/25 18:04:24.775
  STEP: Getting a ResourceQuota @ 05/07/25 18:04:24.778
  STEP: Updating a ResourceQuota @ 05/07/25 18:04:24.779
  STEP: Verifying a ResourceQuota was modified @ 05/07/25 18:04:24.785
  STEP: Deleting a ResourceQuota @ 05/07/25 18:04:24.791
  STEP: Verifying the deleted ResourceQuota @ 05/07/25 18:04:24.795
  I0507 18:04:24.797027 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2106" for this suite. @ 05/07/25 18:04:24.857
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 05/07/25 18:04:24.862
  I0507 18:04:24.862534 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename fake-node @ 05/07/25 18:04:24.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:24.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:24.876
  STEP: Create "e2e-fake-node-shv6m" @ 05/07/25 18:04:24.878
  STEP: Getting "e2e-fake-node-shv6m" @ 05/07/25 18:04:24.882
  STEP: Patching "e2e-fake-node-shv6m" @ 05/07/25 18:04:24.888
  STEP: Listing nodes with LabelSelector "e2e-fake-node-shv6m=patched" @ 05/07/25 18:04:24.894
  STEP: Updating "e2e-fake-node-shv6m" @ 05/07/25 18:04:24.897
  STEP: Delete "e2e-fake-node-shv6m" @ 05/07/25 18:04:24.938
  STEP: Confirm deletion of "e2e-fake-node-shv6m" @ 05/07/25 18:04:24.947
  I0507 18:04:24.951611 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-2219" for this suite. @ 05/07/25 18:04:24.957
• [0.104 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 05/07/25 18:04:24.966
  I0507 18:04:24.966341 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 18:04:24.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:24.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:24.98
  STEP: Setting up server cert @ 05/07/25 18:04:24.999
  E0507 18:04:25.029819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 18:04:25.436
  STEP: Deploying the webhook pod @ 05/07/25 18:04:25.441
  STEP: Wait for the deployment to be ready @ 05/07/25 18:04:25.451
  I0507 18:04:25.457982 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0507 18:04:26.030690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:27.030795      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 18:04:27.464
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 18:04:27.478
  E0507 18:04:28.031775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:04:28.478216 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/07/25 18:04:28.481
  STEP: create a configmap that should be updated by the webhook @ 05/07/25 18:04:28.491
  I0507 18:04:28.560318 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4210" for this suite. @ 05/07/25 18:04:28.563
  STEP: Destroying namespace "webhook-markers-2911" for this suite. @ 05/07/25 18:04:28.571
• [3.612 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 05/07/25 18:04:28.578
  I0507 18:04:28.578726 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/07/25 18:04:28.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:28.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:28.591
  STEP: getting /apis @ 05/07/25 18:04:28.597
  STEP: getting /apis/admissionregistration.k8s.io @ 05/07/25 18:04:28.6
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/07/25 18:04:28.6
  STEP: creating @ 05/07/25 18:04:28.601
  STEP: getting @ 05/07/25 18:04:28.631
  STEP: listing @ 05/07/25 18:04:28.634
  STEP: watching @ 05/07/25 18:04:28.636
  I0507 18:04:28.636501 24 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 05/07/25 18:04:28.637
  STEP: updating @ 05/07/25 18:04:28.641
  I0507 18:04:28.648895 24 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 05/07/25 18:04:28.648
  STEP: deleting a collection @ 05/07/25 18:04:28.658
  I0507 18:04:28.670720 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2142" for this suite. @ 05/07/25 18:04:28.672
• [0.098 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 05/07/25 18:04:28.676
  I0507 18:04:28.676599 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 18:04:28.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:28.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:28.69
  STEP: Creating secret with name secret-test-693dc08f-ce9d-42cc-84b5-e841a088b775 @ 05/07/25 18:04:28.692
  STEP: Creating a pod to test consume secrets @ 05/07/25 18:04:28.695
  E0507 18:04:29.032264      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:30.032450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:31.033309      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:32.033606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:04:32.721
  I0507 18:04:32.723634 24 output.go:207] Trying to get logs from node mini-2 pod pod-secrets-6133a403-050d-424a-8af9-841feaab677f container secret-env-test: <nil>
  STEP: delete the pod @ 05/07/25 18:04:32.727
  I0507 18:04:32.736413 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3190" for this suite. @ 05/07/25 18:04:32.739
• [4.067 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 05/07/25 18:04:32.743
  I0507 18:04:32.743734 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pv @ 05/07/25 18:04:32.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:32.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:32.756
  STEP: Creating initial PV and PVC @ 05/07/25 18:04:32.758
  I0507 18:04:32.758997 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2649" @ 05/07/25 18:04:32.769
  STEP: Listing PVCs in namespace "pv-2649" @ 05/07/25 18:04:32.771
  STEP: Reading "pvc-mbtd8" Status @ 05/07/25 18:04:32.773
  STEP: Reading "pv-2649-vbxkl" Status @ 05/07/25 18:04:32.776
  STEP: Patching "pvc-mbtd8" Status @ 05/07/25 18:04:32.778
  STEP: Patching "pv-2649-vbxkl" Status @ 05/07/25 18:04:32.782
  STEP: Updating "pvc-mbtd8" Status @ 05/07/25 18:04:32.786
  STEP: Updating "pv-2649-vbxkl" Status @ 05/07/25 18:04:32.794
  I0507 18:04:32.817851 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0507 18:04:32.817878 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-mbtd8"
  I0507 18:04:32.822981 24 pv.go:193] Deleting PersistentVolume "pv-2649-vbxkl"
  I0507 18:04:32.827658 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2649" for this suite. @ 05/07/25 18:04:32.841
• [0.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 05/07/25 18:04:32.846
  I0507 18:04:32.846485 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename dns @ 05/07/25 18:04:32.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:32.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:32.861
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/07/25 18:04:32.863
  I0507 18:04:32.870431 24 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4555  9aa6ffcc-6b62-40c3-ac52-c70a7e3e6c6e 2253155 1 2025-05-07 18:04:32 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-05-07 18:04:32 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-g22f8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-g22f8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  E0507 18:04:33.033620      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:34.033778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:35.034737      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:36.034884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/07/25 18:04:36.878
  I0507 18:04:36.878861 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4555 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 18:04:36.878872 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 18:04:36.878907 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/dns-4555/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0507 18:04:36.934209 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 05/07/25 18:04:36.934
  I0507 18:04:36.934252 24 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4555 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 18:04:36.934258 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 18:04:36.934296 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/dns-4555/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0507 18:04:36.980852 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 18:04:36.980916 24 dns.go:451] Deleting pod test-dns-nameservers...
  I0507 18:04:36.989208 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4555" for this suite. @ 05/07/25 18:04:36.992
• [4.150 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 05/07/25 18:04:36.997
  I0507 18:04:36.997046 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 18:04:36.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:37.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:37.012
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 18:04:37.014
  E0507 18:04:37.035555      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:38.035680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:39.036396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:40.037432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:04:41.028
  I0507 18:04:41.030032 24 output.go:207] Trying to get logs from node mini-1 pod downwardapi-volume-4e7d7cd7-78aa-4e12-aa05-097796010dd2 container client-container: <nil>
  E0507 18:04:41.038143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 05/07/25 18:04:41.039
  I0507 18:04:41.051885 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-742" for this suite. @ 05/07/25 18:04:41.054
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 05/07/25 18:04:41.058
  I0507 18:04:41.058994 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 18:04:41.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:41.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:41.068
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/07/25 18:04:41.07
  E0507 18:04:42.038822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:43.038969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:44.039050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:45.039215      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:04:45.085
  I0507 18:04:45.087832 24 output.go:207] Trying to get logs from node mini-2 pod pod-0ad04549-a1a5-4e96-b2d8-60b6eeb79867 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 18:04:45.091
  I0507 18:04:45.102592 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3826" for this suite. @ 05/07/25 18:04:45.105
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/07/25 18:04:45.11
  I0507 18:04:45.110706 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename subpath @ 05/07/25 18:04:45.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:04:45.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:04:45.123
  STEP: Setting up data @ 05/07/25 18:04:45.125
  STEP: Creating pod pod-subpath-test-configmap-7sj6 @ 05/07/25 18:04:45.132
  STEP: Creating a pod to test atomic-volume-subpath @ 05/07/25 18:04:45.132
  E0507 18:04:46.040273      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:47.040426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:48.040587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:49.040774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:50.041813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:51.041983      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:52.042857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:53.043038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:54.043367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:55.043560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:56.044063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:57.044233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:58.044280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:04:59.044460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:00.045148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:01.045268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:02.046148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:03.046239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:04.046380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:05.046532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:06.046800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:07.046971      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:08.047229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:09.047386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:05:09.19
  I0507 18:05:09.192577 24 output.go:207] Trying to get logs from node mini-2 pod pod-subpath-test-configmap-7sj6 container test-container-subpath-configmap-7sj6: <nil>
  STEP: delete the pod @ 05/07/25 18:05:09.196
  STEP: Deleting pod pod-subpath-test-configmap-7sj6 @ 05/07/25 18:05:09.205
  I0507 18:05:09.205513 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-7sj6" in namespace "subpath-862"
  I0507 18:05:09.207517 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-862" for this suite. @ 05/07/25 18:05:09.21
• [24.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/07/25 18:05:09.214
  I0507 18:05:09.214978 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/07/25 18:05:09.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:05:09.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:05:09.228
  STEP: mirroring a new custom Endpoint @ 05/07/25 18:05:09.245
  I0507 18:05:09.250613      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:05:09.253407 24 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0507 18:05:10.048400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:11.048554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 05/07/25 18:05:11.257
  I0507 18:05:11.260922      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 05/07/25 18:05:11.265
  I0507 18:05:11.269155      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:05:11.277182 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-9485" for this suite. @ 05/07/25 18:05:11.28
• [2.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/07/25 18:05:11.288
  I0507 18:05:11.288107 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename subjectreview @ 05/07/25 18:05:11.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:05:11.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:05:11.307
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7010" @ 05/07/25 18:05:11.309
  I0507 18:05:11.323395 24 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-7010:e2e"
  I0507 18:05:11.323422 24 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7010"}
  I0507 18:05:11.323428 24 subjectreviews.go:71] saUID: "97a4fb1b-c59b-4501-8000-25f780ee4350"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7010:e2e" @ 05/07/25 18:05:11.323
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7010:e2e" @ 05/07/25 18:05:11.323
  I0507 18:05:11.325238 24 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7010:e2e" api 'list' configmaps in "subjectreview-7010" namespace @ 05/07/25 18:05:11.325
  I0507 18:05:11.326977 24 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7010:e2e" @ 05/07/25 18:05:11.326
  I0507 18:05:11.328562 24 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0507 18:05:11.328574 24 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0507 18:05:11.328617 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7010" for this suite. @ 05/07/25 18:05:11.381
• [0.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 05/07/25 18:05:11.387
  I0507 18:05:11.387175 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 18:05:11.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:05:11.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:05:11.398
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/07/25 18:05:11.399
  E0507 18:05:12.049346      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:13.049466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:14.050489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:15.050635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:05:15.414
  I0507 18:05:15.416798 24 output.go:207] Trying to get logs from node mini-2 pod pod-799d5b25-c4df-4288-96d0-fb36fef6a132 container test-container: <nil>
  STEP: delete the pod @ 05/07/25 18:05:15.42
  I0507 18:05:15.430181 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6654" for this suite. @ 05/07/25 18:05:15.432
• [4.050 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 05/07/25 18:05:15.437
  I0507 18:05:15.437142 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename runtimeclass @ 05/07/25 18:05:15.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:05:15.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:05:15.452
  E0507 18:05:16.050743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:17.050864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:05:17.473953 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5977" for this suite. @ 05/07/25 18:05:17.477
• [2.044 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 05/07/25 18:05:17.481
  I0507 18:05:17.481736 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename namespaces @ 05/07/25 18:05:17.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:05:17.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:05:17.494
  STEP: Creating namespace "e2e-ns-b6wng" @ 05/07/25 18:05:17.496
  I0507 18:05:17.509621 24 namespace.go:412] Namespace "e2e-ns-b6wng-1295" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-b6wng-1295" @ 05/07/25 18:05:17.509
  I0507 18:05:17.516097 24 namespace.go:435] Namespace "e2e-ns-b6wng-1295" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-b6wng-1295" @ 05/07/25 18:05:17.516
  I0507 18:05:17.528799 24 namespace.go:464] Namespace "e2e-ns-b6wng-1295" has []v1.FinalizerName{"kubernetes"}
  I0507 18:05:17.528843 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6366" for this suite. @ 05/07/25 18:05:17.578
  STEP: Destroying namespace "e2e-ns-b6wng-1295" for this suite. @ 05/07/25 18:05:17.586
• [0.110 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 05/07/25 18:05:17.591
  I0507 18:05:17.591969 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 18:05:17.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:05:17.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:05:17.604
  STEP: Creating the pod @ 05/07/25 18:05:17.606
  E0507 18:05:18.050924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:19.051428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:20.052456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:05:20.134069 24 pod_client.go:173] Successfully updated pod "labelsupdate7e9e2f0c-95f4-4b21-b80a-f87cfc58bd9b"
  E0507 18:05:21.053498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:22.053601      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:05:22.185553 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6248" for this suite. @ 05/07/25 18:05:22.212
• [4.651 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 05/07/25 18:05:22.242
  I0507 18:05:22.242922 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 18:05:22.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:05:22.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:05:22.273
  I0507 18:05:22.276258 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 18:05:23.053821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:24.053884      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/07/25 18:05:24.867
  I0507 18:05:24.867957 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 --namespace=crd-publish-openapi-8638 create -f -'
  I0507 18:05:24.927154 24 builder.go:146] stderr: ""
  I0507 18:05:24.927180 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4632-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0507 18:05:24.927206 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 --namespace=crd-publish-openapi-8638 delete e2e-test-crd-publish-openapi-4632-crds test-foo'
  I0507 18:05:24.975452 24 builder.go:146] stderr: ""
  I0507 18:05:24.975477 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4632-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0507 18:05:24.975501 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 --namespace=crd-publish-openapi-8638 apply -f -'
  I0507 18:05:25.019875 24 builder.go:146] stderr: ""
  I0507 18:05:25.019898 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4632-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0507 18:05:25.019921 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 --namespace=crd-publish-openapi-8638 delete e2e-test-crd-publish-openapi-4632-crds test-foo'
  E0507 18:05:25.054213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:05:25.060238 24 builder.go:146] stderr: ""
  I0507 18:05:25.060258 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4632-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/07/25 18:05:25.06
  I0507 18:05:25.060327 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 --namespace=crd-publish-openapi-8638 create -f -'
  I0507 18:05:25.096410 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/07/25 18:05:25.096
  I0507 18:05:25.096490 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 --namespace=crd-publish-openapi-8638 create -f -'
  I0507 18:05:25.131562 24 builder.go:135] rc: 1
  I0507 18:05:25.131611 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 --namespace=crd-publish-openapi-8638 apply -f -'
  I0507 18:05:25.173786 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/07/25 18:05:25.173
  I0507 18:05:25.173849 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 --namespace=crd-publish-openapi-8638 create -f -'
  I0507 18:05:25.209567 24 builder.go:135] rc: 1
  I0507 18:05:25.209612 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 --namespace=crd-publish-openapi-8638 apply -f -'
  I0507 18:05:25.250626 24 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/07/25 18:05:25.25
  I0507 18:05:25.250693 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 explain e2e-test-crd-publish-openapi-4632-crds'
  I0507 18:05:25.284370 24 builder.go:146] stderr: ""
  I0507 18:05:25.284406 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4632-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/07/25 18:05:25.284
  I0507 18:05:25.284589 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 explain e2e-test-crd-publish-openapi-4632-crds.metadata'
  I0507 18:05:25.318513 24 builder.go:146] stderr: ""
  I0507 18:05:25.318600 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4632-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0507 18:05:25.318734 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 explain e2e-test-crd-publish-openapi-4632-crds.spec'
  I0507 18:05:25.352797 24 builder.go:146] stderr: ""
  I0507 18:05:25.352824 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4632-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0507 18:05:25.352886 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 explain e2e-test-crd-publish-openapi-4632-crds.spec.bars'
  I0507 18:05:25.388019 24 builder.go:146] stderr: ""
  I0507 18:05:25.388050 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4632-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/07/25 18:05:25.388
  I0507 18:05:25.388180 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=crd-publish-openapi-8638 explain e2e-test-crd-publish-openapi-4632-crds.spec.bars2'
  I0507 18:05:25.423506 24 builder.go:135] rc: 1
  E0507 18:05:26.054652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:27.055752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:05:27.572655 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8638" for this suite. @ 05/07/25 18:05:27.58
• [5.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/07/25 18:05:27.587
  I0507 18:05:27.587966 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename chunking @ 05/07/25 18:05:27.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:05:27.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:05:27.601
  STEP: creating a large number of resources @ 05/07/25 18:05:27.602
  E0507 18:05:28.055970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:29.056972      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:30.057049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:31.057554      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:32.058143      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:33.058621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:34.058838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:35.059361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:36.060344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:37.061182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:38.061869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:39.062837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:40.063096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:41.063348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:42.063633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:43.064042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:44.064357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:45.064535      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 05/07/25 18:05:45.293
  I0507 18:05:45.344941 24 chunking.go:163] Retrieved 40/40 results with rv 2254064 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 05/07/25 18:05:45.344
  E0507 18:05:46.064651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:47.064756      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:48.064895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:49.065418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:50.066436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:51.067449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:52.067551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:53.068430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:54.068917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:55.069035      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:56.069171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:57.069586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:58.070404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:05:59.070423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:00.070563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:01.071013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:02.071144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:03.071247      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:04.071376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:05.071561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:06:05.351781 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:06:06.072510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:07.072591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:08.072711      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:09.072864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:10.073015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:11.073153      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:12.073260      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:13.073457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:14.073597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:15.073764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:16.073890      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:17.074103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:18.074241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:19.074381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:20.074542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:21.074693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:22.074807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:23.074929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:24.075090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:25.075250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:06:25.351502 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:06:26.075241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:27.075401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:28.075434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:29.075600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:30.075750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:31.075910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:32.076104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:33.076257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:34.076423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:35.076583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:36.076806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:37.076948      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:38.077093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:39.077228      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:40.077389      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:41.077559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:42.077698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:43.077837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:44.077997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:45.078147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:06:45.350703 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:06:46.078297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:47.078436      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:48.078572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:49.078736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:50.078888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:51.079049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:52.079239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:53.079409      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:54.079570      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:55.079743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:56.079873      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:57.080120      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:58.080296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:06:59.080433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:00.080588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:01.080770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:02.080911      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:03.081036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:04.081186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:05.081355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:07:05.350176 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:07:06.081879      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:07.082155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:08.082295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:09.082450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:10.082609      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:11.083249      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:12.083376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:13.083532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:14.083678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:15.083848      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:16.083990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:17.084256      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:18.084402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:19.084540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:20.084677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:21.084874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:22.085059      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:23.085194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:24.085358      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:25.085573      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:07:25.351396 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:07:26.086080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:27.086360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:28.086698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:29.086871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:30.086960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:31.087146      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:32.087233      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:33.087406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:34.087557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:35.087713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:36.087858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:37.088111      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:38.088234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:39.088382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:40.088537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:41.088696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:42.088826      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:43.088974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:44.089129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:45.089292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:07:45.350236 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:07:46.089852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:47.090058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:48.091141      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:49.091394      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:50.091525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:51.091684      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:52.091818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:53.091964      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:54.092108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:55.092266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:56.093339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:57.093479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:58.093588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:07:59.093749      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:00.093885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:01.094049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:02.094272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:03.094417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:04.094542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:05.094720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:08:05.350795 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:08:06.095349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:07.095495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:08.095621      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:09.095791      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:10.095924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:11.096081      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:12.096318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:13.096459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:14.096583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:15.096754      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:16.096897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:17.097107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:18.097246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:19.097406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:20.097544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:21.097699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:22.097827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:23.097962      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:24.098121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:25.098266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:08:25.351283 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:08:26.098963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:27.099219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:28.099390      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:29.099528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:30.099672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:31.099835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:32.100062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:33.101114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:34.101283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:35.101431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:36.101528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:37.101665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:38.101805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:39.101942      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:40.102096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:41.102481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:42.102603      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:43.102746      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:44.102909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:45.103061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:08:45.350141 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:08:46.103812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:47.104064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:48.104200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:49.104345      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:50.104484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:51.104670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:52.104767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:53.104885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:54.105032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:55.105149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:56.105377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:57.105501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:58.105640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:08:59.105760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:00.105889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:01.106053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:02.106214      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:03.106355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:04.106432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:05.106587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:09:05.350855 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:09:06.107532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:07.107658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:08.107724      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:09.107862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:10.107920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:11.108103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:12.108207      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:13.108343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:14.108417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:15.108525      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:16.108622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:17.108723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:18.108788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:19.108912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:20.109030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:21.109195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:22.109242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:23.109363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:24.109534      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:25.109660      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:09:25.350811 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:09:26.110508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:27.111344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:28.111672      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:29.111837      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:30.112427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:31.112591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:32.112692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:33.112818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:34.113440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:35.113552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:36.113727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:37.113869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:38.113997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:39.114149      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:40.114305      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:41.114464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:42.114590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:43.114733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:44.115435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:45.115562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:09:45.351032 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:09:46.115694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:47.115835      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:48.115966      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:49.116748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:50.116872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:51.117041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:52.117295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:53.117423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:54.118464      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:55.118568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:56.118729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:57.119406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:58.119562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:09:59.119670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:00.119796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:01.119927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:02.120147      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:03.120198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:04.120374      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:05.120411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:10:05.350995 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:10:06.120536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:07.121402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:08.121459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:09.121633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:10.121738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:11.122477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:12.123466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:13.123631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:14.123753      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:15.123917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:16.124027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:17.124269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:18.124354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:19.124532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:20.124624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:21.124786      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:22.125405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:23.125556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:24.125646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:25.125808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:10:25.350103 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:10:26.126905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:27.127020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:28.127178      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:29.127292      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:30.127435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:31.127563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:32.127693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:33.127777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:34.128422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:35.129441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:36.129662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:37.129790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:38.130410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:39.130544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:40.130699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:41.130854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:42.131069      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:43.131195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:44.131366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:45.131495      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:10:45.351025 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:10:46.131742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:47.131886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:48.132004      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:49.132151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:50.132253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:51.132418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:52.132537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:53.132680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:54.133441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:55.134485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:56.134632      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:57.134760      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:58.134907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:10:59.135045      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:00.135178      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:01.135340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:02.135465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:03.135597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:04.136422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:05.136540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:11:05.350646 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:11:06.137349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:07.137453      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:08.137600      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:09.137730      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:10.137868      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:11.138020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:12.138258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:13.138413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:14.138413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:15.139472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:16.139622      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:17.139752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:18.139878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:19.139998      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:20.140306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:21.141013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:22.141222      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:23.141360      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:24.141413      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:25.142446      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:11:25.350511 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:11:26.143208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:27.143333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:28.143759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:29.143611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:30.143914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:31.144061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:32.144324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:33.144456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:34.145425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:35.145586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:36.145742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:37.145833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:38.145973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:39.146098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:40.146227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:41.146382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:42.146506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:43.146652      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:44.147430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:45.147588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:11:45.350636 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:11:46.148344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:47.148490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:48.148618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:49.148776      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:50.148909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:51.149075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:52.149272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:53.149401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:54.150433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:55.150541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:56.150733      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:57.150886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:58.151020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:11:59.151194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:00.151325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:01.151441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:02.151489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:03.151676      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:04.152429      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:05.152599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:12:05.350488 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:12:06.153221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:07.153366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:08.153493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:09.153634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:10.153748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:11.153923      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:12.154099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:13.154241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:14.154366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:15.154538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:16.154759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:17.154897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:18.155042      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:19.155183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:20.155322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:21.155479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:22.155607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:23.155745      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:24.156421      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:25.156593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:12:25.351056 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:12:26.156734      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:27.156877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:28.157031      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:29.157169      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:30.157332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:31.157478      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:32.157608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:33.157729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:34.158471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:35.158635      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:36.158790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:37.158904      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:38.159077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:39.159217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:40.159364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:41.159526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:42.159642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:43.159796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:44.160426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:45.160556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:12:45.350559 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:12:46.161371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:47.161424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:48.161588      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:49.162461      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:50.162619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:51.162789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:52.162910      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:53.163050      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:54.163397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:55.163527      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:56.163690      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:57.163813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:58.163969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:12:59.164114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:00.164253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:01.164411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:02.164537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:03.164675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:04.165416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:05.165547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:13:05.350342 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:13:06.166139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:07.166399      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:08.166538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:09.166675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:10.166816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:11.166978      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:12.167227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:13.167412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:14.167404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:15.167562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:16.167715      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:17.167853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:18.167925      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:19.168075      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:20.168206      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:21.168382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:22.168493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:23.168624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:24.169482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:25.169689      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:13:25.350778 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:13:26.170655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:27.170806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:28.171108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:29.171047      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:30.171313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:31.171484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:32.171623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:33.171767      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:34.172419      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:35.172584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:36.172710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:37.172815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:38.172951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:39.173079      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:40.173221      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:41.173392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:42.173487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:43.173637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:44.173732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:45.173886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:13:45.350483 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NDA2NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0507 18:13:46.173989      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:47.174197      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:48.174293      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:49.174445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:50.174537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:51.174710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:52.175504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:53.175634      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:54.175743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:55.175897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:56.176026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:57.176246      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:58.176363      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:13:59.176507      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:00.176626      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:01.176785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:02.177502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:03.177640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:04.177780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:05.177912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:14:05.348912 24 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0507 18:14:05.348941 24 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/07/25 18:14:05.348
  STEP: retrieving all remaining pages @ 05/07/25 18:14:05.352
  I0507 18:14:05.356696 24 chunking.go:221] Retrieved 40/40 results with rv 2255430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NTQzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  I0507 18:14:05.359751 24 chunking.go:221] Retrieved 40/40 results with rv 2255430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NTQzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  I0507 18:14:05.363003 24 chunking.go:221] Retrieved 40/40 results with rv 2255430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NTQzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  I0507 18:14:05.366161 24 chunking.go:221] Retrieved 40/40 results with rv 2255430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NTQzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  I0507 18:14:05.369029 24 chunking.go:221] Retrieved 40/40 results with rv 2255430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NTQzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  I0507 18:14:05.371961 24 chunking.go:221] Retrieved 40/40 results with rv 2255430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NTQzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  I0507 18:14:05.374862 24 chunking.go:221] Retrieved 40/40 results with rv 2255430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI1NTQzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  I0507 18:14:05.377771 24 chunking.go:221] Retrieved 40/40 results with rv 2255430 and continue 
  I0507 18:14:05.377905 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8319" for this suite. @ 05/07/25 18:14:05.38
• [517.798 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/07/25 18:14:05.386
  I0507 18:14:05.386261 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sysctl @ 05/07/25 18:14:05.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:14:05.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:14:05.405
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/07/25 18:14:05.406
  STEP: Watching for error events or started pod @ 05/07/25 18:14:05.414
  E0507 18:14:06.178092      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:07.178268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 05/07/25 18:14:07.417
  E0507 18:14:08.178704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:09.178831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 05/07/25 18:14:09.427
  STEP: Getting logs from the pod @ 05/07/25 18:14:09.427
  STEP: Checking that the sysctl is actually updated @ 05/07/25 18:14:09.438
  I0507 18:14:09.438716 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4390" for this suite. @ 05/07/25 18:14:09.442
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 05/07/25 18:14:09.448
  I0507 18:14:09.448184 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 18:14:09.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:14:09.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:14:09.462
  STEP: creating a replication controller @ 05/07/25 18:14:09.463
  I0507 18:14:09.463961 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 create -f -'
  I0507 18:14:09.536554 24 builder.go:146] stderr: ""
  I0507 18:14:09.536617 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/07/25 18:14:09.536
  I0507 18:14:09.536710 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 18:14:09.575949 24 builder.go:146] stderr: ""
  I0507 18:14:09.575975 24 builder.go:147] stdout: "update-demo-nautilus-bht5c update-demo-nautilus-zlwrk "
  I0507 18:14:09.576001 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-bht5c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 18:14:09.611922 24 builder.go:146] stderr: ""
  I0507 18:14:09.611945 24 builder.go:147] stdout: ""
  I0507 18:14:09.611954 24 kubectl.go:2505] update-demo-nautilus-bht5c is created but not running
  E0507 18:14:10.179490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:11.179670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:12.180434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:13.180595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:14.181435      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:14:14.612962 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 18:14:14.653000 24 builder.go:146] stderr: ""
  I0507 18:14:14.653050 24 builder.go:147] stdout: "update-demo-nautilus-bht5c update-demo-nautilus-zlwrk "
  I0507 18:14:14.653075 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-bht5c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 18:14:14.689937 24 builder.go:146] stderr: ""
  I0507 18:14:14.689975 24 builder.go:147] stdout: "true"
  I0507 18:14:14.690005 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-bht5c -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 18:14:14.727061 24 builder.go:146] stderr: ""
  I0507 18:14:14.727086 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 18:14:14.727109 24 kubectl.go:2396] validating pod update-demo-nautilus-bht5c
  I0507 18:14:14.734420 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0507 18:14:14.734464 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 18:14:14.734471 24 kubectl.go:2523] update-demo-nautilus-bht5c is verified up and running
  I0507 18:14:14.734513 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-zlwrk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 18:14:14.771544 24 builder.go:146] stderr: ""
  I0507 18:14:14.771569 24 builder.go:147] stdout: "true"
  I0507 18:14:14.771596 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-zlwrk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 18:14:14.806276 24 builder.go:146] stderr: ""
  I0507 18:14:14.806307 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 18:14:14.806315 24 kubectl.go:2396] validating pod update-demo-nautilus-zlwrk
  I0507 18:14:14.815317 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0507 18:14:14.815342 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 18:14:14.815348 24 kubectl.go:2523] update-demo-nautilus-zlwrk is verified up and running
  STEP: scaling down the replication controller @ 05/07/25 18:14:14.815
  I0507 18:14:14.816207 24 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0507 18:14:14.816228 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0507 18:14:15.181762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:14:15.860028 24 builder.go:146] stderr: ""
  I0507 18:14:15.860076 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/07/25 18:14:15.86
  I0507 18:14:15.860148 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 18:14:15.899770 24 builder.go:146] stderr: ""
  I0507 18:14:15.899820 24 builder.go:147] stdout: "update-demo-nautilus-bht5c update-demo-nautilus-zlwrk "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/07/25 18:14:15.899
  E0507 18:14:16.182230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:17.182423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:18.182582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:19.182718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:20.182857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:14:20.900641 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 18:14:20.939773 24 builder.go:146] stderr: ""
  I0507 18:14:20.939814 24 builder.go:147] stdout: "update-demo-nautilus-bht5c "
  I0507 18:14:20.939859 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-bht5c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 18:14:20.975294 24 builder.go:146] stderr: ""
  I0507 18:14:20.975318 24 builder.go:147] stdout: "true"
  I0507 18:14:20.975344 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-bht5c -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 18:14:21.010624 24 builder.go:146] stderr: ""
  I0507 18:14:21.010648 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 18:14:21.010656 24 kubectl.go:2396] validating pod update-demo-nautilus-bht5c
  I0507 18:14:21.014174 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0507 18:14:21.014201 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 18:14:21.014208 24 kubectl.go:2523] update-demo-nautilus-bht5c is verified up and running
  STEP: scaling up the replication controller @ 05/07/25 18:14:21.014
  I0507 18:14:21.015105 24 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0507 18:14:21.015127 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0507 18:14:21.183427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:14:22.060140 24 builder.go:146] stderr: ""
  I0507 18:14:22.060163 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/07/25 18:14:22.06
  I0507 18:14:22.060211 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 18:14:22.100022 24 builder.go:146] stderr: ""
  I0507 18:14:22.100072 24 builder.go:147] stdout: "update-demo-nautilus-4nbtn update-demo-nautilus-bht5c "
  I0507 18:14:22.100101 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-4nbtn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 18:14:22.136524 24 builder.go:146] stderr: ""
  I0507 18:14:22.136587 24 builder.go:147] stdout: ""
  I0507 18:14:22.136593 24 kubectl.go:2505] update-demo-nautilus-4nbtn is created but not running
  E0507 18:14:22.183701      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:23.183831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:24.183979      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:25.184112      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:26.184312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:14:27.137337 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 18:14:27.179009 24 builder.go:146] stderr: ""
  I0507 18:14:27.179034 24 builder.go:147] stdout: "update-demo-nautilus-4nbtn update-demo-nautilus-bht5c "
  I0507 18:14:27.179060 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-4nbtn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0507 18:14:27.185272      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:14:27.216729 24 builder.go:146] stderr: ""
  I0507 18:14:27.216766 24 builder.go:147] stdout: "true"
  I0507 18:14:27.216833 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-4nbtn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 18:14:27.253171 24 builder.go:146] stderr: ""
  I0507 18:14:27.253201 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 18:14:27.253212 24 kubectl.go:2396] validating pod update-demo-nautilus-4nbtn
  I0507 18:14:27.257169 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0507 18:14:27.257194 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 18:14:27.257201 24 kubectl.go:2523] update-demo-nautilus-4nbtn is verified up and running
  I0507 18:14:27.257223 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-bht5c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 18:14:27.292860 24 builder.go:146] stderr: ""
  I0507 18:14:27.292884 24 builder.go:147] stdout: "true"
  I0507 18:14:27.292909 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods update-demo-nautilus-bht5c -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 18:14:27.328731 24 builder.go:146] stderr: ""
  I0507 18:14:27.328759 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 18:14:27.328767 24 kubectl.go:2396] validating pod update-demo-nautilus-bht5c
  I0507 18:14:27.334377 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0507 18:14:27.334401 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 18:14:27.334408 24 kubectl.go:2523] update-demo-nautilus-bht5c is verified up and running
  STEP: using delete to clean up resources @ 05/07/25 18:14:27.334
  I0507 18:14:27.334444 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 delete --grace-period=0 --force -f -'
  I0507 18:14:27.375567 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 18:14:27.375591 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0507 18:14:27.375617 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get rc,svc -l name=update-demo --no-headers'
  I0507 18:14:27.417110 24 builder.go:146] stderr: "No resources found in kubectl-6459 namespace.\n"
  I0507 18:14:27.417137 24 builder.go:147] stdout: ""
  I0507 18:14:27.417167 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-6459 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0507 18:14:27.455834 24 builder.go:146] stderr: ""
  I0507 18:14:27.455858 24 builder.go:147] stdout: ""
  I0507 18:14:27.455926 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6459" for this suite. @ 05/07/25 18:14:27.459
• [18.017 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 05/07/25 18:14:27.465
  I0507 18:14:27.465420 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 18:14:27.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:14:27.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:14:27.478
  STEP: Creating a pod to test substitution in volume subpath @ 05/07/25 18:14:27.48
  E0507 18:14:28.185858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:29.186032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:30.186951      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:31.187139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:14:31.499
  I0507 18:14:31.503630 24 output.go:207] Trying to get logs from node mini-2 pod var-expansion-369df763-2342-49f4-8d22-0704a4fd7b96 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 18:14:31.509
  I0507 18:14:31.528992 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4198" for this suite. @ 05/07/25 18:14:31.533
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 05/07/25 18:14:31.539
  I0507 18:14:31.539265 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 18:14:31.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:14:31.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:14:31.57
  STEP: starting the proxy server @ 05/07/25 18:14:31.572
  I0507 18:14:31.572648 24 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-9007 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/07/25 18:14:31.598
  I0507 18:14:31.604339 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0507 18:14:31.605468 24 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:60983

  I0507 18:14:31.605531 24 kubectl.go:2232] kubectl proxy stderr: W0507 18:14:31.597848    2321 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-9007" for this suite. @ 05/07/25 18:14:31.634
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 05/07/25 18:14:31.642
  I0507 18:14:31.642554 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 18:14:31.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:14:31.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:14:31.657
  STEP: Creating configMap with name projected-configmap-test-volume-map-5a743715-1239-4035-b4e7-057613b7049c @ 05/07/25 18:14:31.66
  STEP: Creating a pod to test consume configMaps @ 05/07/25 18:14:31.665
  E0507 18:14:32.187126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:33.187295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:34.187414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:35.187493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:14:35.7
  I0507 18:14:35.704964 24 output.go:207] Trying to get logs from node mini-2 pod pod-projected-configmaps-b94efac9-ec50-4e8c-b231-38ed9958985e container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 18:14:35.71
  I0507 18:14:35.729433 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9295" for this suite. @ 05/07/25 18:14:35.734
• [4.099 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 05/07/25 18:14:35.741
  I0507 18:14:35.741765 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 18:14:35.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:14:35.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:14:35.758
  STEP: Creating configMap configmap-9118/configmap-test-64156443-17fa-4e62-ae83-a31f4f816bb2 @ 05/07/25 18:14:35.76
  STEP: Creating a pod to test consume configMaps @ 05/07/25 18:14:35.764
  E0507 18:14:36.188194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:37.188380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:38.189007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:39.189200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:14:39.786
  I0507 18:14:39.790260 24 output.go:207] Trying to get logs from node mini-2 pod pod-configmaps-04438b5f-d1f1-401b-be2b-6828619de5a7 container env-test: <nil>
  STEP: delete the pod @ 05/07/25 18:14:39.795
  I0507 18:14:39.813067 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9118" for this suite. @ 05/07/25 18:14:39.816
• [4.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 05/07/25 18:14:39.824
  I0507 18:14:39.824661 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 18:14:39.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:14:39.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:14:39.841
  STEP: Setting up server cert @ 05/07/25 18:14:39.86
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 18:14:40.144
  STEP: Deploying the webhook pod @ 05/07/25 18:14:40.152
  STEP: Wait for the deployment to be ready @ 05/07/25 18:14:40.168
  I0507 18:14:40.180046 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0507 18:14:40.190140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:41.190352      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:42.190326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 18:14:42.193
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 18:14:42.229
  E0507 18:14:43.191355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:14:43.229369 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/07/25 18:14:43.234
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/07/25 18:14:43.249
  I0507 18:14:43.249098 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  I0507 18:14:43.363830 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2145" for this suite. @ 05/07/25 18:14:43.368
  STEP: Destroying namespace "webhook-markers-2277" for this suite. @ 05/07/25 18:14:43.375
• [3.559 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/07/25 18:14:43.383
  I0507 18:14:43.383583 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename watch @ 05/07/25 18:14:43.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:14:43.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:14:43.397
  STEP: creating a watch on configmaps @ 05/07/25 18:14:43.401
  STEP: creating a new configmap @ 05/07/25 18:14:43.401
  STEP: modifying the configmap once @ 05/07/25 18:14:43.41
  STEP: closing the watch once it receives two notifications @ 05/07/25 18:14:43.42
  I0507 18:14:43.420906 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7585  382df08c-69f6-412a-83e2-7a226245067f 2256225 0 2025-05-07 18:14:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-07 18:14:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 18:14:43.420975 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7585  382df08c-69f6-412a-83e2-7a226245067f 2256226 0 2025-05-07 18:14:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-07 18:14:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/07/25 18:14:43.421
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/07/25 18:14:43.439
  STEP: deleting the configmap @ 05/07/25 18:14:43.44
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/07/25 18:14:43.456
  I0507 18:14:43.456660 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7585  382df08c-69f6-412a-83e2-7a226245067f 2256227 0 2025-05-07 18:14:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-07 18:14:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 18:14:43.456721 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7585  382df08c-69f6-412a-83e2-7a226245067f 2256228 0 2025-05-07 18:14:43 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-07 18:14:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 18:14:43.456774 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7585" for this suite. @ 05/07/25 18:14:43.468
• [0.093 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 05/07/25 18:14:43.476
  I0507 18:14:43.476687 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/07/25 18:14:43.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:14:43.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:14:43.492
  I0507 18:14:43.493833 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 18:14:44.191388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:45.191550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:46.191950      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:14:46.541741 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3323" for this suite. @ 05/07/25 18:14:46.546
• [3.077 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 05/07/25 18:14:46.553
  I0507 18:14:46.553783 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 18:14:46.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:14:46.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:14:46.569
  STEP: Creating an indexed job with successPolicy @ 05/07/25 18:14:46.571
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 05/07/25 18:14:46.578
  E0507 18:14:47.192250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:48.192385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:49.193200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:50.193353      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:51.194104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:52.194268      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 05/07/25 18:14:52.595
  STEP: Verifying that the job status to ensure correct final state @ 05/07/25 18:14:52.602
  I0507 18:14:52.605900 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4697" for this suite. @ 05/07/25 18:14:52.61
• [6.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 05/07/25 18:14:52.618
  I0507 18:14:52.618041 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 18:14:52.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:14:52.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:14:52.632
  STEP: Creating a suspended job @ 05/07/25 18:14:52.637
  STEP: Patching the Job @ 05/07/25 18:14:52.642
  STEP: Watching for Job to be patched @ 05/07/25 18:14:52.676
  I0507 18:14:52.677542 24 job.go:1369] Event ADDED observed for Job e2e-l5p58 in namespace job-3354 with labels: map[e2e-job-label:e2e-l5p58] and annotations: map[]
  I0507 18:14:52.677558 24 job.go:1369] Event MODIFIED observed for Job e2e-l5p58 in namespace job-3354 with labels: map[e2e-job-label:e2e-l5p58] and annotations: map[]
  I0507 18:14:52.677567 24 job.go:1372] Event MODIFIED found for Job e2e-l5p58 in namespace job-3354 with labels: map[e2e-job-label:e2e-l5p58 e2e-l5p58:patched] and annotations: map[]
  STEP: Updating the job @ 05/07/25 18:14:52.677
  STEP: Watching for Job to be updated @ 05/07/25 18:14:52.687
  I0507 18:14:52.688779 24 job.go:1372] Event MODIFIED found for Job e2e-l5p58 in namespace job-3354 with labels: map[e2e-job-label:e2e-l5p58 e2e-l5p58:patched] and annotations: map[updated:true]
  I0507 18:14:52.688799 24 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/07/25 18:14:52.688
  I0507 18:14:52.691681 24 job.go:1247] Job: e2e-l5p58 as labels: map[e2e-job-label:e2e-l5p58 e2e-l5p58:patched]
  STEP: Waiting for job to complete @ 05/07/25 18:14:52.691
  E0507 18:14:53.194921      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:54.195013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:55.195301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:56.195474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:57.196487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:58.196698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:14:59.196854      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:00.197467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:01.198481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:02.198503      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 05/07/25 18:15:02.718
  STEP: Watching for Job to be deleted @ 05/07/25 18:15:02.728
  I0507 18:15:02.730147 24 job.go:1369] Event MODIFIED observed for Job e2e-l5p58 in namespace job-3354 with labels: map[e2e-job-label:e2e-l5p58 e2e-l5p58:patched] and annotations: map[updated:true]
  I0507 18:15:02.730178 24 job.go:1369] Event MODIFIED observed for Job e2e-l5p58 in namespace job-3354 with labels: map[e2e-job-label:e2e-l5p58 e2e-l5p58:patched] and annotations: map[updated:true]
  I0507 18:15:02.730302 24 job.go:1369] Event MODIFIED observed for Job e2e-l5p58 in namespace job-3354 with labels: map[e2e-job-label:e2e-l5p58 e2e-l5p58:patched] and annotations: map[updated:true]
  I0507 18:15:02.730352 24 job.go:1369] Event MODIFIED observed for Job e2e-l5p58 in namespace job-3354 with labels: map[e2e-job-label:e2e-l5p58 e2e-l5p58:patched] and annotations: map[updated:true]
  I0507 18:15:02.730364 24 job.go:1369] Event MODIFIED observed for Job e2e-l5p58 in namespace job-3354 with labels: map[e2e-job-label:e2e-l5p58 e2e-l5p58:patched] and annotations: map[updated:true]
  I0507 18:15:02.730382 24 job.go:1372] Event DELETED found for Job e2e-l5p58 in namespace job-3354 with labels: map[e2e-job-label:e2e-l5p58 e2e-l5p58:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/07/25 18:15:02.73
  I0507 18:15:02.733860 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3354" for this suite. @ 05/07/25 18:15:02.738
• [10.132 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 05/07/25 18:15:02.75
  I0507 18:15:02.750210 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename runtimeclass @ 05/07/25 18:15:02.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:15:02.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:15:02.794
  STEP: Deleting RuntimeClass runtimeclass-1968-delete-me @ 05/07/25 18:15:02.802
  STEP: Waiting for the RuntimeClass to disappear @ 05/07/25 18:15:02.814
  I0507 18:15:02.825310 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1968" for this suite. @ 05/07/25 18:15:02.839
• [0.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 05/07/25 18:15:02.847
  I0507 18:15:02.847063 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 18:15:02.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:15:02.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:15:02.862
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/07/25 18:15:02.864
  E0507 18:15:03.198735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:04.198875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:05.199914      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:06.200115      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 05/07/25 18:15:06.945
  STEP: Then the orphan pod is adopted @ 05/07/25 18:15:06.952
  E0507 18:15:07.200564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:15:07.960278 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8513" for this suite. @ 05/07/25 18:15:07.964
• [5.126 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 05/07/25 18:15:07.972
  I0507 18:15:07.972886 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 18:15:07.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:15:07.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:15:07.996
  STEP: Creating a pod to test downward api env vars @ 05/07/25 18:15:07.999
  E0507 18:15:08.201431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:09.202508      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:10.202677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:11.202824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:15:12.024
  I0507 18:15:12.027969 24 output.go:207] Trying to get logs from node mini-2 pod downward-api-a1b8653d-e344-42ec-9c34-52872741ad55 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 18:15:12.034
  I0507 18:15:12.048779 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1943" for this suite. @ 05/07/25 18:15:12.053
• [4.087 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 05/07/25 18:15:12.06
  I0507 18:15:12.060237 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 18:15:12.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:15:12.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:15:12.074
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 05/07/25 18:15:12.076
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 05/07/25 18:15:12.082
  E0507 18:15:12.203240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:13.203402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:14.203449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:15.203561      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:16.204258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:17.204465      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 05/07/25 18:15:18.097
  I0507 18:15:18.101341 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9365" for this suite. @ 05/07/25 18:15:18.106
• [6.053 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 05/07/25 18:15:18.113
  I0507 18:15:18.113739 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 18:15:18.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:15:18.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:15:18.126
  STEP: Creating Indexed job @ 05/07/25 18:15:18.129
  STEP: Ensuring job reaches completions @ 05/07/25 18:15:18.135
  E0507 18:15:18.205232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:19.205422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:20.206175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:21.206303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:22.206591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:23.206727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:24.207133      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:25.207266      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 05/07/25 18:15:26.166
  I0507 18:15:26.171326 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2961" for this suite. @ 05/07/25 18:15:26.175
• [8.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 05/07/25 18:15:26.182
  I0507 18:15:26.182078 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/07/25 18:15:26.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:15:26.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:15:26.2
  I0507 18:15:26.202672 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 18:15:26.208017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:27.208378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:28.208648      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:29.209098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:15:29.263647 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-843" for this suite. @ 05/07/25 18:15:29.268
• [3.095 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 05/07/25 18:15:29.277
  I0507 18:15:29.277068 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 18:15:29.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:15:29.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:15:29.292
  STEP: Creating service test in namespace statefulset-383 @ 05/07/25 18:15:29.295
  STEP: Creating a new StatefulSet @ 05/07/25 18:15:29.301
  I0507 18:15:29.327302 24 wait.go:44] Found 1 stateful pods, waiting for 3
  E0507 18:15:30.209232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:31.209296      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:32.209500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:33.209692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:34.209831      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:35.209982      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:36.210545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:37.210552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:38.210707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:39.210852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:15:39.322805 24 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 18:15:39.322821 24 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0507 18:15:39.322841 24 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0507 18:15:39.333513 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-383 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 18:15:39.431240 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 18:15:39.431267 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 18:15:39.431275 24 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0507 18:15:40.211497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:41.212526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:42.212593      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:43.212751      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:44.212888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:45.213061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:46.213227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:47.213384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:48.213539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:49.213696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/07/25 18:15:49.44
  I0507 18:15:49.450015 24 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 05/07/25 18:15:49.45
  E0507 18:15:50.214074      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:51.214261      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:52.214431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:53.214589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:54.214750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:55.214929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:56.215084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:57.215218      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:58.215381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:15:59.215539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 05/07/25 18:15:59.459
  I0507 18:15:59.462555 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-383 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 18:15:59.557450 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 18:15:59.557473 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 18:15:59.557482 24 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0507 18:16:00.215886      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:01.216080      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:02.216250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:03.216382      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:04.216485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:05.216617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:06.216761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:07.217458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:08.217576      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:09.217729      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 05/07/25 18:16:09.573
  I0507 18:16:09.573533 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-383 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 18:16:09.678410 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 18:16:09.678433 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 18:16:09.678442 24 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0507 18:16:10.217857      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:11.218512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:12.218613      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:13.218794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:14.218917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:15.219087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:16.219224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:17.219407      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:18.219568      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:19.219703      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:16:19.697630 24 statefulset.go:2542] Updating stateful set ss2
  E0507 18:16:20.219909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:21.220036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:22.220203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:23.220397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:24.220547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:25.221310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:26.221472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:27.222524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:28.222718      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:29.222867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 05/07/25 18:16:29.707
  I0507 18:16:29.710922 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-383 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 18:16:29.798668 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 18:16:29.798695 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 18:16:29.798703 24 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0507 18:16:30.223125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:31.223265      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:32.223410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:33.224433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:34.225467      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:35.225591      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:36.225777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:37.225869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:38.226027      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:39.226180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:16:39.813542 24 statefulset.go:138] Deleting all statefulset in ns statefulset-383
  I0507 18:16:39.816525 24 rest.go:153] Scaling statefulset ss2 to 0
  E0507 18:16:40.227226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:41.227490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:42.227559      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:43.227673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:44.227806      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:45.227953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:46.228127      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:47.228245      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:48.228403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:49.228548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:16:49.832535 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0507 18:16:49.839221 24 rest.go:91] Deleting statefulset ss2
  I0507 18:16:49.854708 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-383" for this suite. @ 05/07/25 18:16:49.86
• [80.590 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/07/25 18:16:49.866
  I0507 18:16:49.866917 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename podtemplate @ 05/07/25 18:16:49.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:16:49.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:16:49.882
  STEP: Create a pod template @ 05/07/25 18:16:49.884
  STEP: Replace a pod template @ 05/07/25 18:16:49.89
  I0507 18:16:49.900284 24 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0507 18:16:49.900375 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5915" for this suite. @ 05/07/25 18:16:49.96
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 05/07/25 18:16:49.968
  I0507 18:16:49.968109 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 18:16:49.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:16:49.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:16:49.983
  I0507 18:16:49.985705 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-8804 version'
  I0507 18:16:50.016654 24 builder.go:146] stderr: ""
  I0507 18:16:50.016678 24 builder.go:147] stdout: "Client Version: v1.33.0\nKustomize Version: v5.6.0\nServer Version: v1.33.0\n"
  I0507 18:16:50.016818 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8804" for this suite. @ 05/07/25 18:16:50.062
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/07/25 18:16:50.078
  I0507 18:16:50.078089 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename watch @ 05/07/25 18:16:50.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:16:50.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:16:50.093
  STEP: creating a watch on configmaps with a certain label @ 05/07/25 18:16:50.094
  STEP: creating a new configmap @ 05/07/25 18:16:50.095
  STEP: modifying the configmap once @ 05/07/25 18:16:50.101
  STEP: changing the label value of the configmap @ 05/07/25 18:16:50.109
  STEP: Expecting to observe a delete notification for the watched object @ 05/07/25 18:16:50.117
  I0507 18:16:50.117928 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-332  9fdb957c-7766-4808-b312-45c71607021f 2257482 0 2025-05-07 18:16:50 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 18:16:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 18:16:50.118003 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-332  9fdb957c-7766-4808-b312-45c71607021f 2257483 0 2025-05-07 18:16:50 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 18:16:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 18:16:50.118051 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-332  9fdb957c-7766-4808-b312-45c71607021f 2257484 0 2025-05-07 18:16:50 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 18:16:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/07/25 18:16:50.118
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/07/25 18:16:50.127
  E0507 18:16:50.228557      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:51.228741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:52.228818      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:53.228960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:54.229090      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:55.229241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:56.229378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:57.229497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:58.229656      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:16:59.229800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 05/07/25 18:17:00.127
  STEP: modifying the configmap a third time @ 05/07/25 18:17:00.137
  STEP: deleting the configmap @ 05/07/25 18:17:00.144
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/07/25 18:17:00.15
  I0507 18:17:00.150497 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-332  9fdb957c-7766-4808-b312-45c71607021f 2257586 0 2025-05-07 18:16:50 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 18:17:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 18:17:00.150580 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-332  9fdb957c-7766-4808-b312-45c71607021f 2257587 0 2025-05-07 18:16:50 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 18:17:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 18:17:00.150648 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-332  9fdb957c-7766-4808-b312-45c71607021f 2257588 0 2025-05-07 18:16:50 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-07 18:17:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 18:17:00.150714 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-332" for this suite. @ 05/07/25 18:17:00.154
• [10.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 05/07/25 18:17:00.16
  I0507 18:17:00.160642 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename security-context-test @ 05/07/25 18:17:00.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:17:00.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:17:00.176
  E0507 18:17:00.230618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:01.230780      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:02.230963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:03.231098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:04.198392 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8377" for this suite. @ 05/07/25 18:17:04.202
• [4.047 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 05/07/25 18:17:04.208
  I0507 18:17:04.208122 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 18:17:04.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:17:04.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:17:04.224
  STEP: Creating Pod @ 05/07/25 18:17:04.227
  E0507 18:17:04.231328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:05.231619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:06.231763      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 05/07/25 18:17:06.247
  I0507 18:17:06.247234 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1965 PodName:pod-sharedvolume-ae3d1bb0-a3c0-44ba-bae7-4da810552421 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 18:17:06.247257 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 18:17:06.247279 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/emptydir-1965/pods/pod-sharedvolume-ae3d1bb0-a3c0-44ba-bae7-4da810552421/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0507 18:17:06.283593 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 18:17:06.283620 24 exec_util.go:112] Exec stderr: ""
  I0507 18:17:06.283707 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1965" for this suite. @ 05/07/25 18:17:06.287
• [2.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/07/25 18:17:06.294
  I0507 18:17:06.294262 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pod-network-test @ 05/07/25 18:17:06.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:17:06.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:17:06.307
  STEP: Performing setup for networking test in namespace pod-network-test-9273 @ 05/07/25 18:17:06.309
  STEP: creating a selector @ 05/07/25 18:17:06.309
  STEP: Creating the service pods in kubernetes @ 05/07/25 18:17:06.309
  I0507 18:17:06.309874 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0507 18:17:07.232565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:08.232720      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:09.232822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:10.232960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:11.233732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:12.233838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:13.234578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:14.234709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:15.234939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:16.235094      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:17.235747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:18.235881      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:19.236969      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:20.237040      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/07/25 18:17:20.443
  E0507 18:17:21.237236      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:22.237432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:22.472691 24 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0507 18:17:22.472721 24 utils.go:495] Going to poll 192.168.125.201 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0507 18:17:22.475901 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.125.201:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9273 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 18:17:22.475926 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 18:17:22.475975 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9273/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.125.201%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0507 18:17:22.534337 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 18:17:22.534365 24 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0507 18:17:22.534375 24 utils.go:495] Going to poll 192.168.158.158 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0507 18:17:22.537770 24 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.158.158:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9273 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0507 18:17:22.537782 24 exec_util.go:68] ExecWithOptions: Clientset creation
  I0507 18:17:22.537849 24 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9273/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.158.158%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0507 18:17:22.594921 24 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0507 18:17:22.594949 24 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0507 18:17:22.595017 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9273" for this suite. @ 05/07/25 18:17:22.599
• [16.310 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 05/07/25 18:17:22.604
  I0507 18:17:22.604733 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 18:17:22.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:17:22.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:17:22.62
  STEP: creating service in namespace services-8785 @ 05/07/25 18:17:22.622
  STEP: creating service affinity-clusterip in namespace services-8785 @ 05/07/25 18:17:22.622
  I0507 18:17:22.651882 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0507 18:17:23.237540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:24.237628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:24.667222 24 resource.go:361] Creating new exec pod
  E0507 18:17:25.238357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:26.238549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:26.689672 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-8785 exec execpod-affinityxkgff -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0507 18:17:26.765776 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.110.138.157) 80 port [tcp/http] succeeded!\n"
  I0507 18:17:26.765802 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 18:17:26.765845 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-8785 exec execpod-affinityxkgff -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.138.157 80'
  I0507 18:17:26.829656 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.138.157 80\nConnection to 10.110.138.157 80 port [tcp/http] succeeded!\n"
  I0507 18:17:26.829682 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 18:17:26.829715 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-8785 exec execpod-affinityxkgff -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/ ; done'
  I0507 18:17:26.941315 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.110.138.157:80/\n"
  I0507 18:17:26.941345 24 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4\naffinity-clusterip-6dd57cf8dc-pm4z4"
  I0507 18:17:26.941356 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941365 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941371 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941376 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941381 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941387 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941392 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941398 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941403 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941408 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941412 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941417 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941422 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941427 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941434 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941440 24 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-pm4z4
  I0507 18:17:26.941483 24 service.go:4352] Cleaning up the exec pod
  I0507 18:17:26.990424 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8785" for this suite. @ 05/07/25 18:17:26.995
• [4.398 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 05/07/25 18:17:27.002
  I0507 18:17:27.002835 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 18:17:27.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:17:27.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:17:27.026
  STEP: Creating ReplicationController "e2e-rc-82xvq" @ 05/07/25 18:17:27.028
  I0507 18:17:27.034533 24 rc.go:795] Get Replication Controller "e2e-rc-82xvq" to confirm replicas
  E0507 18:17:27.239361      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:28.035158 24 rc.go:795] Get Replication Controller "e2e-rc-82xvq" to confirm replicas
  I0507 18:17:28.038135 24 rc.go:804] Found 1 replicas for "e2e-rc-82xvq" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-82xvq" @ 05/07/25 18:17:28.038
  STEP: Updating a scale subresource @ 05/07/25 18:17:28.04
  STEP: Verifying replicas where modified for replication controller "e2e-rc-82xvq" @ 05/07/25 18:17:28.046
  I0507 18:17:28.046585 24 rc.go:795] Get Replication Controller "e2e-rc-82xvq" to confirm replicas
  E0507 18:17:28.239624      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:29.046745 24 rc.go:795] Get Replication Controller "e2e-rc-82xvq" to confirm replicas
  I0507 18:17:29.050368 24 rc.go:804] Found 2 replicas for "e2e-rc-82xvq" replication controller
  I0507 18:17:29.050447 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7395" for this suite. @ 05/07/25 18:17:29.053
• [2.057 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 05/07/25 18:17:29.059
  I0507 18:17:29.059550 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename gc @ 05/07/25 18:17:29.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:17:29.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:17:29.074
  STEP: create the rc @ 05/07/25 18:17:29.079
  I0507 18:17:29.084743      24 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0507 18:17:29.240077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:30.240459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:31.240865      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:32.240968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:33.242019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:34.242424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/07/25 18:17:35.089
  STEP: wait for the rc to be deleted @ 05/07/25 18:17:35.145
  E0507 18:17:35.242947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:36.243148      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:36.527360 24 garbage_collector.go:678] 80 pods remaining
  I0507 18:17:36.527384 24 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0507 18:17:36.527389 24 garbage_collector.go:686] 
  I0507 18:17:37.167278 24 garbage_collector.go:678] 75 pods remaining
  I0507 18:17:37.167302 24 garbage_collector.go:685] 71 pods has nil DeletionTimestamp
  I0507 18:17:37.167307 24 garbage_collector.go:686] 
  E0507 18:17:37.243713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:38.158554 24 garbage_collector.go:678] 59 pods remaining
  I0507 18:17:38.158577 24 garbage_collector.go:685] 58 pods has nil DeletionTimestamp
  I0507 18:17:38.158584 24 garbage_collector.go:686] 
  E0507 18:17:38.244099      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:39.159115 24 garbage_collector.go:678] 43 pods remaining
  I0507 18:17:39.159134 24 garbage_collector.go:685] 42 pods has nil DeletionTimestamp
  I0507 18:17:39.159140 24 garbage_collector.go:686] 
  E0507 18:17:39.245048      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:40.202761 24 garbage_collector.go:678] 36 pods remaining
  I0507 18:17:40.202795 24 garbage_collector.go:685] 36 pods has nil DeletionTimestamp
  I0507 18:17:40.202800 24 garbage_collector.go:686] 
  E0507 18:17:40.245623      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:41.155097 24 garbage_collector.go:678] 16 pods remaining
  I0507 18:17:41.155115 24 garbage_collector.go:685] 16 pods has nil DeletionTimestamp
  I0507 18:17:41.155121 24 garbage_collector.go:686] 
  E0507 18:17:41.246140      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/07/25 18:17:42.155
  E0507 18:17:42.246179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:42.318887 24 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0507 18:17:42.319010 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-80" for this suite. @ 05/07/25 18:17:42.335
• [13.284 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 05/07/25 18:17:42.343
  I0507 18:17:42.343394 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 18:17:42.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:17:42.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:17:42.439
  STEP: Setting up server cert @ 05/07/25 18:17:42.511
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 18:17:42.882
  STEP: Deploying the webhook pod @ 05/07/25 18:17:42.934
  STEP: Wait for the deployment to be ready @ 05/07/25 18:17:42.985
  E0507 18:17:43.246378      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:43.998591 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 42, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-bcbfc85d\""}}, CollisionCount:(*int32)(nil)}
  E0507 18:17:44.246860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:45.247498      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:46.003831 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:17:46.248254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:47.249063      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:48.002415 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:17:48.249741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:49.250431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:50.003940 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:17:50.251295      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:51.251376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:52.004207 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:17:52.251418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:53.252427      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:54.004648 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:17:54.252994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:55.253124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:56.058718 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 7, 18, 17, 43, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 7, 18, 17, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0507 18:17:56.253992      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:17:57.254184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 18:17:58.002
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 18:17:58.023
  E0507 18:17:58.254807      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:17:59.023620 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/07/25 18:17:59.028
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/07/25 18:17:59.041
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/07/25 18:17:59.049
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/07/25 18:17:59.061
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/07/25 18:17:59.073
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/07/25 18:17:59.08
  I0507 18:17:59.138083 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1393" for this suite. @ 05/07/25 18:17:59.145
  STEP: Destroying namespace "webhook-markers-5338" for this suite. @ 05/07/25 18:17:59.161
• [16.829 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/07/25 18:17:59.172
  I0507 18:17:59.172314 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename endpointslice @ 05/07/25 18:17:59.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:17:59.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:17:59.19
  STEP: getting /apis @ 05/07/25 18:17:59.191
  STEP: getting /apis/discovery.k8s.io @ 05/07/25 18:17:59.195
  STEP: getting /apis/discovery.k8s.iov1 @ 05/07/25 18:17:59.196
  STEP: creating @ 05/07/25 18:17:59.196
  STEP: getting @ 05/07/25 18:17:59.226
  STEP: listing @ 05/07/25 18:17:59.229
  STEP: watching @ 05/07/25 18:17:59.232
  I0507 18:17:59.232087 24 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 05/07/25 18:17:59.233
  STEP: cluster-wide watching @ 05/07/25 18:17:59.235
  I0507 18:17:59.235945 24 endpointslice.go:459] starting watch
  STEP: patching @ 05/07/25 18:17:59.236
  STEP: updating @ 05/07/25 18:17:59.241
  I0507 18:17:59.250673 24 endpointslice.go:482] waiting for watch events with expected annotations
  I0507 18:17:59.250704 24 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 05/07/25 18:17:59.25
  E0507 18:17:59.254785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 05/07/25 18:17:59.262
  I0507 18:17:59.277233 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-118" for this suite. @ 05/07/25 18:17:59.28
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 05/07/25 18:17:59.286
  I0507 18:17:59.286419 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 18:17:59.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:17:59.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:17:59.301
  STEP: Creating configMap with name configmap-test-volume-84393c62-2417-4fab-b7a4-8fad0f9c832e @ 05/07/25 18:17:59.304
  STEP: Creating a pod to test consume configMaps @ 05/07/25 18:17:59.31
  E0507 18:18:00.255662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:01.255819      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:02.255896      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:03.256064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:04.256380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:05.256528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:18:05.348
  I0507 18:18:05.352044 24 output.go:207] Trying to get logs from node mini-2 pod pod-configmaps-9741c555-2e81-4d0e-9683-9260e6821c54 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 18:18:05.363
  I0507 18:18:05.377523 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3136" for this suite. @ 05/07/25 18:18:05.381
• [6.103 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/07/25 18:18:05.389
  I0507 18:18:05.389661 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename subpath @ 05/07/25 18:18:05.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:18:05.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:18:05.408
  STEP: Setting up data @ 05/07/25 18:18:05.411
  STEP: Creating pod pod-subpath-test-configmap-vgj6 @ 05/07/25 18:18:05.422
  STEP: Creating a pod to test atomic-volume-subpath @ 05/07/25 18:18:05.422
  E0507 18:18:06.256906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:07.257028      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:08.257611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:09.258452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:10.259199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:11.259428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:12.260466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:13.261431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:14.262257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:15.262365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:16.262405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:17.262529      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:18.263125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:19.263320      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:20.264235      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:21.264455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:22.264704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:23.264827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:24.265872      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:25.266030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:26.266803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:27.266918      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:28.267431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:29.267602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:18:29.491
  I0507 18:18:29.494922 24 output.go:207] Trying to get logs from node mini-2 pod pod-subpath-test-configmap-vgj6 container test-container-subpath-configmap-vgj6: <nil>
  STEP: delete the pod @ 05/07/25 18:18:29.5
  STEP: Deleting pod pod-subpath-test-configmap-vgj6 @ 05/07/25 18:18:29.513
  I0507 18:18:29.513793 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-vgj6" in namespace "subpath-3309"
  I0507 18:18:29.516778 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3309" for this suite. @ 05/07/25 18:18:29.52
• [24.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 05/07/25 18:18:29.527
  I0507 18:18:29.527203 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 18:18:29.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:18:29.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:18:29.54
  STEP: creating a collection of services @ 05/07/25 18:18:29.542
  I0507 18:18:29.542403 24 service.go:3666] Creating e2e-svc-a-tlp7x
  I0507 18:18:29.560849 24 service.go:3666] Creating e2e-svc-b-6zclg
  I0507 18:18:29.588357 24 service.go:3666] Creating e2e-svc-c-fbhjz
  STEP: deleting service collection @ 05/07/25 18:18:29.617
  I0507 18:18:29.664215 24 service.go:3701] Collection of services has been deleted
  I0507 18:18:29.664282 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2644" for this suite. @ 05/07/25 18:18:29.667
• [0.148 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 05/07/25 18:18:29.677
  I0507 18:18:29.677841 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 18:18:29.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:18:29.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:18:29.695
  STEP: Setting up server cert @ 05/07/25 18:18:29.715
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 18:18:30.118
  STEP: Deploying the webhook pod @ 05/07/25 18:18:30.123
  STEP: Wait for the deployment to be ready @ 05/07/25 18:18:30.135
  I0507 18:18:30.143558 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0507 18:18:30.267693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:31.267866      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 18:18:32.153
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 18:18:32.171
  E0507 18:18:32.268416      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:18:33.171754 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/07/25 18:18:33.175
  I0507 18:18:33.228456 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8828" for this suite. @ 05/07/25 18:18:33.237
  STEP: Destroying namespace "webhook-markers-806" for this suite. @ 05/07/25 18:18:33.249
• [3.579 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 05/07/25 18:18:33.256
  I0507 18:18:33.256568 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 18:18:33.256
  E0507 18:18:33.268547      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:18:33.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:18:33.279
  STEP: creating service multiprotocol-test in namespace services-2132 @ 05/07/25 18:18:33.281
  STEP: creating pod pod1 in namespace services-2132 @ 05/07/25 18:18:33.299
  STEP: Creating pod pod1 in namespace services-2132 @ 05/07/25 18:18:33.299
  E0507 18:18:34.269402      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:35.269584      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-2132 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/07/25 18:18:35.319
  I0507 18:18:35.328485      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:18:35.333125 24 service.go:4729] successfully validated that service multiprotocol-test in namespace services-2132 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/07/25 18:18:35.333
  I0507 18:18:35.333161 24 resource.go:361] Creating new exec pod
  E0507 18:18:36.270364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:37.270499      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:18:37.345452 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.206.177 80'
  I0507 18:18:37.421596 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.206.177 80\nConnection to 10.97.206.177 80 port [tcp/http] succeeded!\n"
  I0507 18:18:37.421621 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 18:18:37.421701 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.97.206.177 80'
  E0507 18:18:38.270651      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:39.271454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:18:39.494039 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.97.206.177 80\n"
  I0507 18:18:39.494058 24 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/07/25 18:18:39.494
  I0507 18:18:39.503301 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.206.177 80'
  I0507 18:18:39.587574 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.206.177 80\nConnection to 10.97.206.177 80 port [tcp/http] succeeded!\n"
  I0507 18:18:39.587599 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 18:18:39.587646 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.97.206.177 80'
  E0507 18:18:40.272468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:41.272612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:18:41.659860 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.97.206.177 80\n"
  I0507 18:18:41.659908 24 builder.go:147] stdout: ""
  I0507 18:18:41.659960 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.97.206.177 80'
  E0507 18:18:42.272789      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:43.273066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:18:43.747129 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.97.206.177 80\n"
  I0507 18:18:43.747174 24 builder.go:147] stdout: ""
  I0507 18:18:43.747227 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.97.206.177 80'
  E0507 18:18:44.273766      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:45.273838      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:18:45.836214 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.97.206.177 80\n"
  I0507 18:18:45.836242 24 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/07/25 18:18:45.836
  I0507 18:18:45.845166 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.97.206.177 80'
  E0507 18:18:46.274388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:47.274506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:18:47.920207 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.97.206.177 80\n"
  I0507 18:18:47.920231 24 builder.go:147] stdout: "pod1"
  I0507 18:18:47.920292 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.206.177 80'
  E0507 18:18:48.274552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:49.274697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:18:49.994841 24 builder.go:135] rc: 1
  I0507 18:18:49.994901 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.206.177 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.97.206.177 80
  nc: connect to 10.97.206.177 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0507 18:18:49.994974 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.206.177 80'
  E0507 18:18:50.275473      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:51.275628      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:18:52.076469 24 builder.go:135] rc: 1
  I0507 18:18:52.076539 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.206.177 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.97.206.177 80
  nc: connect to 10.97.206.177 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0507 18:18:52.076612 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.206.177 80'
  E0507 18:18:52.276280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:53.276434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:18:54.161411 24 builder.go:135] rc: 1
  I0507 18:18:54.161449 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-2132 exec execpodshf8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.206.177 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.97.206.177 80
  nc: connect to 10.97.206.177 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0507 18:18:54.161604 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2132" for this suite. @ 05/07/25 18:18:54.165
• [20.915 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 05/07/25 18:18:54.171
  I0507 18:18:54.171666 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 18:18:54.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:18:54.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:18:54.187
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/07/25 18:18:54.189
  I0507 18:18:54.189376 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-675 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0507 18:18:54.231038 24 builder.go:146] stderr: ""
  I0507 18:18:54.231060 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/07/25 18:18:54.231
  I0507 18:18:54.235001 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-675 delete pods e2e-test-httpd-pod'
  E0507 18:18:54.277414      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:55.277552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:18:55.318153 24 builder.go:146] stderr: ""
  I0507 18:18:55.318176 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0507 18:18:55.318247 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-675" for this suite. @ 05/07/25 18:18:55.322
• [1.156 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 05/07/25 18:18:55.327
  I0507 18:18:55.327909 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 18:18:55.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:18:55.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:18:55.34
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 18:18:55.343
  E0507 18:18:56.277935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:57.278123      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:58.278396      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:18:59.278512      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:18:59.36
  I0507 18:18:59.363901 24 output.go:207] Trying to get logs from node mini-1 pod downwardapi-volume-3097103c-0284-4d5c-a100-d1776d5c0f0c container client-container: <nil>
  STEP: delete the pod @ 05/07/25 18:18:59.375
  I0507 18:18:59.392960 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9746" for this suite. @ 05/07/25 18:18:59.396
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 05/07/25 18:18:59.407
  I0507 18:18:59.407764 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 18:18:59.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:18:59.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:18:59.42
  STEP: creating service multi-endpoint-test in namespace services-5401 @ 05/07/25 18:18:59.423
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5401 to expose endpoints map[] @ 05/07/25 18:18:59.445
  I0507 18:18:59.450272      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:18:59.450296 24 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0507 18:19:00.279195      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:19:00.453325      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:19:00.457275 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5401 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5401 @ 05/07/25 18:19:00.457
  E0507 18:19:01.280301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:02.280943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:03.281489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:04.281638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5401 to expose endpoints map[pod1:[100]] @ 05/07/25 18:19:04.479
  I0507 18:19:04.483817      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:19:04.486945 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5401 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5401 @ 05/07/25 18:19:04.486
  E0507 18:19:05.282182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:06.282354      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5401 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/07/25 18:19:06.5
  I0507 18:19:06.507823      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:19:06.510932 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5401 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/07/25 18:19:06.51
  I0507 18:19:06.510984 24 resource.go:361] Creating new exec pod
  E0507 18:19:07.283105      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:08.283263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:09.283417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:10.283578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:19:10.531935 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-5401 exec execpodtn8ch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0507 18:19:10.617519 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.99.82.23) 80 port [tcp/http] succeeded!\n"
  I0507 18:19:10.617546 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 18:19:10.617594 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-5401 exec execpodtn8ch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.82.23 80'
  I0507 18:19:10.687584 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.82.23 80\nConnection to 10.99.82.23 80 port [tcp/http] succeeded!\n"
  I0507 18:19:10.687609 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 18:19:10.687650 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-5401 exec execpodtn8ch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0507 18:19:10.760881 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.99.82.23) 81 port [tcp/*] succeeded!\n"
  I0507 18:19:10.760907 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0507 18:19:10.760954 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-5401 exec execpodtn8ch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.82.23 81'
  I0507 18:19:10.828820 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.82.23 81\nConnection to 10.99.82.23 81 port [tcp/*] succeeded!\n"
  I0507 18:19:10.828850 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5401 @ 05/07/25 18:19:10.828
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5401 to expose endpoints map[pod2:[101]] @ 05/07/25 18:19:10.839
  I0507 18:19:10.845327      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0507 18:19:11.283860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:19:11.849387      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:19:11.853258 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5401 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5401 @ 05/07/25 18:19:11.853
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5401 to expose endpoints map[] @ 05/07/25 18:19:11.867
  I0507 18:19:11.870793      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:19:11.876555 24 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-5401 exposes endpoints map[]
  I0507 18:19:11.903414 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5401" for this suite. @ 05/07/25 18:19:11.906
• [12.510 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/07/25 18:19:11.917
  I0507 18:19:11.917722 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename discovery @ 05/07/25 18:19:11.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:11.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:11.933
  STEP: Setting up server cert @ 05/07/25 18:19:11.935
  STEP: Requesting APIResourceList from "/api/v1" @ 05/07/25 18:19:12.126
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/07/25 18:19:12.127
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/07/25 18:19:12.128
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/07/25 18:19:12.129
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/07/25 18:19:12.13
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/07/25 18:19:12.13
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/07/25 18:19:12.131
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/07/25 18:19:12.132
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/07/25 18:19:12.133
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/07/25 18:19:12.133
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/07/25 18:19:12.134
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/07/25 18:19:12.135
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/07/25 18:19:12.135
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/07/25 18:19:12.136
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/07/25 18:19:12.137
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/07/25 18:19:12.138
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/07/25 18:19:12.138
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/07/25 18:19:12.139
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/07/25 18:19:12.14
  I0507 18:19:12.141246 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2348" for this suite. @ 05/07/25 18:19:12.145
• [0.233 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/07/25 18:19:12.15
  I0507 18:19:12.150988 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename csi-storageclass @ 05/07/25 18:19:12.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:12.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:12.164
  STEP: Creating a StorageClass @ 05/07/25 18:19:12.166
  STEP: Get StorageClass "e2e-ffhdx" @ 05/07/25 18:19:12.17
  STEP: Patching the StorageClass "e2e-ffhdx" @ 05/07/25 18:19:12.173
  STEP: Delete StorageClass "e2e-ffhdx" @ 05/07/25 18:19:12.179
  STEP: Confirm deletion of StorageClass "e2e-ffhdx" @ 05/07/25 18:19:12.185
  STEP: Create a replacement StorageClass @ 05/07/25 18:19:12.188
  STEP: Updating StorageClass "e2e-v2-n2gj6" @ 05/07/25 18:19:12.192
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-n2gj6=updated" @ 05/07/25 18:19:12.201
  STEP: Deleting StorageClass "e2e-v2-n2gj6" via DeleteCollection @ 05/07/25 18:19:12.205
  STEP: Confirm deletion of StorageClass "e2e-v2-n2gj6" @ 05/07/25 18:19:12.212
  I0507 18:19:12.219078 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-2783" for this suite. @ 05/07/25 18:19:12.246
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/07/25 18:19:12.254
  I0507 18:19:12.254642 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-runtime @ 05/07/25 18:19:12.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:12.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:12.268
  STEP: create the container @ 05/07/25 18:19:12.27
  I0507 18:19:12.279458      24 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 05/07/25 18:19:12.279
  E0507 18:19:12.284777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:13.285217      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:14.285700      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:15.286024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/07/25 18:19:15.293
  STEP: the container should be terminated @ 05/07/25 18:19:15.295
  STEP: the termination message should be set @ 05/07/25 18:19:15.295
  I0507 18:19:15.295947 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/07/25 18:19:15.295
  I0507 18:19:15.308128 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1639" for this suite. @ 05/07/25 18:19:15.312
• [3.064 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/07/25 18:19:15.318
  I0507 18:19:15.318485 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 18:19:15.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:15.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:15.333
  STEP: Creating secret with name secret-test-ee0fe0b6-1d26-40e2-9992-7f80d5ece02e @ 05/07/25 18:19:15.351
  STEP: Creating a pod to test consume secrets @ 05/07/25 18:19:15.357
  E0507 18:19:16.286743      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:17.286790      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:18.287306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:19.287454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:19:19.378
  I0507 18:19:19.381529 24 output.go:207] Trying to get logs from node mini-2 pod pod-secrets-b04f6841-67e5-428e-b9a8-86de7e23419d container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 18:19:19.388
  I0507 18:19:19.406864 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1245" for this suite. @ 05/07/25 18:19:19.41
  STEP: Destroying namespace "secret-namespace-856" for this suite. @ 05/07/25 18:19:19.415
• [4.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 05/07/25 18:19:19.421
  I0507 18:19:19.421294 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename containers @ 05/07/25 18:19:19.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:19.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:19.435
  STEP: Creating a pod to test override arguments @ 05/07/25 18:19:19.436
  E0507 18:19:20.288280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:21.288443      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:22.288812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:23.288960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:19:23.457
  I0507 18:19:23.460880 24 output.go:207] Trying to get logs from node mini-2 pod client-containers-4a709adf-f6dc-4770-aaaf-943c2fa30c34 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 18:19:23.466
  I0507 18:19:23.477374 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2874" for this suite. @ 05/07/25 18:19:23.48
• [4.067 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 05/07/25 18:19:23.488
  I0507 18:19:23.488104 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 18:19:23.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:23.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:23.505
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/07/25 18:19:23.507
  E0507 18:19:24.289064      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:25.289224      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:26.289742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:27.289830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:19:27.524
  I0507 18:19:27.527351 24 output.go:207] Trying to get logs from node mini-2 pod pod-b54ef62d-1979-4ffc-b2f9-71533b4d473a container test-container: <nil>
  STEP: delete the pod @ 05/07/25 18:19:27.534
  I0507 18:19:27.551769 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2260" for this suite. @ 05/07/25 18:19:27.556
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 05/07/25 18:19:27.563
  I0507 18:19:27.563205 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename emptydir @ 05/07/25 18:19:27.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:27.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:27.575
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/07/25 18:19:27.577
  E0507 18:19:28.289955      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:29.290121      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:30.290912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:31.291062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:19:31.598
  I0507 18:19:31.601571 24 output.go:207] Trying to get logs from node mini-2 pod pod-ec825e54-13b3-4996-ac83-89c1f18c1c3c container test-container: <nil>
  STEP: delete the pod @ 05/07/25 18:19:31.606
  I0507 18:19:31.619317 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7572" for this suite. @ 05/07/25 18:19:31.622
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/07/25 18:19:31.628
  I0507 18:19:31.629007 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 18:19:31.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:31.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:31.644
  STEP: Creating secret with name secret-test-map-c4400b8b-6227-4084-aeef-b5950e094961 @ 05/07/25 18:19:31.646
  STEP: Creating a pod to test consume secrets @ 05/07/25 18:19:31.651
  E0507 18:19:32.291344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:33.291422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:34.291947      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:35.292071      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:19:35.673
  I0507 18:19:35.676362 24 output.go:207] Trying to get logs from node mini-2 pod pod-secrets-b3ed6edc-103e-4085-9316-3f5d399b2e25 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 18:19:35.681
  I0507 18:19:35.692113 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6920" for this suite. @ 05/07/25 18:19:35.695
• [4.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 05/07/25 18:19:35.7
  I0507 18:19:35.700781 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 18:19:35.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:35.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:35.717
  STEP: Creating configMap with name configmap-test-volume-map-b0770689-2cbd-4f39-88d5-11c698df3c1b @ 05/07/25 18:19:35.718
  STEP: Creating a pod to test consume configMaps @ 05/07/25 18:19:35.722
  E0507 18:19:36.293073      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:37.293241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:38.294038      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:39.294168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:19:39.74
  I0507 18:19:39.743449 24 output.go:207] Trying to get logs from node mini-2 pod pod-configmaps-d0dacd05-a510-4750-aa41-2948499a11ae container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 18:19:39.748
  I0507 18:19:39.764144 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8532" for this suite. @ 05/07/25 18:19:39.767
• [4.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 05/07/25 18:19:39.772
  I0507 18:19:39.772909 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 18:19:39.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:39.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:39.787
  I0507 18:19:39.789789 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  W0507 18:19:39.790138      24 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0013678b0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0507 18:19:40.295062      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:41.295528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:42.295633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:19:42.322149      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0507 18:19:42.322172      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0507 18:19:42.322191      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0507 18:19:42.322196      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0507 18:19:42.322214      24 warnings.go:110] "Warning: unknown field \"gamma\""
  I0507 18:19:42.858064 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1970" for this suite. @ 05/07/25 18:19:42.861
• [3.093 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 05/07/25 18:19:42.866
  I0507 18:19:42.866474 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 18:19:42.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:42.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:42.877
  STEP: create deployment with httpd image @ 05/07/25 18:19:42.879
  I0507 18:19:42.879695 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4342 create -f -'
  I0507 18:19:42.934319 24 builder.go:146] stderr: ""
  I0507 18:19:42.934363 24 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/07/25 18:19:42.934
  I0507 18:19:42.934445 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4342 diff -f -'
  E0507 18:19:43.295988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:44.296125      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:45.296276      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:46.296444      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:19:47.162494 24 builder.go:135] rc: 1
  I0507 18:19:47.162548 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4342 delete -f -'
  I0507 18:19:47.203993 24 builder.go:146] stderr: ""
  I0507 18:19:47.204029 24 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0507 18:19:47.204112 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4342" for this suite. @ 05/07/25 18:19:47.207
• [4.347 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 05/07/25 18:19:47.213
  I0507 18:19:47.213538 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 18:19:47.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:47.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:47.233
  STEP: creating Agnhost RC @ 05/07/25 18:19:47.235
  I0507 18:19:47.235788 24 kubectl.go:1540] namespace kubectl-4298
  I0507 18:19:47.235836 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4298 create -f -'
  E0507 18:19:47.297087      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:19:47.307536 24 builder.go:146] stderr: ""
  I0507 18:19:47.307557 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/07/25 18:19:47.307
  E0507 18:19:48.297658      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:19:48.311465 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 18:19:48.311479 24 framework.go:733] Found 0 / 1
  E0507 18:19:49.298468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:19:49.312598 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 18:19:49.312614 24 framework.go:733] Found 0 / 1
  E0507 18:19:50.298580      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:19:50.311153 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 18:19:50.311169 24 framework.go:733] Found 1 / 1
  I0507 18:19:50.311179 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0507 18:19:50.313854 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0507 18:19:50.313867 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0507 18:19:50.313875 24 kubectl.go:1547] wait on agnhost-primary startup in kubectl-4298 
  I0507 18:19:50.313930 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4298 logs agnhost-primary-zqtxs agnhost-primary'
  I0507 18:19:50.356713 24 builder.go:146] stderr: ""
  I0507 18:19:50.356740 24 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 05/07/25 18:19:50.356
  I0507 18:19:50.356795 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4298 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0507 18:19:50.413952 24 builder.go:146] stderr: ""
  I0507 18:19:50.413975 24 builder.go:147] stdout: "service/rm2 exposed\n"
  I0507 18:19:50.417852 24 utils.go:1115] Service rm2 in namespace kubectl-4298 found.
  E0507 18:19:51.298750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:52.298875      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 05/07/25 18:19:52.424
  I0507 18:19:52.424181 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4298 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0507 18:19:52.486909 24 builder.go:146] stderr: ""
  I0507 18:19:52.486931 24 builder.go:147] stdout: "service/rm3 exposed\n"
  I0507 18:19:52.494517 24 utils.go:1115] Service rm3 in namespace kubectl-4298 found.
  E0507 18:19:53.299438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:54.299583      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:19:54.501740 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4298" for this suite. @ 05/07/25 18:19:54.505
• [7.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/07/25 18:19:54.511
  I0507 18:19:54.511937 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename events @ 05/07/25 18:19:54.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:54.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:54.528
  STEP: creating a test event @ 05/07/25 18:19:54.53
  STEP: listing all events in all namespaces @ 05/07/25 18:19:54.534
  STEP: patching the test event @ 05/07/25 18:19:54.538
  STEP: fetching the test event @ 05/07/25 18:19:54.544
  STEP: updating the test event @ 05/07/25 18:19:54.546
  STEP: getting the test event @ 05/07/25 18:19:54.552
  STEP: deleting the test event @ 05/07/25 18:19:54.555
  STEP: listing all events in all namespaces @ 05/07/25 18:19:54.56
  I0507 18:19:54.564247 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8028" for this suite. @ 05/07/25 18:19:54.606
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/07/25 18:19:54.613
  I0507 18:19:54.613415 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pods @ 05/07/25 18:19:54.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:54.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:54.627
  STEP: creating the pod @ 05/07/25 18:19:54.629
  STEP: submitting the pod to kubernetes @ 05/07/25 18:19:54.629
  E0507 18:19:55.299710      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:56.300619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 05/07/25 18:19:56.651
  STEP: updating the pod @ 05/07/25 18:19:56.658
  I0507 18:19:57.170197 24 pod_client.go:173] Successfully updated pod "pod-update-49ac78a2-780c-423e-bbfd-164c9d17b60a"
  STEP: verifying the updated pod is in kubernetes @ 05/07/25 18:19:57.172
  I0507 18:19:57.175053 24 pods.go:391] Pod update OK
  I0507 18:19:57.175161 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3949" for this suite. @ 05/07/25 18:19:57.178
• [2.571 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 05/07/25 18:19:57.184
  I0507 18:19:57.184475 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/07/25 18:19:57.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:19:57.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:19:57.2
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/07/25 18:19:57.223
  I0507 18:19:57.224194 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 18:19:57.300788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:58.301800      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:19:59.302422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:19:59.881826 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 18:20:00.303258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:01.303368      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:02.303860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:03.304895      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:04.305840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:05.306447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:06.307357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:07.307975      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:08.308177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:20:08.336374 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-303" for this suite. @ 05/07/25 18:20:08.343
• [11.164 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/07/25 18:20:08.348
  I0507 18:20:08.348218 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/07/25 18:20:08.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:20:08.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:20:08.36
  I0507 18:20:08.361708 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  I0507 18:20:08.888078 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8525" for this suite. @ 05/07/25 18:20:08.894
• [0.554 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 05/07/25 18:20:08.902
  I0507 18:20:08.902754 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 18:20:08.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:20:08.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:20:08.919
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 18:20:08.921
  E0507 18:20:09.308326      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:10.308471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:11.308619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:12.308719      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:20:12.936
  I0507 18:20:12.938292 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-fdee2089-2f83-46c2-a7a9-2c0a9719bb63 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 18:20:12.949
  I0507 18:20:12.960325 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9113" for this suite. @ 05/07/25 18:20:12.963
• [4.066 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/07/25 18:20:12.968
  I0507 18:20:12.968782 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename cronjob @ 05/07/25 18:20:12.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:20:12.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:20:12.983
  STEP: Creating a cronjob @ 05/07/25 18:20:12.985
  STEP: Ensuring more than one job is running at a time @ 05/07/25 18:20:12.988
  E0507 18:20:13.309317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:14.309640      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:15.310639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:16.310887      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:17.311100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:18.311241      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:19.311306      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:20.311471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:21.311587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:22.312502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:23.313199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:24.313324      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:25.314158      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:26.314286      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:27.314388      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:28.314565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:29.314617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:30.315642      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:31.316349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:32.317373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:33.318129      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:34.319008      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:35.319100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:36.319492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:37.319540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:38.319858      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:39.320116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:40.320285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:41.320949      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:42.321119      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:43.321608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:44.322460      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:45.323335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:46.323502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:47.323812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:48.323956      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:49.324963      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:50.325089      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:51.326068      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:52.326277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:53.327310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:54.327476      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:55.328522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:56.328694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:57.329401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:58.329585      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:20:59.330548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:00.330692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:01.331424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:02.331572      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:03.332521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:04.332646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:05.332769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:06.332946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:07.333199      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:08.333342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:09.334329      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:10.334475      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:11.334612      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:12.334761      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:13.334906      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:14.335046      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:15.335297      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:16.335463      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:17.336398      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:18.336524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:19.337393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:20.337539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:21.338497      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:22.338655      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:23.339541      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:24.339673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:25.339738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:26.339899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:27.340229      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:28.340415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:29.340785      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:30.340959      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:31.341973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:32.342156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:33.342242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:34.342384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:35.343340      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:36.343489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:37.344462      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:38.344597      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:39.345595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:40.345727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:41.345824      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:42.346060      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:43.346186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:44.347277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:45.348179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:46.348318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:47.348356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:48.348515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:49.349564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:50.349716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:51.349770      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:52.349874      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:53.349934      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:54.350114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:55.350263      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:56.350410      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:57.350521      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:58.351408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:21:59.352391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:00.352540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/07/25 18:22:00.992
  STEP: Removing cronjob @ 05/07/25 18:22:00.995
  I0507 18:22:00.999183 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4893" for this suite. @ 05/07/25 18:22:01.002
• [108.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 05/07/25 18:22:01.006
  I0507 18:22:01.006805 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 18:22:01.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:01.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:01.023
  STEP: Setting up server cert @ 05/07/25 18:22:01.048
  E0507 18:22:01.352727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 18:22:01.992
  STEP: Deploying the webhook pod @ 05/07/25 18:22:01.997
  STEP: Wait for the deployment to be ready @ 05/07/25 18:22:02.006
  I0507 18:22:02.012908 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0507 18:22:02.353317      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:03.353504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 18:22:04.02
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 18:22:04.036
  E0507 18:22:04.353714      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:22:05.036405 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/07/25 18:22:05.039
  I0507 18:22:05.082669 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3668" for this suite. @ 05/07/25 18:22:05.085
  STEP: Destroying namespace "webhook-markers-1740" for this suite. @ 05/07/25 18:22:05.093
• [4.093 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 05/07/25 18:22:05.1
  I0507 18:22:05.100197 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename svcaccounts @ 05/07/25 18:22:05.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:05.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:05.115
  STEP: Creating ServiceAccount "e2e-sa-whld2"  @ 05/07/25 18:22:05.117
  I0507 18:22:05.123455 24 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-whld2"  @ 05/07/25 18:22:05.123
  I0507 18:22:05.131246 24 service_accounts.go:867] AutomountServiceAccountToken: true
  I0507 18:22:05.131334 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2269" for this suite. @ 05/07/25 18:22:05.186
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 05/07/25 18:22:05.191
  I0507 18:22:05.191631 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 18:22:05.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:05.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:05.203
  STEP: Creating service test in namespace statefulset-6254 @ 05/07/25 18:22:05.204
  STEP: Creating statefulset ss in namespace statefulset-6254 @ 05/07/25 18:22:05.211
  I0507 18:22:05.229532 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0507 18:22:05.353708      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:06.354452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:07.354630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:08.354970      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:09.355131      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:10.355769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:11.355927      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:12.356077      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:13.356253      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:14.356418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:22:15.220940 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/07/25 18:22:15.225
  STEP: Getting /status @ 05/07/25 18:22:15.233
  I0507 18:22:15.235506 24 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/07/25 18:22:15.235
  I0507 18:22:15.243725 24 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/07/25 18:22:15.243
  I0507 18:22:15.245012 24 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0507 18:22:15.245043 24 statefulset.go:1126] Found Statefulset ss in namespace statefulset-6254 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0507 18:22:15.245065 24 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/07/25 18:22:15.245
  I0507 18:22:15.245081 24 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0507 18:22:15.251316 24 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/07/25 18:22:15.251
  I0507 18:22:15.252467 24 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0507 18:22:15.252504 24 statefulset.go:138] Deleting all statefulset in ns statefulset-6254
  I0507 18:22:15.254333 24 rest.go:153] Scaling statefulset ss to 0
  E0507 18:22:15.356680      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:16.356839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:17.357036      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:18.357220      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:19.357380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:20.357550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:21.357699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:22.357803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:23.357960      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:24.358114      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:22:25.264114 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0507 18:22:25.266050 24 rest.go:91] Deleting statefulset ss
  I0507 18:22:25.274944 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6254" for this suite. @ 05/07/25 18:22:25.278
• [20.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/07/25 18:22:25.283
  I0507 18:22:25.283023 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replicaset @ 05/07/25 18:22:25.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:25.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:25.295
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/07/25 18:22:25.297
  E0507 18:22:25.358254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:26.358423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 05/07/25 18:22:27.31
  STEP: Then the orphan pod is adopted @ 05/07/25 18:22:27.315
  E0507 18:22:27.359155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 05/07/25 18:22:28.321
  I0507 18:22:28.323548 24 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/07/25 18:22:28.331
  E0507 18:22:28.360033      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:22:29.337357 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7837" for this suite. @ 05/07/25 18:22:29.34
• [4.062 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 05/07/25 18:22:29.345
  I0507 18:22:29.345285 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 18:22:29.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:29.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:29.357
  STEP: Creating configMap with name projected-configmap-test-volume-de86494c-6aa9-4618-9c38-c3de3ab24e14 @ 05/07/25 18:22:29.359
  E0507 18:22:29.360403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume configMaps @ 05/07/25 18:22:29.361
  E0507 18:22:30.360518      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:31.360663      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:32.361650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:33.361827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:22:33.375
  I0507 18:22:33.377565 24 output.go:207] Trying to get logs from node mini-1 pod pod-projected-configmaps-24524109-5c3e-458d-ac16-2587b57c0742 container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 18:22:33.39
  I0507 18:22:33.405809 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8029" for this suite. @ 05/07/25 18:22:33.408
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 05/07/25 18:22:33.414
  I0507 18:22:33.414215 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 18:22:33.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:33.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:33.427
  I0507 18:22:33.462693 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9630" for this suite. @ 05/07/25 18:22:33.509
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 05/07/25 18:22:33.514
  I0507 18:22:33.514590 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 18:22:33.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:33.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:33.528
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 18:22:33.53
  E0507 18:22:34.361973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:35.362130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:36.362727      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:37.362856      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:22:37.546
  I0507 18:22:37.548942 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-020a59a6-02c4-4348-a721-e3b7fb79d14f container client-container: <nil>
  STEP: delete the pod @ 05/07/25 18:22:37.56
  I0507 18:22:37.575844 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4731" for this suite. @ 05/07/25 18:22:37.578
• [4.070 seconds]
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/07/25 18:22:37.584
  I0507 18:22:37.584771 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pods @ 05/07/25 18:22:37.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:37.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:37.598
  STEP: creating pod @ 05/07/25 18:22:37.6
  E0507 18:22:38.363155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:39.363312      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:22:39.615971 24 pods.go:83] Pod pod-hostip-170e04cf-7523-47a8-a99e-84394defcd46 has hostIP: 10.221.190.32
  I0507 18:22:39.616069 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2779" for this suite. @ 05/07/25 18:22:39.619
• [2.039 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 05/07/25 18:22:39.623
  I0507 18:22:39.623903 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename pods @ 05/07/25 18:22:39.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:39.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:39.635
  STEP: Create a pod @ 05/07/25 18:22:39.637
  E0507 18:22:40.363489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:41.363677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/07/25 18:22:41.65
  I0507 18:22:41.656328 24 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0507 18:22:41.656399 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9955" for this suite. @ 05/07/25 18:22:41.659
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 05/07/25 18:22:41.664
  I0507 18:22:41.664460 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename disruption @ 05/07/25 18:22:41.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:41.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:41.681
  STEP: creating the pdb @ 05/07/25 18:22:41.682
  STEP: Waiting for the pdb to be processed @ 05/07/25 18:22:41.686
  E0507 18:22:42.364181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:43.364355      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 05/07/25 18:22:43.689
  STEP: Waiting for the pdb to be processed @ 05/07/25 18:22:43.695
  E0507 18:22:44.365333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:45.365504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 05/07/25 18:22:45.699
  STEP: Waiting for the pdb to be processed @ 05/07/25 18:22:45.705
  E0507 18:22:46.365627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:47.365777      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 05/07/25 18:22:47.712
  I0507 18:22:47.714701 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8639" for this suite. @ 05/07/25 18:22:47.717
• [6.057 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 05/07/25 18:22:47.721
  I0507 18:22:47.721991 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename configmap @ 05/07/25 18:22:47.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:47.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:47.735
  STEP: Creating configMap with name configmap-test-volume-map-3d7227cf-6375-477a-b431-f141964f5ab8 @ 05/07/25 18:22:47.737
  STEP: Creating a pod to test consume configMaps @ 05/07/25 18:22:47.74
  E0507 18:22:48.365871      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:49.366015      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:50.366638      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:51.366747      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:22:51.756
  I0507 18:22:51.758500 24 output.go:207] Trying to get logs from node mini-2 pod pod-configmaps-f5b8cdc5-7aff-4607-8ded-c1f6732cf94e container agnhost-container: <nil>
  STEP: delete the pod @ 05/07/25 18:22:51.762
  I0507 18:22:51.772916 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7393" for this suite. @ 05/07/25 18:22:51.775
• [4.059 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 05/07/25 18:22:51.78
  I0507 18:22:51.780860 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 18:22:51.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:22:51.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:22:51.792
  STEP: Creating pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436 @ 05/07/25 18:22:51.794
  E0507 18:22:52.367211      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:53.367359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:54.367608      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:55.367748      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 18:22:55.809
  I0507 18:22:55.811690 24 container_probe.go:1748] Initial restart count of pod liveness-576c5134-0258-4649-a86c-e27a94b785dd is 0
  I0507 18:22:55.813558 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:22:56.368154      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:57.368301      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:22:57.816334 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:22:58.368907      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:22:59.369052      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:22:59.819467 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:00.369864      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:01.370029      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:01.822611 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:02.370239      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:03.370404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:03.825689 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:04.371366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:05.371522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:05.829022 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:06.371617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:07.371707      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:07.832012 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:08.372637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:09.372765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:09.835825 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:10.373445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:11.373590      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:11.838982 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:12.374479      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:13.374631      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:13.842329 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:14.374878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:15.374988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:15.845673 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:16.375173      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:17.375311      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:17.848758 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:18.375359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:19.375526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:19.851729 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:20.376285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:21.376485      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:21.855472 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:22.377066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:23.377183      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:23.858534 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:24.378219      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:25.378357      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:25.862507 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:26.379168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:27.379285      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:27.865753 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:28.379356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:29.379454      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:29.868894 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:30.380500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:31.380617      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:31.872042 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:32.381666      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:33.381775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:33.875015 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:34.382699      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:35.382813      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:35.878732 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:36.383273      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:37.383392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:37.882011 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:38.383537      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:39.383670      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:39.885200 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:40.383750      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:41.384142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:41.888539 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:42.385137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:43.385339      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:43.891901 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:44.385458      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:45.385595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:45.895352 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:46.385869      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:47.386066      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:47.898462 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:48.387020      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:49.387156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:49.900827 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:50.387332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:51.387492      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:51.903956 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:52.388504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:53.388630      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:53.906968 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:54.389542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:55.389702      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:55.910574 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:56.390012      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:57.390227      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:57.914402 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:23:58.390993      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:23:59.391144      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:23:59.917914 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:00.391232      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:01.391412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:01.921108 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:02.391549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:03.391650      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:03.924197 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:04.391723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:05.391862      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:05.927646 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:06.392155      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:07.392377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:07.930815 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:08.392595      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:09.393477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:09.933669 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:10.394226      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:11.394381      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:11.937462 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:12.394973      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:13.395096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:13.940946 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:14.395474      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:15.395611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:15.944486 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:16.395988      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:17.396171      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:17.947657 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:18.397191      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:19.397365      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:19.951012 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:20.397459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:21.397629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:21.954172 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:22.397696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:23.397808      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:23.957222 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:24.398803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:25.398929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:25.960607 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:26.399019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:27.399213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:27.963856 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:28.399347      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:29.399484      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:29.967019 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:30.400539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:31.401164      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:31.971298 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:32.401433      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:33.401556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:33.975098 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:34.402589      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:35.403477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:35.979240 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:36.403678      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:37.403841      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:37.982468 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:38.403917      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:39.404061      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:39.985528 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:40.405072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:41.405234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:41.989206 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:42.405705      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:43.405842      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:43.992568 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:44.405994      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:45.406130      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:45.995955 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:46.407175      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:47.407415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:47.998887 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:48.408411      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:49.408562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:50.001912 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:50.409383      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:51.409539      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:52.004963 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:52.410441      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:53.410556      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:54.008020 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:54.411255      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:55.411428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:56.012356 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:56.411440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:57.411677      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:24:58.016532 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:24:58.411891      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:24:59.412018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:00.019498 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:00.413034      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:01.413204      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:02.023177 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:02.413599      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:03.413752      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:04.026655 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:04.414078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:05.414213      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:06.030284 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:06.414522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:07.414643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:08.034310 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:08.414695      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:09.414833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:10.037265 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:10.415779      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:11.415945      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:12.040622 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:12.416007      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:13.416180      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:14.044844 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:14.416250      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:15.416393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:16.048300 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:16.417424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:17.417619      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:18.052842 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:18.418343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:19.418470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:20.056390 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:20.418732      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:21.418905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:22.059816 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:22.419176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:23.419328      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:24.063203 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:24.419562      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:25.419575      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:26.068336 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:26.419706      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:27.420721      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:28.072648 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:28.420928      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:29.422010      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:30.076891 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:30.422184      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:31.422371      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:32.081396 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:32.422805      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:33.422940      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:34.085080 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:34.423550      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:35.423739      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:36.088529 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:36.423861      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:37.424137      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:38.093196 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:38.424586      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:39.424759      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:40.096868 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:40.425242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:41.425418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:42.099791 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:42.426231      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:43.426408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:44.103444 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:44.426892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:45.427769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:46.107631 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:46.427976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:47.428138      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:48.110604 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:48.429057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:49.429208      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:50.113569 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:50.430018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:51.430223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:52.117211 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:52.430496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:53.430665      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:54.120689 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:54.430999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:55.431182      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:56.123944 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:56.431257      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:57.431531      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:25:58.127029 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:25:58.432391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:25:59.432549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:00.130697 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:00.433093      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:01.433258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:02.134494 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:02.433889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:03.434017      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:04.138445 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:04.434490      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:05.434627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:06.142701 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:06.435108      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:07.435277      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:08.146343 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:08.435610      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:09.435827      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:10.149608 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:10.435850      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:11.436013      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:12.152919 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:12.436126      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:13.436269      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:14.156021 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:14.436397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:15.436532      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:16.158929 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:16.437281      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:17.437548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:18.162123 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:18.438404      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:19.438545      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:20.165643 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:20.438995      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:21.439176      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:22.169611 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:22.439937      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:23.440078      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:24.172727 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:24.441165      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:25.441333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:26.176197 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:26.441440      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:27.441675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:28.179121 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:28.442400      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:29.442524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:30.182221 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:30.443551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:31.443704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:32.186821 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:32.444174      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:33.444276      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:34.190008 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:34.444322      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:35.444450      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:36.192935 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:36.445342      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:37.446362      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:38.196050 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:38.447397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:39.447540      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:40.199199 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:40.448510      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:41.448669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:42.202778 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:42.449084      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:43.449230      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:44.207076 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:44.449359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:45.449524      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:46.210176 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:46.450513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:47.450611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:48.213508 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:48.450723      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:49.450860      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:50.216952 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:50.451210      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:51.451373      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:52.220230 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:52.451472      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:53.452452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:54.224505 24 container_probe.go:1758] Get pod liveness-576c5134-0258-4649-a86c-e27a94b785dd in namespace container-probe-2436
  E0507 18:26:54.452899      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:26:55.453051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/07/25 18:26:56.224
  I0507 18:26:56.236931 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2436" for this suite. @ 05/07/25 18:26:56.24
• [244.464 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 05/07/25 18:26:56.244
  I0507 18:26:56.244528 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename replication-controller @ 05/07/25 18:26:56.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:26:56.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:26:56.28
  I0507 18:26:56.282649 24 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0507 18:26:56.453406      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/07/25 18:26:57.291
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/07/25 18:26:57.295
  E0507 18:26:57.454376      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/07/25 18:26:58.301
  I0507 18:26:58.308433 24 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/07/25 18:26:58.308
  E0507 18:26:58.454372      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:59.314128 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7628" for this suite. @ 05/07/25 18:26:59.318
• [3.079 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 05/07/25 18:26:59.323
  I0507 18:26:59.323227 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 18:26:59.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:26:59.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:26:59.349
  I0507 18:26:59.364068      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 05/07/25 18:26:59.364
  I0507 18:26:59.367390      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 05/07/25 18:26:59.367
  I0507 18:26:59.368261      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 05/07/25 18:26:59.368
  I0507 18:26:59.370323      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 05/07/25 18:26:59.37
  I0507 18:26:59.373671      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:26:59.374738      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/07/25 18:26:59.374
  I0507 18:26:59.376573      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 05/07/25 18:26:59.376
  I0507 18:26:59.383870      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:26:59.384948      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/07/25 18:26:59.384
  I0507 18:26:59.386720      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 05/07/25 18:26:59.386
  I0507 18:26:59.391692      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 05/07/25 18:26:59.391
  I0507 18:26:59.392575      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/07/25 18:26:59.392
  I0507 18:26:59.394547      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:26:59.394610 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9401" for this suite. @ 05/07/25 18:26:59.417
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 05/07/25 18:26:59.422
  I0507 18:26:59.422735 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename kubectl @ 05/07/25 18:26:59.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:26:59.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:26:59.444
  STEP: creating a replication controller @ 05/07/25 18:26:59.447
  I0507 18:26:59.447503 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4054 create -f -'
  E0507 18:26:59.454735      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:26:59.517585 24 builder.go:146] stderr: ""
  I0507 18:26:59.517608 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/07/25 18:26:59.517
  I0507 18:26:59.517657 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4054 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 18:26:59.556433 24 builder.go:146] stderr: ""
  I0507 18:26:59.556455 24 builder.go:147] stdout: "update-demo-nautilus-72sbz update-demo-nautilus-8rx97 "
  I0507 18:26:59.556482 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4054 get pods update-demo-nautilus-72sbz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 18:26:59.592398 24 builder.go:146] stderr: ""
  I0507 18:26:59.592422 24 builder.go:147] stdout: ""
  I0507 18:26:59.592429 24 kubectl.go:2505] update-demo-nautilus-72sbz is created but not running
  E0507 18:27:00.455349      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:01.455468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:02.455604      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:03.455741      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:04.456425      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:27:04.592554 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4054 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0507 18:27:04.631858 24 builder.go:146] stderr: ""
  I0507 18:27:04.631882 24 builder.go:147] stdout: "update-demo-nautilus-72sbz update-demo-nautilus-8rx97 "
  I0507 18:27:04.631909 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4054 get pods update-demo-nautilus-72sbz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 18:27:04.666092 24 builder.go:146] stderr: ""
  I0507 18:27:04.666115 24 builder.go:147] stdout: "true"
  I0507 18:27:04.666142 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4054 get pods update-demo-nautilus-72sbz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 18:27:04.701469 24 builder.go:146] stderr: ""
  I0507 18:27:04.701493 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 18:27:04.701500 24 kubectl.go:2396] validating pod update-demo-nautilus-72sbz
  I0507 18:27:04.704791 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0507 18:27:04.704816 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 18:27:04.704823 24 kubectl.go:2523] update-demo-nautilus-72sbz is verified up and running
  I0507 18:27:04.704844 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4054 get pods update-demo-nautilus-8rx97 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0507 18:27:04.739425 24 builder.go:146] stderr: ""
  I0507 18:27:04.739447 24 builder.go:147] stdout: "true"
  I0507 18:27:04.739473 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4054 get pods update-demo-nautilus-8rx97 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0507 18:27:04.774805 24 builder.go:146] stderr: ""
  I0507 18:27:04.774828 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0507 18:27:04.774837 24 kubectl.go:2396] validating pod update-demo-nautilus-8rx97
  I0507 18:27:04.778544 24 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0507 18:27:04.778568 24 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0507 18:27:04.778575 24 kubectl.go:2523] update-demo-nautilus-8rx97 is verified up and running
  STEP: using delete to clean up resources @ 05/07/25 18:27:04.778
  I0507 18:27:04.778611 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4054 delete --grace-period=0 --force -f -'
  I0507 18:27:04.823069 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0507 18:27:04.823092 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0507 18:27:04.823126 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4054 get rc,svc -l name=update-demo --no-headers'
  I0507 18:27:04.864963 24 builder.go:146] stderr: "No resources found in kubectl-4054 namespace.\n"
  I0507 18:27:04.864988 24 builder.go:147] stdout: ""
  I0507 18:27:04.865018 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=kubectl-4054 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0507 18:27:04.904438 24 builder.go:146] stderr: ""
  I0507 18:27:04.904466 24 builder.go:147] stdout: ""
  I0507 18:27:04.904541 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4054" for this suite. @ 05/07/25 18:27:04.908
• [5.491 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/07/25 18:27:04.913
  I0507 18:27:04.913994 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename subpath @ 05/07/25 18:27:04.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:27:04.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:27:04.927
  STEP: Setting up data @ 05/07/25 18:27:04.929
  STEP: Creating pod pod-subpath-test-downwardapi-kzgm @ 05/07/25 18:27:04.939
  STEP: Creating a pod to test atomic-volume-subpath @ 05/07/25 18:27:04.939
  E0507 18:27:05.456908      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:06.457107      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:07.457364      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:08.457528      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:09.457669      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:10.457830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:11.458486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:12.458637      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:13.459504      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:14.459688      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:15.460168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:16.460367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:17.460367      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:18.460536      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:19.460606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:20.460765      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:21.461544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:22.462431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:23.462726      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:24.462883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:25.463318      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:26.463468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:27.464356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:28.464542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:27:28.989
  I0507 18:27:28.991085 24 output.go:207] Trying to get logs from node mini-2 pod pod-subpath-test-downwardapi-kzgm container test-container-subpath-downwardapi-kzgm: <nil>
  STEP: delete the pod @ 05/07/25 18:27:29.001
  STEP: Deleting pod pod-subpath-test-downwardapi-kzgm @ 05/07/25 18:27:29.012
  I0507 18:27:29.012714 24 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-kzgm" in namespace "subpath-247"
  I0507 18:27:29.014763 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-247" for this suite. @ 05/07/25 18:27:29.017
• [24.107 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:215
  STEP: Creating a kubernetes client @ 05/07/25 18:27:29.021
  I0507 18:27:29.021518 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sched-preemption @ 05/07/25 18:27:29.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:27:29.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:27:29.033
  I0507 18:27:29.043028 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0507 18:27:29.464769      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:30.464893      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:31.465897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:32.466043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:33.466958      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:34.467103      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:35.467412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:36.467596      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:37.468558      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:38.468713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:39.469314      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:40.469466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:41.469526      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:42.469646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:43.470496      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:44.470625      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:45.470834      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:46.471447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:47.471571      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:48.471692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:49.472505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:50.472645      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:51.473538      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:52.473661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:53.473883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:54.474026      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:55.474234      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:56.474380      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:57.474633      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:58.474798      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:27:59.475154      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:00.475337      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:01.476319      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:02.476481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:03.477242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:04.477397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:05.477470      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:06.478489      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:07.479203      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:08.479397      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:09.479500      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:10.479794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:11.480810      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:12.480892      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:13.481316      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:14.481487      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:15.482488      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:16.482646      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:17.482784      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:18.482936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:19.483905      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:20.484417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:21.484582      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:22.484693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:23.485037      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:24.485179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:25.486135      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:26.486280      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:27.487325      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:28.487505      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:28:29.051394 24 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/07/25 18:28:29.054
  STEP: Adding a custom resource @ 05/07/25 18:28:29.054
  I0507 18:28:29.072567 24 preemption.go:256] Created pod: pod0-0-sched-preemption-low-priority
  I0507 18:28:29.076709 24 preemption.go:256] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 05/07/25 18:28:29.076
  I0507 18:28:29.094428 24 preemption.go:256] Created pod: pod1-0-sched-preemption-medium-priority
  I0507 18:28:29.100017 24 preemption.go:256] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/07/25 18:28:29.1
  E0507 18:28:29.488430      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:30.489466      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:31.490304      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:32.490426      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/07/25 18:28:33.118
  E0507 18:28:33.491116      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:34.491885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 05/07/25 18:28:35.164
  STEP: Removing a custom resource @ 05/07/25 18:28:35.175
  I0507 18:28:35.187321 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4071" for this suite. @ 05/07/25 18:28:35.191
• [66.175 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/07/25 18:28:35.196
  I0507 18:28:35.196115 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename downward-api @ 05/07/25 18:28:35.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:28:35.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:28:35.21
  STEP: Creating a pod to test downward api env vars @ 05/07/25 18:28:35.212
  E0507 18:28:35.492432      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:36.492657      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:37.493662      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:38.494522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:28:39.228
  I0507 18:28:39.231235 24 output.go:207] Trying to get logs from node mini-2 pod downward-api-dd671011-4e6d-48d4-ac35-ab61c1f6b17e container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 18:28:39.235
  I0507 18:28:39.245387 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2933" for this suite. @ 05/07/25 18:28:39.248
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/07/25 18:28:39.253
  I0507 18:28:39.253127 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename endpointslice @ 05/07/25 18:28:39.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:28:39.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:28:39.263
  E0507 18:28:39.494929      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:40.495456      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 05/07/25 18:28:41.342
  I0507 18:28:41.346004      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 05/07/25 18:28:41.346
  I0507 18:28:41.349395      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/07/25 18:28:41.349
  I0507 18:28:41.353130      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 05/07/25 18:28:41.353
  I0507 18:28:41.365676 24 endpointslice.go:938] EndpointSlice for Service endpointslice-4771/example-named-port not found
  E0507 18:28:41.495968      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:42.496168      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:28:43.369182      24 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0507 18:28:43.369301 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4771" for this suite. @ 05/07/25 18:28:43.372
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 05/07/25 18:28:43.376
  I0507 18:28:43.376454 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename services @ 05/07/25 18:28:43.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:28:43.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:28:43.387
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1896 @ 05/07/25 18:28:43.389
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/07/25 18:28:43.406
  STEP: creating service externalsvc in namespace services-1896 @ 05/07/25 18:28:43.406
  I0507 18:28:43.465192 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0507 18:28:43.496332      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:44.496452      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 05/07/25 18:28:45.474
  I0507 18:28:45.489763 24 resource.go:361] Creating new exec pod
  E0507 18:28:45.497333      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:46.497606      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:47.497758      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:28:47.506369 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=services-1896 exec execpodxlwx7 -- /bin/sh -x -c nslookup clusterip-service.services-1896.svc.cluster.local'
  I0507 18:28:47.591325 24 builder.go:146] stderr: "+ nslookup clusterip-service.services-1896.svc.cluster.local\n"
  I0507 18:28:47.591353 24 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-1896.svc.cluster.local\tcanonical name = externalsvc.services-1896.svc.cluster.local.\nName:\texternalsvc.services-1896.svc.cluster.local\nAddress: 10.99.107.232\n\n"
  I0507 18:28:47.617731 24 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0507 18:28:47.626266 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1896" for this suite. @ 05/07/25 18:28:47.629
• [4.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/07/25 18:28:47.635
  I0507 18:28:47.635042 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename apf @ 05/07/25 18:28:47.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:28:47.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:28:47.652
  STEP: getting /apis @ 05/07/25 18:28:47.654
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/07/25 18:28:47.658
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/07/25 18:28:47.658
  STEP: creating @ 05/07/25 18:28:47.659
  STEP: getting @ 05/07/25 18:28:47.673
  STEP: listing @ 05/07/25 18:28:47.675
  STEP: watching @ 05/07/25 18:28:47.677
  I0507 18:28:47.677549 24 flowcontrol.go:620] starting watch
  STEP: patching @ 05/07/25 18:28:47.678
  STEP: updating @ 05/07/25 18:28:47.682
  I0507 18:28:47.687050 24 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 05/07/25 18:28:47.687
  STEP: patching /status @ 05/07/25 18:28:47.688
  STEP: updating /status @ 05/07/25 18:28:47.693
  STEP: deleting @ 05/07/25 18:28:47.699
  STEP: deleting a collection @ 05/07/25 18:28:47.706
  I0507 18:28:47.718965 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5079" for this suite. @ 05/07/25 18:28:47.729
• [0.099 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/07/25 18:28:47.734
  I0507 18:28:47.734333 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/07/25 18:28:47.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:28:47.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:28:47.746
  STEP: Creating two CSIDrivers @ 05/07/25 18:28:47.747
  STEP: Getting "inline-driver-26216620-e926-4969-a9fe-357406fc652f" & "inline-driver-703abc6e-39b9-43e4-b43b-6e8af0193b18" @ 05/07/25 18:28:47.758
  STEP: Patching the CSIDriver "inline-driver-703abc6e-39b9-43e4-b43b-6e8af0193b18" @ 05/07/25 18:28:47.761
  STEP: Updating the CSIDriver "inline-driver-703abc6e-39b9-43e4-b43b-6e8af0193b18" @ 05/07/25 18:28:47.766
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2695" @ 05/07/25 18:28:47.77
  STEP: Deleting CSIDriver "inline-driver-26216620-e926-4969-a9fe-357406fc652f" @ 05/07/25 18:28:47.772
  STEP: Confirm deletion of CSIDriver "inline-driver-26216620-e926-4969-a9fe-357406fc652f" @ 05/07/25 18:28:47.775
  STEP: Deleting CSIDriver "inline-driver-703abc6e-39b9-43e4-b43b-6e8af0193b18" via DeleteCollection @ 05/07/25 18:28:47.779
  STEP: Confirm deletion of CSIDriver "inline-driver-703abc6e-39b9-43e4-b43b-6e8af0193b18" @ 05/07/25 18:28:47.784
  I0507 18:28:47.786562 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2695" for this suite. @ 05/07/25 18:28:47.83
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/07/25 18:28:47.835
  I0507 18:28:47.835735 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename watch @ 05/07/25 18:28:47.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:28:47.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:28:47.845
  STEP: getting a starting resourceVersion @ 05/07/25 18:28:47.847
  STEP: starting a background goroutine to produce watch events @ 05/07/25 18:28:47.848
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/07/25 18:28:47.848
  E0507 18:28:48.498019      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:49.498177      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:50.499156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:28:50.640503 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6834" for this suite. @ 05/07/25 18:28:50.689
• [2.906 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 05/07/25 18:28:50.741
  I0507 18:28:50.741684 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename container-probe @ 05/07/25 18:28:50.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:28:50.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:28:50.757
  STEP: Creating pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444 @ 05/07/25 18:28:50.758
  E0507 18:28:51.499377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:52.499551      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/07/25 18:28:52.769
  I0507 18:28:52.771416 24 container_probe.go:1748] Initial restart count of pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 is 0
  I0507 18:28:52.773011 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:28:53.499839      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:54.500011      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:28:54.776972 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:28:55.500736      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:56.500852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:28:56.780030 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:28:57.501483      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:28:58.501579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:28:58.783695 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:28:59.502501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:00.502629      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:00.787217 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:01.502999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:02.503863      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:02.791779 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:03.504493      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:04.504664      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:04.795174 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:05.504920      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:06.505051      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:06.798487 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:07.505240      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:08.505405      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:08.801452 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:09.506310      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:10.506442      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:10.805242 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:11.506936      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:12.507096      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:12.808060 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:13.507762      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:14.507912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:14.810861 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:15.508560      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:16.508713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:16.813163 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:17.508894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:18.509041      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:18.816334 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:19.510016      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:20.510163      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:20.820052 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:21.510377      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:22.510477      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:22.823794 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:23.510563      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:24.510694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:24.826876 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:25.511424      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:26.511548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:26.829867 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:27.511627      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:28.511796      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:28.832955 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:29.512709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:30.512840      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:30.836643 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:31.513303      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:32.513457      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:32.841210 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:33.513897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:34.514058      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:34.844568 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:35.514186      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:36.514335      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:36.847507 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:37.515252      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:38.515408      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:38.850901 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:39.515548      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:40.515694      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:40.853903 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:41.516697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:42.516829      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:42.856740 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:43.517395      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:44.517542      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:44.859701 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:45.518447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:46.518614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:46.863266 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:47.518953      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:48.519134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:48.866175 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:49.519939      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:50.520459      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:50.869986 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:51.520644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:52.520781      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:52.873578 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:53.521778      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:54.521924      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:54.877028 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:55.522716      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:56.523482      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:56.880614 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  E0507 18:29:57.524392      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:29:58.524549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:29:58.884108 24 container_probe.go:1758] Get pod test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 in namespace container-probe-4444
  I0507 18:29:58.884139 24 container_probe.go:1762] Restart count of pod container-probe-4444/test-grpc-0779ac46-eac0-41d5-8c84-b4daa5392177 is now 1 (1m6.11268116s elapsed)
  STEP: deleting the pod @ 05/07/25 18:29:58.884
  I0507 18:29:58.893741 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4444" for this suite. @ 05/07/25 18:29:58.896
• [68.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 05/07/25 18:29:58.901
  I0507 18:29:58.901631 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename webhook @ 05/07/25 18:29:58.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:29:58.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:29:58.911
  STEP: Setting up server cert @ 05/07/25 18:29:58.93
  E0507 18:29:59.524878      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/07/25 18:30:00.077
  STEP: Deploying the webhook pod @ 05/07/25 18:30:00.082
  STEP: Wait for the deployment to be ready @ 05/07/25 18:30:00.094
  I0507 18:30:00.100286 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0507 18:30:00.525803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:01.525990      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 18:30:02.111
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 18:30:02.129
  E0507 18:30:02.526091      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:03.129680 24 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/07/25 18:30:03.133
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/07/25 18:30:03.133
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/07/25 18:30:03.144
  E0507 18:30:03.526931      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/07/25 18:30:04.152
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/07/25 18:30:04.152
  E0507 18:30:04.527043      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 05/07/25 18:30:05.178
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/07/25 18:30:05.178
  E0507 18:30:05.527774      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:06.527916      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:07.528086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:08.528242      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:09.528385      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/07/25 18:30:10.203
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/07/25 18:30:10.203
  E0507 18:30:10.528976      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:11.529486      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:12.529639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:13.529764      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:14.529897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:15.280764 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3590" for this suite. @ 05/07/25 18:30:15.283
  STEP: Destroying namespace "webhook-markers-3902" for this suite. @ 05/07/25 18:30:15.292
• [16.398 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 05/07/25 18:30:15.299
  I0507 18:30:15.299602 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename job @ 05/07/25 18:30:15.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:30:15.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:30:15.316
  STEP: Creating a job @ 05/07/25 18:30:15.319
  STEP: Ensuring job reaches completions @ 05/07/25 18:30:15.323
  E0507 18:30:15.530344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:16.530564      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:17.530692      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:18.530816      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:19.531468      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:20.532428      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:21.533156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:22.533283      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:23.534162      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:24.534258      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:25.534415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:26.534565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:27.347653 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9217" for this suite. @ 05/07/25 18:30:27.351
• [12.058 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 05/07/25 18:30:27.357
  I0507 18:30:27.357216 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename projected @ 05/07/25 18:30:27.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:30:27.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:30:27.375
  STEP: Creating a pod to test downward API volume plugin @ 05/07/25 18:30:27.377
  E0507 18:30:27.534812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:28.534981      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:29.535822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:30.536434      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:30:31.397
  I0507 18:30:31.399212 24 output.go:207] Trying to get logs from node mini-2 pod downwardapi-volume-284ad67c-4d11-42ad-b450-625780d723b7 container client-container: <nil>
  STEP: delete the pod @ 05/07/25 18:30:31.408
  I0507 18:30:31.418360 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4001" for this suite. @ 05/07/25 18:30:31.42
• [4.068 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:331
  STEP: Creating a kubernetes client @ 05/07/25 18:30:31.425
  I0507 18:30:31.425520 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename sched-pred @ 05/07/25 18:30:31.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:30:31.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:30:31.437
  I0507 18:30:31.439364 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  E0507 18:30:31.536894      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:31.622335 24 util.go:390] Waiting for terminating namespaces to be deleted...
  I0507 18:30:31.625042 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node mini-1 before test
  I0507 18:30:31.628066 24 predicates.go:956] fail-once-local-vf587 from job-9217 started at 2025-05-07 18:30:20 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.628077 24 predicates.go:958] 	Container c ready: false, restart count 1
  I0507 18:30:31.628083 24 predicates.go:956] calico-node-ptbd6 from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.628101 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0507 18:30:31.628105 24 predicates.go:956] kube-proxy-xrhlg from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.628123 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0507 18:30:31.628129 24 predicates.go:956] helm-charts-fluent-bit-ss6bs from logging started at 2025-04-29 11:28:41 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.628135 24 predicates.go:958] 	Container fluent-bit ready: true, restart count 0
  I0507 18:30:31.628139 24 predicates.go:956] kps-prometheus-node-exporter-x49ph from monitoring started at 2025-04-29 11:29:50 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.628144 24 predicates.go:958] 	Container node-exporter ready: true, restart count 0
  I0507 18:30:31.628149 24 predicates.go:956] sonobuoy-e2e-job-07fd652a611c431c from sonobuoy started at 2025-05-07 16:48:04 +0000 UTC (2 container statuses recorded)
  I0507 18:30:31.628153 24 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0507 18:30:31.628157 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 18:30:31.628161 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-a7c958b54b254fc6-pd8t9 from sonobuoy started at 2025-05-07 16:48:04 +0000 UTC (2 container statuses recorded)
  I0507 18:30:31.628165 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 18:30:31.628169 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0507 18:30:31.628175 24 predicates.go:118] 
  Logging pods the apiserver thinks is on node mini-2 before test
  I0507 18:30:31.630531 24 predicates.go:956] fail-once-local-8t644 from job-9217 started at 2025-05-07 18:30:15 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.630542 24 predicates.go:958] 	Container c ready: false, restart count 1
  I0507 18:30:31.630548 24 predicates.go:956] fail-once-local-bv4v6 from job-9217 started at 2025-05-07 18:30:20 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.630567 24 predicates.go:958] 	Container c ready: false, restart count 1
  I0507 18:30:31.630572 24 predicates.go:956] fail-once-local-p86vb from job-9217 started at 2025-05-07 18:30:15 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.630576 24 predicates.go:958] 	Container c ready: false, restart count 1
  I0507 18:30:31.630583 24 predicates.go:956] calico-node-58sqm from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.630597 24 predicates.go:958] 	Container calico-node ready: true, restart count 0
  I0507 18:30:31.630602 24 predicates.go:956] kube-proxy-xvk88 from kube-system started at 2025-04-29 11:27:53 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.630606 24 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0507 18:30:31.630610 24 predicates.go:956] helm-charts-fluent-bit-vzx9p from logging started at 2025-05-07 17:57:26 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.630614 24 predicates.go:958] 	Container fluent-bit ready: true, restart count 0
  I0507 18:30:31.630618 24 predicates.go:956] kps-prometheus-node-exporter-68pbc from monitoring started at 2025-05-07 17:57:26 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.630622 24 predicates.go:958] 	Container node-exporter ready: true, restart count 0
  I0507 18:30:31.630626 24 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-07 16:48:03 +0000 UTC (1 container statuses recorded)
  I0507 18:30:31.630631 24 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0507 18:30:31.630635 24 predicates.go:956] sonobuoy-systemd-logs-daemon-set-a7c958b54b254fc6-sfkx7 from sonobuoy started at 2025-05-07 16:48:05 +0000 UTC (2 container statuses recorded)
  I0507 18:30:31.630639 24 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0507 18:30:31.630642 24 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node mini-1 @ 05/07/25 18:30:31.647
  STEP: verifying the node has the label node mini-2 @ 05/07/25 18:30:31.659
  I0507 18:30:31.736875 24 predicates.go:371] Pod calico-node-58sqm requesting resource cpu=250m on Node mini-2
  I0507 18:30:31.736896 24 predicates.go:371] Pod calico-node-ptbd6 requesting resource cpu=250m on Node mini-1
  I0507 18:30:31.736904 24 predicates.go:371] Pod kube-proxy-xrhlg requesting resource cpu=0m on Node mini-1
  I0507 18:30:31.736909 24 predicates.go:371] Pod kube-proxy-xvk88 requesting resource cpu=0m on Node mini-2
  I0507 18:30:31.736917 24 predicates.go:371] Pod helm-charts-fluent-bit-ss6bs requesting resource cpu=200m on Node mini-1
  I0507 18:30:31.736921 24 predicates.go:371] Pod helm-charts-fluent-bit-vzx9p requesting resource cpu=200m on Node mini-2
  I0507 18:30:31.736926 24 predicates.go:371] Pod kps-prometheus-node-exporter-68pbc requesting resource cpu=100m on Node mini-2
  I0507 18:30:31.736931 24 predicates.go:371] Pod kps-prometheus-node-exporter-x49ph requesting resource cpu=100m on Node mini-1
  I0507 18:30:31.736935 24 predicates.go:371] Pod sonobuoy requesting resource cpu=0m on Node mini-2
  I0507 18:30:31.736939 24 predicates.go:371] Pod sonobuoy-e2e-job-07fd652a611c431c requesting resource cpu=0m on Node mini-1
  I0507 18:30:31.736943 24 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-a7c958b54b254fc6-pd8t9 requesting resource cpu=0m on Node mini-1
  I0507 18:30:31.736948 24 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-a7c958b54b254fc6-sfkx7 requesting resource cpu=0m on Node mini-2
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/07/25 18:30:31.736
  I0507 18:30:31.736969 24 predicates.go:381] Creating a pod which consumes cpu=8015m on Node mini-1
  I0507 18:30:31.743898 24 predicates.go:381] Creating a pod which consumes cpu=8015m on Node mini-2
  E0507 18:30:32.537502      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:33.537639      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/07/25 18:30:33.757
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0f5db0cb-9b66-4cf3-8589-50ac48043f0f.183d52382f38d736], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5514/filler-pod-0f5db0cb-9b66-4cf3-8589-50ac48043f0f to mini-1] @ 05/07/25 18:30:33.759
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0f5db0cb-9b66-4cf3-8589-50ac48043f0f.183d52385ded1646], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/07/25 18:30:33.759
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0f5db0cb-9b66-4cf3-8589-50ac48043f0f.183d523872722dcd], Reason = [Created], Message = [Created container: filler-pod-0f5db0cb-9b66-4cf3-8589-50ac48043f0f] @ 05/07/25 18:30:33.759
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0f5db0cb-9b66-4cf3-8589-50ac48043f0f.183d523876e793c3], Reason = [Started], Message = [Started container filler-pod-0f5db0cb-9b66-4cf3-8589-50ac48043f0f] @ 05/07/25 18:30:33.759
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bf08b343-23c6-4a59-8c1f-3ed9bd69190c.183d52382f6dcf81], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5514/filler-pod-bf08b343-23c6-4a59-8c1f-3ed9bd69190c to mini-2] @ 05/07/25 18:30:33.759
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bf08b343-23c6-4a59-8c1f-3ed9bd69190c.183d52385daeba3a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/07/25 18:30:33.759
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bf08b343-23c6-4a59-8c1f-3ed9bd69190c.183d523870f200cd], Reason = [Created], Message = [Created container: filler-pod-bf08b343-23c6-4a59-8c1f-3ed9bd69190c] @ 05/07/25 18:30:33.759
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bf08b343-23c6-4a59-8c1f-3ed9bd69190c.183d5238752f146b], Reason = [Started], Message = [Started container filler-pod-bf08b343-23c6-4a59-8c1f-3ed9bd69190c] @ 05/07/25 18:30:33.759
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.183d5238a728bf79], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 Insufficient cpu, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/5 nodes are available: 2 No preemption victims found for incoming pod, 3 Preemption is not helpful for scheduling.] @ 05/07/25 18:30:33.771
  E0507 18:30:34.537822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node mini-1 @ 05/07/25 18:30:34.768
  STEP: verifying the node doesn't have the label node @ 05/07/25 18:30:34.779
  STEP: removing the label node off the node mini-2 @ 05/07/25 18:30:34.783
  STEP: verifying the node doesn't have the label node @ 05/07/25 18:30:34.795
  I0507 18:30:34.797926 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5514" for this suite. @ 05/07/25 18:30:34.8
• [3.379 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/07/25 18:30:34.804
  I0507 18:30:34.804786 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename limitrange @ 05/07/25 18:30:34.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:30:34.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:30:34.817
  STEP: Creating LimitRange "e2e-limitrange-282bm" in namespace "limitrange-5866" @ 05/07/25 18:30:34.818
  STEP: Creating another limitRange in another namespace @ 05/07/25 18:30:34.822
  I0507 18:30:34.832563 24 limit_range.go:299] Namespace "e2e-limitrange-282bm-8152" created
  I0507 18:30:34.832588 24 limit_range.go:300] Creating LimitRange "e2e-limitrange-282bm" in namespace "e2e-limitrange-282bm-8152"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-282bm" @ 05/07/25 18:30:34.835
  I0507 18:30:34.837867 24 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-282bm" in "limitrange-5866" namespace @ 05/07/25 18:30:34.837
  I0507 18:30:34.842678 24 limit_range.go:335] LimitRange "e2e-limitrange-282bm" has been patched
  STEP: Delete LimitRange "e2e-limitrange-282bm" by Collection with labelSelector: "e2e-limitrange-282bm=patched" @ 05/07/25 18:30:34.842
  STEP: Confirm that the limitRange "e2e-limitrange-282bm" has been deleted @ 05/07/25 18:30:34.848
  I0507 18:30:34.848123 24 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0507 18:30:34.849846 24 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-282bm=patched"
  I0507 18:30:34.849872 24 limit_range.go:344] LimitRange "e2e-limitrange-282bm" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-282bm" @ 05/07/25 18:30:34.849
  I0507 18:30:34.851473 24 limit_range.go:350] Found 1 limitRange
  I0507 18:30:34.851554 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5866" for this suite. @ 05/07/25 18:30:34.853
  STEP: Destroying namespace "e2e-limitrange-282bm-8152" for this suite. @ 05/07/25 18:30:34.857
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/07/25 18:30:34.863
  I0507 18:30:34.863238 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 18:30:34.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:30:34.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:30:34.875
  I0507 18:30:34.959090 24 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/07/25 18:30:34.962
  I0507 18:30:35.054871 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:35.054897 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:35.054912 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:35.057304 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:30:35.057316 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  E0507 18:30:35.537812      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:35.966747 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:35.966771 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:35.966796 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:35.969033 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:30:35.969046 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  E0507 18:30:36.538691      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:36.966035 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:36.966059 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:36.966072 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:36.968073 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 18:30:36.968086 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/07/25 18:30:36.975
  STEP: Check that daemon pods images are updated. @ 05/07/25 18:30:37.067
  I0507 18:30:37.069909 24 daemon_set.go:1193] Wrong image for pod: daemon-set-7dtzv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0507 18:30:37.072866 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:37.072887 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:37.072898 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0507 18:30:37.539522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:38.070841 24 daemon_set.go:1193] Wrong image for pod: daemon-set-7dtzv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0507 18:30:38.074359 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:38.074378 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:38.074390 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0507 18:30:38.540422      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:39.070634 24 daemon_set.go:1198] Pod daemon-set-22zr2 is not available
  I0507 18:30:39.070655 24 daemon_set.go:1193] Wrong image for pod: daemon-set-7dtzv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0507 18:30:39.077209 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:39.077231 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:39.077243 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0507 18:30:39.540549      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:40.070666 24 daemon_set.go:1198] Pod daemon-set-22zr2 is not available
  I0507 18:30:40.070689 24 daemon_set.go:1193] Wrong image for pod: daemon-set-7dtzv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0507 18:30:40.074478 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:40.074498 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:40.074509 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0507 18:30:40.540833      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:41.086432 24 daemon_set.go:1198] Pod daemon-set-www57 is not available
  I0507 18:30:41.089613 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:41.089634 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:41.089645 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/07/25 18:30:41.089
  I0507 18:30:41.092381 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:41.092398 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:41.092409 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:41.094993 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 18:30:41.095007 24 fixtures.go:131] Node mini-2 is running 0 daemon pod, expected 1
  E0507 18:30:41.541579      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:42.093559 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:42.093585 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:42.093600 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:42.095924 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 18:30:42.095939 24 fixtures.go:131] Node mini-2 is running 0 daemon pod, expected 1
  E0507 18:30:42.542501      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:43.094124 24 fixtures.go:90] DaemonSet pods can't tolerate node master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:43.094158 24 fixtures.go:90] DaemonSet pods can't tolerate node master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:43.094185 24 fixtures.go:90] DaemonSet pods can't tolerate node master-3 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0507 18:30:43.096834 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0507 18:30:43.096847 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 18:30:43.106
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2953, will wait for the garbage collector to delete the pods @ 05/07/25 18:30:43.107
  I0507 18:30:43.164168 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.758897ms
  I0507 18:30:43.264637 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.46582ms
  E0507 18:30:43.543055      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:44.543415      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:45.544336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:45.668206 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:30:45.668247 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 18:30:45.670351 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2264511"},"items":null}

  I0507 18:30:45.672161 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2264511"},"items":null}

  I0507 18:30:45.678854 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2953" for this suite. @ 05/07/25 18:30:45.681
• [10.824 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 05/07/25 18:30:45.687
  I0507 18:30:45.687108 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename var-expansion @ 05/07/25 18:30:45.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:30:45.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:30:45.7
  STEP: Creating a pod to test env composition @ 05/07/25 18:30:45.702
  E0507 18:30:46.544449      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:47.544614      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:48.544889      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:49.545024      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:30:49.718
  I0507 18:30:49.720231 24 output.go:207] Trying to get logs from node mini-2 pod var-expansion-15f63382-0347-4c3d-81e9-d1612ddf4382 container dapi-container: <nil>
  STEP: delete the pod @ 05/07/25 18:30:49.724
  I0507 18:30:49.734096 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8307" for this suite. @ 05/07/25 18:30:49.736
• [4.054 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 05/07/25 18:30:49.741
  I0507 18:30:49.741603 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename resourcequota @ 05/07/25 18:30:49.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:30:49.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:30:49.753
  STEP: Creating resourceQuota "e2e-rq-status-2h997" @ 05/07/25 18:30:49.757
  I0507 18:30:49.762743 24 resource_quota.go:1106] Resource quota "e2e-rq-status-2h997" reports spec: hard cpu limit of 500m
  I0507 18:30:49.762785 24 resource_quota.go:1108] Resource quota "e2e-rq-status-2h997" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-2h997" /status @ 05/07/25 18:30:49.762
  STEP: Confirm /status for "e2e-rq-status-2h997" resourceQuota via watch @ 05/07/25 18:30:49.789
  I0507 18:30:49.790417 24 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-2h997" in namespace "resourcequota-7960" with hard status: v1.ResourceList(nil)
  I0507 18:30:49.790444 24 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-2h997" in namespace "resourcequota-7960" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0507 18:30:49.790452 24 resource_quota.go:1145] ResourceQuota "e2e-rq-status-2h997" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/07/25 18:30:49.792
  I0507 18:30:49.796843 24 resource_quota.go:1156] Resource quota "e2e-rq-status-2h997" reports spec: hard cpu limit of 1
  I0507 18:30:49.796856 24 resource_quota.go:1157] Resource quota "e2e-rq-status-2h997" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-2h997" /status @ 05/07/25 18:30:49.796
  STEP: Confirm /status for "e2e-rq-status-2h997" resourceQuota via watch @ 05/07/25 18:30:49.801
  I0507 18:30:49.802194 24 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-2h997" in namespace "resourcequota-7960" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0507 18:30:49.802211 24 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-2h997" in namespace "resourcequota-7960" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0507 18:30:49.802219 24 resource_quota.go:1189] ResourceQuota "e2e-rq-status-2h997" /status was patched
  STEP: Get "e2e-rq-status-2h997" /status @ 05/07/25 18:30:49.802
  I0507 18:30:49.804561 24 resource_quota.go:1200] Resourcequota "e2e-rq-status-2h997" reports status: hard cpu of 1
  I0507 18:30:49.804577 24 resource_quota.go:1202] Resourcequota "e2e-rq-status-2h997" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-2h997" /status before checking Spec is unchanged @ 05/07/25 18:30:49.806
  I0507 18:30:49.810241 24 resource_quota.go:1222] Resourcequota "e2e-rq-status-2h997" reports status: hard cpu of 2
  I0507 18:30:49.810258 24 resource_quota.go:1224] Resourcequota "e2e-rq-status-2h997" reports status: hard memory of 2Gi
  I0507 18:30:49.811270 24 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-2h997" in namespace "resourcequota-7960" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0507 18:30:49.813118 24 resource_quota.go:1267] ResourceQuota "e2e-rq-status-2h997" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2h997", GenerateName:"", Namespace:"resourcequota-7960", SelfLink:"", UID:"5f6b3901-4cbd-49d5-b92e-9193c1dbc05f", ResourceVersion:"2264554", Generation:0, CreationTimestamp:time.Date(2025, time.May, 7, 18, 30, 49, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2h997"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 18, 30, 49, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00476d530), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 18, 30, 49, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00476d560), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 18, 30, 49, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00476d590), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  E0507 18:30:50.545513      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:51.545667      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:52.545803      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:53.545935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:54.546086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:30:54.814662 24 resource_quota.go:1264] ResourceQuota "e2e-rq-status-2h997" Spec was unchanged and /status reset
  I0507 18:30:54.814756 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7960" for this suite. @ 05/07/25 18:30:54.818
• [5.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 05/07/25 18:30:54.823
  I0507 18:30:54.823416 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename disruption @ 05/07/25 18:30:54.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:30:54.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:30:54.857
  STEP: Creating a kubernetes client @ 05/07/25 18:30:54.859
  I0507 18:30:54.859877 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename disruption-2 @ 05/07/25 18:30:54.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:30:54.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:30:54.872
  STEP: Waiting for the pdb to be processed @ 05/07/25 18:30:54.877
  E0507 18:30:55.546181      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:56.546359      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/07/25 18:30:56.884
  E0507 18:30:57.547201      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:30:58.547386      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/07/25 18:30:58.89
  E0507 18:30:59.547822      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:00.548522      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 05/07/25 18:31:00.894
  STEP: listing a collection of PDBs in namespace disruption-9218 @ 05/07/25 18:31:00.897
  STEP: deleting a collection of PDBs @ 05/07/25 18:31:00.899
  STEP: Waiting for the PDB collection to be deleted @ 05/07/25 18:31:00.906
  I0507 18:31:00.908710 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-508" for this suite. @ 05/07/25 18:31:00.911
  I0507 18:31:00.915949 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9218" for this suite. @ 05/07/25 18:31:01.012
• [6.194 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 05/07/25 18:31:01.017
  I0507 18:31:01.017824 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename volumeattachment @ 05/07/25 18:31:01.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:31:01.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:31:01.031
  STEP: Create VolumeAttachment "va-e2e-r2ztd" on node "master-2" @ 05/07/25 18:31:01.112
  STEP: Get VolumeAttachment "va-e2e-r2ztd" on node "master-2" @ 05/07/25 18:31:01.116
  STEP: Patch VolumeAttachment "va-e2e-r2ztd" on node "master-2" @ 05/07/25 18:31:01.118
  STEP: List VolumeAttachments with "va-e2e-r2ztd=patched" label @ 05/07/25 18:31:01.122
  STEP: Delete VolumeAttachment "va-e2e-r2ztd" on node "master-2" @ 05/07/25 18:31:01.125
  STEP: Confirm deletion of VolumeAttachment "va-e2e-r2ztd" on node "master-2" @ 05/07/25 18:31:01.128
  STEP: Create VolumeAttachment "va-e2e-gljp2" on node "mini-1" @ 05/07/25 18:31:01.213
  STEP: Update the VolumeAttachment "va-e2e-gljp2" on node "mini-1" with label "va-e2e=updated" @ 05/07/25 18:31:01.216
  STEP: Create VolumeAttachment "va-e2e-rsrnk" on node "mini-2" @ 05/07/25 18:31:01.313
  STEP: Update the VolumeAttachment "va-e2e-rsrnk" on node "mini-2" with label "va-e2e=updated" @ 05/07/25 18:31:01.317
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/07/25 18:31:01.322
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/07/25 18:31:01.329
  I0507 18:31:01.331680 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-986" for this suite. @ 05/07/25 18:31:01.414
• [0.401 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 05/07/25 18:31:01.418
  I0507 18:31:01.418528 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename crd-webhook @ 05/07/25 18:31:01.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:31:01.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:31:01.431
  STEP: Setting up server cert @ 05/07/25 18:31:01.433
  E0507 18:31:01.548867      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/07/25 18:31:01.973
  STEP: Deploying the custom resource conversion webhook pod @ 05/07/25 18:31:01.977
  STEP: Wait for the deployment to be ready @ 05/07/25 18:31:01.986
  I0507 18:31:01.990580 24 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0507 18:31:02.549188      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:03.549327      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/07/25 18:31:03.998
  STEP: Verifying the service has paired with the endpoint @ 05/07/25 18:31:04.011
  E0507 18:31:04.550344      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:31:05.011814 24 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0507 18:31:05.015261 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 18:31:05.550797      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:06.550944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:07.551196      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/07/25 18:31:07.568
  STEP: Create a v2 custom resource @ 05/07/25 18:31:07.583
  STEP: List CRs in v1 @ 05/07/25 18:31:07.607
  STEP: List CRs in v2 @ 05/07/25 18:31:07.609
  I0507 18:31:08.185532 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7061" for this suite. @ 05/07/25 18:31:08.194
• [6.781 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/07/25 18:31:08.199
  I0507 18:31:08.199178 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename init-container @ 05/07/25 18:31:08.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:31:08.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:31:08.219
  STEP: creating the pod @ 05/07/25 18:31:08.222
  I0507 18:31:08.222644 24 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0507 18:31:08.552117      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:09.552602      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:10.553418      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:11.553832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:12.553997      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:13.554124      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:14.554275      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:15.554481      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:16.554644      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:17.554731      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:18.554870      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:19.555053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:20.555194      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:21.555313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:22.555438      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:23.555565      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:24.555722      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:25.555802      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:26.556852      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:27.557030      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:28.557179      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:29.557350      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:30.557520      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:31.557661      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:32.557821      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:33.557965      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:34.558142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:35.558343      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:36.558912      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:37.559104      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:38.559151      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:39.559336      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:40.559515      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:41.559673      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:42.559817      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:43.559974      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:44.560134      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:45.560338      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:46.560523      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:47.560693      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:48.560877      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:31:48.640316 24 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-be6c2ff1-d7c5-4bb2-9076-848bfab44199", GenerateName:"", Namespace:"init-container-1037", SelfLink:"", UID:"3e93add6-699a-4d62-b824-5b8f45d7379a", ResourceVersion:"2264925", Generation:1, CreationTimestamp:time.Date(2025, time.May, 7, 18, 31, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"222639635"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"79b5cd936533aba9964cd9be13b05690e4cf0f18b76ab7d5212f46b2d19ec9e7", "cni.projectcalico.org/podIP":"192.168.158.147/32", "cni.projectcalico.org/podIPs":"192.168.158.147/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 18, 31, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470afa8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 18, 31, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470afd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 7, 18, 31, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00470b008), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-kvl4h", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc007d10bc0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-kvl4h", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-kvl4h", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-kvl4h", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc005a39818), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"mini-2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003df0a20), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005a398a0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005a398c0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc005a398c8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc005a398cc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc005216a00), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 7, 18, 31, 9, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 7, 18, 31, 8, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 7, 18, 31, 8, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 7, 18, 31, 8, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 7, 18, 31, 8, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.221.190.32", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.221.190.32"}}, PodIP:"192.168.158.147", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.158.147"}}, StartTime:time.Date(2025, time.May, 7, 18, 31, 8, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000470a10)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000470a80)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://6b52332a2110fd7c4eacdefa2883cf64ffa1d9aec496308bb22354866319b12d", Started:(*bool)(0xc005a3997a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc0028ce960), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-kvl4h", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005216a40)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc007d10c20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc005a3998d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-kvl4h", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005216a50)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc007d10c00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc005a39944), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-kvl4h", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc005216a20)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0507 18:31:48.640419 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1037" for this suite. @ 05/07/25 18:31:48.644
• [40.450 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 05/07/25 18:31:48.649
  I0507 18:31:48.649456 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename security-context-test @ 05/07/25 18:31:48.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:31:48.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:31:48.661
  E0507 18:31:49.561471      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:50.561594      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:51.562431      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:31:52.562618      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:31:52.692432 24 security_context.go:619] Got logs for pod "busybox-privileged-false-7b0cb3d4-4353-4cf2-9aa6-24c3f32ec0e6": "ip: RTNETLINK answers: Operation not permitted\n"
  I0507 18:31:52.692533 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-612" for this suite. @ 05/07/25 18:31:52.695
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/07/25 18:31:52.7
  I0507 18:31:52.700845 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename daemonsets @ 05/07/25 18:31:52.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:31:52.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:31:52.713
  I0507 18:31:52.725682 24 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/07/25 18:31:52.729
  I0507 18:31:52.731082 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:31:52.731107 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/07/25 18:31:52.731
  I0507 18:31:52.837294 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:31:52.837318 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  E0507 18:31:53.563142      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:31:53.850396 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:31:53.850417 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  E0507 18:31:54.563200      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:31:54.836740 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 18:31:54.836758 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/07/25 18:31:54.838
  I0507 18:31:54.860245 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:31:54.860273 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/07/25 18:31:54.86
  I0507 18:31:54.937824 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:31:54.937846 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  E0507 18:31:55.563491      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:31:55.869589 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:31:55.869609 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  E0507 18:31:56.563647      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:31:56.869525 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:31:56.869544 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  E0507 18:31:57.564223      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:31:57.869391 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:31:57.869412 24 fixtures.go:131] Node mini-1 is running 0 daemon pod, expected 1
  E0507 18:31:58.565238      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:31:58.869733 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0507 18:31:58.869775 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/07/25 18:31:58.873
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8262, will wait for the garbage collector to delete the pods @ 05/07/25 18:31:58.873
  I0507 18:31:58.931475 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.691265ms
  I0507 18:31:59.032517 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.040615ms
  E0507 18:31:59.565897      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:00.566494      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:01.536348 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0507 18:32:01.536369 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0507 18:32:01.538414 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2265074"},"items":null}

  I0507 18:32:01.540075 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2265074"},"items":null}

  I0507 18:32:01.561200 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8262" for this suite. @ 05/07/25 18:32:01.563
  E0507 18:32:01.566713      24 retrywatcher.go:169] "Watch failed" err="context canceled"
• [8.866 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 05/07/25 18:32:01.567
  I0507 18:32:01.567280 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename field-validation @ 05/07/25 18:32:01.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:32:01.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:32:01.584
  I0507 18:32:01.586344 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 18:32:02.567709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:03.567883      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:04.115665      24 warnings.go:110] "Warning: unknown field \"alpha\""
  I0507 18:32:04.115678      24 warnings.go:110] "Warning: unknown field \"beta\""
  I0507 18:32:04.115683      24 warnings.go:110] "Warning: unknown field \"delta\""
  I0507 18:32:04.115688      24 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0507 18:32:04.115693      24 warnings.go:110] "Warning: unknown field \"gamma\""
  E0507 18:32:04.568506      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:04.640240 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-559" for this suite. @ 05/07/25 18:32:04.642
• [3.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/07/25 18:32:04.647
  I0507 18:32:04.647388 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename secrets @ 05/07/25 18:32:04.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:32:04.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:32:04.661
  STEP: Creating secret with name secret-test-01ad143a-954f-4fdd-aac8-dd6e8d94b1e4 @ 05/07/25 18:32:04.663
  STEP: Creating a pod to test consume secrets @ 05/07/25 18:32:04.666
  E0507 18:32:05.569057      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:06.569172      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:07.569307      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:08.569391      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/07/25 18:32:08.681
  I0507 18:32:08.683716 24 output.go:207] Trying to get logs from node mini-2 pod pod-secrets-a1269a48-42f4-4c65-baf1-c39831634dee container secret-volume-test: <nil>
  STEP: delete the pod @ 05/07/25 18:32:08.687
  I0507 18:32:08.699035 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3608" for this suite. @ 05/07/25 18:32:08.701
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 05/07/25 18:32:08.705
  I0507 18:32:08.705828 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename statefulset @ 05/07/25 18:32:08.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:32:08.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:32:08.717
  STEP: Creating service test in namespace statefulset-8299 @ 05/07/25 18:32:08.718
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/07/25 18:32:08.736
  STEP: Creating stateful set ss in namespace statefulset-8299 @ 05/07/25 18:32:08.74
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8299 @ 05/07/25 18:32:08.746
  I0507 18:32:08.768827 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0507 18:32:09.570300      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:10.570417      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:11.570909      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:12.571049      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:13.571455      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:14.571643      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:15.571815      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:16.571944      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:17.572076      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:18.572198      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:18.750942 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/07/25 18:32:18.75
  I0507 18:32:18.753313 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-8299 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 18:32:18.835813 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 18:32:18.835867 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 18:32:18.835889 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 18:32:18.851681 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0507 18:32:19.572412      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:20.572587      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:21.572698      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:22.572832      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:23.573423      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:24.573552      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:25.573696      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:26.573836      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:27.573935      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:28.574100      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:28.840396 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0507 18:32:28.840428 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0507 18:32:28.941752 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999904s
  E0507 18:32:29.574366      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:29.946157 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.906860761s
  E0507 18:32:30.574788      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:30.951783 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.902466076s
  E0507 18:32:31.575356      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:31.955273 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.897846223s
  E0507 18:32:32.575943      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:32.959439 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.893369653s
  E0507 18:32:33.575999      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:33.963743 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.88921739s
  E0507 18:32:34.576445      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:34.967168 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.885870416s
  E0507 18:32:35.576697      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:35.971444 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.881500556s
  E0507 18:32:36.577086      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:36.974979 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.878082895s
  E0507 18:32:37.577384      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:37.978578 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 874.559876ms
  E0507 18:32:38.578379      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8299 @ 05/07/25 18:32:38.978
  I0507 18:32:38.982312 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-8299 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 18:32:39.070126 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 18:32:39.070151 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 18:32:39.070159 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 18:32:39.073159 24 wait.go:44] Found 1 stateful pods, waiting for 3
  E0507 18:32:39.578704      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:40.578830      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:41.578823      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:42.579053      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:43.579225      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:44.579393      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:45.579544      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:46.579728      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:47.579853      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:48.580018      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:49.074493 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0507 18:32:49.074534 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0507 18:32:49.074541 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/07/25 18:32:49.074
  STEP: Scale down will halt with unhealthy stateful pod @ 05/07/25 18:32:49.074
  I0507 18:32:49.079652 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-8299 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 18:32:49.175090 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 18:32:49.175114 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 18:32:49.175123 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 18:32:49.175147 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-8299 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 18:32:49.259880 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 18:32:49.259910 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 18:32:49.259919 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 18:32:49.259948 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-8299 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0507 18:32:49.348734 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0507 18:32:49.348758 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0507 18:32:49.348766 24 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0507 18:32:49.348772 24 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0507 18:32:49.351266 24 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0507 18:32:49.580611      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:50.581112      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:51.581254      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:52.581403      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:53.581546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:54.581738      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:55.581885      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:56.582072      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:57.582243      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:32:58.582401      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:32:59.355510 24 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0507 18:32:59.355525 24 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0507 18:32:59.355544 24 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0507 18:32:59.456453 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999896s
  E0507 18:32:59.582607      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:33:00.459582 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.905975294s
  E0507 18:33:00.582683      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:33:01.463960 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.901842206s
  E0507 18:33:01.583139      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:33:02.467545 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.898448658s
  E0507 18:33:02.583742      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:33:03.470971 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.894837017s
  E0507 18:33:03.584166      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:33:04.474735 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.891128007s
  E0507 18:33:04.584844      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:33:05.478900 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.886684751s
  E0507 18:33:05.585101      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:33:06.483003 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.88346292s
  E0507 18:33:06.586032      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:33:07.486658 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.87942941s
  E0507 18:33:07.586757      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:33:08.489551 24 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 875.792258ms
  E0507 18:33:08.587675      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8299 @ 05/07/25 18:33:09.489
  I0507 18:33:09.493348 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-8299 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 18:33:09.574869 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 18:33:09.574893 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 18:33:09.574902 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 18:33:09.574927 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-8299 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0507 18:33:09.588156      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:33:09.660382 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 18:33:09.660406 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 18:33:09.660414 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 18:33:09.660440 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-815196820 --namespace=statefulset-8299 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0507 18:33:09.726786 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0507 18:33:09.726810 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0507 18:33:09.726818 24 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0507 18:33:09.726829 24 rest.go:153] Scaling statefulset ss to 0
  E0507 18:33:10.588794      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:33:11.589546      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:33:12.590348      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:33:13.591313      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:33:14.591447      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:33:15.591578      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:33:16.591709      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:33:17.591828      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:33:18.591946      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:33:19.592098      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/07/25 18:33:19.733
  I0507 18:33:19.733309 24 statefulset.go:138] Deleting all statefulset in ns statefulset-8299
  I0507 18:33:19.735438 24 rest.go:153] Scaling statefulset ss to 0
  I0507 18:33:19.739276 24 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0507 18:33:19.741092 24 rest.go:91] Deleting statefulset ss
  I0507 18:33:19.749134 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8299" for this suite. @ 05/07/25 18:33:19.751
• [71.050 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/07/25 18:33:19.755
  I0507 18:33:19.755864 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/07/25 18:33:19.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:33:19.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:33:19.769
  I0507 18:33:19.770609 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  E0507 18:33:20.592855      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:33:21.593775      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0507 18:33:22.593888      24 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0507 18:33:22.934654 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7149" for this suite. @ 05/07/25 18:33:22.938
• [3.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/07/25 18:33:22.944
  I0507 18:33:22.944179 24 util.go:453] >>> kubeConfig: /tmp/kubeconfig-815196820
  STEP: Building a namespace api object, basename watch @ 05/07/25 18:33:22.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/07/25 18:33:22.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/07/25 18:33:22.961
  STEP: creating a new configmap @ 05/07/25 18:33:22.963
  STEP: modifying the configmap once @ 05/07/25 18:33:22.966
  STEP: modifying the configmap a second time @ 05/07/25 18:33:22.97
  STEP: deleting the configmap @ 05/07/25 18:33:22.975
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/07/25 18:33:22.978
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/07/25 18:33:22.979
  I0507 18:33:22.979295 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5550  22be36f5-7089-4c75-b275-2176c7576b68 2265615 0 2025-05-07 18:33:22 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-07 18:33:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 18:33:22.979365 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5550  22be36f5-7089-4c75-b275-2176c7576b68 2265616 0 2025-05-07 18:33:22 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-07 18:33:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0507 18:33:22.979413 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5550" for this suite. @ 05/07/25 18:33:22.981
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0507 18:33:22.986502 24 suites.go:34] Running AfterSuite actions on node 1
  I0507 18:33:22.986514 24 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.026 seconds]
------------------------------

Ran 419 of 6731 Specs in 6316.125 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h45m16.605588446s
Test Suite Passed
