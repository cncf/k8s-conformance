  I0623 16:28:44.073193      20 e2e.go:109] Starting e2e run "e12fcd82-432c-4555-85ff-7efffbce958d" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1750696123 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0623 16:28:44.308313 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 16:28:44.309290 20 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0623 16:28:44.333166 20 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0623 16:28:44.336899 20 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0623 16:28:44.336943 20 e2e.go:245] e2e test version: v1.33.2
  I0623 16:28:44.338082 20 e2e.go:254] kube-apiserver version: v1.33.2
  I0623 16:28:44.338233 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 16:28:44.342629 20 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/23/25 16:28:44.511
  I0623 16:28:44.511058 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename daemonsets @ 06/23/25 16:28:44.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:28:44.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:28:44.533
  STEP: Creating simple DaemonSet "daemon-set" @ 06/23/25 16:28:44.557
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/23/25 16:28:44.565
  I0623 16:28:44.647116 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:44.647189 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:44.654696 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 16:28:44.654711 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 16:28:45.571036 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:45.571096 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:45.574923 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 16:28:45.574951 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 16:28:46.570929 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:46.571004 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:46.575100 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 16:28:46.575268 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 16:28:47.571202 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:47.571252 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:47.574494 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0623 16:28:47.574516 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 16:28:48.569991 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:48.570048 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:48.573337 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0623 16:28:48.573360 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/23/25 16:28:48.576
  I0623 16:28:48.671439 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:48.671477 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:48.675494 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0623 16:28:48.675512 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 16:28:49.596304 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:49.596357 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:49.600731 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0623 16:28:49.600751 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 16:28:50.594595 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:50.594655 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:50.598100 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0623 16:28:50.598123 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 16:28:51.595367 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:51.595426 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:51.599177 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0623 16:28:51.599197 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 16:28:52.597448 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:52.597497 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:52.602130 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0623 16:28:52.602155 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 16:28:53.594348 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:53.594397 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:53.598674 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0623 16:28:53.598698 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 16:28:54.595348 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:54.595403 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:28:54.598562 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0623 16:28:54.598585 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/23/25 16:28:54.601
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8666, will wait for the garbage collector to delete the pods @ 06/23/25 16:28:54.601
  I0623 16:28:54.661437 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.459889ms
  I0623 16:28:54.761904 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.462271ms
  I0623 16:28:59.366936 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 16:28:59.366976 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0623 16:28:59.372434 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5340"},"items":null}

  I0623 16:28:59.375926 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5340"},"items":null}

  I0623 16:28:59.389409 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8666" for this suite. @ 06/23/25 16:28:59.392
• [14.888 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 06/23/25 16:28:59.399
  I0623 16:28:59.399642 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replication-controller @ 06/23/25 16:28:59.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:28:59.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:28:59.416
  STEP: Creating replication controller my-hostname-basic-85452cb3-a7c1-44e6-9837-cfb6ee81c94b @ 06/23/25 16:28:59.418
  I0623 16:28:59.430946 20 resource.go:81] Pod name my-hostname-basic-85452cb3-a7c1-44e6-9837-cfb6ee81c94b: Found 0 pods out of 1
  I0623 16:29:04.436738 20 resource.go:81] Pod name my-hostname-basic-85452cb3-a7c1-44e6-9837-cfb6ee81c94b: Found 1 pods out of 1
  I0623 16:29:04.436769 20 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-85452cb3-a7c1-44e6-9837-cfb6ee81c94b" are running
  I0623 16:29:04.439713 20 rc.go:525] Pod "my-hostname-basic-85452cb3-a7c1-44e6-9837-cfb6ee81c94b-6xms9" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-23 16:29:02 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-23 16:28:59 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-23 16:29:02 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-23 16:29:02 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-23 16:28:59 +0000 UTC Reason: Message:}])
  I0623 16:29:04.439735 20 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/23/25 16:29:04.439
  I0623 16:29:04.448851 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6746" for this suite. @ 06/23/25 16:29:04.453
• [5.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 06/23/25 16:29:04.46
  I0623 16:29:04.460036 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 16:29:04.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:29:04.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:29:04.476
  STEP: Setting up server cert @ 06/23/25 16:29:04.499
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 16:29:05.019
  STEP: Deploying the webhook pod @ 06/23/25 16:29:05.025
  STEP: Wait for the deployment to be ready @ 06/23/25 16:29:05.038
  I0623 16:29:05.047054 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0623 16:29:07.059801 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 29, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 29, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 29, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 29, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 06/23/25 16:29:09.064
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 16:29:09.083
  I0623 16:29:10.083891 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0623 16:29:10.089800 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2367-crds.webhook.example.com via the AdmissionRegistration API @ 06/23/25 16:29:10.601
  STEP: Creating a custom resource while v1 is storage version @ 06/23/25 16:29:10.615
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/23/25 16:29:12.641
  STEP: Patching the custom resource while v2 is storage version @ 06/23/25 16:29:12.651
  I0623 16:29:13.280745 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9473" for this suite. @ 06/23/25 16:29:13.284
  STEP: Destroying namespace "webhook-markers-9427" for this suite. @ 06/23/25 16:29:13.291
• [8.837 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 06/23/25 16:29:13.297
  I0623 16:29:13.297607 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename statefulset @ 06/23/25 16:29:13.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:29:13.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:29:13.312
  STEP: Creating service test in namespace statefulset-3013 @ 06/23/25 16:29:13.314
  STEP: Creating a new StatefulSet @ 06/23/25 16:29:13.321
  I0623 16:29:13.331291 20 wait.go:44] Found 0 stateful pods, waiting for 3
  I0623 16:29:23.335617 20 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0623 16:29:23.335651 20 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0623 16:29:23.335661 20 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0623 16:29:23.346940 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-3013 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0623 16:29:23.447952 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0623 16:29:23.447999 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0623 16:29:23.448012 20 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/23/25 16:29:33.46
  I0623 16:29:33.469297 20 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 06/23/25 16:29:33.469
  STEP: Updating Pods in reverse ordinal order @ 06/23/25 16:29:43.481
  I0623 16:29:43.484676 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-3013 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0623 16:29:43.569946 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0623 16:29:43.569979 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0623 16:29:43.569987 20 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0623 16:29:53.589364 20 wait.go:158] Waiting for StatefulSet statefulset-3013/ss2 to complete update
  STEP: Rolling back to a previous revision @ 06/23/25 16:30:03.596
  I0623 16:30:03.596733 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-3013 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0623 16:30:03.678796 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0623 16:30:03.678843 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0623 16:30:03.678853 20 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0623 16:30:13.702361 20 statefulset.go:2542] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 06/23/25 16:30:23.714
  I0623 16:30:23.718478 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-3013 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0623 16:30:23.798612 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0623 16:30:23.798649 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0623 16:30:23.798659 20 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0623 16:30:33.815903 20 statefulset.go:138] Deleting all statefulset in ns statefulset-3013
  I0623 16:30:33.820469 20 rest.go:153] Scaling statefulset ss2 to 0
  I0623 16:30:43.840325 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0623 16:30:43.844895 20 rest.go:91] Deleting statefulset ss2
  I0623 16:30:43.858272 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3013" for this suite. @ 06/23/25 16:30:43.862
• [90.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 06/23/25 16:30:43.869
  I0623 16:30:43.869439 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/23/25 16:30:43.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:30:43.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:30:43.884
  I0623 16:30:43.889268 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1792" for this suite. @ 06/23/25 16:30:43.963
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/23/25 16:30:43.973
  I0623 16:30:43.973724 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename watch @ 06/23/25 16:30:43.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:30:43.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:30:43.986
  STEP: getting a starting resourceVersion @ 06/23/25 16:30:43.988
  STEP: starting a background goroutine to produce watch events @ 06/23/25 16:30:43.991
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/23/25 16:30:43.991
  I0623 16:30:46.780602 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7639" for this suite. @ 06/23/25 16:30:46.829
• [2.910 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 06/23/25 16:30:46.883
  I0623 16:30:46.883531 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename dns @ 06/23/25 16:30:46.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:30:46.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:30:46.898
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/23/25 16:30:46.9
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/23/25 16:30:46.9
  STEP: creating a pod to probe DNS @ 06/23/25 16:30:46.9
  STEP: submitting the pod to kubernetes @ 06/23/25 16:30:46.9
  STEP: retrieving the pod @ 06/23/25 16:30:50.923
  STEP: looking for the results for each expected name from probers @ 06/23/25 16:30:50.927
  I0623 16:30:50.944856 20 dns_common.go:546] DNS probes using dns-3401/dns-test-4c0f5fc9-314c-4e24-91fb-6c27f668ec2f succeeded

  STEP: deleting the pod @ 06/23/25 16:30:50.944
  I0623 16:30:50.959696 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3401" for this suite. @ 06/23/25 16:30:50.963
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 06/23/25 16:30:50.97
  I0623 16:30:50.970258 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename disruption @ 06/23/25 16:30:50.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:30:50.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:30:50.986
  STEP: Creating a kubernetes client @ 06/23/25 16:30:50.988
  I0623 16:30:50.988165 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename disruption-2 @ 06/23/25 16:30:50.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:30:51.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:30:51.004
  STEP: Waiting for the pdb to be processed @ 06/23/25 16:30:51.01
  STEP: Waiting for the pdb to be processed @ 06/23/25 16:30:53.019
  STEP: Waiting for the pdb to be processed @ 06/23/25 16:30:55.029
  STEP: listing a collection of PDBs across all namespaces @ 06/23/25 16:30:57.035
  STEP: listing a collection of PDBs in namespace disruption-6121 @ 06/23/25 16:30:57.039
  STEP: deleting a collection of PDBs @ 06/23/25 16:30:57.043
  STEP: Waiting for the PDB collection to be deleted @ 06/23/25 16:30:57.061
  I0623 16:30:57.064880 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6541" for this suite. @ 06/23/25 16:30:57.07
  I0623 16:30:57.077963 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6121" for this suite. @ 06/23/25 16:30:57.17
• [6.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 06/23/25 16:30:57.177
  I0623 16:30:57.177849 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename svcaccounts @ 06/23/25 16:30:57.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:30:57.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:30:57.193
  STEP: Creating a pod to test service account token:  @ 06/23/25 16:30:57.195
  STEP: Saw pod success @ 06/23/25 16:31:01.218
  I0623 16:31:01.221120 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod test-pod-9d501ec4-8cac-4e4e-ba1f-fb575a6c181a container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 16:31:01.24
  I0623 16:31:01.257007 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2624" for this suite. @ 06/23/25 16:31:01.26
• [4.089 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 06/23/25 16:31:01.267
  I0623 16:31:01.267076 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 16:31:01.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:01.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:01.282
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9164 @ 06/23/25 16:31:01.284
  STEP: changing the ExternalName service to type=NodePort @ 06/23/25 16:31:01.29
  I0623 16:31:01.323656 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0623 16:31:03.328367 20 resource.go:361] Creating new exec pod
  I0623 16:31:05.359443 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-9164 exec execpod2wpmw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0623 16:31:05.447204 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.59) 80 port [tcp/http] succeeded!\n"
  I0623 16:31:05.447244 20 builder.go:147] stdout: "externalname-service-7bb6746896-wn4g5"
  I0623 16:31:05.447305 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-9164 exec execpod2wpmw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.59 80'
  I0623 16:31:05.526054 20 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.59 80\n+ echo hostName\nConnection to 10.152.183.59 80 port [tcp/http] succeeded!\n"
  I0623 16:31:05.526101 20 builder.go:147] stdout: "externalname-service-7bb6746896-s9kph"
  I0623 16:31:05.526175 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-9164 exec execpod2wpmw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.62 31646'
  I0623 16:31:05.607374 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.41.62 31646\nConnection to 172.31.41.62 31646 port [tcp/*] succeeded!\n"
  I0623 16:31:05.607415 20 builder.go:147] stdout: "externalname-service-7bb6746896-wn4g5"
  I0623 16:31:05.607473 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-9164 exec execpod2wpmw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.64.108 31646'
  I0623 16:31:05.687045 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.64.108 31646\nConnection to 172.31.64.108 31646 port [tcp/*] succeeded!\n"
  I0623 16:31:05.687082 20 builder.go:147] stdout: "externalname-service-7bb6746896-wn4g5"
  I0623 16:31:05.687306 20 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0623 16:31:05.714742 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9164" for this suite. @ 06/23/25 16:31:05.719
• [4.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 06/23/25 16:31:05.726
  I0623 16:31:05.726238 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/23/25 16:31:05.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:05.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:05.741
  STEP: Cleaning up the secret @ 06/23/25 16:31:07.773
  STEP: Cleaning up the configmap @ 06/23/25 16:31:07.778
  STEP: Cleaning up the pod @ 06/23/25 16:31:07.786
  I0623 16:31:07.806742 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8827" for this suite. @ 06/23/25 16:31:07.81
• [2.092 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/23/25 16:31:07.818
  I0623 16:31:07.818748 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename watch @ 06/23/25 16:31:07.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:07.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:07.832
  STEP: creating a watch on configmaps with a certain label @ 06/23/25 16:31:07.836
  STEP: creating a new configmap @ 06/23/25 16:31:07.839
  STEP: modifying the configmap once @ 06/23/25 16:31:07.845
  STEP: changing the label value of the configmap @ 06/23/25 16:31:07.852
  STEP: Expecting to observe a delete notification for the watched object @ 06/23/25 16:31:07.858
  I0623 16:31:07.858997 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8214  759be3aa-722a-46fc-876b-490d6fd50cb4 6594 0 2025-06-23 16:31:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-23 16:31:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 16:31:07.859160 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8214  759be3aa-722a-46fc-876b-490d6fd50cb4 6595 0 2025-06-23 16:31:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-23 16:31:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 16:31:07.859275 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8214  759be3aa-722a-46fc-876b-490d6fd50cb4 6596 0 2025-06-23 16:31:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-23 16:31:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/23/25 16:31:07.859
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/23/25 16:31:07.866
  STEP: changing the label value of the configmap back @ 06/23/25 16:31:17.867
  STEP: modifying the configmap a third time @ 06/23/25 16:31:17.877
  STEP: deleting the configmap @ 06/23/25 16:31:17.886
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/23/25 16:31:17.892
  I0623 16:31:17.892707 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8214  759be3aa-722a-46fc-876b-490d6fd50cb4 6674 0 2025-06-23 16:31:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-23 16:31:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 16:31:17.892880 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8214  759be3aa-722a-46fc-876b-490d6fd50cb4 6675 0 2025-06-23 16:31:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-23 16:31:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 16:31:17.892994 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8214  759be3aa-722a-46fc-876b-490d6fd50cb4 6676 0 2025-06-23 16:31:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-06-23 16:31:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 16:31:17.893078 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8214" for this suite. @ 06/23/25 16:31:17.897
• [10.087 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 06/23/25 16:31:17.905
  I0623 16:31:17.905378 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename disruption @ 06/23/25 16:31:17.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:17.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:17.92
  STEP: Waiting for the pdb to be processed @ 06/23/25 16:31:17.926
  STEP: Updating PodDisruptionBudget status @ 06/23/25 16:31:19.931
  STEP: Waiting for all pods to be running @ 06/23/25 16:31:19.94
  I0623 16:31:19.944239 20 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 06/23/25 16:31:21.945
  STEP: Waiting for the pdb to be processed @ 06/23/25 16:31:21.958
  STEP: Patching PodDisruptionBudget status @ 06/23/25 16:31:21.966
  STEP: Waiting for the pdb to be processed @ 06/23/25 16:31:21.975
  I0623 16:31:21.978000 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9935" for this suite. @ 06/23/25 16:31:21.981
• [4.082 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 06/23/25 16:31:21.987
  I0623 16:31:21.987901 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sched-pred @ 06/23/25 16:31:21.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:22.002
  I0623 16:31:22.004504 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0623 16:31:22.086946 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0623 16:31:22.091038 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-24-79 before test
  I0623 16:31:22.094987 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-w2dbs from ingress-nginx-kubernetes-worker started at 2025-06-23 16:20:10 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.095006 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 16:31:22.095014 20 predicates.go:958] calico-node-4rnm2 from kube-system started at 2025-06-23 16:26:03 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.095020 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 16:31:22.095026 20 predicates.go:958] sonobuoy-e2e-job-4044e0a013834e18 from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 16:31:22.095031 20 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0623 16:31:22.095036 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 16:31:22.095040 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-6jjs2 from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 16:31:22.095045 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 16:31:22.095049 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0623 16:31:22.095054 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-41-62 before test
  I0623 16:31:22.097904 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-rzms8 from ingress-nginx-kubernetes-worker started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.097917 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 16:31:22.097923 20 predicates.go:958] calico-node-pkv8k from kube-system started at 2025-06-23 16:25:48 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.097928 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 16:31:22.097933 20 predicates.go:958] coredns-5d946bb58-dwr2m from kube-system started at 2025-06-23 16:13:37 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.097938 20 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0623 16:31:22.097943 20 predicates.go:958] kube-state-metrics-b84f44f45-wtc2j from kube-system started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.097948 20 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0623 16:31:22.097954 20 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-5ccr4 from kube-system started at 2025-06-23 16:13:37 +0000 UTC (2 container statuses recorded)
  I0623 16:31:22.097963 20 predicates.go:960] 	Container metrics-server ready: true, restart count 3
  I0623 16:31:22.097968 20 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0623 16:31:22.097972 20 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-rngzp from kubernetes-dashboard started at 2025-06-23 16:13:37 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.097977 20 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0623 16:31:22.097983 20 predicates.go:958] kubernetes-dashboard-6858576c98-k68wt from kubernetes-dashboard started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.097987 20 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 0
  I0623 16:31:22.097993 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-z6cwd from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 16:31:22.097997 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 16:31:22.098002 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0623 16:31:22.098006 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-64-108 before test
  I0623 16:31:22.101723 20 predicates.go:958] pod-0 from disruption-9935 started at 2025-06-23 16:31:19 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.101737 20 predicates.go:960] 	Container donothing ready: true, restart count 0
  I0623 16:31:22.101744 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-ljm45 from ingress-nginx-kubernetes-worker started at 2025-06-23 16:20:30 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.101749 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 16:31:22.101756 20 predicates.go:958] calico-node-jfknj from kube-system started at 2025-06-23 16:25:33 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.101760 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 16:31:22.101766 20 predicates.go:958] sonobuoy from sonobuoy started at 2025-06-23 16:28:34 +0000 UTC (1 container statuses recorded)
  I0623 16:31:22.101771 20 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0623 16:31:22.101814 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-mspjn from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 16:31:22.101832 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 16:31:22.101837 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-24-79 @ 06/23/25 16:31:22.115
  STEP: verifying the node has the label node ip-172-31-41-62 @ 06/23/25 16:31:22.127
  STEP: verifying the node has the label node ip-172-31-64-108 @ 06/23/25 16:31:22.14
  I0623 16:31:22.198883 20 predicates.go:373] Pod pod-0 requesting resource cpu=0m on Node ip-172-31-64-108
  I0623 16:31:22.198916 20 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-ljm45 requesting resource cpu=0m on Node ip-172-31-64-108
  I0623 16:31:22.198923 20 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-rzms8 requesting resource cpu=0m on Node ip-172-31-41-62
  I0623 16:31:22.198931 20 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-w2dbs requesting resource cpu=0m on Node ip-172-31-24-79
  I0623 16:31:22.198937 20 predicates.go:373] Pod calico-node-4rnm2 requesting resource cpu=250m on Node ip-172-31-24-79
  I0623 16:31:22.198942 20 predicates.go:373] Pod calico-node-jfknj requesting resource cpu=250m on Node ip-172-31-64-108
  I0623 16:31:22.198948 20 predicates.go:373] Pod calico-node-pkv8k requesting resource cpu=250m on Node ip-172-31-41-62
  I0623 16:31:22.198954 20 predicates.go:373] Pod coredns-5d946bb58-dwr2m requesting resource cpu=100m on Node ip-172-31-41-62
  I0623 16:31:22.199001 20 predicates.go:373] Pod kube-state-metrics-b84f44f45-wtc2j requesting resource cpu=0m on Node ip-172-31-41-62
  I0623 16:31:22.199007 20 predicates.go:373] Pod metrics-server-v0.7.2-7d878b47f8-5ccr4 requesting resource cpu=5m on Node ip-172-31-41-62
  I0623 16:31:22.199011 20 predicates.go:373] Pod dashboard-metrics-scraper-5cf87bc988-rngzp requesting resource cpu=0m on Node ip-172-31-41-62
  I0623 16:31:22.199016 20 predicates.go:373] Pod kubernetes-dashboard-6858576c98-k68wt requesting resource cpu=0m on Node ip-172-31-41-62
  I0623 16:31:22.199022 20 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-64-108
  I0623 16:31:22.199027 20 predicates.go:373] Pod sonobuoy-e2e-job-4044e0a013834e18 requesting resource cpu=0m on Node ip-172-31-24-79
  I0623 16:31:22.199032 20 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-6jjs2 requesting resource cpu=0m on Node ip-172-31-24-79
  I0623 16:31:22.199038 20 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-mspjn requesting resource cpu=0m on Node ip-172-31-64-108
  I0623 16:31:22.199045 20 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-z6cwd requesting resource cpu=0m on Node ip-172-31-41-62
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/23/25 16:31:22.199
  I0623 16:31:22.199073 20 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-64-108
  I0623 16:31:22.211729 20 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-24-79
  I0623 16:31:22.218924 20 predicates.go:383] Creating a pod which consumes cpu=1151m on Node ip-172-31-41-62
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/23/25 16:31:24.243
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3044d9cc-5665-4c94-828d-f6945b047772.184bb8fe3bd463f3], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3595/filler-pod-3044d9cc-5665-4c94-828d-f6945b047772 to ip-172-31-24-79] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3044d9cc-5665-4c94-828d-f6945b047772.184bb8fe5940bf79], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.10"] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3044d9cc-5665-4c94-828d-f6945b047772.184bb8fe6c34378c], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.10" in 317ms (317ms including waiting). Image size: 320368 bytes.] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3044d9cc-5665-4c94-828d-f6945b047772.184bb8fe6dba3dd1], Reason = [Created], Message = [Created container: filler-pod-3044d9cc-5665-4c94-828d-f6945b047772] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3044d9cc-5665-4c94-828d-f6945b047772.184bb8fe7073b685], Reason = [Started], Message = [Started container filler-pod-3044d9cc-5665-4c94-828d-f6945b047772] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-30ca9592-b7cb-4ca3-afa0-08681b012e7d.184bb8fe3b4ec00b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3595/filler-pod-30ca9592-b7cb-4ca3-afa0-08681b012e7d to ip-172-31-64-108] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-30ca9592-b7cb-4ca3-afa0-08681b012e7d.184bb8fe58330938], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-30ca9592-b7cb-4ca3-afa0-08681b012e7d.184bb8fe59a070c8], Reason = [Created], Message = [Created container: filler-pod-30ca9592-b7cb-4ca3-afa0-08681b012e7d] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-30ca9592-b7cb-4ca3-afa0-08681b012e7d.184bb8fe5c550377], Reason = [Started], Message = [Started container filler-pod-30ca9592-b7cb-4ca3-afa0-08681b012e7d] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e87eefb9-5cea-4a83-9c82-03912ae550a3.184bb8fe3c044e58], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3595/filler-pod-e87eefb9-5cea-4a83-9c82-03912ae550a3 to ip-172-31-41-62] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e87eefb9-5cea-4a83-9c82-03912ae550a3.184bb8fe5ab382b2], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.10"] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e87eefb9-5cea-4a83-9c82-03912ae550a3.184bb8fe6b6c4d54], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.10" in 280ms (280ms including waiting). Image size: 320368 bytes.] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e87eefb9-5cea-4a83-9c82-03912ae550a3.184bb8fe6cb52e14], Reason = [Created], Message = [Created container: filler-pod-e87eefb9-5cea-4a83-9c82-03912ae550a3] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e87eefb9-5cea-4a83-9c82-03912ae550a3.184bb8fe6f71578f], Reason = [Started], Message = [Started container filler-pod-e87eefb9-5cea-4a83-9c82-03912ae550a3] @ 06/23/25 16:31:24.246
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.184bb8feb47647c2], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 06/23/25 16:31:24.261
  STEP: removing the label node off the node ip-172-31-24-79 @ 06/23/25 16:31:25.258
  STEP: verifying the node doesn't have the label node @ 06/23/25 16:31:25.268
  STEP: removing the label node off the node ip-172-31-41-62 @ 06/23/25 16:31:25.272
  STEP: verifying the node doesn't have the label node @ 06/23/25 16:31:25.285
  STEP: removing the label node off the node ip-172-31-64-108 @ 06/23/25 16:31:25.289
  STEP: verifying the node doesn't have the label node @ 06/23/25 16:31:25.302
  I0623 16:31:25.306969 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3595" for this suite. @ 06/23/25 16:31:25.311
• [3.330 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 06/23/25 16:31:25.317
  I0623 16:31:25.317830 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename field-validation @ 06/23/25 16:31:25.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:25.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:25.332
  STEP: apply creating a deployment @ 06/23/25 16:31:25.334
  I0623 16:31:25.348226 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9785" for this suite. @ 06/23/25 16:31:25.412
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 06/23/25 16:31:25.419
  I0623 16:31:25.419098 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 16:31:25.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:25.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:25.434
  STEP: creating the pod @ 06/23/25 16:31:25.436
  I0623 16:31:25.437020 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-3955 create -f -'
  I0623 16:31:25.525891 20 builder.go:146] stderr: ""
  I0623 16:31:25.525937 20 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/23/25 16:31:27.54
  I0623 16:31:27.540612 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-3955 label pods pause testing-label=testing-label-value'
  I0623 16:31:27.591715 20 builder.go:146] stderr: ""
  I0623 16:31:27.591761 20 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/23/25 16:31:27.591
  I0623 16:31:27.591843 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-3955 get pod pause -L testing-label'
  I0623 16:31:27.636090 20 builder.go:146] stderr: ""
  I0623 16:31:27.636133 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/23/25 16:31:27.636
  I0623 16:31:27.636199 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-3955 label pods pause testing-label-'
  I0623 16:31:27.686865 20 builder.go:146] stderr: ""
  I0623 16:31:27.686911 20 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/23/25 16:31:27.686
  I0623 16:31:27.686974 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-3955 get pod pause -L testing-label'
  I0623 16:31:27.730407 20 builder.go:146] stderr: ""
  I0623 16:31:27.730447 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 06/23/25 16:31:27.73
  I0623 16:31:27.730643 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-3955 delete --grace-period=0 --force -f -'
  I0623 16:31:27.784096 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0623 16:31:27.784126 20 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0623 16:31:27.784160 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-3955 get rc,svc -l name=pause --no-headers'
  I0623 16:31:27.834941 20 builder.go:146] stderr: "No resources found in kubectl-3955 namespace.\n"
  I0623 16:31:27.834976 20 builder.go:147] stdout: ""
  I0623 16:31:27.835014 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-3955 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0623 16:31:27.877695 20 builder.go:146] stderr: ""
  I0623 16:31:27.877731 20 builder.go:147] stdout: ""
  I0623 16:31:27.878030 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3955" for this suite. @ 06/23/25 16:31:27.882
• [2.470 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 06/23/25 16:31:27.889
  I0623 16:31:27.889481 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 16:31:27.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:27.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:27.904
  STEP: Creating a suspended job @ 06/23/25 16:31:27.91
  STEP: Patching the Job @ 06/23/25 16:31:27.917
  STEP: Watching for Job to be patched @ 06/23/25 16:31:27.924
  I0623 16:31:27.925639 20 job.go:1369] Event ADDED observed for Job e2e-8h9cc in namespace job-9716 with labels: map[e2e-job-label:e2e-8h9cc] and annotations: map[]
  I0623 16:31:27.925661 20 job.go:1372] Event MODIFIED found for Job e2e-8h9cc in namespace job-9716 with labels: map[e2e-8h9cc:patched e2e-job-label:e2e-8h9cc] and annotations: map[]
  STEP: Updating the job @ 06/23/25 16:31:27.925
  STEP: Watching for Job to be updated @ 06/23/25 16:31:27.935
  I0623 16:31:27.936481 20 job.go:1372] Event MODIFIED found for Job e2e-8h9cc in namespace job-9716 with labels: map[e2e-8h9cc:patched e2e-job-label:e2e-8h9cc] and annotations: map[updated:true]
  I0623 16:31:27.936509 20 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/23/25 16:31:27.936
  I0623 16:31:27.940083 20 job.go:1247] Job: e2e-8h9cc as labels: map[e2e-8h9cc:patched e2e-job-label:e2e-8h9cc]
  STEP: Waiting for job to complete @ 06/23/25 16:31:27.94
  STEP: Delete a job collection with a labelselector @ 06/23/25 16:31:35.964
  STEP: Watching for Job to be deleted @ 06/23/25 16:31:35.975
  I0623 16:31:35.976705 20 job.go:1369] Event MODIFIED observed for Job e2e-8h9cc in namespace job-9716 with labels: map[e2e-8h9cc:patched e2e-job-label:e2e-8h9cc] and annotations: map[updated:true]
  I0623 16:31:35.976735 20 job.go:1369] Event MODIFIED observed for Job e2e-8h9cc in namespace job-9716 with labels: map[e2e-8h9cc:patched e2e-job-label:e2e-8h9cc] and annotations: map[updated:true]
  I0623 16:31:35.976771 20 job.go:1369] Event MODIFIED observed for Job e2e-8h9cc in namespace job-9716 with labels: map[e2e-8h9cc:patched e2e-job-label:e2e-8h9cc] and annotations: map[updated:true]
  I0623 16:31:35.976891 20 job.go:1369] Event MODIFIED observed for Job e2e-8h9cc in namespace job-9716 with labels: map[e2e-8h9cc:patched e2e-job-label:e2e-8h9cc] and annotations: map[updated:true]
  I0623 16:31:35.976913 20 job.go:1369] Event MODIFIED observed for Job e2e-8h9cc in namespace job-9716 with labels: map[e2e-8h9cc:patched e2e-job-label:e2e-8h9cc] and annotations: map[updated:true]
  I0623 16:31:35.976982 20 job.go:1372] Event DELETED found for Job e2e-8h9cc in namespace job-9716 with labels: map[e2e-8h9cc:patched e2e-job-label:e2e-8h9cc] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/23/25 16:31:35.977
  I0623 16:31:35.979761 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9716" for this suite. @ 06/23/25 16:31:35.982
• [8.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 06/23/25 16:31:35.993
  I0623 16:31:35.993476 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 16:31:35.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:36.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:36.026
  I0623 16:31:36.069871 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1862" for this suite. @ 06/23/25 16:31:36.084
• [0.097 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 06/23/25 16:31:36.091
  I0623 16:31:36.091097 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename csinodes @ 06/23/25 16:31:36.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:36.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:36.107
  STEP: Creating initial csiNode "e2e-csinode-g4b2h" @ 06/23/25 16:31:36.109
  STEP: Getting initial csiNode "e2e-csinode-g4b2h" @ 06/23/25 16:31:36.113
  STEP: Patching initial csiNode: "e2e-csinode-g4b2h" @ 06/23/25 16:31:36.117
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-g4b2h=patched" @ 06/23/25 16:31:36.123
  STEP: Delete initial csiNode: "e2e-csinode-g4b2h" @ 06/23/25 16:31:36.126
  STEP: Confirm deletion of csiNode "e2e-csinode-g4b2h" @ 06/23/25 16:31:36.133
  STEP: Creating replacement csiNode "e2e-csinode-2x9p6" @ 06/23/25 16:31:36.136
  STEP: Getting replacement csiNode "e2e-csinode-2x9p6" @ 06/23/25 16:31:36.14
  STEP: Updating replacement csiNode "e2e-csinode-2x9p6" @ 06/23/25 16:31:36.143
  STEP: DeleteCollection of CSINodes with "e2e-csinode-2x9p6=updated" label @ 06/23/25 16:31:36.151
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-2x9p6=updated" @ 06/23/25 16:31:36.16
  I0623 16:31:36.163843 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-5450" for this suite. @ 06/23/25 16:31:36.184
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 06/23/25 16:31:36.191
  I0623 16:31:36.191077 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/23/25 16:31:36.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:36.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:36.207
  I0623 16:31:36.208994 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 16:31:39.289736 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8532" for this suite. @ 06/23/25 16:31:39.294
• [3.111 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 06/23/25 16:31:39.302
  I0623 16:31:39.302852 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename var-expansion @ 06/23/25 16:31:39.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:39.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:39.317
  STEP: Creating a pod to test substitution in container's command @ 06/23/25 16:31:39.319
  STEP: Saw pod success @ 06/23/25 16:31:43.34
  I0623 16:31:43.343579 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod var-expansion-fcf01279-01e6-427f-aebf-aca70bb8830e container dapi-container: <nil>
  STEP: delete the pod @ 06/23/25 16:31:43.35
  I0623 16:31:43.368634 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4833" for this suite. @ 06/23/25 16:31:43.372
• [4.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 06/23/25 16:31:43.379
  I0623 16:31:43.379088 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename var-expansion @ 06/23/25 16:31:43.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:31:43.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:31:43.393
  STEP: creating the pod with failed condition @ 06/23/25 16:31:43.395
  STEP: updating the pod @ 06/23/25 16:33:43.407
  I0623 16:33:43.920978 20 pod_client.go:173] Successfully updated pod "var-expansion-a62314e5-8504-4790-92c4-bbd6d1be4383"
  STEP: waiting for pod running @ 06/23/25 16:33:43.921
  STEP: deleting the pod gracefully @ 06/23/25 16:33:45.928
  I0623 16:33:45.928827 20 delete.go:62] Deleting pod "var-expansion-a62314e5-8504-4790-92c4-bbd6d1be4383" in namespace "var-expansion-4312"
  I0623 16:33:45.938910 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-a62314e5-8504-4790-92c4-bbd6d1be4383" to be fully deleted
  I0623 16:34:18.024568 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4312" for this suite. @ 06/23/25 16:34:18.029
• [154.657 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 06/23/25 16:34:18.036
  I0623 16:34:18.036610 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 16:34:18.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:34:18.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:34:18.054
  STEP: Discovering how many secrets are in namespace by default @ 06/23/25 16:34:18.056
  STEP: Counting existing ResourceQuota @ 06/23/25 16:34:23.061
  STEP: Creating a ResourceQuota @ 06/23/25 16:34:28.065
  STEP: Ensuring resource quota status is calculated @ 06/23/25 16:34:28.07
  STEP: Creating a Secret @ 06/23/25 16:34:30.077
  STEP: Ensuring resource quota status captures secret creation @ 06/23/25 16:34:30.088
  STEP: Deleting a secret @ 06/23/25 16:34:32.094
  STEP: Ensuring resource quota status released usage @ 06/23/25 16:34:32.101
  I0623 16:34:34.107071 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-201" for this suite. @ 06/23/25 16:34:34.111
• [16.084 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/23/25 16:34:34.121
  I0623 16:34:34.121110 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename watch @ 06/23/25 16:34:34.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:34:34.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:34:34.134
  STEP: creating a new configmap @ 06/23/25 16:34:34.136
  STEP: modifying the configmap once @ 06/23/25 16:34:34.141
  STEP: modifying the configmap a second time @ 06/23/25 16:34:34.147
  STEP: deleting the configmap @ 06/23/25 16:34:34.155
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/23/25 16:34:34.161
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/23/25 16:34:34.162
  I0623 16:34:34.162632 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8476  95db9aed-eb3b-4187-a670-d41290f7d0ee 7585 0 2025-06-23 16:34:34 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-06-23 16:34:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 16:34:34.162731 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8476  95db9aed-eb3b-4187-a670-d41290f7d0ee 7586 0 2025-06-23 16:34:34 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-06-23 16:34:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 16:34:34.162822 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8476" for this suite. @ 06/23/25 16:34:34.212
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/23/25 16:34:34.22
  I0623 16:34:34.220507 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 16:34:34.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:34:34.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:34:34.233
  STEP: Creating secret with name s-test-opt-del-db0ffcfe-318d-47e8-bfe3-7df64d8c1d16 @ 06/23/25 16:34:34.313
  STEP: Creating secret with name s-test-opt-upd-b71e9338-2f75-4af8-b3b3-8c2de7899a5e @ 06/23/25 16:34:34.318
  STEP: Creating the pod @ 06/23/25 16:34:34.323
  STEP: Deleting secret s-test-opt-del-db0ffcfe-318d-47e8-bfe3-7df64d8c1d16 @ 06/23/25 16:34:36.368
  STEP: Updating secret s-test-opt-upd-b71e9338-2f75-4af8-b3b3-8c2de7899a5e @ 06/23/25 16:34:36.375
  STEP: Creating secret with name s-test-opt-create-0d24d2ed-f4b6-4c5b-984f-fb0ea8980575 @ 06/23/25 16:34:36.38
  STEP: waiting to observe update in volume @ 06/23/25 16:34:36.384
  I0623 16:34:40.420116 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6412" for this suite. @ 06/23/25 16:34:40.424
• [6.210 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 06/23/25 16:34:40.431
  I0623 16:34:40.431108 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubelet-test @ 06/23/25 16:34:40.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:34:40.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:34:40.449
  I0623 16:34:42.486751 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7362" for this suite. @ 06/23/25 16:34:42.491
• [2.069 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 06/23/25 16:34:42.499
  I0623 16:34:42.499853 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 16:34:42.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:34:42.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:34:42.514
  STEP: Setting up server cert @ 06/23/25 16:34:42.534
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 16:34:43.102
  STEP: Deploying the webhook pod @ 06/23/25 16:34:43.108
  STEP: Wait for the deployment to be ready @ 06/23/25 16:34:43.12
  I0623 16:34:43.127464 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 16:34:45.142
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 16:34:45.158
  I0623 16:34:46.158953 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/23/25 16:34:46.164
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/23/25 16:34:46.177
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/23/25 16:34:46.182
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/23/25 16:34:46.194
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/23/25 16:34:46.204
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/23/25 16:34:46.211
  I0623 16:34:46.377744 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9314" for this suite. @ 06/23/25 16:34:46.382
  STEP: Destroying namespace "webhook-markers-8332" for this suite. @ 06/23/25 16:34:46.389
• [3.897 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 06/23/25 16:34:46.396
  I0623 16:34:46.396901 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 16:34:46.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:34:46.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:34:46.412
  STEP: creating service in namespace services-1091 @ 06/23/25 16:34:46.414
  STEP: creating service affinity-nodeport-transition in namespace services-1091 @ 06/23/25 16:34:46.414
  I0623 16:34:46.441191 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0623 16:34:48.445580 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 34, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 34, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 34, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 34, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-7d57658b6c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 16:34:50.465055 20 resource.go:361] Creating new exec pod
  I0623 16:34:52.489187 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-1091 exec execpod-affinitymhw5h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0623 16:34:52.569544 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.152.183.248) 80 port [tcp/http] succeeded!\n"
  I0623 16:34:52.569588 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 16:34:52.569636 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-1091 exec execpod-affinitymhw5h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.248 80'
  I0623 16:34:52.649969 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.248 80\nConnection to 10.152.183.248 80 port [tcp/http] succeeded!\n"
  I0623 16:34:52.650012 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 16:34:52.650076 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-1091 exec execpod-affinitymhw5h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.24.79 32400'
  I0623 16:34:52.722847 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.24.79 32400\nConnection to 172.31.24.79 32400 port [tcp/*] succeeded!\n"
  I0623 16:34:52.722887 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 16:34:52.723035 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-1091 exec execpod-affinitymhw5h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.64.108 32400'
  I0623 16:34:52.807463 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.64.108 32400\nConnection to 172.31.64.108 32400 port [tcp/*] succeeded!\n"
  I0623 16:34:52.807504 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 16:34:52.816149 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-1091 exec execpod-affinitymhw5h -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/ ; done'
  I0623 16:34:52.979771 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n"
  I0623 16:34:52.979837 20 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-kwxkc\naffinity-nodeport-transition-7d57658b6c-zx8m7\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-kwxkc\naffinity-nodeport-transition-7d57658b6c-zx8m7\naffinity-nodeport-transition-7d57658b6c-kwxkc\naffinity-nodeport-transition-7d57658b6c-kwxkc\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-zx8m7\naffinity-nodeport-transition-7d57658b6c-zx8m7\naffinity-nodeport-transition-7d57658b6c-kwxkc\naffinity-nodeport-transition-7d57658b6c-kwxkc\naffinity-nodeport-transition-7d57658b6c-kwxkc\naffinity-nodeport-transition-7d57658b6c-kwxkc\naffinity-nodeport-transition-7d57658b6c-zx8m7"
  I0623 16:34:52.979852 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kwxkc
  I0623 16:34:52.979875 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zx8m7
  I0623 16:34:52.979881 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:52.979887 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kwxkc
  I0623 16:34:52.979896 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zx8m7
  I0623 16:34:52.979902 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kwxkc
  I0623 16:34:52.979907 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kwxkc
  I0623 16:34:52.979914 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:52.979926 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:52.979941 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zx8m7
  I0623 16:34:52.979951 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zx8m7
  I0623 16:34:52.979957 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kwxkc
  I0623 16:34:52.979962 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kwxkc
  I0623 16:34:52.980056 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kwxkc
  I0623 16:34:52.980067 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-kwxkc
  I0623 16:34:52.980075 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zx8m7
  I0623 16:34:52.991020 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-1091 exec execpod-affinitymhw5h -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/ ; done'
  I0623 16:34:53.154112 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:32400/\n"
  I0623 16:34:53.154175 20 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j\naffinity-nodeport-transition-7d57658b6c-q2m8j"
  I0623 16:34:53.154187 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154196 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154202 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154207 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154213 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154218 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154226 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154231 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154237 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154242 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154248 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154321 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154328 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154372 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154381 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154386 20 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-q2m8j
  I0623 16:34:53.154517 20 service.go:4352] Cleaning up the exec pod
  I0623 16:34:53.220207 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1091" for this suite. @ 06/23/25 16:34:53.224
• [6.836 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 06/23/25 16:34:53.232
  I0623 16:34:53.232882 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sched-preemption @ 06/23/25 16:34:53.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:34:53.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:34:53.246
  I0623 16:34:53.261485 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0623 16:35:53.267395 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/23/25 16:35:53.271
  I0623 16:35:53.271428 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/23/25 16:35:53.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:35:53.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:35:53.287
  I0623 16:35:53.305837 20 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0623 16:35:53.309616 20 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 06/23/25 16:35:53.362
  STEP: Removing a custom resource @ 06/23/25 16:35:53.37
  STEP: Removing a custom resource @ 06/23/25 16:35:53.378
  I0623 16:35:53.385367 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2991" for this suite. @ 06/23/25 16:35:53.389
  I0623 16:35:53.395379 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2362" for this suite. @ 06/23/25 16:35:53.49
• [60.266 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 06/23/25 16:35:53.498
  I0623 16:35:53.498856 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 16:35:53.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:35:53.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:35:53.512
  STEP: validating api versions @ 06/23/25 16:35:53.514
  I0623 16:35:53.515631 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1826 api-versions'
  I0623 16:35:53.556221 20 builder.go:146] stderr: ""
  I0623 16:35:53.556263 20 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0623 16:35:53.556482 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1826" for this suite. @ 06/23/25 16:35:53.591
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 06/23/25 16:35:53.599
  I0623 16:35:53.599625 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 16:35:53.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:35:53.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:35:53.615
  STEP: Starting the proxy @ 06/23/25 16:35:53.617
  I0623 16:35:53.617578 20 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1750 proxy --unix-socket=/tmp/kubectl-proxy-unix1020877165/test'
  STEP: retrieving proxy /api/ output @ 06/23/25 16:35:53.647
  I0623 16:35:53.648384 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1750" for this suite. @ 06/23/25 16:35:53.692
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 06/23/25 16:35:53.699
  I0623 16:35:53.699344 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename aggregator @ 06/23/25 16:35:53.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:35:53.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:35:53.716
  I0623 16:35:53.718259 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Registering the sample API server. @ 06/23/25 16:35:53.718
  I0623 16:35:54.149147 20 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0623 16:35:54.179508 20 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0623 16:35:56.227055 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 16:35:58.234607 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 16:36:00.232209 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 16:36:02.233456 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 16:36:04.232131 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 16:36:06.234207 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 16:36:08.232555 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 16:36:10.231852 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 16:36:12.233289 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 16:36:14.232090 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 16, 35, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 16:36:16.352302 20 aggregator.go:756] Waited 112.874327ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/23/25 16:36:16.386
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/23/25 16:36:16.39
  STEP: List APIServices @ 06/23/25 16:36:16.396
  I0623 16:36:16.400438 20 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/23/25 16:36:16.4
  I0623 16:36:16.411974 20 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/23/25 16:36:16.412
  I0623 16:36:16.421609 20 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.June, 23, 16, 36, 16, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/23/25 16:36:16.421
  I0623 16:36:16.425145 20 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-06-23 16:36:16 +0000 UTC Passed all checks passed}
  I0623 16:36:16.425171 20 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0623 16:36:16.425180 20 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/23/25 16:36:16.425
  I0623 16:36:16.435532 20 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1408393864" @ 06/23/25 16:36:16.435
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/23/25 16:36:16.444
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/23/25 16:36:16.45
  STEP: Patch APIService Status @ 06/23/25 16:36:16.454
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/23/25 16:36:16.462
  I0623 16:36:16.465471 20 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-06-23 16:36:16 +0000 UTC Passed all checks passed}
  I0623 16:36:16.465494 20 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0623 16:36:16.465505 20 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0623 16:36:16.465516 20 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 06/23/25 16:36:16.465
  STEP: Confirm that the generated APIService has been deleted @ 06/23/25 16:36:16.477
  I0623 16:36:16.477369 20 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0623 16:36:16.480285 20 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0623 16:36:16.480305 20 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0623 16:36:16.578403 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1553" for this suite. @ 06/23/25 16:36:16.581
• [22.891 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 06/23/25 16:36:16.59
  I0623 16:36:16.590300 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/23/25 16:36:16.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:36:16.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:36:16.606
  I0623 16:36:16.608616 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 16:36:19.655687 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1507" for this suite. @ 06/23/25 16:36:19.66
• [3.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 06/23/25 16:36:19.668
  I0623 16:36:19.668136 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sched-preemption @ 06/23/25 16:36:19.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:36:19.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:36:19.684
  I0623 16:36:19.702586 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0623 16:37:19.707206 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/23/25 16:37:19.711
  STEP: Adding a custom resource @ 06/23/25 16:37:19.711
  I0623 16:37:19.729036 20 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0623 16:37:19.736527 20 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 06/23/25 16:37:19.736
  I0623 16:37:19.753810 20 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0623 16:37:19.758214 20 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 06/23/25 16:37:19.758
  I0623 16:37:19.774275 20 preemption.go:257] Created pod: pod2-0-sched-preemption-medium-priority
  I0623 16:37:19.783408 20 preemption.go:257] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/23/25 16:37:19.783
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/23/25 16:37:21.809
  STEP: Removing a custom resource @ 06/23/25 16:37:23.885
  STEP: Removing a custom resource @ 06/23/25 16:37:23.897
  STEP: Removing a custom resource @ 06/23/25 16:37:23.907
  I0623 16:37:23.917932 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2995" for this suite. @ 06/23/25 16:37:23.921
• [64.265 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 06/23/25 16:37:23.932
  I0623 16:37:23.932951 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/23/25 16:37:23.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:37:23.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:37:23.947
  STEP: Creating 50 configmaps @ 06/23/25 16:37:23.949
  STEP: Creating RC which spawns configmap-volume pods @ 06/23/25 16:37:24.188
  I0623 16:37:24.292891 20 resource.go:81] Pod name wrapped-volume-race-255dfc70-ac73-4d9d-bc90-720c0de70f9b: Found 3 pods out of 5
  I0623 16:37:29.297596 20 resource.go:81] Pod name wrapped-volume-race-255dfc70-ac73-4d9d-bc90-720c0de70f9b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/23/25 16:37:29.297
  STEP: Creating RC which spawns configmap-volume pods @ 06/23/25 16:37:29.321
  I0623 16:37:29.333451 20 resource.go:81] Pod name wrapped-volume-race-948eb452-15de-4276-878f-070457bba14d: Found 0 pods out of 5
  I0623 16:37:34.340749 20 resource.go:81] Pod name wrapped-volume-race-948eb452-15de-4276-878f-070457bba14d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/23/25 16:37:34.34
  STEP: Creating RC which spawns configmap-volume pods @ 06/23/25 16:37:34.362
  I0623 16:37:34.380423 20 resource.go:81] Pod name wrapped-volume-race-16d63121-41c6-46d4-aee6-01839c0d893a: Found 1 pods out of 5
  I0623 16:37:39.386233 20 resource.go:81] Pod name wrapped-volume-race-16d63121-41c6-46d4-aee6-01839c0d893a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/23/25 16:37:39.386
  STEP: deleting ReplicationController wrapped-volume-race-16d63121-41c6-46d4-aee6-01839c0d893a in namespace emptydir-wrapper-4149, will wait for the garbage collector to delete the pods @ 06/23/25 16:37:39.408
  I0623 16:37:39.472991 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-16d63121-41c6-46d4-aee6-01839c0d893a took: 8.07108ms
  I0623 16:37:39.573899 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-16d63121-41c6-46d4-aee6-01839c0d893a pods took: 100.903437ms
  STEP: deleting ReplicationController wrapped-volume-race-948eb452-15de-4276-878f-070457bba14d in namespace emptydir-wrapper-4149, will wait for the garbage collector to delete the pods @ 06/23/25 16:37:40.974
  I0623 16:37:41.036698 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-948eb452-15de-4276-878f-070457bba14d took: 6.982689ms
  I0623 16:37:41.136843 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-948eb452-15de-4276-878f-070457bba14d pods took: 100.141053ms
  STEP: deleting ReplicationController wrapped-volume-race-255dfc70-ac73-4d9d-bc90-720c0de70f9b in namespace emptydir-wrapper-4149, will wait for the garbage collector to delete the pods @ 06/23/25 16:37:42.537
  I0623 16:37:42.600806 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-255dfc70-ac73-4d9d-bc90-720c0de70f9b took: 7.231031ms
  I0623 16:37:42.701135 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-255dfc70-ac73-4d9d-bc90-720c0de70f9b pods took: 100.323901ms
  STEP: Cleaning up the configMaps @ 06/23/25 16:37:43.602
  I0623 16:37:43.912394 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4149" for this suite. @ 06/23/25 16:37:43.916
• [19.993 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 06/23/25 16:37:43.926
  I0623 16:37:43.926102 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 16:37:43.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:37:43.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:37:43.941
  STEP: Creating configMap with name configmap-test-volume-0d44aedc-9cb8-4b9e-b48b-6a97011ed9bc @ 06/23/25 16:37:43.943
  STEP: Creating a pod to test consume configMaps @ 06/23/25 16:37:43.95
  STEP: Saw pod success @ 06/23/25 16:37:47.972
  I0623 16:37:47.976581 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-configmaps-039e405d-c079-40d3-945a-fbbfc1bf74e6 container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 16:37:47.992
  I0623 16:37:48.012065 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5536" for this suite. @ 06/23/25 16:37:48.016
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 06/23/25 16:37:48.022
  I0623 16:37:48.022627 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 16:37:48.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:37:48.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:37:48.039
  STEP: Creating the pod @ 06/23/25 16:37:48.041
  I0623 16:37:50.581495 20 pod_client.go:173] Successfully updated pod "annotationupdatee0fc35f8-0129-4dac-9cbd-e9ded4f99cd0"
  I0623 16:37:54.606573 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9754" for this suite. @ 06/23/25 16:37:54.61
• [6.596 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/23/25 16:37:54.619
  I0623 16:37:54.619184 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename tables @ 06/23/25 16:37:54.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:37:54.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:37:54.633
  I0623 16:37:54.638114 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5174" for this suite. @ 06/23/25 16:37:54.711
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 06/23/25 16:37:54.718
  I0623 16:37:54.718625 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 16:37:54.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:37:54.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:37:54.734
  STEP: Creating a pod to test downward api env vars @ 06/23/25 16:37:54.736
  STEP: Saw pod success @ 06/23/25 16:37:56.755
  I0623 16:37:56.759095 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downward-api-88f6d23c-bda1-40d9-a66b-c0e8024883c0 container dapi-container: <nil>
  STEP: delete the pod @ 06/23/25 16:37:56.765
  I0623 16:37:56.779616 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8948" for this suite. @ 06/23/25 16:37:56.782
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 06/23/25 16:37:56.791
  I0623 16:37:56.791556 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename cronjob @ 06/23/25 16:37:56.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:37:56.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:37:56.806
  STEP: Creating a ReplaceConcurrent cronjob @ 06/23/25 16:37:56.808
  STEP: Ensuring a job is scheduled @ 06/23/25 16:37:56.813
  STEP: Ensuring exactly one is scheduled @ 06/23/25 16:38:00.819
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/23/25 16:38:00.822
  STEP: Ensuring the job is replaced with a new one @ 06/23/25 16:38:00.825
  STEP: Removing cronjob @ 06/23/25 16:39:00.83
  I0623 16:39:00.838299 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3613" for this suite. @ 06/23/25 16:39:00.842
• [64.060 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 06/23/25 16:39:00.851
  I0623 16:39:00.851539 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename field-validation @ 06/23/25 16:39:00.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:39:00.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:39:00.866
  I0623 16:39:00.868457 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 16:39:03.403155      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0623 16:39:03.403178      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0623 16:39:03.403184      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0623 16:39:03.403190      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0623 16:39:03.403197      20 warnings.go:110] "Warning: unknown field \"gamma\""
  I0623 16:39:03.945279 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7088" for this suite. @ 06/23/25 16:39:03.948
• [3.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 06/23/25 16:39:03.956
  I0623 16:39:03.956329 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 16:39:03.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:39:03.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:39:03.97
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 06/23/25 16:39:03.972
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 06/23/25 16:39:03.979
  STEP: Ensure that the job reaches completions @ 06/23/25 16:39:07.992
  STEP: Verifying that the job status to ensure correct final state @ 06/23/25 16:39:07.998
  I0623 16:39:08.003146 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8930" for this suite. @ 06/23/25 16:39:08.007
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 06/23/25 16:39:08.015
  I0623 16:39:08.015990 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 16:39:08.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:39:08.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:39:08.031
  STEP: creating all guestbook components @ 06/23/25 16:39:08.033
  I0623 16:39:08.033787 20 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0623 16:39:08.033850 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 create -f -'
  I0623 16:39:08.127727 20 builder.go:146] stderr: ""
  I0623 16:39:08.127789 20 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0623 16:39:08.127830 20 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0623 16:39:08.128156 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 create -f -'
  I0623 16:39:08.249867 20 builder.go:146] stderr: ""
  I0623 16:39:08.249920 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0623 16:39:08.249966 20 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0623 16:39:08.250024 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 create -f -'
  I0623 16:39:08.348525 20 builder.go:146] stderr: ""
  I0623 16:39:08.348566 20 builder.go:147] stdout: "service/frontend created\n"
  I0623 16:39:08.348646 20 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0623 16:39:08.348765 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 create -f -'
  I0623 16:39:08.416874 20 builder.go:146] stderr: ""
  I0623 16:39:08.416910 20 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0623 16:39:08.416969 20 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0623 16:39:08.417091 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 create -f -'
  I0623 16:39:08.488384 20 builder.go:146] stderr: ""
  I0623 16:39:08.488421 20 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0623 16:39:08.488550 20 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0623 16:39:08.488747 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 create -f -'
  I0623 16:39:08.553299 20 builder.go:146] stderr: ""
  I0623 16:39:08.553337 20 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/23/25 16:39:08.553
  I0623 16:39:08.553376 20 kubectl.go:2275] Waiting for all frontend pods to be Running.
  I0623 16:39:13.606879 20 kubectl.go:2279] Waiting for frontend to serve content.
  I0623 16:39:13.618207 20 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0623 16:39:13.631506 20 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 06/23/25 16:39:13.643
  I0623 16:39:13.643220 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 delete --grace-period=0 --force -f -'
  I0623 16:39:13.710057 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0623 16:39:13.710097 20 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/23/25 16:39:13.71
  I0623 16:39:13.710192 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 delete --grace-period=0 --force -f -'
  I0623 16:39:13.774835 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0623 16:39:13.774867 20 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/23/25 16:39:13.774
  I0623 16:39:13.774982 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 delete --grace-period=0 --force -f -'
  I0623 16:39:13.845524 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0623 16:39:13.845559 20 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/23/25 16:39:13.845
  I0623 16:39:13.845707 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 delete --grace-period=0 --force -f -'
  I0623 16:39:13.890870 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0623 16:39:13.890911 20 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/23/25 16:39:13.89
  I0623 16:39:13.891021 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 delete --grace-period=0 --force -f -'
  I0623 16:39:13.944994 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0623 16:39:13.945032 20 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/23/25 16:39:13.945
  I0623 16:39:13.945179 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4335 delete --grace-period=0 --force -f -'
  I0623 16:39:13.995506 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0623 16:39:13.995563 20 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0623 16:39:13.995677 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4335" for this suite. @ 06/23/25 16:39:14.003
• [5.997 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 06/23/25 16:39:14.013
  I0623 16:39:14.013809 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 16:39:14.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:39:14.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:39:14.062
  STEP: creating a Service @ 06/23/25 16:39:14.077
  STEP: watching for the Service to be added @ 06/23/25 16:39:14.102
  I0623 16:39:14.106266 20 service.go:3456] Found Service test-service-c7s9w in namespace services-4686 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32755}]
  I0623 16:39:14.106730 20 service.go:3463] Service test-service-c7s9w created
  STEP: Getting /status @ 06/23/25 16:39:14.107
  I0623 16:39:14.112808 20 service.go:3474] Service test-service-c7s9w has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/23/25 16:39:14.112
  STEP: watching for the Service to be patched @ 06/23/25 16:39:14.122
  I0623 16:39:14.140964 20 service.go:3497] observed Service test-service-c7s9w in namespace services-4686 with annotations: map[] & LoadBalancer: {[]}
  I0623 16:39:14.140994 20 service.go:3500] Found Service test-service-c7s9w in namespace services-4686 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0009d2f90 []}]}
  I0623 16:39:14.141004 20 service.go:3507] Service test-service-c7s9w has service status patched
  STEP: updating the ServiceStatus @ 06/23/25 16:39:14.141
  I0623 16:39:14.154076 20 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/23/25 16:39:14.154
  I0623 16:39:14.157604 20 service.go:3538] Observed Service test-service-c7s9w in namespace services-4686 with annotations: map[] & Conditions: []
  I0623 16:39:14.162282 20 service.go:3549] Observed Service test-service-c7s9w in namespace services-4686 with annotations: map[patchedstatus:true] & Conditions: []
  I0623 16:39:14.163322 20 service.go:3545] Found Service test-service-c7s9w in namespace services-4686 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0623 16:39:14.163340 20 service.go:3556] Service test-service-c7s9w has service status updated
  STEP: patching the service @ 06/23/25 16:39:14.163
  STEP: watching for the Service to be patched @ 06/23/25 16:39:14.173
  I0623 16:39:14.175973 20 service.go:3579] observed Service test-service-c7s9w in namespace services-4686 with labels: map[test-service-static:true]
  I0623 16:39:14.175998 20 service.go:3579] observed Service test-service-c7s9w in namespace services-4686 with labels: map[test-service-static:true]
  I0623 16:39:14.176007 20 service.go:3579] observed Service test-service-c7s9w in namespace services-4686 with labels: map[test-service-static:true]
  I0623 16:39:14.176023 20 service.go:3582] Found Service test-service-c7s9w in namespace services-4686 with labels: map[test-service:patched test-service-static:true]
  I0623 16:39:14.176032 20 service.go:3589] Service test-service-c7s9w patched
  STEP: deleting the service @ 06/23/25 16:39:14.176
  STEP: watching for the Service to be deleted @ 06/23/25 16:39:14.203
  I0623 16:39:14.205205 20 service.go:3613] Observed event: ADDED
  I0623 16:39:14.205253 20 service.go:3613] Observed event: MODIFIED
  I0623 16:39:14.205269 20 service.go:3613] Observed event: MODIFIED
  I0623 16:39:14.205402 20 service.go:3613] Observed event: MODIFIED
  I0623 16:39:14.205427 20 service.go:3609] Found Service test-service-c7s9w in namespace services-4686 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0623 16:39:14.205485 20 service.go:3618] Service test-service-c7s9w deleted
  I0623 16:39:14.205600 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4686" for this suite. @ 06/23/25 16:39:14.208
• [0.203 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 06/23/25 16:39:14.227
  I0623 16:39:14.233267 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/23/25 16:39:14.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:39:14.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:39:14.254
  STEP: create the container to handle the HTTPGet hook request. @ 06/23/25 16:39:14.309
  STEP: create the pod with lifecycle hook @ 06/23/25 16:39:16.336
  STEP: check poststart hook @ 06/23/25 16:39:18.352
  STEP: delete the pod with lifecycle hook @ 06/23/25 16:39:18.373
  I0623 16:39:20.391035 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3027" for this suite. @ 06/23/25 16:39:20.396
• [6.184 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 06/23/25 16:39:20.405
  I0623 16:39:20.405736 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename taint-single-pod @ 06/23/25 16:39:20.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:39:20.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:39:20.422
  I0623 16:39:20.424464 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0623 16:40:20.424752 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0623 16:40:20.428904 20 taints.go:144] Starting informer...
  STEP: Starting pod... @ 06/23/25 16:40:20.428
  I0623 16:40:20.645548 20 taints.go:294] Pod is running on ip-172-31-64-108. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/23/25 16:40:20.645
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/23/25 16:40:20.656
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/23/25 16:40:20.659
  I0623 16:40:20.659424 20 taints.go:313] Pod wasn't evicted. Proceeding
  I0623 16:40:20.659436 20 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/23/25 16:40:20.668
  STEP: Waiting some time to make sure that toleration time passed. @ 06/23/25 16:40:20.676
  I0623 16:41:35.677092 20 taints.go:329] Pod wasn't evicted. Test successful
  I0623 16:41:35.677259 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1191" for this suite. @ 06/23/25 16:41:35.682
• [135.285 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 06/23/25 16:41:35.69
  I0623 16:41:35.690514 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 16:41:35.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:41:35.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:41:35.706
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/23/25 16:41:35.708
  STEP: Saw pod success @ 06/23/25 16:41:39.732
  I0623 16:41:39.736231 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod pod-869a285e-2d85-4ab2-aeba-049eab324ea0 container test-container: <nil>
  STEP: delete the pod @ 06/23/25 16:41:39.753
  I0623 16:41:39.775047 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-844" for this suite. @ 06/23/25 16:41:39.779
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 06/23/25 16:41:39.788
  I0623 16:41:39.788799 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename endpointslice @ 06/23/25 16:41:39.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:41:39.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:41:39.805
  I0623 16:41:39.825394      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 16:41:41.830469      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 16:41:41.858870      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 16:41:41.865251 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4159" for this suite. @ 06/23/25 16:41:41.869
• [2.087 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 06/23/25 16:41:41.876
  I0623 16:41:41.876113 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 16:41:41.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:41:41.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:41:41.89
  STEP: Creating a pod to test downward api env vars @ 06/23/25 16:41:41.892
  STEP: Saw pod success @ 06/23/25 16:41:43.91
  I0623 16:41:43.916202 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downward-api-2bc436b9-b7d7-4728-b8c2-9466607bd57f container dapi-container: <nil>
  STEP: delete the pod @ 06/23/25 16:41:43.926
  I0623 16:41:43.945703 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2254" for this suite. @ 06/23/25 16:41:43.95
• [2.083 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/23/25 16:41:43.959
  I0623 16:41:43.959080 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-runtime @ 06/23/25 16:41:43.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:41:43.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:41:43.972
  STEP: create the container @ 06/23/25 16:41:43.974
  I0623 16:41:43.981814      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 06/23/25 16:41:43.981
  STEP: get the container status @ 06/23/25 16:41:45.995
  STEP: the container should be terminated @ 06/23/25 16:41:45.998
  STEP: the termination message should be set @ 06/23/25 16:41:45.998
  I0623 16:41:45.998386 20 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/23/25 16:41:45.998
  I0623 16:41:46.015254 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2238" for this suite. @ 06/23/25 16:41:46.019
• [2.066 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 06/23/25 16:41:46.025
  I0623 16:41:46.025205 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 16:41:46.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:41:46.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:41:46.04
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 16:41:46.042
  STEP: Saw pod success @ 06/23/25 16:41:48.06
  I0623 16:41:48.063759 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-8bac26c7-f04f-4757-ae11-cb5b47cd07dc container client-container: <nil>
  STEP: delete the pod @ 06/23/25 16:41:48.07
  I0623 16:41:48.087982 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1906" for this suite. @ 06/23/25 16:41:48.091
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 06/23/25 16:41:48.099
  I0623 16:41:48.099030 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-probe @ 06/23/25 16:41:48.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:41:48.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:41:48.113
  STEP: Creating pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988 @ 06/23/25 16:41:48.115
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/23/25 16:41:50.134
  I0623 16:41:50.138222 20 container_probe.go:1748] Initial restart count of pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d is 0
  I0623 16:41:50.141732 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:41:52.146248 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:41:54.152450 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:41:56.157352 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:41:58.162483 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:00.167613 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:02.172125 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:04.177674 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:06.183483 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:08.188792 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:10.193975 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:12.199507 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:14.203384 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:16.209056 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:18.213625 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:20.219845 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:22.225314 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:24.230036 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:26.235666 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:28.239417 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:30.244764 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:32.249755 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:34.254241 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:36.260618 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:38.265008 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:40.269806 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:42.274117 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:44.278413 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:46.284931 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:48.289946 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:50.294844 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:52.300618 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:54.305668 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:56.312111 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:42:58.317675 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:00.321940 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:02.328039 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:04.332544 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:06.337934 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:08.344165 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:10.350602 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:12.355854 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:14.359748 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:16.365863 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:18.371190 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:20.376900 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:22.381519 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:24.386116 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:26.391083 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:28.396456 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:30.401239 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:32.407591 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:34.413103 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:36.418648 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:38.422931 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:40.427725 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:42.432832 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:44.437533 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:46.443107 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:48.449413 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:50.454834 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:52.459230 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:54.463945 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:56.469260 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:43:58.474287 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:00.479499 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:02.484526 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:04.492448 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:06.497771 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:08.502041 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:10.507644 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:12.511863 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:14.516837 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:16.521889 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:18.526774 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:20.532972 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:22.538532 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:24.543829 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:26.550051 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:28.555468 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:30.560540 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:32.565910 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:34.570442 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:36.576058 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:38.580691 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:40.586296 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:42.590612 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:44.595139 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:46.601303 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:48.606610 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:50.611467 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:52.617748 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:54.622579 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:56.628160 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:44:58.633241 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:00.638036 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:02.644089 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:04.648686 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:06.653396 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:08.658542 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:10.663488 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:12.667752 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:14.673705 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:16.678183 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:18.681870 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:20.688803 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:22.694691 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:24.699616 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:26.706259 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:28.711553 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:30.716423 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:32.721569 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:34.726933 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:36.733004 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:38.738723 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:40.743954 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:42.750049 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:44.755008 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:46.759524 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  I0623 16:45:48.764831 20 container_probe.go:1758] Get pod liveness-24f3600c-90d9-42ae-928e-76d50f744d8d in namespace container-probe-988
  STEP: deleting the pod @ 06/23/25 16:45:50.765
  I0623 16:45:50.781473 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-988" for this suite. @ 06/23/25 16:45:50.785
• [242.693 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 06/23/25 16:45:50.792
  I0623 16:45:50.792189 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename events @ 06/23/25 16:45:50.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:45:50.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:45:50.808
  STEP: creating a test event @ 06/23/25 16:45:50.811
  STEP: listing all events in all namespaces @ 06/23/25 16:45:50.821
  STEP: patching the test event @ 06/23/25 16:45:50.831
  STEP: fetching the test event @ 06/23/25 16:45:50.838
  STEP: updating the test event @ 06/23/25 16:45:50.841
  STEP: getting the test event @ 06/23/25 16:45:50.851
  STEP: deleting the test event @ 06/23/25 16:45:50.853
  STEP: listing all events in all namespaces @ 06/23/25 16:45:50.862
  I0623 16:45:50.874690 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1536" for this suite. @ 06/23/25 16:45:50.885
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 06/23/25 16:45:50.891
  I0623 16:45:50.891268 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pod-network-test @ 06/23/25 16:45:50.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:45:50.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:45:50.908
  STEP: Performing setup for networking test in namespace pod-network-test-510 @ 06/23/25 16:45:50.91
  STEP: creating a selector @ 06/23/25 16:45:50.91
  STEP: Creating the service pods in kubernetes @ 06/23/25 16:45:50.91
  I0623 16:45:50.910068 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/23/25 16:46:05.076
  I0623 16:46:07.106637 20 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0623 16:46:07.106669 20 utils.go:495] Going to poll 192.168.156.91 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0623 16:46:07.109593 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.156.91 8081 | grep -v '^\s*$'] Namespace:pod-network-test-510 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 16:46:07.109615 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 16:46:07.109657 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-510/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.156.91+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0623 16:46:08.152556 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 16:46:08.152601 20 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0623 16:46:08.152612 20 utils.go:495] Going to poll 192.168.99.22 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0623 16:46:08.157164 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.99.22 8081 | grep -v '^\s*$'] Namespace:pod-network-test-510 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 16:46:08.157191 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 16:46:08.157233 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-510/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.99.22+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0623 16:46:09.195087 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 16:46:09.195136 20 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0623 16:46:09.195148 20 utils.go:495] Going to poll 192.168.81.108 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0623 16:46:09.198633 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.81.108 8081 | grep -v '^\s*$'] Namespace:pod-network-test-510 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 16:46:09.198648 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 16:46:09.198685 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-510/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.81.108+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0623 16:46:10.241977 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 16:46:10.242027 20 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0623 16:46:10.242155 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-510" for this suite. @ 06/23/25 16:46:10.246
• [19.363 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 06/23/25 16:46:10.254
  I0623 16:46:10.254436 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pods @ 06/23/25 16:46:10.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:46:10.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:46:10.269
  STEP: Create a pod @ 06/23/25 16:46:10.271
  STEP: patching /status @ 06/23/25 16:46:12.287
  I0623 16:46:12.295986 20 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0623 16:46:12.296089 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7367" for this suite. @ 06/23/25 16:46:12.3
• [2.052 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 06/23/25 16:46:12.306
  I0623 16:46:12.306655 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 16:46:12.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:46:12.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:46:12.322
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 16:46:12.324
  STEP: Saw pod success @ 06/23/25 16:46:14.342
  I0623 16:46:14.345619 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod downwardapi-volume-021fd604-bc6b-442c-8216-a6a45d480c72 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 16:46:14.355
  I0623 16:46:14.374110 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3601" for this suite. @ 06/23/25 16:46:14.377
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 06/23/25 16:46:14.384
  I0623 16:46:14.384946 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 16:46:14.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:46:14.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:46:14.399
  STEP: Creating configMap with name configmap-test-volume-f17a67ae-9810-4556-917d-87d67ddc2d32 @ 06/23/25 16:46:14.401
  STEP: Creating a pod to test consume configMaps @ 06/23/25 16:46:14.406
  STEP: Saw pod success @ 06/23/25 16:46:16.423
  I0623 16:46:16.426361 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod pod-configmaps-3ffe3594-c501-4d20-b41a-969e7d64370b container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 16:46:16.434
  I0623 16:46:16.453408 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8494" for this suite. @ 06/23/25 16:46:16.457
• [2.078 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 06/23/25 16:46:16.462
  I0623 16:46:16.462740 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 16:46:16.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:46:16.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:46:16.477
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/23/25 16:46:16.479
  I0623 16:46:16.479468 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-6641 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0623 16:46:16.529603 20 builder.go:146] stderr: ""
  I0623 16:46:16.529629 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/23/25 16:46:16.529
  I0623 16:46:16.529806 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-6641 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0623 16:46:16.575744 20 builder.go:146] stderr: ""
  I0623 16:46:16.575769 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/23/25 16:46:16.575
  I0623 16:46:16.579356 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-6641 delete pods e2e-test-httpd-pod'
  I0623 16:46:18.195469 20 builder.go:146] stderr: ""
  I0623 16:46:18.195506 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0623 16:46:18.195644 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6641" for this suite. @ 06/23/25 16:46:18.199
• [1.748 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 06/23/25 16:46:18.21
  I0623 16:46:18.210744 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-probe @ 06/23/25 16:46:18.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:46:18.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:46:18.223
  STEP: Creating pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981 @ 06/23/25 16:46:18.226
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/23/25 16:46:20.242
  I0623 16:46:20.246968 20 container_probe.go:1748] Initial restart count of pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 is 0
  I0623 16:46:20.249383 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:22.255193 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:24.261379 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:26.267201 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:28.273429 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:30.278500 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:32.282092 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:34.288531 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:36.292945 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:38.299196 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:40.304320 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:42.308367 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:44.314726 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:46.320080 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:48.324996 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:50.330285 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:52.335226 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:54.339514 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:56.344278 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:46:58.349234 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:47:00.354282 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:47:02.359485 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:47:04.363978 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:47:06.370238 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:47:08.376145 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:47:10.381798 20 container_probe.go:1758] Get pod busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 in namespace container-probe-3981
  I0623 16:47:10.381833 20 container_probe.go:1762] Restart count of pod container-probe-3981/busybox-d439ca80-131e-4a14-92b2-7a74fbd42a00 is now 1 (50.134839147s elapsed)
  STEP: deleting the pod @ 06/23/25 16:47:10.381
  I0623 16:47:10.398487 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3981" for this suite. @ 06/23/25 16:47:10.403
• [52.199 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 06/23/25 16:47:10.41
  I0623 16:47:10.410100 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 16:47:10.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:47:10.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:47:10.425
  STEP: Setting up server cert @ 06/23/25 16:47:10.45
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 16:47:10.947
  STEP: Deploying the webhook pod @ 06/23/25 16:47:10.953
  STEP: Wait for the deployment to be ready @ 06/23/25 16:47:10.971
  I0623 16:47:10.987129 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 16:47:12.999
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 16:47:13.015
  I0623 16:47:14.015918 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/23/25 16:47:14.02
  STEP: create a pod that should be denied by the webhook @ 06/23/25 16:47:14.036
  STEP: create a pod that causes the webhook to hang @ 06/23/25 16:47:14.048
  STEP: create a configmap that should be denied by the webhook @ 06/23/25 16:47:24.055
  STEP: create a configmap that should be admitted by the webhook @ 06/23/25 16:47:24.087
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/23/25 16:47:24.096
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/23/25 16:47:24.105
  STEP: create a namespace that bypass the webhook @ 06/23/25 16:47:24.11
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/23/25 16:47:24.121
  I0623 16:47:24.182240 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6487" for this suite. @ 06/23/25 16:47:24.186
  STEP: Destroying namespace "webhook-markers-9085" for this suite. @ 06/23/25 16:47:24.195
  STEP: Destroying namespace "exempted-namespace-6778" for this suite. @ 06/23/25 16:47:24.203
• [13.798 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/23/25 16:47:24.208
  I0623 16:47:24.208606 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename cronjob @ 06/23/25 16:47:24.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:47:24.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:47:24.222
  STEP: Creating a cronjob @ 06/23/25 16:47:24.224
  STEP: Ensuring more than one job is running at a time @ 06/23/25 16:47:24.23
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/23/25 16:49:00.235
  STEP: Removing cronjob @ 06/23/25 16:49:00.238
  I0623 16:49:00.244602 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9776" for this suite. @ 06/23/25 16:49:00.248
• [96.047 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/23/25 16:49:00.255
  I0623 16:49:00.255706 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename daemonsets @ 06/23/25 16:49:00.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:49:00.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:49:00.301
  I0623 16:49:00.361364 20 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0623 16:49:00.366231 20 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0623 16:49:00.449745 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:00.449825 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:00.452463 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 16:49:00.452481 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 16:49:01.372030 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:01.372086 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:01.376659 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 16:49:01.376681 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 16:49:02.371639 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:02.371728 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:02.376496 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0623 16:49:02.376517 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0623 16:49:02.376528 20 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0623 16:49:02.386993 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I0623 16:49:03.400161 20 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0623 16:49:03.411608 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I0623 16:49:03.411640 20 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0623 16:49:03.418098 20 daemon_set.go:1193] Wrong image for pod: daemon-set-4p7wg. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0623 16:49:03.418115 20 daemon_set.go:1198] Pod daemon-set-4p7wg is not available
  I0623 16:49:03.499441 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:03.499485 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:04.421870 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:04.421928 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:05.420493 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:05.420540 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:06.415897 20 daemon_set.go:1198] Pod daemon-set-8rl2f is not available
  I0623 16:49:06.421190 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:49:06.421223 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 06/23/25 16:49:06.43
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8322, will wait for the garbage collector to delete the pods @ 06/23/25 16:49:06.43
  I0623 16:49:06.491563 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.842258ms
  I0623 16:49:06.592296 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.726397ms
  I0623 16:49:08.497374 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 16:49:08.497406 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0623 16:49:08.500584 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12050"},"items":null}

  I0623 16:49:08.503421 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12050"},"items":null}

  I0623 16:49:08.517532 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8322" for this suite. @ 06/23/25 16:49:08.52
• [8.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 06/23/25 16:49:08.526
  I0623 16:49:08.526302 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 16:49:08.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:49:08.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:49:08.542
  STEP: creating service nodeport-test with type=NodePort in namespace services-9662 @ 06/23/25 16:49:08.544
  I0623 16:49:08.577414 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0623 16:49:10.582296 20 resource.go:361] Creating new exec pod
  I0623 16:49:12.610729 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-9662 exec execpodx2twn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0623 16:49:12.691930 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.110) 80 port [tcp/http] succeeded!\n"
  I0623 16:49:12.691968 20 builder.go:147] stdout: ""
  I0623 16:49:13.610912 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-9662 exec execpodx2twn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0623 16:49:13.691819 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.110) 80 port [tcp/http] succeeded!\n"
  I0623 16:49:13.691891 20 builder.go:147] stdout: "nodeport-test-6c4bb69978-nqjhk"
  I0623 16:49:13.692023 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-9662 exec execpodx2twn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0623 16:49:13.765583 20 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0623 16:49:13.765623 20 builder.go:147] stdout: "nodeport-test-6c4bb69978-nqjhk"
  I0623 16:49:13.765694 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-9662 exec execpodx2twn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.62 30336'
  I0623 16:49:13.844121 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.41.62 30336\nConnection to 172.31.41.62 30336 port [tcp/*] succeeded!\n"
  I0623 16:49:13.844160 20 builder.go:147] stdout: ""
  I0623 16:49:14.765883 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-9662 exec execpodx2twn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.62 30336'
  I0623 16:49:14.850121 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.41.62 30336\nConnection to 172.31.41.62 30336 port [tcp/*] succeeded!\n"
  I0623 16:49:14.850179 20 builder.go:147] stdout: "nodeport-test-6c4bb69978-nqjhk"
  I0623 16:49:14.850253 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-9662 exec execpodx2twn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.24.79 30336'
  I0623 16:49:14.924819 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.24.79 30336\nConnection to 172.31.24.79 30336 port [tcp/*] succeeded!\n"
  I0623 16:49:14.924857 20 builder.go:147] stdout: "nodeport-test-6c4bb69978-njm8h"
  I0623 16:49:14.924977 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9662" for this suite. @ 06/23/25 16:49:14.929
• [6.410 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 06/23/25 16:49:14.937
  I0623 16:49:14.937945 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/23/25 16:49:14.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:49:14.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:49:14.953
  I0623 16:49:14.955182 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 16:49:15.971016 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6539" for this suite. @ 06/23/25 16:49:15.976
• [1.046 seconds]
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 06/23/25 16:49:15.984
  I0623 16:49:15.984037 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename runtimeclass @ 06/23/25 16:49:15.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:49:15.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:49:15.999
  STEP: getting /apis @ 06/23/25 16:49:16.001
  STEP: getting /apis/node.k8s.io @ 06/23/25 16:49:16.003
  STEP: getting /apis/node.k8s.io/v1 @ 06/23/25 16:49:16.004
  STEP: creating @ 06/23/25 16:49:16.005
  STEP: watching @ 06/23/25 16:49:16.022
  I0623 16:49:16.022681 20 runtimeclass.go:278] starting watch
  STEP: getting @ 06/23/25 16:49:16.028
  STEP: listing @ 06/23/25 16:49:16.03
  STEP: patching @ 06/23/25 16:49:16.033
  STEP: updating @ 06/23/25 16:49:16.038
  I0623 16:49:16.042353 20 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 06/23/25 16:49:16.042
  STEP: deleting a collection @ 06/23/25 16:49:16.053
  I0623 16:49:16.071418 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1384" for this suite. @ 06/23/25 16:49:16.075
• [0.101 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 06/23/25 16:49:16.085
  I0623 16:49:16.085073 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename runtimeclass @ 06/23/25 16:49:16.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:49:16.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:49:16.101
  STEP: Deleting RuntimeClass runtimeclass-6007-delete-me @ 06/23/25 16:49:16.107
  STEP: Waiting for the RuntimeClass to disappear @ 06/23/25 16:49:16.113
  I0623 16:49:16.124167 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6007" for this suite. @ 06/23/25 16:49:16.176
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/23/25 16:49:16.184
  I0623 16:49:16.184499 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename deployment @ 06/23/25 16:49:16.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:49:16.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:49:16.201
  I0623 16:49:16.203367 20 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0623 16:49:16.210321 20 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0623 16:49:16.218219 20 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0623 16:49:18.227499 20 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0623 16:49:18.233021 20 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0623 16:49:18.244187 20 deployment.go:314] Updating deployment test-recreate-deployment
  I0623 16:49:18.244216 20 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0623 16:49:18.329285 20 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "996c8f44-ad08-4045-9f7f-3b451575d9ca",
      ResourceVersion: (string) (len=5) "12256",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886294156,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0623 16:49:18.336359 20 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2308a43-2b3a-48ab-8ec8-f70c6e1c458e",
      ResourceVersion: (string) (len=5) "12253",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886294158,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "996c8f44-ad08-4045-9f7f-3b451575d9ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 39 36 63 38 66  34 34 2d 61 64 30 38 2d  |\"996c8f44-ad08-|
              00000120  34 30 34 35 2d 39 66 37  66 2d 33 62 34 35 31 35  |4045-9f7f-3b4515|
              00000130  37 35 64 39 63 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |75d9ca\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 16:49:18.337316 20 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0623 16:49:18.337578 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90d34547-5043-41cd-a93b-bdf2064d44a9",
      ResourceVersion: (string) (len=5) "12245",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886294156,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "996c8f44-ad08-4045-9f7f-3b451575d9ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 39 36 63 38 66  34 34 2d 61 64 30 38 2d  |\"996c8f44-ad08-|
              00000120  34 30 34 35 2d 39 66 37  66 2d 33 62 34 35 31 35  |4045-9f7f-3b4515|
              00000130  37 35 64 39 63 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |75d9ca\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 16:49:18.342105 20 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-qs5nh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-qs5nh",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-3969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d400e1ec-4d46-4769-a65a-1534aa6a8f9e",
      ResourceVersion: (string) (len=5) "12257",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886294158,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "d2308a43-2b3a-48ab-8ec8-f70c6e1c458e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  33 30 38 61 34 33 2d 32  |d\":\"d2308a43-2|
              00000090  62 33 61 2d 34 38 61 62  2d 38 65 63 38 2d 66 37  |b3a-48ab-8ec8-f7|
              000000a0  30 63 36 65 31 63 34 35  38 65 5c 22 7d 22 3a 7b  |0c6e1c458e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sbmnc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sbmnc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886294158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886294158,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sbmnc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 16:49:18.343291 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3969" for this suite. @ 06/23/25 16:49:18.348
• [2.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 06/23/25 16:49:18.354
  I0623 16:49:18.354816 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 16:49:18.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:49:18.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:49:18.369
  STEP: creating a replication controller @ 06/23/25 16:49:18.372
  I0623 16:49:18.372453 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 create -f -'
  I0623 16:49:18.473490 20 builder.go:146] stderr: ""
  I0623 16:49:18.473534 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/23/25 16:49:18.473
  I0623 16:49:18.473611 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0623 16:49:18.545887 20 builder.go:146] stderr: ""
  I0623 16:49:18.545987 20 builder.go:147] stdout: "update-demo-nautilus-6tgtw update-demo-nautilus-zql26 "
  I0623 16:49:18.546134 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-6tgtw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0623 16:49:18.631587 20 builder.go:146] stderr: ""
  I0623 16:49:18.631625 20 builder.go:147] stdout: ""
  I0623 16:49:18.631634 20 kubectl.go:2505] update-demo-nautilus-6tgtw is created but not running
  I0623 16:49:23.634873 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0623 16:49:23.680281 20 builder.go:146] stderr: ""
  I0623 16:49:23.680317 20 builder.go:147] stdout: "update-demo-nautilus-6tgtw update-demo-nautilus-zql26 "
  I0623 16:49:23.680423 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-6tgtw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0623 16:49:23.721233 20 builder.go:146] stderr: ""
  I0623 16:49:23.721287 20 builder.go:147] stdout: "true"
  I0623 16:49:23.721330 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-6tgtw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0623 16:49:23.762150 20 builder.go:146] stderr: ""
  I0623 16:49:23.762189 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0623 16:49:23.762199 20 kubectl.go:2396] validating pod update-demo-nautilus-6tgtw
  I0623 16:49:23.767291 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0623 16:49:23.767343 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0623 16:49:23.767351 20 kubectl.go:2523] update-demo-nautilus-6tgtw is verified up and running
  I0623 16:49:23.767383 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-zql26 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0623 16:49:23.807817 20 builder.go:146] stderr: ""
  I0623 16:49:23.808061 20 builder.go:147] stdout: "true"
  I0623 16:49:23.808136 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-zql26 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0623 16:49:23.850556 20 builder.go:146] stderr: ""
  I0623 16:49:23.850597 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0623 16:49:23.850608 20 kubectl.go:2396] validating pod update-demo-nautilus-zql26
  I0623 16:49:23.855609 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0623 16:49:23.855647 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0623 16:49:23.855690 20 kubectl.go:2523] update-demo-nautilus-zql26 is verified up and running
  STEP: scaling down the replication controller @ 06/23/25 16:49:23.855
  I0623 16:49:23.856404 20 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0623 16:49:23.856445 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0623 16:49:24.910633 20 builder.go:146] stderr: ""
  I0623 16:49:24.910669 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/23/25 16:49:24.91
  I0623 16:49:24.910875 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0623 16:49:24.958424 20 builder.go:146] stderr: ""
  I0623 16:49:24.958461 20 builder.go:147] stdout: "update-demo-nautilus-6tgtw "
  I0623 16:49:24.958501 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-6tgtw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0623 16:49:24.998635 20 builder.go:146] stderr: ""
  I0623 16:49:24.998666 20 builder.go:147] stdout: "true"
  I0623 16:49:24.998703 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-6tgtw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0623 16:49:25.040010 20 builder.go:146] stderr: ""
  I0623 16:49:25.040043 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0623 16:49:25.040054 20 kubectl.go:2396] validating pod update-demo-nautilus-6tgtw
  I0623 16:49:25.044236 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0623 16:49:25.044278 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0623 16:49:25.044293 20 kubectl.go:2523] update-demo-nautilus-6tgtw is verified up and running
  STEP: scaling up the replication controller @ 06/23/25 16:49:25.044
  I0623 16:49:25.044924 20 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0623 16:49:25.044947 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0623 16:49:26.097086 20 builder.go:146] stderr: ""
  I0623 16:49:26.097125 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/23/25 16:49:26.097
  I0623 16:49:26.097203 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0623 16:49:26.149413 20 builder.go:146] stderr: ""
  I0623 16:49:26.149447 20 builder.go:147] stdout: "update-demo-nautilus-6tgtw update-demo-nautilus-t7bbh "
  I0623 16:49:26.149486 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-6tgtw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0623 16:49:26.189086 20 builder.go:146] stderr: ""
  I0623 16:49:26.189129 20 builder.go:147] stdout: "true"
  I0623 16:49:26.189163 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-6tgtw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0623 16:49:26.229534 20 builder.go:146] stderr: ""
  I0623 16:49:26.229564 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0623 16:49:26.229573 20 kubectl.go:2396] validating pod update-demo-nautilus-6tgtw
  I0623 16:49:26.233699 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0623 16:49:26.233753 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0623 16:49:26.233767 20 kubectl.go:2523] update-demo-nautilus-6tgtw is verified up and running
  I0623 16:49:26.233846 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-t7bbh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0623 16:49:26.273843 20 builder.go:146] stderr: ""
  I0623 16:49:26.273868 20 builder.go:147] stdout: ""
  I0623 16:49:26.273875 20 kubectl.go:2505] update-demo-nautilus-t7bbh is created but not running
  I0623 16:49:31.276122 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0623 16:49:31.321200 20 builder.go:146] stderr: ""
  I0623 16:49:31.321237 20 builder.go:147] stdout: "update-demo-nautilus-6tgtw update-demo-nautilus-t7bbh "
  I0623 16:49:31.321275 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-6tgtw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0623 16:49:31.363762 20 builder.go:146] stderr: ""
  I0623 16:49:31.363825 20 builder.go:147] stdout: "true"
  I0623 16:49:31.363883 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-6tgtw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0623 16:49:31.405515 20 builder.go:146] stderr: ""
  I0623 16:49:31.405550 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0623 16:49:31.405561 20 kubectl.go:2396] validating pod update-demo-nautilus-6tgtw
  I0623 16:49:31.409795 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0623 16:49:31.409842 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0623 16:49:31.409852 20 kubectl.go:2523] update-demo-nautilus-6tgtw is verified up and running
  I0623 16:49:31.409886 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-t7bbh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0623 16:49:31.454497 20 builder.go:146] stderr: ""
  I0623 16:49:31.454530 20 builder.go:147] stdout: "true"
  I0623 16:49:31.454581 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods update-demo-nautilus-t7bbh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0623 16:49:31.494513 20 builder.go:146] stderr: ""
  I0623 16:49:31.494552 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0623 16:49:31.494563 20 kubectl.go:2396] validating pod update-demo-nautilus-t7bbh
  I0623 16:49:31.500417 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0623 16:49:31.500463 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0623 16:49:31.500473 20 kubectl.go:2523] update-demo-nautilus-t7bbh is verified up and running
  STEP: using delete to clean up resources @ 06/23/25 16:49:31.5
  I0623 16:49:31.500541 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 delete --grace-period=0 --force -f -'
  I0623 16:49:31.545716 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0623 16:49:31.545748 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0623 16:49:31.545802 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get rc,svc -l name=update-demo --no-headers'
  I0623 16:49:31.611556 20 builder.go:146] stderr: "No resources found in kubectl-1468 namespace.\n"
  I0623 16:49:31.611627 20 builder.go:147] stdout: ""
  I0623 16:49:31.611764 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-1468 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0623 16:49:31.678099 20 builder.go:146] stderr: ""
  I0623 16:49:31.678159 20 builder.go:147] stdout: ""
  I0623 16:49:31.678489 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1468" for this suite. @ 06/23/25 16:49:31.682
• [13.334 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 06/23/25 16:49:31.689
  I0623 16:49:31.689489 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl-logs @ 06/23/25 16:49:31.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:49:31.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:49:31.705
  STEP: creating a pod @ 06/23/25 16:49:31.707
  I0623 16:49:31.707357 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-logs-6880 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0623 16:49:31.813372 20 builder.go:146] stderr: ""
  I0623 16:49:31.813449 20 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/23/25 16:49:31.813
  I0623 16:49:31.813616 20 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0623 16:49:33.821022 20 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/23/25 16:49:33.821
  I0623 16:49:33.821113 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-logs-6880 logs logs-generator logs-generator'
  I0623 16:49:33.884298 20 builder.go:146] stderr: ""
  I0623 16:49:33.884346 20 builder.go:147] stdout: "I0623 16:49:32.347699       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/wk4 461\nI0623 16:49:32.548242       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/cw7 528\nI0623 16:49:32.748561       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/v8pf 487\nI0623 16:49:32.947873       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/2nzx 363\nI0623 16:49:33.148284       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/4nj 586\nI0623 16:49:33.348605       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/vfjr 259\nI0623 16:49:33.547891       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/nfr 524\nI0623 16:49:33.748194       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/gcfj 351\n"
  STEP: limiting log lines @ 06/23/25 16:49:33.884
  I0623 16:49:33.884427 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-logs-6880 logs logs-generator logs-generator --tail=1'
  I0623 16:49:33.934201 20 builder.go:146] stderr: ""
  I0623 16:49:33.934238 20 builder.go:147] stdout: "I0623 16:49:33.748194       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/gcfj 351\n"
  I0623 16:49:33.934248 20 logs.go:180] got output "I0623 16:49:33.748194       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/gcfj 351\n"
  STEP: limiting log bytes @ 06/23/25 16:49:33.934
  I0623 16:49:33.934321 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-logs-6880 logs logs-generator logs-generator --limit-bytes=1'
  I0623 16:49:33.988114 20 builder.go:146] stderr: ""
  I0623 16:49:33.988156 20 builder.go:147] stdout: "I"
  I0623 16:49:33.988165 20 logs.go:186] got output "I"
  STEP: exposing timestamps @ 06/23/25 16:49:33.988
  I0623 16:49:33.988240 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-logs-6880 logs logs-generator logs-generator --tail=1 --timestamps'
  I0623 16:49:34.062641 20 builder.go:146] stderr: ""
  I0623 16:49:34.062685 20 builder.go:147] stdout: "2025-06-23T16:49:33.948644642Z I0623 16:49:33.948531       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/4fwz 369\n"
  I0623 16:49:34.062694 20 logs.go:192] got output "2025-06-23T16:49:33.948644642Z I0623 16:49:33.948531       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/4fwz 369\n"
  STEP: restricting to a time range @ 06/23/25 16:49:34.062
  I0623 16:49:36.564875 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-logs-6880 logs logs-generator logs-generator --since=1s'
  I0623 16:49:36.615515 20 builder.go:146] stderr: ""
  I0623 16:49:36.615555 20 builder.go:147] stdout: "I0623 16:49:35.747867       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/jjp 464\nI0623 16:49:35.948355       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/9m2h 254\nI0623 16:49:36.148716       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/njwj 512\nI0623 16:49:36.348120       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/n78t 355\nI0623 16:49:36.548517       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/dn5 473\n"
  I0623 16:49:36.615647 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-logs-6880 logs logs-generator logs-generator --since=24h'
  I0623 16:49:36.664127 20 builder.go:146] stderr: ""
  I0623 16:49:36.664186 20 builder.go:147] stdout: "I0623 16:49:32.347699       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/wk4 461\nI0623 16:49:32.548242       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/cw7 528\nI0623 16:49:32.748561       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/v8pf 487\nI0623 16:49:32.947873       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/2nzx 363\nI0623 16:49:33.148284       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/4nj 586\nI0623 16:49:33.348605       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/vfjr 259\nI0623 16:49:33.547891       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/nfr 524\nI0623 16:49:33.748194       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/gcfj 351\nI0623 16:49:33.948531       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/4fwz 369\nI0623 16:49:34.147882       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/c98n 533\nI0623 16:49:34.348430       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/fc8k 539\nI0623 16:49:34.548756       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/dk2 586\nI0623 16:49:34.748197       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/gtnp 340\nI0623 16:49:34.948541       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/774 430\nI0623 16:49:35.147806       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/6hw 479\nI0623 16:49:35.348215       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/php7 579\nI0623 16:49:35.548614       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/rf4 467\nI0623 16:49:35.747867       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/jjp 464\nI0623 16:49:35.948355       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/9m2h 254\nI0623 16:49:36.148716       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/njwj 512\nI0623 16:49:36.348120       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/n78t 355\nI0623 16:49:36.548517       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/dn5 473\n"
  I0623 16:49:36.664270 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-logs-6880 delete pod logs-generator'
  I0623 16:49:37.526090 20 builder.go:146] stderr: ""
  I0623 16:49:37.526128 20 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0623 16:49:37.526283 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6880" for this suite. @ 06/23/25 16:49:37.531
• [5.848 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 06/23/25 16:49:37.537
  I0623 16:49:37.537968 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 16:49:37.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:49:37.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:49:37.553
  STEP: creating a collection of services @ 06/23/25 16:49:37.555
  I0623 16:49:37.555147 20 service.go:3666] Creating e2e-svc-a-cjfbx
  I0623 16:49:37.569396 20 service.go:3666] Creating e2e-svc-b-9mldn
  I0623 16:49:37.583123 20 service.go:3666] Creating e2e-svc-c-xctg4
  STEP: deleting service collection @ 06/23/25 16:49:37.602
  I0623 16:49:37.645888 20 service.go:3701] Collection of services has been deleted
  I0623 16:49:37.646003 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8602" for this suite. @ 06/23/25 16:49:37.649
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 06/23/25 16:49:37.655
  I0623 16:49:37.655832 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 16:49:37.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:49:37.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:49:37.672
  STEP: Creating Indexed job @ 06/23/25 16:49:37.674
  STEP: Ensuring job reaches completions @ 06/23/25 16:49:37.681
  STEP: Ensuring pods with index for job exist @ 06/23/25 16:49:45.708
  I0623 16:49:45.713044 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1586" for this suite. @ 06/23/25 16:49:45.717
• [8.068 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 06/23/25 16:49:45.724
  I0623 16:49:45.724110 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename statefulset @ 06/23/25 16:49:45.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:49:45.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:49:45.739
  STEP: Creating service test in namespace statefulset-386 @ 06/23/25 16:49:45.741
  STEP: Creating a new StatefulSet @ 06/23/25 16:49:45.746
  I0623 16:49:45.771625 20 wait.go:44] Found 1 stateful pods, waiting for 3
  I0623 16:49:55.759608 20 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0623 16:49:55.759641 20 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0623 16:49:55.759648 20 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/23/25 16:49:55.77
  I0623 16:49:55.781740 20 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 06/23/25 16:49:55.781
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/23/25 16:50:05.791
  STEP: Performing a canary update @ 06/23/25 16:50:05.791
  I0623 16:50:05.802538 20 statefulset.go:2542] Updating stateful set ss2
  I0623 16:50:05.816564 20 wait.go:74] Waiting for Pod statefulset-386/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/23/25 16:50:15.812
  I0623 16:50:15.857552 20 wait.go:44] Found 2 stateful pods, waiting for 3
  I0623 16:50:25.849446 20 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0623 16:50:25.849480 20 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0623 16:50:25.849488 20 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/23/25 16:50:25.856
  I0623 16:50:25.867338 20 statefulset.go:2542] Updating stateful set ss2
  I0623 16:50:25.876903 20 wait.go:74] Waiting for Pod statefulset-386/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0623 16:50:35.885311 20 statefulset.go:2542] Updating stateful set ss2
  I0623 16:50:35.895606 20 wait.go:56] Waiting for StatefulSet statefulset-386/ss2 to complete update
  I0623 16:50:35.895643 20 wait.go:63] Waiting for Pod statefulset-386/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0623 16:50:45.893121 20 statefulset.go:138] Deleting all statefulset in ns statefulset-386
  I0623 16:50:45.896330 20 rest.go:153] Scaling statefulset ss2 to 0
  I0623 16:50:55.916006 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0623 16:50:55.918904 20 rest.go:91] Deleting statefulset ss2
  I0623 16:50:55.933295 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-386" for this suite. @ 06/23/25 16:50:55.936
• [70.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 06/23/25 16:50:55.945
  I0623 16:50:55.945707 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 16:50:55.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:50:55.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:50:55.96
  STEP: Creating configMap with name projected-configmap-test-volume-map-9b8a91f0-fd41-4c95-bad3-e62cda5eebcb @ 06/23/25 16:50:55.962
  STEP: Creating a pod to test consume configMaps @ 06/23/25 16:50:55.966
  STEP: Saw pod success @ 06/23/25 16:50:59.991
  I0623 16:50:59.994758 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-configmaps-467557d0-41ec-47ee-a546-811a7c63be46 container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 16:51:00.001
  I0623 16:51:00.022130 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8893" for this suite. @ 06/23/25 16:51:00.025
• [4.087 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 06/23/25 16:51:00.033
  I0623 16:51:00.033113 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename var-expansion @ 06/23/25 16:51:00.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:51:00.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:51:00.048
  STEP: Creating a pod to test env composition @ 06/23/25 16:51:00.05
  STEP: Saw pod success @ 06/23/25 16:51:04.072
  I0623 16:51:04.075459 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod var-expansion-1189855f-79ce-4ac0-b37d-81b49da20c0c container dapi-container: <nil>
  STEP: delete the pod @ 06/23/25 16:51:04.082
  I0623 16:51:04.099451 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5479" for this suite. @ 06/23/25 16:51:04.103
• [4.076 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 06/23/25 16:51:04.109
  I0623 16:51:04.109145 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename proxy @ 06/23/25 16:51:04.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:51:04.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:51:04.124
  I0623 16:51:04.126456 20 proxy.go:430] Creating pod...
  I0623 16:51:06.145463 20 proxy.go:454] Creating service...
  I0623 16:51:06.160704 20 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/pods/agnhost/proxy?method=DELETE
  I0623 16:51:06.166129 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0623 16:51:06.166164 20 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/pods/agnhost/proxy?method=OPTIONS
  I0623 16:51:06.173078 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0623 16:51:06.173108 20 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/pods/agnhost/proxy?method=PATCH
  I0623 16:51:06.177289 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0623 16:51:06.177316 20 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/pods/agnhost/proxy?method=POST
  I0623 16:51:06.181315 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0623 16:51:06.181340 20 proxy.go:491] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/pods/agnhost/proxy?method=PUT
  I0623 16:51:06.184475 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0623 16:51:06.184499 20 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/services/e2e-proxy-test-service/proxy?method=DELETE
  I0623 16:51:06.189875 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0623 16:51:06.189900 20 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0623 16:51:06.195801 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0623 16:51:06.195825 20 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/services/e2e-proxy-test-service/proxy?method=PATCH
  I0623 16:51:06.199910 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0623 16:51:06.199936 20 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/services/e2e-proxy-test-service/proxy?method=POST
  I0623 16:51:06.205733 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0623 16:51:06.205768 20 proxy.go:502] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/services/e2e-proxy-test-service/proxy?method=PUT
  I0623 16:51:06.212295 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0623 16:51:06.212320 20 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/pods/agnhost/proxy?method=GET
  I0623 16:51:06.214552 20 proxy.go:530] http.Client request:GET StatusCode:301
  I0623 16:51:06.214570 20 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/services/e2e-proxy-test-service/proxy?method=GET
  I0623 16:51:06.220286 20 proxy.go:530] http.Client request:GET StatusCode:301
  I0623 16:51:06.220321 20 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/pods/agnhost/proxy?method=HEAD
  I0623 16:51:06.223332 20 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0623 16:51:06.223356 20 proxy.go:522] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4474/services/e2e-proxy-test-service/proxy?method=HEAD
  I0623 16:51:06.227386 20 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0623 16:51:06.227492 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4474" for this suite. @ 06/23/25 16:51:06.232
• [2.130 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 06/23/25 16:51:06.239
  I0623 16:51:06.239542 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-probe @ 06/23/25 16:51:06.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:51:06.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:51:06.255
  STEP: Creating pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195 @ 06/23/25 16:51:06.257
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/23/25 16:51:08.277
  I0623 16:51:08.281680 20 container_probe.go:1748] Initial restart count of pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 is 0
  I0623 16:51:08.285041 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:10.290460 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:12.295678 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:14.302039 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:16.306989 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:18.312277 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:20.317720 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:22.322414 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:24.328129 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:26.332882 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:28.338619 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:28.338656 20 container_probe.go:1762] Restart count of pod container-probe-8195/liveness-a85681f2-b406-442a-aa18-4beab3df5688 is now 1 (20.056950449s elapsed)
  I0623 16:51:30.343819 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:32.348962 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:34.355401 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:36.359870 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:38.366080 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:40.370810 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:42.376107 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:44.380928 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:46.386646 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:48.392253 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:48.392290 20 container_probe.go:1762] Restart count of pod container-probe-8195/liveness-a85681f2-b406-442a-aa18-4beab3df5688 is now 2 (40.11058478s elapsed)
  I0623 16:51:50.397615 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:52.401934 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:54.407686 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:56.412343 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:51:58.418102 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:00.423214 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:02.428034 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:04.433239 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:06.438546 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:08.444548 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:08.444592 20 container_probe.go:1762] Restart count of pod container-probe-8195/liveness-a85681f2-b406-442a-aa18-4beab3df5688 is now 3 (1m0.162886052s elapsed)
  I0623 16:52:10.451381 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:12.456354 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:14.461571 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:16.465888 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:18.471872 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:20.478309 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:22.483711 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:24.488730 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:26.494128 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:28.499180 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:28.499218 20 container_probe.go:1762] Restart count of pod container-probe-8195/liveness-a85681f2-b406-442a-aa18-4beab3df5688 is now 4 (1m20.217513195s elapsed)
  I0623 16:52:30.504481 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:32.510711 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:34.516069 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:36.522392 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:38.527458 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:40.531653 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:42.537912 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:44.542694 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:46.547459 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:48.552123 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:50.557851 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:52.563584 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:54.568372 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:56.572576 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:52:58.576824 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:00.582716 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:02.588814 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:04.593747 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:06.599210 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:08.604204 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:10.609589 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:12.614974 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:14.620803 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:16.626428 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:18.632183 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:20.639217 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:22.644405 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:24.649478 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:26.655625 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:28.660559 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:30.665536 20 container_probe.go:1758] Get pod liveness-a85681f2-b406-442a-aa18-4beab3df5688 in namespace container-probe-8195
  I0623 16:53:30.665573 20 container_probe.go:1762] Restart count of pod container-probe-8195/liveness-a85681f2-b406-442a-aa18-4beab3df5688 is now 5 (2m22.3838683s elapsed)
  STEP: deleting the pod @ 06/23/25 16:53:30.665
  I0623 16:53:30.677792 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8195" for this suite. @ 06/23/25 16:53:30.681
• [144.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 06/23/25 16:53:30.687
  I0623 16:53:30.687196 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/23/25 16:53:30.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:53:30.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:53:30.702
  STEP: create the container to handle the HTTPGet hook request. @ 06/23/25 16:53:30.783
  STEP: create the pod with lifecycle hook @ 06/23/25 16:53:32.806
  STEP: delete the pod with lifecycle hook @ 06/23/25 16:53:34.824
  STEP: check prestop hook @ 06/23/25 16:53:36.838
  I0623 16:53:36.855398 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4593" for this suite. @ 06/23/25 16:53:36.859
• [6.180 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 06/23/25 16:53:36.867
  I0623 16:53:36.867086 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 16:53:36.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:53:36.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:53:36.883
  STEP: Creating an indexed job with successPolicy @ 06/23/25 16:53:36.886
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 06/23/25 16:53:36.893
  STEP: Ensure that the job reaches completions @ 06/23/25 16:53:40.906
  STEP: Verifying that the job status to ensure correct final state @ 06/23/25 16:53:40.913
  I0623 16:53:40.917044 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8255" for this suite. @ 06/23/25 16:53:40.921
• [4.062 seconds]
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 06/23/25 16:53:40.929
  I0623 16:53:40.929261 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename discovery @ 06/23/25 16:53:40.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:53:40.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:53:40.945
  STEP: Setting up server cert @ 06/23/25 16:53:40.948
  STEP: Requesting APIResourceList from "/api/v1" @ 06/23/25 16:53:41.454
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/23/25 16:53:41.456
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/23/25 16:53:41.457
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/23/25 16:53:41.458
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/23/25 16:53:41.459
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/23/25 16:53:41.46
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/23/25 16:53:41.46
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/23/25 16:53:41.461
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/23/25 16:53:41.462
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/23/25 16:53:41.463
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/23/25 16:53:41.464
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/23/25 16:53:41.465
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/23/25 16:53:41.465
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/23/25 16:53:41.466
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/23/25 16:53:41.467
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/23/25 16:53:41.468
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/23/25 16:53:41.469
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/23/25 16:53:41.47
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/23/25 16:53:41.47
  I0623 16:53:41.471813 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6889" for this suite. @ 06/23/25 16:53:41.476
• [0.554 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 06/23/25 16:53:41.483
  I0623 16:53:41.483514 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 16:53:41.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:53:41.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:53:41.499
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/23/25 16:53:41.501
  STEP: Saw pod success @ 06/23/25 16:53:45.524
  I0623 16:53:45.528258 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-22864bd6-01b6-4f90-8a26-667056d18e8d container test-container: <nil>
  STEP: delete the pod @ 06/23/25 16:53:45.538
  I0623 16:53:45.556638 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1871" for this suite. @ 06/23/25 16:53:45.561
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 06/23/25 16:53:45.569
  I0623 16:53:45.569311 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename svcaccounts @ 06/23/25 16:53:45.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:53:45.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:53:45.585
  I0623 16:53:45.589734 20 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-6113"
  I0623 16:53:45.595185 20 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-6113"
  STEP: waiting for a new root ca configmap created @ 06/23/25 16:53:46.095
  I0623 16:53:46.100040 20 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-6113"
  I0623 16:53:46.104791 20 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-6113"
  STEP: waiting for the root ca configmap reconciled @ 06/23/25 16:53:46.605
  I0623 16:53:46.609362 20 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-6113"
  I0623 16:53:46.609467 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6113" for this suite. @ 06/23/25 16:53:46.613
• [1.051 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/23/25 16:53:46.62
  I0623 16:53:46.620638 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename subpath @ 06/23/25 16:53:46.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:53:46.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:53:46.633
  STEP: Setting up data @ 06/23/25 16:53:46.635
  STEP: Creating pod pod-subpath-test-configmap-q45c @ 06/23/25 16:53:46.643
  STEP: Creating a pod to test atomic-volume-subpath @ 06/23/25 16:53:46.643
  STEP: Saw pod success @ 06/23/25 16:54:10.718
  I0623 16:54:10.724343 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-subpath-test-configmap-q45c container test-container-subpath-configmap-q45c: <nil>
  STEP: delete the pod @ 06/23/25 16:54:10.731
  STEP: Deleting pod pod-subpath-test-configmap-q45c @ 06/23/25 16:54:10.748
  I0623 16:54:10.748480 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-q45c" in namespace "subpath-8441"
  I0623 16:54:10.751976 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8441" for this suite. @ 06/23/25 16:54:10.756
• [24.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 06/23/25 16:54:10.765
  I0623 16:54:10.765326 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 16:54:10.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:54:10.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:54:10.781
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/23/25 16:54:10.783
  STEP: Saw pod success @ 06/23/25 16:54:14.806
  I0623 16:54:14.810134 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-a54323ed-39f4-4994-ae0e-e8acd38fa588 container test-container: <nil>
  STEP: delete the pod @ 06/23/25 16:54:14.816
  I0623 16:54:14.835105 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5191" for this suite. @ 06/23/25 16:54:14.838
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 06/23/25 16:54:14.845
  I0623 16:54:14.845086 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename svcaccounts @ 06/23/25 16:54:14.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:54:14.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:54:14.859
  I0623 16:54:14.882737 20 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0623 16:54:14.882757 20 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0623 16:54:14.889704 20 service_accounts.go:281] created pod pod-service-account-mountsa
  I0623 16:54:14.889720 20 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0623 16:54:14.895696 20 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0623 16:54:14.895712 20 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0623 16:54:14.902160 20 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0623 16:54:14.902177 20 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0623 16:54:14.908289 20 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0623 16:54:14.908305 20 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0623 16:54:14.914745 20 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0623 16:54:14.914761 20 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0623 16:54:14.922337 20 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0623 16:54:14.922354 20 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0623 16:54:14.933340 20 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0623 16:54:14.933363 20 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0623 16:54:14.943949 20 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0623 16:54:14.943967 20 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0623 16:54:14.944055 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-346" for this suite. @ 06/23/25 16:54:14.95
• [0.117 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/23/25 16:54:14.962
  I0623 16:54:14.962171 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename subpath @ 06/23/25 16:54:14.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:54:14.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:54:14.976
  STEP: Setting up data @ 06/23/25 16:54:14.979
  STEP: Creating pod pod-subpath-test-configmap-cvpj @ 06/23/25 16:54:14.994
  STEP: Creating a pod to test atomic-volume-subpath @ 06/23/25 16:54:14.994
  STEP: Saw pod success @ 06/23/25 16:54:39.069
  I0623 16:54:39.073176 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod pod-subpath-test-configmap-cvpj container test-container-subpath-configmap-cvpj: <nil>
  STEP: delete the pod @ 06/23/25 16:54:39.079
  STEP: Deleting pod pod-subpath-test-configmap-cvpj @ 06/23/25 16:54:39.097
  I0623 16:54:39.097927 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-cvpj" in namespace "subpath-4820"
  I0623 16:54:39.100795 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4820" for this suite. @ 06/23/25 16:54:39.105
• [24.150 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/23/25 16:54:39.112
  I0623 16:54:39.112295 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 16:54:39.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:54:39.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:54:39.127
  STEP: Creating secret with name secret-test-map-9e8d8241-2a59-4b3d-a0e1-b62d3fc59e0d @ 06/23/25 16:54:39.129
  STEP: Creating a pod to test consume secrets @ 06/23/25 16:54:39.134
  STEP: Saw pod success @ 06/23/25 16:54:43.16
  I0623 16:54:43.163464 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-secrets-3aa71b8e-0637-429f-8431-a1d1a96a2371 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 16:54:43.175
  I0623 16:54:43.194422 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9111" for this suite. @ 06/23/25 16:54:43.199
• [4.095 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 06/23/25 16:54:43.207
  I0623 16:54:43.207215 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 16:54:43.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:54:43.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:54:43.221
  STEP: creating Agnhost RC @ 06/23/25 16:54:43.223
  I0623 16:54:43.223935 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-9620 create -f -'
  I0623 16:54:43.306749 20 builder.go:146] stderr: ""
  I0623 16:54:43.306804 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/23/25 16:54:43.306
  I0623 16:54:44.311750 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0623 16:54:44.311795 20 framework.go:733] Found 1 / 1
  I0623 16:54:44.311809 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/23/25 16:54:44.311
  I0623 16:54:44.314392 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0623 16:54:44.314417 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0623 16:54:44.314464 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-9620 patch pod agnhost-primary-22zrb -p {"metadata":{"annotations":{"x":"y"}}}'
  I0623 16:54:44.365446 20 builder.go:146] stderr: ""
  I0623 16:54:44.365485 20 builder.go:147] stdout: "pod/agnhost-primary-22zrb patched\n"
  STEP: checking annotations @ 06/23/25 16:54:44.365
  I0623 16:54:44.370062 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0623 16:54:44.370077 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0623 16:54:44.370201 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9620" for this suite. @ 06/23/25 16:54:44.374
• [1.173 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 06/23/25 16:54:44.38
  I0623 16:54:44.380529 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename discovery @ 06/23/25 16:54:44.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:54:44.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:54:44.395
  STEP: Setting up server cert @ 06/23/25 16:54:44.398
  I0623 16:54:44.554518 20 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0623 16:54:44.556028 20 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0623 16:54:44.556055 20 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0623 16:54:44.556063 20 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0623 16:54:44.556068 20 discovery.go:139] Checking APIGroup: apps
  I0623 16:54:44.556883 20 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0623 16:54:44.556896 20 discovery.go:148] Versions found [{apps/v1 v1}]
  I0623 16:54:44.556904 20 discovery.go:154] apps/v1 matches apps/v1
  I0623 16:54:44.556909 20 discovery.go:139] Checking APIGroup: events.k8s.io
  I0623 16:54:44.557671 20 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0623 16:54:44.557680 20 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0623 16:54:44.557686 20 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0623 16:54:44.557692 20 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0623 16:54:44.558382 20 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0623 16:54:44.558392 20 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0623 16:54:44.558397 20 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0623 16:54:44.558402 20 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0623 16:54:44.559223 20 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0623 16:54:44.559233 20 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0623 16:54:44.559256 20 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0623 16:54:44.559262 20 discovery.go:139] Checking APIGroup: autoscaling
  I0623 16:54:44.560395 20 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0623 16:54:44.560415 20 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0623 16:54:44.560421 20 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0623 16:54:44.560427 20 discovery.go:139] Checking APIGroup: batch
  I0623 16:54:44.561508 20 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0623 16:54:44.561522 20 discovery.go:148] Versions found [{batch/v1 v1}]
  I0623 16:54:44.561529 20 discovery.go:154] batch/v1 matches batch/v1
  I0623 16:54:44.561535 20 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0623 16:54:44.562792 20 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0623 16:54:44.562816 20 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0623 16:54:44.562822 20 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0623 16:54:44.562828 20 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0623 16:54:44.563915 20 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0623 16:54:44.563927 20 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0623 16:54:44.563934 20 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0623 16:54:44.563940 20 discovery.go:139] Checking APIGroup: policy
  I0623 16:54:44.564663 20 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0623 16:54:44.564672 20 discovery.go:148] Versions found [{policy/v1 v1}]
  I0623 16:54:44.564678 20 discovery.go:154] policy/v1 matches policy/v1
  I0623 16:54:44.564683 20 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0623 16:54:44.565889 20 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0623 16:54:44.565908 20 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0623 16:54:44.565914 20 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0623 16:54:44.565919 20 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0623 16:54:44.566993 20 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0623 16:54:44.567015 20 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0623 16:54:44.567021 20 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0623 16:54:44.567027 20 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0623 16:54:44.567802 20 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0623 16:54:44.567814 20 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0623 16:54:44.567821 20 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0623 16:54:44.567828 20 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0623 16:54:44.568556 20 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0623 16:54:44.568566 20 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0623 16:54:44.568573 20 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0623 16:54:44.568578 20 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0623 16:54:44.569246 20 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0623 16:54:44.569256 20 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0623 16:54:44.569261 20 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0623 16:54:44.569268 20 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0623 16:54:44.569990 20 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0623 16:54:44.569999 20 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0623 16:54:44.570005 20 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0623 16:54:44.570011 20 discovery.go:139] Checking APIGroup: node.k8s.io
  I0623 16:54:44.570687 20 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0623 16:54:44.570698 20 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0623 16:54:44.570706 20 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0623 16:54:44.570711 20 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0623 16:54:44.571474 20 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0623 16:54:44.571485 20 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0623 16:54:44.571491 20 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0623 16:54:44.571497 20 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0623 16:54:44.572278 20 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0623 16:54:44.572287 20 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0623 16:54:44.572293 20 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0623 16:54:44.572299 20 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0623 16:54:44.573220 20 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0623 16:54:44.573241 20 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0623 16:54:44.573247 20 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0623 16:54:44.573348 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1616" for this suite. @ 06/23/25 16:54:44.577
• [0.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 06/23/25 16:54:44.585
  I0623 16:54:44.585321 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename endpointslice @ 06/23/25 16:54:44.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:54:44.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:54:44.602
  STEP: getting /apis @ 06/23/25 16:54:44.604
  STEP: getting /apis/discovery.k8s.io @ 06/23/25 16:54:44.607
  STEP: getting /apis/discovery.k8s.iov1 @ 06/23/25 16:54:44.608
  STEP: creating @ 06/23/25 16:54:44.609
  STEP: getting @ 06/23/25 16:54:44.621
  STEP: listing @ 06/23/25 16:54:44.625
  STEP: watching @ 06/23/25 16:54:44.628
  I0623 16:54:44.628674 20 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 06/23/25 16:54:44.629
  STEP: cluster-wide watching @ 06/23/25 16:54:44.632
  I0623 16:54:44.632465 20 endpointslice.go:459] starting watch
  STEP: patching @ 06/23/25 16:54:44.633
  STEP: updating @ 06/23/25 16:54:44.639
  I0623 16:54:44.649637 20 endpointslice.go:482] waiting for watch events with expected annotations
  I0623 16:54:44.649664 20 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 06/23/25 16:54:44.649
  STEP: deleting a collection @ 06/23/25 16:54:44.662
  I0623 16:54:44.680656 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1720" for this suite. @ 06/23/25 16:54:44.685
• [0.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/23/25 16:54:44.691
  I0623 16:54:44.691066 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pods @ 06/23/25 16:54:44.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:54:44.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:54:44.705
  I0623 16:54:44.708198 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: creating the pod @ 06/23/25 16:54:44.708
  STEP: submitting the pod to kubernetes @ 06/23/25 16:54:44.708
  I0623 16:54:46.779988 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5884" for this suite. @ 06/23/25 16:54:46.784
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 06/23/25 16:54:46.792
  I0623 16:54:46.792736 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename field-validation @ 06/23/25 16:54:46.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:54:46.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:54:46.807
  I0623 16:54:46.809764 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 16:54:49.341617      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0623 16:54:49.341638      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0623 16:54:49.341645      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0623 16:54:49.341656      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0623 16:54:49.341662      20 warnings.go:110] "Warning: unknown field \"gamma\""
  I0623 16:54:49.877975 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2351" for this suite. @ 06/23/25 16:54:49.881
• [3.097 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 06/23/25 16:54:49.889
  I0623 16:54:49.889620 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 16:54:49.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:54:49.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:54:49.903
  STEP: creating a secret @ 06/23/25 16:54:49.906
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/23/25 16:54:49.91
  STEP: patching the secret @ 06/23/25 16:54:49.912
  STEP: deleting the secret using a LabelSelector @ 06/23/25 16:54:49.919
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/23/25 16:54:49.928
  I0623 16:54:49.931343 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1449" for this suite. @ 06/23/25 16:54:49.982
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 06/23/25 16:54:49.99
  I0623 16:54:49.990624 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-probe @ 06/23/25 16:54:49.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:54:50.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:54:50.007
  I0623 16:55:50.022434 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1912" for this suite. @ 06/23/25 16:55:50.027
• [60.045 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 06/23/25 16:55:50.036
  I0623 16:55:50.036143 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/23/25 16:55:50.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:55:50.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:55:50.049
  STEP: creating a policy with variables @ 06/23/25 16:55:50.056
  STEP: waiting until the marker is denied @ 06/23/25 16:55:50.075
  STEP: testing a replicated Deployment to be allowed @ 06/23/25 16:55:50.584
  STEP: testing a non-replicated ReplicaSet not to be denied @ 06/23/25 16:55:50.598
  I0623 16:55:50.639807 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6098" for this suite. @ 06/23/25 16:55:50.644
• [0.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 06/23/25 16:55:50.654
  I0623 16:55:50.654768 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename security-context-test @ 06/23/25 16:55:50.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:55:50.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:55:50.687
  I0623 16:55:54.712121 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5864" for this suite. @ 06/23/25 16:55:54.716
• [4.071 seconds]
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 06/23/25 16:55:54.725
  I0623 16:55:54.725343 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename podtemplate @ 06/23/25 16:55:54.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:55:54.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:55:54.739
  STEP: Create set of pod templates @ 06/23/25 16:55:54.741
  I0623 16:55:54.748398 20 podtemplates.go:143] created test-podtemplate-1
  I0623 16:55:54.753260 20 podtemplates.go:143] created test-podtemplate-2
  I0623 16:55:54.758254 20 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/23/25 16:55:54.758
  STEP: delete collection of pod templates @ 06/23/25 16:55:54.761
  I0623 16:55:54.762003 20 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/23/25 16:55:54.784
  I0623 16:55:54.784539 20 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0623 16:55:54.787864 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7766" for this suite. @ 06/23/25 16:55:54.816
• [0.098 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 06/23/25 16:55:54.823
  I0623 16:55:54.823618 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubelet-test @ 06/23/25 16:55:54.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:55:54.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:55:54.839
  STEP: Waiting for pod completion @ 06/23/25 16:55:54.851
  I0623 16:55:58.872360 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1485" for this suite. @ 06/23/25 16:55:58.876
• [4.060 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 06/23/25 16:55:58.883
  I0623 16:55:58.883691 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/23/25 16:55:58.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:55:58.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:55:58.9
  STEP: getting /apis @ 06/23/25 16:55:58.902
  STEP: getting /apis/storage.k8s.io @ 06/23/25 16:55:58.905
  STEP: getting /apis/storage.k8s.io/v1 @ 06/23/25 16:55:58.906
  STEP: creating @ 06/23/25 16:55:58.907
  STEP: watching @ 06/23/25 16:55:58.923
  I0623 16:55:58.923738 20 csistoragecapacity.go:143] starting watch
  STEP: getting @ 06/23/25 16:55:58.932
  STEP: listing in namespace @ 06/23/25 16:55:58.934
  STEP: listing across namespaces @ 06/23/25 16:55:58.938
  STEP: patching @ 06/23/25 16:55:58.94
  STEP: updating @ 06/23/25 16:55:58.944
  I0623 16:55:58.949499 20 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0623 16:55:58.949565 20 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/23/25 16:55:58.949
  STEP: deleting a collection @ 06/23/25 16:55:58.961
  I0623 16:55:58.979992 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4004" for this suite. @ 06/23/25 16:55:58.985
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 06/23/25 16:55:58.992
  I0623 16:55:58.992960 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename namespaces @ 06/23/25 16:55:58.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:55:59.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:55:59.007
  STEP: Creating namespace "e2e-ns-brrqx" @ 06/23/25 16:55:59.01
  I0623 16:55:59.022353 20 namespace.go:412] Namespace "e2e-ns-brrqx-5143" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-brrqx-5143" @ 06/23/25 16:55:59.022
  I0623 16:55:59.028463 20 namespace.go:435] Namespace "e2e-ns-brrqx-5143" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-brrqx-5143" @ 06/23/25 16:55:59.028
  I0623 16:55:59.038160 20 namespace.go:464] Namespace "e2e-ns-brrqx-5143" has []v1.FinalizerName{"kubernetes"}
  I0623 16:55:59.038244 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6431" for this suite. @ 06/23/25 16:55:59.086
  STEP: Destroying namespace "e2e-ns-brrqx-5143" for this suite. @ 06/23/25 16:55:59.094
• [0.108 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 06/23/25 16:55:59.101
  I0623 16:55:59.101522 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 16:55:59.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:55:59.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:55:59.116
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/23/25 16:55:59.118
  STEP: Saw pod success @ 06/23/25 16:56:03.142
  I0623 16:56:03.146678 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-bf5a1b29-6bc9-4489-9df6-9b24a122bb08 container test-container: <nil>
  STEP: delete the pod @ 06/23/25 16:56:03.153
  I0623 16:56:03.171059 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1232" for this suite. @ 06/23/25 16:56:03.175
• [4.081 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 06/23/25 16:56:03.182
  I0623 16:56:03.182289 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 16:56:03.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:56:03.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:56:03.2
  STEP: Creating configMap with name configmap-test-upd-ae490649-5f32-4a04-99d0-0f1ca59856b2 @ 06/23/25 16:56:03.276
  STEP: Creating the pod @ 06/23/25 16:56:03.282
  STEP: Waiting for pod with text data @ 06/23/25 16:56:05.301
  STEP: Waiting for pod with binary data @ 06/23/25 16:56:05.307
  I0623 16:56:05.314731 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1268" for this suite. @ 06/23/25 16:56:05.319
• [2.145 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/23/25 16:56:05.326
  I0623 16:56:05.327008 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename subpath @ 06/23/25 16:56:05.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:56:05.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:56:05.341
  STEP: Setting up data @ 06/23/25 16:56:05.344
  STEP: Creating pod pod-subpath-test-downwardapi-sdlc @ 06/23/25 16:56:05.352
  STEP: Creating a pod to test atomic-volume-subpath @ 06/23/25 16:56:05.352
  STEP: Saw pod success @ 06/23/25 16:56:27.424
  I0623 16:56:27.427639 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod pod-subpath-test-downwardapi-sdlc container test-container-subpath-downwardapi-sdlc: <nil>
  STEP: delete the pod @ 06/23/25 16:56:27.439
  STEP: Deleting pod pod-subpath-test-downwardapi-sdlc @ 06/23/25 16:56:27.456
  I0623 16:56:27.456610 20 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-sdlc" in namespace "subpath-8149"
  I0623 16:56:27.460000 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8149" for this suite. @ 06/23/25 16:56:27.464
• [22.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/23/25 16:56:27.471
  I0623 16:56:27.471421 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 16:56:27.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:56:27.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:56:27.486
  STEP: Creating secret with name secret-test-f8cfe740-715c-48c3-94ff-87d465a77728 @ 06/23/25 16:56:27.488
  STEP: Creating a pod to test consume secrets @ 06/23/25 16:56:27.492
  STEP: Saw pod success @ 06/23/25 16:56:29.511
  I0623 16:56:29.515494 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-secrets-7ba3203c-7b58-4a32-a07b-2d5f8d98f903 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 16:56:29.521
  I0623 16:56:29.541428 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4291" for this suite. @ 06/23/25 16:56:29.545
• [2.081 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/23/25 16:56:29.552
  I0623 16:56:29.552501 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename daemonsets @ 06/23/25 16:56:29.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:56:29.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:56:29.57
  I0623 16:56:29.656961 20 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/23/25 16:56:29.664
  I0623 16:56:29.746408 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:29.746456 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:29.749875 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 16:56:29.749895 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 16:56:30.669470 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:30.669519 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:30.674199 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0623 16:56:30.674219 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 16:56:31.670795 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:31.670847 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:31.675207 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0623 16:56:31.675230 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/23/25 16:56:31.69
  STEP: Check that daemon pods images are updated. @ 06/23/25 16:56:31.771
  I0623 16:56:31.775018 20 daemon_set.go:1193] Wrong image for pod: daemon-set-5b485. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0623 16:56:31.775046 20 daemon_set.go:1193] Wrong image for pod: daemon-set-n8dcd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0623 16:56:31.778069 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:31.778102 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:32.777406 20 daemon_set.go:1193] Wrong image for pod: daemon-set-5b485. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0623 16:56:32.777437 20 daemon_set.go:1193] Wrong image for pod: daemon-set-n8dcd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0623 16:56:32.781719 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:32.781754 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:33.775724 20 daemon_set.go:1193] Wrong image for pod: daemon-set-5b485. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0623 16:56:33.775757 20 daemon_set.go:1198] Pod daemon-set-bfjls is not available
  I0623 16:56:33.775765 20 daemon_set.go:1193] Wrong image for pod: daemon-set-n8dcd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0623 16:56:33.779585 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:33.779618 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:34.775438 20 daemon_set.go:1198] Pod daemon-set-f2zrg is not available
  I0623 16:56:34.775494 20 daemon_set.go:1193] Wrong image for pod: daemon-set-n8dcd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0623 16:56:34.778437 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:34.778478 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:35.780061 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:35.780111 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:36.776932 20 daemon_set.go:1198] Pod daemon-set-hcfqk is not available
  I0623 16:56:36.780929 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:36.780982 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/23/25 16:56:36.781
  I0623 16:56:36.784215 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:36.784253 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:36.787075 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0623 16:56:36.787089 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 16:56:37.786505 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:37.786552 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:37.790662 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0623 16:56:37.790680 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/23/25 16:56:37.808
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2307, will wait for the garbage collector to delete the pods @ 06/23/25 16:56:37.808
  I0623 16:56:37.870342 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.334189ms
  I0623 16:56:37.971081 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.734361ms
  I0623 16:56:39.175399 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 16:56:39.175430 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0623 16:56:39.178554 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15347"},"items":null}

  I0623 16:56:39.182851 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15347"},"items":null}

  I0623 16:56:39.198126 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2307" for this suite. @ 06/23/25 16:56:39.2
• [9.657 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 06/23/25 16:56:39.209
  I0623 16:56:39.209762 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 16:56:39.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:56:39.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:56:39.225
  STEP: Setting up server cert @ 06/23/25 16:56:39.242
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 16:56:39.709
  STEP: Deploying the webhook pod @ 06/23/25 16:56:39.715
  STEP: Wait for the deployment to be ready @ 06/23/25 16:56:39.726
  I0623 16:56:39.735549 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 16:56:41.748
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 16:56:41.761
  I0623 16:56:42.761260 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/23/25 16:56:42.766
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/23/25 16:56:42.78
  I0623 16:56:42.780182 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 16:56:42.840132 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5287" for this suite. @ 06/23/25 16:56:42.844
  STEP: Destroying namespace "webhook-markers-3606" for this suite. @ 06/23/25 16:56:42.85
• [3.646 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 06/23/25 16:56:42.856
  I0623 16:56:42.856272 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename security-context-test @ 06/23/25 16:56:42.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:56:42.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:56:42.87
  I0623 16:56:46.893066 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7809" for this suite. @ 06/23/25 16:56:46.898
• [4.052 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 06/23/25 16:56:46.907
  I0623 16:56:46.907980 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/23/25 16:56:46.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:56:46.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:56:46.924
  I0623 16:56:46.926768 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 16:56:49.976521 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2693" for this suite. @ 06/23/25 16:56:49.98
• [3.082 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 06/23/25 16:56:49.989
  I0623 16:56:49.989504 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 16:56:49.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:56:50.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:56:50.007
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/23/25 16:56:50.009
  I0623 16:56:50.009445 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-9204 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0623 16:56:50.057943 20 builder.go:146] stderr: ""
  I0623 16:56:50.057974 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/23/25 16:56:50.057
  I0623 16:56:50.063980 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-9204 delete pods e2e-test-httpd-pod'
  I0623 16:56:51.282739 20 builder.go:146] stderr: ""
  I0623 16:56:51.282793 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0623 16:56:51.282952 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9204" for this suite. @ 06/23/25 16:56:51.288
• [1.307 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 06/23/25 16:56:51.296
  I0623 16:56:51.296205 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 16:56:51.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:56:51.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:56:51.308
  STEP: creating secret secrets-9663/secret-test-d2633cf7-bc36-47c8-ac38-97bac1a887a3 @ 06/23/25 16:56:51.31
  STEP: Creating a pod to test consume secrets @ 06/23/25 16:56:51.314
  STEP: Saw pod success @ 06/23/25 16:56:55.335
  I0623 16:56:55.339665 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-configmaps-78994a91-593c-4c4a-890b-5095e2f865cc container env-test: <nil>
  STEP: delete the pod @ 06/23/25 16:56:55.347
  I0623 16:56:55.360819 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9663" for this suite. @ 06/23/25 16:56:55.364
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 06/23/25 16:56:55.373
  I0623 16:56:55.373522 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename controllerrevisions @ 06/23/25 16:56:55.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:56:55.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:56:55.392
  STEP: Creating DaemonSet "e2e-97nn5-daemon-set" @ 06/23/25 16:56:55.476
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/23/25 16:56:55.483
  I0623 16:56:55.565990 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:55.566035 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:55.570016 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-97nn5-daemon-set: 0
  I0623 16:56:55.570031 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 16:56:56.487386 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:56.487433 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:56.491279 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-97nn5-daemon-set: 2
  I0623 16:56:56.491297 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 16:56:57.489559 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:57.489606 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 16:56:57.493053 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-97nn5-daemon-set: 3
  I0623 16:56:57.493073 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-97nn5-daemon-set
  STEP: Confirm DaemonSet "e2e-97nn5-daemon-set" successfully created with "daemonset-name=e2e-97nn5-daemon-set" label @ 06/23/25 16:56:57.496
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-97nn5-daemon-set" @ 06/23/25 16:56:57.504
  I0623 16:56:57.508558 20 controller_revision.go:162] Located ControllerRevision: "e2e-97nn5-daemon-set-6b7c897545"
  STEP: Patching ControllerRevision "e2e-97nn5-daemon-set-6b7c897545" @ 06/23/25 16:56:57.512
  I0623 16:56:57.519827 20 controller_revision.go:173] e2e-97nn5-daemon-set-6b7c897545 has been patched
  STEP: Create a new ControllerRevision @ 06/23/25 16:56:57.519
  I0623 16:56:57.525394 20 controller_revision.go:191] Created ControllerRevision: e2e-97nn5-daemon-set-766bcb5f5c
  STEP: Confirm that there are two ControllerRevisions @ 06/23/25 16:56:57.525
  I0623 16:56:57.525450 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0623 16:56:57.528293 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-97nn5-daemon-set-6b7c897545" @ 06/23/25 16:56:57.528
  STEP: Confirm that there is only one ControllerRevision @ 06/23/25 16:56:57.534
  I0623 16:56:57.534364 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0623 16:56:57.537204 20 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-97nn5-daemon-set-766bcb5f5c" @ 06/23/25 16:56:57.539
  I0623 16:56:57.549665 20 controller_revision.go:220] e2e-97nn5-daemon-set-766bcb5f5c has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/23/25 16:56:57.549
  I0623 16:56:57.554594      20 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 06/23/25 16:56:57.554
  I0623 16:56:57.554673 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0623 16:56:57.582242 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-97nn5-daemon-set-766bcb5f5c=updated" @ 06/23/25 16:56:57.582
  STEP: Confirm that there is only one ControllerRevision @ 06/23/25 16:56:57.595
  I0623 16:56:57.595058 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0623 16:56:57.608560 20 controller_revision.go:265] Found 1 ControllerRevisions
  I0623 16:56:57.610680 20 controller_revision.go:246] ControllerRevision "e2e-97nn5-daemon-set-84989985c6" has revision 3
  STEP: Deleting DaemonSet "e2e-97nn5-daemon-set" @ 06/23/25 16:56:57.614
  STEP: deleting DaemonSet.extensions e2e-97nn5-daemon-set in namespace controllerrevisions-5901, will wait for the garbage collector to delete the pods @ 06/23/25 16:56:57.614
  I0623 16:56:57.676623 20 resources.go:139] Deleting DaemonSet.extensions e2e-97nn5-daemon-set took: 8.265936ms
  I0623 16:56:57.777333 20 resources.go:163] Terminating DaemonSet.extensions e2e-97nn5-daemon-set pods took: 100.70393ms
  I0623 16:56:58.682094 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-97nn5-daemon-set: 0
  I0623 16:56:58.682125 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-97nn5-daemon-set
  I0623 16:56:58.686050 20 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15696"},"items":null}

  I0623 16:56:58.688941 20 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15696"},"items":null}

  I0623 16:56:58.702214 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5901" for this suite. @ 06/23/25 16:56:58.705
• [3.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 06/23/25 16:56:58.714
  I0623 16:56:58.714352 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/23/25 16:56:58.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:56:58.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:56:58.729
  I0623 16:56:58.732281 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/23/25 16:57:00.13
  I0623 16:57:00.130541 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-3672 --namespace=crd-publish-openapi-3672 create -f -'
  I0623 16:57:00.198331 20 builder.go:146] stderr: ""
  I0623 16:57:00.198384 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-839-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0623 16:57:00.198431 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-3672 --namespace=crd-publish-openapi-3672 delete e2e-test-crd-publish-openapi-839-crds test-cr'
  I0623 16:57:00.247130 20 builder.go:146] stderr: ""
  I0623 16:57:00.247167 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-839-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0623 16:57:00.247222 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-3672 --namespace=crd-publish-openapi-3672 apply -f -'
  I0623 16:57:00.301228 20 builder.go:146] stderr: ""
  I0623 16:57:00.301268 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-839-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0623 16:57:00.301302 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-3672 --namespace=crd-publish-openapi-3672 delete e2e-test-crd-publish-openapi-839-crds test-cr'
  I0623 16:57:00.388017 20 builder.go:146] stderr: ""
  I0623 16:57:00.388055 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-839-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/23/25 16:57:00.388
  I0623 16:57:00.388138 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-3672 explain e2e-test-crd-publish-openapi-839-crds'
  I0623 16:57:00.427936 20 builder.go:146] stderr: ""
  I0623 16:57:00.427986 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-839-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0623 16:57:01.647954 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3672" for this suite. @ 06/23/25 16:57:01.655
• [2.948 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 06/23/25 16:57:01.662
  I0623 16:57:01.662032 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename apf @ 06/23/25 16:57:01.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:57:01.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:57:01.678
  STEP: getting /apis @ 06/23/25 16:57:01.68
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/23/25 16:57:01.683
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/23/25 16:57:01.684
  STEP: creating @ 06/23/25 16:57:01.684
  STEP: getting @ 06/23/25 16:57:01.704
  STEP: listing @ 06/23/25 16:57:01.708
  STEP: watching @ 06/23/25 16:57:01.715
  I0623 16:57:01.715471 20 flowcontrol.go:394] starting watch
  STEP: patching @ 06/23/25 16:57:01.716
  STEP: updating @ 06/23/25 16:57:01.723
  I0623 16:57:01.732910 20 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 06/23/25 16:57:01.732
  STEP: patching /status @ 06/23/25 16:57:01.736
  STEP: updating /status @ 06/23/25 16:57:01.741
  STEP: deleting @ 06/23/25 16:57:01.774
  STEP: deleting a collection @ 06/23/25 16:57:01.788
  I0623 16:57:01.814515 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7835" for this suite. @ 06/23/25 16:57:01.819
• [0.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/23/25 16:57:01.826
  I0623 16:57:01.826827 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename certificates @ 06/23/25 16:57:01.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:57:01.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:57:01.842
  STEP: getting /apis @ 06/23/25 16:57:02.068
  STEP: getting /apis/certificates.k8s.io @ 06/23/25 16:57:02.071
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/23/25 16:57:02.071
  STEP: creating @ 06/23/25 16:57:02.072
  STEP: getting @ 06/23/25 16:57:02.091
  STEP: listing @ 06/23/25 16:57:02.095
  STEP: watching @ 06/23/25 16:57:02.099
  I0623 16:57:02.099168 20 certificates.go:316] starting watch
  STEP: patching @ 06/23/25 16:57:02.1
  STEP: updating @ 06/23/25 16:57:02.105
  I0623 16:57:02.111714 20 certificates.go:332] waiting for watch events with expected annotations
  I0623 16:57:02.111747 20 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 06/23/25 16:57:02.111
  STEP: patching /approval @ 06/23/25 16:57:02.115
  STEP: updating /approval @ 06/23/25 16:57:02.122
  STEP: getting /status @ 06/23/25 16:57:02.126
  STEP: patching /status @ 06/23/25 16:57:02.129
  STEP: updating /status @ 06/23/25 16:57:02.137
  STEP: deleting @ 06/23/25 16:57:02.144
  STEP: deleting a collection @ 06/23/25 16:57:02.157
  I0623 16:57:02.178025 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3522" for this suite. @ 06/23/25 16:57:02.181
• [0.362 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 06/23/25 16:57:02.188
  I0623 16:57:02.188852 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sysctl @ 06/23/25 16:57:02.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:57:02.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:57:02.205
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/23/25 16:57:02.207
  I0623 16:57:02.212659 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1942" for this suite. @ 06/23/25 16:57:02.283
• [0.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 06/23/25 16:57:02.292
  I0623 16:57:02.292744 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 16:57:02.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:57:02.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:57:02.306
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 16:57:02.308
  STEP: Saw pod success @ 06/23/25 16:57:06.337
  I0623 16:57:06.340692 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-6657711d-bfb0-4a98-8fcc-80e741bd3e8b container client-container: <nil>
  STEP: delete the pod @ 06/23/25 16:57:06.352
  I0623 16:57:06.369736 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3398" for this suite. @ 06/23/25 16:57:06.373
• [4.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 06/23/25 16:57:06.382
  I0623 16:57:06.382867 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename apf @ 06/23/25 16:57:06.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:57:06.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:57:06.399
  STEP: getting /apis @ 06/23/25 16:57:06.402
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/23/25 16:57:06.404
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/23/25 16:57:06.405
  STEP: creating @ 06/23/25 16:57:06.406
  STEP: getting @ 06/23/25 16:57:06.421
  STEP: listing @ 06/23/25 16:57:06.425
  STEP: watching @ 06/23/25 16:57:06.429
  I0623 16:57:06.429094 20 flowcontrol.go:620] starting watch
  STEP: patching @ 06/23/25 16:57:06.43
  STEP: updating @ 06/23/25 16:57:06.442
  I0623 16:57:06.453894 20 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 06/23/25 16:57:06.454
  STEP: patching /status @ 06/23/25 16:57:06.458
  STEP: updating /status @ 06/23/25 16:57:06.464
  STEP: deleting @ 06/23/25 16:57:06.482
  STEP: deleting a collection @ 06/23/25 16:57:06.498
  I0623 16:57:06.529850 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5826" for this suite. @ 06/23/25 16:57:06.534
• [0.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 06/23/25 16:57:06.541
  I0623 16:57:06.541495 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 16:57:06.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:57:06.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:57:06.558
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/23/25 16:57:06.561
  STEP: Saw pod success @ 06/23/25 16:57:08.579
  I0623 16:57:08.582622 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-51108b23-bce8-4e09-b5f9-4f6bec4a7461 container test-container: <nil>
  STEP: delete the pod @ 06/23/25 16:57:08.589
  I0623 16:57:08.607866 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8699" for this suite. @ 06/23/25 16:57:08.612
• [2.078 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 06/23/25 16:57:08.619
  I0623 16:57:08.619103 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 16:57:08.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:57:08.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:57:08.634
  STEP: create deployment with httpd image @ 06/23/25 16:57:08.636
  I0623 16:57:08.636419 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-773 create -f -'
  I0623 16:57:08.702736 20 builder.go:146] stderr: ""
  I0623 16:57:08.702771 20 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/23/25 16:57:08.702
  I0623 16:57:08.702856 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-773 diff -f -'
  I0623 16:57:12.988869 20 builder.go:135] rc: 1
  I0623 16:57:12.988957 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-773 delete -f -'
  I0623 16:57:13.038846 20 builder.go:146] stderr: ""
  I0623 16:57:13.038959 20 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0623 16:57:13.039166 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-773" for this suite. @ 06/23/25 16:57:13.045
• [4.439 seconds]
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 06/23/25 16:57:13.058
  I0623 16:57:13.058490 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 16:57:13.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:57:13.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:57:13.077
  STEP: Creating a pod to test downward api env vars @ 06/23/25 16:57:13.079
  STEP: Saw pod success @ 06/23/25 16:57:17.104
  I0623 16:57:17.108854 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downward-api-849792ad-1b7c-4c0a-9355-f61a48894984 container dapi-container: <nil>
  STEP: delete the pod @ 06/23/25 16:57:17.116
  I0623 16:57:17.134599 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6943" for this suite. @ 06/23/25 16:57:17.138
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 06/23/25 16:57:17.145
  I0623 16:57:17.145576 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename gc @ 06/23/25 16:57:17.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:57:17.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:57:17.159
  STEP: create the deployment @ 06/23/25 16:57:17.162
  I0623 16:57:17.167465      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/23/25 16:57:17.167
  STEP: delete the deployment @ 06/23/25 16:57:17.173
  STEP: wait for all rs to be garbage collected @ 06/23/25 16:57:17.186
  STEP: expected 0 pods, got 2 pods @ 06/23/25 16:57:17.218
  STEP: Gathering metrics @ 06/23/25 16:57:17.699
  W0623 16:57:17.703694      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0623 16:57:17.703723 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0623 16:57:17.703875 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6471" for this suite. @ 06/23/25 16:57:17.708
• [0.571 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/23/25 16:57:17.716
  I0623 16:57:17.716899 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename cronjob @ 06/23/25 16:57:17.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:57:17.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:57:17.734
  STEP: Creating a ForbidConcurrent cronjob @ 06/23/25 16:57:17.736
  STEP: Ensuring a job is scheduled @ 06/23/25 16:57:17.741
  STEP: Ensuring exactly one is scheduled @ 06/23/25 16:58:01.747
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/23/25 16:58:01.751
  STEP: Ensuring no more jobs are scheduled @ 06/23/25 16:58:01.755
  STEP: Removing cronjob @ 06/23/25 16:58:01.757
  I0623 16:58:01.765230 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7241" for this suite. @ 06/23/25 16:58:01.769
• [44.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 06/23/25 16:58:01.779
  I0623 16:58:01.779558 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/23/25 16:58:01.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:58:01.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:58:01.796
  I0623 16:58:01.802843 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6113" for this suite. @ 06/23/25 16:58:01.871
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 06/23/25 16:58:01.88
  I0623 16:58:01.880266 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 16:58:01.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:58:01.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:58:01.896
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 06/23/25 16:58:01.899
  STEP: Awaiting for the job to fail as all indexes are failed @ 06/23/25 16:58:01.905
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 06/23/25 16:58:05.92
  I0623 16:58:05.924584 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3040" for this suite. @ 06/23/25 16:58:05.929
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 06/23/25 16:58:05.937
  I0623 16:58:05.937487 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubelet-test @ 06/23/25 16:58:05.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:58:05.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:58:05.954
  I0623 16:58:05.986289 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1186" for this suite. @ 06/23/25 16:58:06.03
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 06/23/25 16:58:06.038
  I0623 16:58:06.038807 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 16:58:06.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:58:06.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:58:06.056
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 16:58:06.058
  STEP: Saw pod success @ 06/23/25 16:58:10.089
  I0623 16:58:10.092625 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod downwardapi-volume-76902dd9-d774-4313-bfee-7462a6a723c9 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 16:58:10.103
  I0623 16:58:10.123376 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5748" for this suite. @ 06/23/25 16:58:10.127
• [4.098 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 06/23/25 16:58:10.136
  I0623 16:58:10.136416 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 16:58:10.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:58:10.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:58:10.152
  STEP: Setting up server cert @ 06/23/25 16:58:10.171
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 16:58:10.684
  STEP: Deploying the webhook pod @ 06/23/25 16:58:10.689
  STEP: Wait for the deployment to be ready @ 06/23/25 16:58:10.703
  I0623 16:58:10.710719 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 16:58:12.723
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 16:58:12.739
  I0623 16:58:13.739580 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/23/25 16:58:13.746
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/23/25 16:58:13.746
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/23/25 16:58:13.764
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/23/25 16:58:14.774
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/23/25 16:58:14.774
  STEP: Having no error when timeout is longer than webhook latency @ 06/23/25 16:58:15.806
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/23/25 16:58:15.806
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/23/25 16:58:20.844
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/23/25 16:58:20.844
  I0623 16:58:25.937562 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6287" for this suite. @ 06/23/25 16:58:25.941
  STEP: Destroying namespace "webhook-markers-6680" for this suite. @ 06/23/25 16:58:25.949
• [15.822 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 06/23/25 16:58:25.958
  I0623 16:58:25.958703 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replicaset @ 06/23/25 16:58:25.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:58:25.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:58:25.975
  I0623 16:58:25.978065 20 replica_set.go:192] Creating ReplicaSet my-hostname-basic-d52119ee-64ce-4b58-b2b3-2a569469a790
  I0623 16:58:25.990269 20 resource.go:81] Pod name my-hostname-basic-d52119ee-64ce-4b58-b2b3-2a569469a790: Found 0 pods out of 1
  I0623 16:58:30.995555 20 resource.go:81] Pod name my-hostname-basic-d52119ee-64ce-4b58-b2b3-2a569469a790: Found 1 pods out of 1
  I0623 16:58:30.995587 20 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-d52119ee-64ce-4b58-b2b3-2a569469a790" is running
  I0623 16:58:30.998958 20 replica_set.go:221] Pod "my-hostname-basic-d52119ee-64ce-4b58-b2b3-2a569469a790-tgtbv" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-23 16:58:27 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-23 16:58:26 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-23 16:58:27 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-23 16:58:27 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-06-23 16:58:25 +0000 UTC Reason: Message:}])
  I0623 16:58:30.998981 20 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/23/25 16:58:30.999
  I0623 16:58:31.009144 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1967" for this suite. @ 06/23/25 16:58:31.012
• [5.059 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 06/23/25 16:58:31.018
  I0623 16:58:31.018036 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename podtemplate @ 06/23/25 16:58:31.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:58:31.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:58:31.032
  STEP: Create a pod template @ 06/23/25 16:58:31.034
  STEP: Replace a pod template @ 06/23/25 16:58:31.041
  I0623 16:58:31.048313 20 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0623 16:58:31.048397 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3921" for this suite. @ 06/23/25 16:58:31.113
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 06/23/25 16:58:31.119
  I0623 16:58:31.119954 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 16:58:31.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:58:31.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:58:31.133
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 06/23/25 16:58:31.138
  STEP: Awaiting for the job to fail as there are failed indexes @ 06/23/25 16:58:31.142
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 06/23/25 16:58:51.196
  I0623 16:58:51.202939 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5289" for this suite. @ 06/23/25 16:58:51.207
• [20.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/23/25 16:58:51.216
  I0623 16:58:51.216830 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename prestop @ 06/23/25 16:58:51.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:58:51.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:58:51.236
  STEP: Creating server pod server in namespace prestop-7258 @ 06/23/25 16:58:51.239
  STEP: Waiting for pods to come up. @ 06/23/25 16:58:51.252
  STEP: Creating tester pod tester in namespace prestop-7258 @ 06/23/25 16:58:53.266
  STEP: Deleting pre-stop pod @ 06/23/25 16:58:55.282
  I0623 16:59:00.298916 20 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 06/23/25 16:59:00.299
  I0623 16:59:00.318898 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7258" for this suite. @ 06/23/25 16:59:00.323
• [9.113 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/23/25 16:59:00.33
  I0623 16:59:00.330072 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename init-container @ 06/23/25 16:59:00.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:59:00.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:59:00.346
  STEP: creating the pod @ 06/23/25 16:59:00.348
  I0623 16:59:00.348647 20 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0623 16:59:04.660251 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8686" for this suite. @ 06/23/25 16:59:04.665
• [4.342 seconds]
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 06/23/25 16:59:04.672
  I0623 16:59:04.672268 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename containers @ 06/23/25 16:59:04.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:59:04.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:59:04.689
  I0623 16:59:06.724307 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4042" for this suite. @ 06/23/25 16:59:06.729
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 06/23/25 16:59:06.737
  I0623 16:59:06.737278 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename statefulset @ 06/23/25 16:59:06.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:59:06.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:59:06.754
  STEP: Creating service test in namespace statefulset-2500 @ 06/23/25 16:59:06.756
  I0623 16:59:06.777116 20 wait.go:44] Found 0 stateful pods, waiting for 1
  I0623 16:59:16.779650 20 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/23/25 16:59:16.786
  I0623 16:59:16.810308 20 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0623 16:59:16.810328 20 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0623 16:59:26.804095 20 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0623 16:59:26.804130 20 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/23/25 16:59:26.811
  STEP: Delete all of the StatefulSets @ 06/23/25 16:59:26.815
  STEP: Verify that StatefulSets have been deleted @ 06/23/25 16:59:26.825
  I0623 16:59:26.829484 20 statefulset.go:138] Deleting all statefulset in ns statefulset-2500
  I0623 16:59:26.852101 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2500" for this suite. @ 06/23/25 16:59:26.856
• [20.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/23/25 16:59:26.868
  I0623 16:59:26.868568 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename cronjob @ 06/23/25 16:59:26.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 16:59:26.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 16:59:26.886
  STEP: Creating a suspended cronjob @ 06/23/25 16:59:26.889
  STEP: Ensuring no jobs are scheduled @ 06/23/25 16:59:26.894
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/23/25 17:04:26.894
  STEP: Removing cronjob @ 06/23/25 17:04:26.899
  I0623 17:04:26.905557 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1774" for this suite. @ 06/23/25 17:04:26.909
• [300.050 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/23/25 17:04:26.92
  I0623 17:04:26.920304 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:04:26.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:04:26.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:04:26.934
  STEP: Creating secret with name projected-secret-test-7e7f86b1-a964-403e-801e-0055f9945b79 @ 06/23/25 17:04:26.937
  STEP: Creating a pod to test consume secrets @ 06/23/25 17:04:26.943
  STEP: Saw pod success @ 06/23/25 17:04:30.97
  I0623 17:04:30.974573 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-secrets-3a9db009-1dff-48b7-9596-c411befe3f20 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 17:04:30.992
  I0623 17:04:31.011127 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6853" for this suite. @ 06/23/25 17:04:31.015
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 06/23/25 17:04:31.022
  I0623 17:04:31.022916 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename disruption @ 06/23/25 17:04:31.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:04:31.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:04:31.038
  STEP: creating the pdb @ 06/23/25 17:04:31.04
  STEP: Waiting for the pdb to be processed @ 06/23/25 17:04:31.045
  STEP: updating the pdb @ 06/23/25 17:04:33.05
  STEP: Waiting for the pdb to be processed @ 06/23/25 17:04:33.061
  STEP: patching the pdb @ 06/23/25 17:04:35.066
  STEP: Waiting for the pdb to be processed @ 06/23/25 17:04:35.075
  STEP: Waiting for the pdb to be deleted @ 06/23/25 17:04:37.088
  I0623 17:04:37.092317 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8137" for this suite. @ 06/23/25 17:04:37.096
• [6.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 06/23/25 17:04:37.105
  I0623 17:04:37.105542 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 17:04:37.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:04:37.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:04:37.121
  STEP: Creating configMap with name configmap-test-volume-map-64a6db3b-c622-457a-b74c-dce2b78434f1 @ 06/23/25 17:04:37.124
  STEP: Creating a pod to test consume configMaps @ 06/23/25 17:04:37.128
  STEP: Saw pod success @ 06/23/25 17:04:41.155
  I0623 17:04:41.159470 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-configmaps-12298314-8733-4a1f-8650-c4d833dd366d container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 17:04:41.165
  I0623 17:04:41.195711 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9781" for this suite. @ 06/23/25 17:04:41.202
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 06/23/25 17:04:41.217
  I0623 17:04:41.217101 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-probe @ 06/23/25 17:04:41.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:04:41.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:04:41.239
  STEP: Creating pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211 @ 06/23/25 17:04:41.242
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/23/25 17:04:43.263
  I0623 17:04:43.266964 20 container_probe.go:1748] Initial restart count of pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d is 0
  I0623 17:04:43.270720 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:04:45.275550 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:04:47.281490 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:04:49.287863 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:04:51.293284 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:04:53.299511 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:04:55.304451 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:04:57.309701 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:04:59.315079 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:01.320197 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:03.325462 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:05.330191 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:07.335643 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:09.341255 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:11.347106 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:13.352159 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:15.357378 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:17.362810 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:19.368231 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:21.374244 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:23.380689 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:25.386031 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:27.392314 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:29.397930 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:31.403868 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:33.409536 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:35.414794 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:37.420315 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:39.426755 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:41.433000 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:43.438921 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:45.443476 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:47.449013 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:49.454538 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:51.459822 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:53.464677 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:55.469600 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:57.475195 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:05:59.480463 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:01.485985 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:03.491666 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:05.496920 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:07.502134 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:09.507582 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:11.512878 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:13.517820 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:15.523199 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:17.529438 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:19.535989 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:21.541487 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:23.547589 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:25.553335 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:27.558272 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:29.563843 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:31.569367 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:33.575547 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:35.581179 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:37.587086 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:39.592866 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:41.598398 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:43.603663 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:45.609862 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:47.616285 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:49.621351 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:51.626949 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:53.631673 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:55.636759 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:57.641686 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:06:59.647504 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:01.653094 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:03.658838 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:05.664562 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:07.669797 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:09.674988 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:11.680317 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:13.685473 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:15.690037 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:17.696101 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:19.701696 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:21.706980 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:23.712482 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:25.719478 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:27.723267 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:29.728329 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:31.732834 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:33.739206 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:35.744081 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:37.750365 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:39.756324 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:41.760981 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:43.766647 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:45.772344 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:47.777372 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:49.782572 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:51.787994 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:53.792924 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:55.799068 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:57.803392 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:07:59.808529 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:01.813680 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:03.819967 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:05.826036 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:07.832622 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:09.837797 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:11.843028 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:13.849160 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:15.854364 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:17.860541 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:19.865107 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:21.869863 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:23.875174 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:25.880882 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:27.886620 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:29.891481 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:31.897086 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:33.903126 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:35.908559 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:37.913924 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:39.919474 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  I0623 17:08:41.925205 20 container_probe.go:1758] Get pod test-grpc-2682b742-7f32-400d-ad7e-a70c2e8a224d in namespace container-probe-1211
  STEP: deleting the pod @ 06/23/25 17:08:43.926
  I0623 17:08:43.945594 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1211" for this suite. @ 06/23/25 17:08:43.951
• [242.742 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 06/23/25 17:08:43.958
  I0623 17:08:43.958956 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename daemonsets @ 06/23/25 17:08:43.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:08:43.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:08:43.976
  STEP: Creating simple DaemonSet "daemon-set" @ 06/23/25 17:08:44.067
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/23/25 17:08:44.073
  I0623 17:08:44.153013 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:08:44.153065 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:08:44.156630 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:08:44.156647 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 17:08:45.079213 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:08:45.079282 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:08:45.083644 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0623 17:08:45.083666 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 17:08:46.080174 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:08:46.080228 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:08:46.083886 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0623 17:08:46.083906 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 06/23/25 17:08:46.087
  I0623 17:08:46.091194 20 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/23/25 17:08:46.091
  I0623 17:08:46.101482 20 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/23/25 17:08:46.101
  I0623 17:08:46.103041 20 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0623 17:08:46.103108 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0623 17:08:46.103171 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0623 17:08:46.103308 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0623 17:08:46.103450 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0623 17:08:46.103526 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0623 17:08:46.103549 20 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-2237 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0623 17:08:46.103584 20 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/23/25 17:08:46.103
  STEP: watching for the daemon set status to be patched @ 06/23/25 17:08:46.111
  I0623 17:08:46.112997 20 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0623 17:08:46.113103 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0623 17:08:46.113194 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0623 17:08:46.113298 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0623 17:08:46.113497 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0623 17:08:46.113596 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0623 17:08:46.113623 20 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-2237 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0623 17:08:46.113685 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0623 17:08:46.113708 20 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-2237 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0623 17:08:46.113721 20 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/23/25 17:08:46.117
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2237, will wait for the garbage collector to delete the pods @ 06/23/25 17:08:46.117
  I0623 17:08:46.181181 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.46332ms
  I0623 17:08:46.281811 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.504296ms
  I0623 17:08:47.486885 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:08:47.486932 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0623 17:08:47.490386 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18475"},"items":null}

  I0623 17:08:47.493205 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18475"},"items":null}

  I0623 17:08:47.507658 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2237" for this suite. @ 06/23/25 17:08:47.51
• [3.560 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 06/23/25 17:08:47.519
  I0623 17:08:47.519399 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename limitrange @ 06/23/25 17:08:47.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:08:47.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:08:47.535
  STEP: Creating LimitRange "e2e-limitrange-zc6n8" in namespace "limitrange-5037" @ 06/23/25 17:08:47.537
  STEP: Creating another limitRange in another namespace @ 06/23/25 17:08:47.542
  I0623 17:08:47.554612 20 limit_range.go:299] Namespace "e2e-limitrange-zc6n8-8455" created
  I0623 17:08:47.554634 20 limit_range.go:300] Creating LimitRange "e2e-limitrange-zc6n8" in namespace "e2e-limitrange-zc6n8-8455"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-zc6n8" @ 06/23/25 17:08:47.559
  I0623 17:08:47.563953 20 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-zc6n8" in "limitrange-5037" namespace @ 06/23/25 17:08:47.563
  I0623 17:08:47.571121 20 limit_range.go:335] LimitRange "e2e-limitrange-zc6n8" has been patched
  STEP: Delete LimitRange "e2e-limitrange-zc6n8" by Collection with labelSelector: "e2e-limitrange-zc6n8=patched" @ 06/23/25 17:08:47.571
  STEP: Confirm that the limitRange "e2e-limitrange-zc6n8" has been deleted @ 06/23/25 17:08:47.581
  I0623 17:08:47.581339 20 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0623 17:08:47.584989 20 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-zc6n8=patched"
  I0623 17:08:47.585011 20 limit_range.go:344] LimitRange "e2e-limitrange-zc6n8" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-zc6n8" @ 06/23/25 17:08:47.585
  I0623 17:08:47.588578 20 limit_range.go:350] Found 1 limitRange
  I0623 17:08:47.588676 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5037" for this suite. @ 06/23/25 17:08:47.599
  STEP: Destroying namespace "e2e-limitrange-zc6n8-8455" for this suite. @ 06/23/25 17:08:47.605
• [0.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 06/23/25 17:08:47.613
  I0623 17:08:47.613717 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 17:08:47.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:08:47.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:08:47.629
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 17:08:47.631
  STEP: Saw pod success @ 06/23/25 17:08:49.681
  I0623 17:08:49.685741 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-c981c809-a239-4efb-9aaa-ba2dbaeff2e4 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 17:08:49.697
  I0623 17:08:49.716524 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9905" for this suite. @ 06/23/25 17:08:49.72
• [2.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 06/23/25 17:08:49.727
  I0623 17:08:49.727625 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/23/25 17:08:49.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:08:49.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:08:49.743
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/23/25 17:08:49.749
  I0623 17:08:49.749695 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/23/25 17:08:54.752
  I0623 17:08:54.752604 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 17:08:55.962080 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 17:09:01.078278 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6724" for this suite. @ 06/23/25 17:09:01.087
• [11.367 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/23/25 17:09:01.094
  I0623 17:09:01.094433 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename subpath @ 06/23/25 17:09:01.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:01.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:01.113
  STEP: Setting up data @ 06/23/25 17:09:01.116
  STEP: Creating pod pod-subpath-test-projected-gs47 @ 06/23/25 17:09:01.127
  STEP: Creating a pod to test atomic-volume-subpath @ 06/23/25 17:09:01.127
  STEP: Saw pod success @ 06/23/25 17:09:25.206
  I0623 17:09:25.210488 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-subpath-test-projected-gs47 container test-container-subpath-projected-gs47: <nil>
  STEP: delete the pod @ 06/23/25 17:09:25.222
  STEP: Deleting pod pod-subpath-test-projected-gs47 @ 06/23/25 17:09:25.239
  I0623 17:09:25.239172 20 delete.go:62] Deleting pod "pod-subpath-test-projected-gs47" in namespace "subpath-2600"
  I0623 17:09:25.243016 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2600" for this suite. @ 06/23/25 17:09:25.247
• [24.159 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/23/25 17:09:25.253
  I0623 17:09:25.253584 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 17:09:25.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:25.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:25.269
  STEP: Creating secret with name secret-test-ef6ebd81-abec-4563-aa05-f4d347ca91da @ 06/23/25 17:09:25.271
  STEP: Creating a pod to test consume secrets @ 06/23/25 17:09:25.279
  STEP: Saw pod success @ 06/23/25 17:09:29.304
  I0623 17:09:29.307897 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-secrets-5b329341-b01c-4161-a89a-9b84019245ce container secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 17:09:29.315
  I0623 17:09:29.333532 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7564" for this suite. @ 06/23/25 17:09:29.337
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 06/23/25 17:09:29.345
  I0623 17:09:29.345419 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sched-pred @ 06/23/25 17:09:29.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:29.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:29.36
  I0623 17:09:29.363506 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0623 17:09:29.443736 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0623 17:09:29.447457 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-24-79 before test
  I0623 17:09:29.451867 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-w2dbs from ingress-nginx-kubernetes-worker started at 2025-06-23 16:20:10 +0000 UTC (1 container statuses recorded)
  I0623 17:09:29.451892 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 17:09:29.451899 20 predicates.go:958] calico-node-4rnm2 from kube-system started at 2025-06-23 16:26:03 +0000 UTC (1 container statuses recorded)
  I0623 17:09:29.451905 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 17:09:29.451910 20 predicates.go:958] sonobuoy-e2e-job-4044e0a013834e18 from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:09:29.451915 20 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0623 17:09:29.451920 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:09:29.451926 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-6jjs2 from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:09:29.451931 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:09:29.451936 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0623 17:09:29.451946 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-41-62 before test
  I0623 17:09:29.455835 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-rzms8 from ingress-nginx-kubernetes-worker started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 17:09:29.455852 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 17:09:29.455859 20 predicates.go:958] calico-node-pkv8k from kube-system started at 2025-06-23 16:25:48 +0000 UTC (1 container statuses recorded)
  I0623 17:09:29.455864 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 17:09:29.455870 20 predicates.go:958] coredns-5d946bb58-dwr2m from kube-system started at 2025-06-23 16:13:37 +0000 UTC (1 container statuses recorded)
  I0623 17:09:29.455875 20 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0623 17:09:29.455880 20 predicates.go:958] kube-state-metrics-b84f44f45-wtc2j from kube-system started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 17:09:29.455885 20 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0623 17:09:29.455892 20 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-5ccr4 from kube-system started at 2025-06-23 16:13:37 +0000 UTC (2 container statuses recorded)
  I0623 17:09:29.455897 20 predicates.go:960] 	Container metrics-server ready: true, restart count 3
  I0623 17:09:29.455906 20 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0623 17:09:29.455912 20 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-rngzp from kubernetes-dashboard started at 2025-06-23 16:13:37 +0000 UTC (1 container statuses recorded)
  I0623 17:09:29.455920 20 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0623 17:09:29.455926 20 predicates.go:958] kubernetes-dashboard-6858576c98-k68wt from kubernetes-dashboard started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 17:09:29.455933 20 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 0
  I0623 17:09:29.455940 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-z6cwd from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:09:29.455951 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:09:29.455956 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0623 17:09:29.455967 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-64-108 before test
  I0623 17:09:29.460635 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-422sh from ingress-nginx-kubernetes-worker started at 2025-06-23 16:40:31 +0000 UTC (1 container statuses recorded)
  I0623 17:09:29.460649 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 17:09:29.460657 20 predicates.go:958] calico-node-jfknj from kube-system started at 2025-06-23 16:25:33 +0000 UTC (1 container statuses recorded)
  I0623 17:09:29.460662 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 17:09:29.460712 20 predicates.go:958] sonobuoy from sonobuoy started at 2025-06-23 16:28:34 +0000 UTC (1 container statuses recorded)
  I0623 17:09:29.460718 20 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0623 17:09:29.460725 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-mspjn from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:09:29.460753 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:09:29.460758 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/23/25 17:09:29.46
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/23/25 17:09:31.487
  STEP: Trying to apply a random label on the found node. @ 06/23/25 17:09:31.498
  STEP: verifying the node has the label kubernetes.io/e2e-dec80552-1763-46d1-a218-9fef9894cb3e 42 @ 06/23/25 17:09:31.508
  STEP: Trying to relaunch the pod, now with labels. @ 06/23/25 17:09:31.51
  STEP: removing the label kubernetes.io/e2e-dec80552-1763-46d1-a218-9fef9894cb3e off the node ip-172-31-64-108 @ 06/23/25 17:09:33.53
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-dec80552-1763-46d1-a218-9fef9894cb3e @ 06/23/25 17:09:33.543
  I0623 17:09:33.545991 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9432" for this suite. @ 06/23/25 17:09:33.551
• [4.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 06/23/25 17:09:33.559
  I0623 17:09:33.559826 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pv @ 06/23/25 17:09:33.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:33.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:33.574
  STEP: Creating initial PV and PVC @ 06/23/25 17:09:33.577
  I0623 17:09:33.577036 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9731" @ 06/23/25 17:09:33.589
  STEP: Listing PVCs in namespace "pv-9731" @ 06/23/25 17:09:33.591
  STEP: Reading "pvc-vckc7" Status @ 06/23/25 17:09:33.701
  STEP: Reading "pv-9731-pb295" Status @ 06/23/25 17:09:33.706
  STEP: Patching "pvc-vckc7" Status @ 06/23/25 17:09:33.711
  STEP: Patching "pv-9731-pb295" Status @ 06/23/25 17:09:33.718
  STEP: Updating "pvc-vckc7" Status @ 06/23/25 17:09:33.726
  STEP: Updating "pv-9731-pb295" Status @ 06/23/25 17:09:33.734
  I0623 17:09:33.766323 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0623 17:09:33.766350 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-vckc7"
  I0623 17:09:33.773035 20 pv.go:193] Deleting PersistentVolume "pv-9731-pb295"
  I0623 17:09:33.779490 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9731" for this suite. @ 06/23/25 17:09:33.783
• [0.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 06/23/25 17:09:33.79
  I0623 17:09:33.790224 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 17:09:33.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:33.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:33.806
  STEP: Creating configMap that has name configmap-test-emptyKey-607ae4d9-4168-41e4-8684-0e68dd6baad6 @ 06/23/25 17:09:33.809
  I0623 17:09:33.810661 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1935" for this suite. @ 06/23/25 17:09:33.884
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 06/23/25 17:09:33.893
  I0623 17:09:33.893169 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/23/25 17:09:33.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:33.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:33.91
  I0623 17:09:33.912426 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 17:09:34.450575 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-990" for this suite. @ 06/23/25 17:09:34.458
• [0.575 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/23/25 17:09:34.468
  I0623 17:09:34.468614 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 17:09:34.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:34.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:34.486
  I0623 17:09:34.527534 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6220" for this suite. @ 06/23/25 17:09:34.558
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 06/23/25 17:09:34.567
  I0623 17:09:34.567355 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:09:34.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:34.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:34.584
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 17:09:34.586
  STEP: Saw pod success @ 06/23/25 17:09:36.603
  I0623 17:09:36.607449 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod downwardapi-volume-1d019eca-0777-4985-b399-02f9d8b154ad container client-container: <nil>
  STEP: delete the pod @ 06/23/25 17:09:36.623
  I0623 17:09:36.643575 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6739" for this suite. @ 06/23/25 17:09:36.647
• [2.086 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 06/23/25 17:09:36.653
  I0623 17:09:36.653064 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 17:09:36.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:36.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:36.668
  STEP: Creating configMap with name configmap-test-upd-440d31af-efc0-4844-ab1b-c58bfc28863a @ 06/23/25 17:09:36.748
  STEP: Creating the pod @ 06/23/25 17:09:36.755
  STEP: Updating configmap configmap-test-upd-440d31af-efc0-4844-ab1b-c58bfc28863a @ 06/23/25 17:09:38.787
  STEP: waiting to observe update in volume @ 06/23/25 17:09:38.791
  I0623 17:09:42.815968 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7368" for this suite. @ 06/23/25 17:09:42.821
• [6.175 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/23/25 17:09:42.827
  I0623 17:09:42.827953 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pods @ 06/23/25 17:09:42.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:42.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:42.842
  I0623 17:09:42.844729 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: creating the pod @ 06/23/25 17:09:42.845
  STEP: submitting the pod to kubernetes @ 06/23/25 17:09:42.845
  STEP: waiting for the container to be running @ 06/23/25 17:09:44.866
  I0623 17:09:44.885612 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3183" for this suite. @ 06/23/25 17:09:44.89
• [2.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 06/23/25 17:09:44.898
  I0623 17:09:44.898584 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:09:44.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:44.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:44.913
  STEP: Setting up server cert @ 06/23/25 17:09:44.933
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:09:45.137
  STEP: Deploying the webhook pod @ 06/23/25 17:09:45.144
  STEP: Wait for the deployment to be ready @ 06/23/25 17:09:45.158
  I0623 17:09:45.164836 20 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/23/25 17:09:47.178
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:09:47.195
  I0623 17:09:48.195687 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/23/25 17:09:48.201
  STEP: create a namespace for the webhook @ 06/23/25 17:09:48.215
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/23/25 17:09:48.227
  I0623 17:09:48.283340 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2152" for this suite. @ 06/23/25 17:09:48.289
  STEP: Destroying namespace "webhook-markers-4799" for this suite. @ 06/23/25 17:09:48.295
  STEP: Destroying namespace "fail-closed-namespace-8552" for this suite. @ 06/23/25 17:09:48.301
• [3.411 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 06/23/25 17:09:48.309
  I0623 17:09:48.309731 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/23/25 17:09:48.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:48.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:48.327
  STEP: getting /apis @ 06/23/25 17:09:48.334
  STEP: getting /apis/admissionregistration.k8s.io @ 06/23/25 17:09:48.337
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 06/23/25 17:09:48.338
  STEP: creating @ 06/23/25 17:09:48.339
  STEP: getting @ 06/23/25 17:09:48.379
  STEP: listing @ 06/23/25 17:09:48.383
  STEP: watching @ 06/23/25 17:09:48.391
  I0623 17:09:48.391223 20 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 06/23/25 17:09:48.392
  STEP: updating @ 06/23/25 17:09:48.4
  I0623 17:09:48.414431 20 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 06/23/25 17:09:48.414
  STEP: patching /status @ 06/23/25 17:09:48.418
  STEP: updating /status @ 06/23/25 17:09:48.425
  STEP: deleting @ 06/23/25 17:09:48.434
  STEP: deleting a collection @ 06/23/25 17:09:48.45
  I0623 17:09:48.473672 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1399" for this suite. @ 06/23/25 17:09:48.478
• [0.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 06/23/25 17:09:48.485
  I0623 17:09:48.485872 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename dns @ 06/23/25 17:09:48.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:48.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:48.502
  STEP: Creating a test headless service @ 06/23/25 17:09:48.504
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1855.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-1855.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 06/23/25 17:09:48.511
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1855.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1855.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/23/25 17:09:48.511
  STEP: creating a pod to probe DNS @ 06/23/25 17:09:48.511
  STEP: submitting the pod to kubernetes @ 06/23/25 17:09:48.511
  STEP: retrieving the pod @ 06/23/25 17:09:50.534
  STEP: looking for the results for each expected name from probers @ 06/23/25 17:09:50.538
  I0623 17:09:50.557428 20 dns_common.go:546] DNS probes using dns-1855/dns-test-21407bb6-0cca-4e61-b074-629834a79e93 succeeded

  STEP: deleting the pod @ 06/23/25 17:09:50.557
  STEP: deleting the test headless service @ 06/23/25 17:09:50.578
  I0623 17:09:50.591718 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1855" for this suite. @ 06/23/25 17:09:50.597
• [2.117 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 06/23/25 17:09:50.602
  I0623 17:09:50.602712 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename containers @ 06/23/25 17:09:50.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:50.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:50.621
  STEP: Creating a pod to test override arguments @ 06/23/25 17:09:50.623
  STEP: Saw pod success @ 06/23/25 17:09:54.651
  I0623 17:09:54.655457 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod client-containers-8e949217-5cc0-46c5-95ce-94b86007b14c container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 17:09:54.66
  I0623 17:09:54.680818 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2745" for this suite. @ 06/23/25 17:09:54.686
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 06/23/25 17:09:54.692
  I0623 17:09:54.692062 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 17:09:54.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:54.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:54.71
  STEP: Creating projection with secret that has name secret-emptykey-test-0ca28e45-f31e-47f2-a441-299ecc6fec46 @ 06/23/25 17:09:54.712
  I0623 17:09:54.713508 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3711" for this suite. @ 06/23/25 17:09:54.787
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/23/25 17:09:54.796
  I0623 17:09:54.796937 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:09:54.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:54.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:54.814
  STEP: Creating projection with secret that has name projected-secret-test-0fae3084-405e-427a-b78d-379aab5c4c02 @ 06/23/25 17:09:54.816
  STEP: Creating a pod to test consume secrets @ 06/23/25 17:09:54.825
  STEP: Saw pod success @ 06/23/25 17:09:56.845
  I0623 17:09:56.848571 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-secrets-970d7dd5-9386-47d4-8976-7512ff1c744d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 17:09:56.856
  I0623 17:09:56.874010 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8140" for this suite. @ 06/23/25 17:09:56.878
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 06/23/25 17:09:56.884
  I0623 17:09:56.884497 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename namespaces @ 06/23/25 17:09:56.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:56.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:56.901
  STEP: Read namespace status @ 06/23/25 17:09:56.903
  I0623 17:09:56.906944 20 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/23/25 17:09:56.906
  I0623 17:09:56.913219 20 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/23/25 17:09:56.913
  I0623 17:09:56.922927 20 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0623 17:09:56.923007 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2108" for this suite. @ 06/23/25 17:09:56.979
• [0.104 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/23/25 17:09:56.989
  I0623 17:09:56.989039 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename events @ 06/23/25 17:09:56.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:57.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:57.004
  STEP: Create set of events @ 06/23/25 17:09:57.007
  STEP: get a list of Events with a label in the current namespace @ 06/23/25 17:09:57.026
  STEP: delete a list of events @ 06/23/25 17:09:57.03
  I0623 17:09:57.030901 20 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/23/25 17:09:57.051
  I0623 17:09:57.055759 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4884" for this suite. @ 06/23/25 17:09:57.08
• [0.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 06/23/25 17:09:57.089
  I0623 17:09:57.089256 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename var-expansion @ 06/23/25 17:09:57.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:09:57.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:09:57.104
  I0623 17:09:59.127535 20 delete.go:62] Deleting pod "var-expansion-c8d0778c-2351-4ffc-8366-d2d2e1d50ac3" in namespace "var-expansion-3816"
  I0623 17:09:59.136154 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-c8d0778c-2351-4ffc-8366-d2d2e1d50ac3" to be fully deleted
  I0623 17:10:01.144750 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3816" for this suite. @ 06/23/25 17:10:01.149
• [4.068 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 06/23/25 17:10:01.157
  I0623 17:10:01.157933 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/23/25 17:10:01.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:01.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:01.173
  I0623 17:10:01.175610 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/23/25 17:10:02.478
  I0623 17:10:02.478249 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-5859 --namespace=crd-publish-openapi-5859 create -f -'
  I0623 17:10:04.546403 20 builder.go:146] stderr: ""
  I0623 17:10:04.546449 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8111-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0623 17:10:04.546501 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-5859 --namespace=crd-publish-openapi-5859 delete e2e-test-crd-publish-openapi-8111-crds test-cr'
  I0623 17:10:04.594767 20 builder.go:146] stderr: ""
  I0623 17:10:04.594823 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8111-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0623 17:10:04.594857 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-5859 --namespace=crd-publish-openapi-5859 apply -f -'
  I0623 17:10:04.648341 20 builder.go:146] stderr: ""
  I0623 17:10:04.648380 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8111-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0623 17:10:04.648417 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-5859 --namespace=crd-publish-openapi-5859 delete e2e-test-crd-publish-openapi-8111-crds test-cr'
  I0623 17:10:04.695941 20 builder.go:146] stderr: ""
  I0623 17:10:04.695974 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8111-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/23/25 17:10:04.695
  I0623 17:10:04.696039 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-5859 explain e2e-test-crd-publish-openapi-8111-crds'
  I0623 17:10:04.736191 20 builder.go:146] stderr: ""
  I0623 17:10:04.736255 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8111-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0623 17:10:05.977616 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5859" for this suite. @ 06/23/25 17:10:05.984
• [4.836 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 06/23/25 17:10:05.993
  I0623 17:10:05.993845 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 17:10:05.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:06.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:06.009
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 06/23/25 17:10:06.011
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 06/23/25 17:10:06.015
  STEP: Ensure that the job reaches completions @ 06/23/25 17:10:10.028
  STEP: Verifying that the only appropriately index succeeded @ 06/23/25 17:10:10.036
  I0623 17:10:10.039499 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9513" for this suite. @ 06/23/25 17:10:10.043
• [4.057 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 06/23/25 17:10:10.05
  I0623 17:10:10.050744 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sched-pred @ 06/23/25 17:10:10.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:10.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:10.067
  I0623 17:10:10.069434 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0623 17:10:10.149297 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0623 17:10:10.153156 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-24-79 before test
  I0623 17:10:10.157372 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-w2dbs from ingress-nginx-kubernetes-worker started at 2025-06-23 16:20:10 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.157398 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 17:10:10.157406 20 predicates.go:958] with-success-policy-succeeded-indexed-0-kwwjh from job-9513 started at 2025-06-23 17:10:06 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.157412 20 predicates.go:960] 	Container c ready: false, restart count 0
  I0623 17:10:10.157417 20 predicates.go:958] calico-node-4rnm2 from kube-system started at 2025-06-23 16:26:03 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.157435 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 17:10:10.157441 20 predicates.go:958] sonobuoy-e2e-job-4044e0a013834e18 from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:10:10.157447 20 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0623 17:10:10.157453 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:10:10.157459 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-6jjs2 from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:10:10.157465 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:10:10.157470 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0623 17:10:10.157475 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-41-62 before test
  I0623 17:10:10.161655 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-rzms8 from ingress-nginx-kubernetes-worker started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.161673 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 17:10:10.161679 20 predicates.go:958] calico-node-pkv8k from kube-system started at 2025-06-23 16:25:48 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.161685 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 17:10:10.161691 20 predicates.go:958] coredns-5d946bb58-dwr2m from kube-system started at 2025-06-23 16:13:37 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.161696 20 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0623 17:10:10.161701 20 predicates.go:958] kube-state-metrics-b84f44f45-wtc2j from kube-system started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.161706 20 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0623 17:10:10.161711 20 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-5ccr4 from kube-system started at 2025-06-23 16:13:37 +0000 UTC (2 container statuses recorded)
  I0623 17:10:10.161715 20 predicates.go:960] 	Container metrics-server ready: true, restart count 3
  I0623 17:10:10.161719 20 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0623 17:10:10.161724 20 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-rngzp from kubernetes-dashboard started at 2025-06-23 16:13:37 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.161729 20 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0623 17:10:10.161735 20 predicates.go:958] kubernetes-dashboard-6858576c98-k68wt from kubernetes-dashboard started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.161740 20 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 0
  I0623 17:10:10.161746 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-z6cwd from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:10:10.161752 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:10:10.161757 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0623 17:10:10.161767 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-64-108 before test
  I0623 17:10:10.165895 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-422sh from ingress-nginx-kubernetes-worker started at 2025-06-23 16:40:31 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.165915 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 17:10:10.165922 20 predicates.go:958] with-success-policy-succeeded-indexed-1-pc6b4 from job-9513 started at 2025-06-23 17:10:06 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.165927 20 predicates.go:960] 	Container c ready: false, restart count 0
  I0623 17:10:10.165955 20 predicates.go:958] calico-node-jfknj from kube-system started at 2025-06-23 16:25:33 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.165960 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 17:10:10.165965 20 predicates.go:958] pod-logs-websocket-7b03d354-8d3d-4139-88f6-e75fa77ceb2c from pods-3183 started at 2025-06-23 17:09:42 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.165970 20 predicates.go:960] 	Container main ready: true, restart count 0
  I0623 17:10:10.165988 20 predicates.go:958] sonobuoy from sonobuoy started at 2025-06-23 16:28:34 +0000 UTC (1 container statuses recorded)
  I0623 17:10:10.165993 20 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0623 17:10:10.166073 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-mspjn from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:10:10.166091 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:10:10.166097 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/23/25 17:10:10.166
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.184bbb1c414d2ee9], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 06/23/25 17:10:10.203
  I0623 17:10:11.197060 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7588" for this suite. @ 06/23/25 17:10:11.201
• [1.157 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 06/23/25 17:10:11.207
  I0623 17:10:11.207633 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replicaset @ 06/23/25 17:10:11.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:11.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:11.225
  STEP: Create a ReplicaSet @ 06/23/25 17:10:11.227
  STEP: Verify that the required pods have come up @ 06/23/25 17:10:11.234
  I0623 17:10:11.264499 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 3
  I0623 17:10:16.269647 20 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/23/25 17:10:16.269
  I0623 17:10:16.272217 20 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/23/25 17:10:16.272
  STEP: DeleteCollection of the ReplicaSets @ 06/23/25 17:10:16.276
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/23/25 17:10:16.286
  I0623 17:10:16.289029 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8249" for this suite. @ 06/23/25 17:10:16.292
• [5.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/23/25 17:10:16.3
  I0623 17:10:16.300178 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename deployment @ 06/23/25 17:10:16.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:16.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:16.326
  I0623 17:10:16.329211 20 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0623 17:10:16.339807 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0623 17:10:21.347071 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/23/25 17:10:21.347
  I0623 17:10:21.347139 20 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0623 17:10:21.353128 20 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0623 17:10:21.359754 20 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0623 17:10:23.369136 20 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0623 17:10:23.372495 20 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0623 17:10:23.384355 20 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7255",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "615a0217-6b76-42fa-9501-a355625bc3e4",
      ResourceVersion: (string) (len=5) "19693",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886295421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0623 17:10:23.388842 20 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7255",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5c770d4-5bd3-4187-8053-1f6ed27f6335",
      ResourceVersion: (string) (len=5) "19683",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886295421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "615a0217-6b76-42fa-9501-a355625bc3e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 31 35 61 30 32  31 37 2d 36 62 37 36 2d  |\"615a0217-6b76-|
              00000120  34 32 66 61 2d 39 35 30  31 2d 61 33 35 35 36 32  |42fa-9501-a35562|
              00000130  35 62 63 33 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5bc3e4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 17:10:23.389344 20 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0623 17:10:23.389550 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7255",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9937c54f-1190-4727-a8ed-3a361c4dc570",
      ResourceVersion: (string) (len=5) "19692",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886295416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "615a0217-6b76-42fa-9501-a355625bc3e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 36 31 35 61 30 32 31  |"uid\":\"615a021|
              000000b0  37 2d 36 62 37 36 2d 34  32 66 61 2d 39 35 30 31  |7-6b76-42fa-9501|
              000000c0  2d 61 33 35 35 36 32 35  62 63 33 65 34 5c 22 7d  |-a355625bc3e4\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 17:10:23.393694 20 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-25lcr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-25lcr",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-7255",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65d7880d-b7ad-432a-a855-626ecb9c3eee",
      ResourceVersion: (string) (len=5) "19682",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886295421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "c5c770d4-5bd3-4187-8053-1f6ed27f6335",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 35  63 37 37 30 64 34 2d 35  |d\":\"c5c770d4-5|
              00000090  62 64 33 2d 34 31 38 37  2d 38 30 35 33 2d 31 66  |bd3-4187-8053-1f|
              000000a0  36 65 64 32 37 66 36 33  33 35 5c 22 7d 22 3a 7b  |6ed27f6335\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 31 32 37 5c 22 7d  |2.168.156.127\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5s5v4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5s5v4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886295421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=15) "192.168.156.127",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.127"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886295421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886295421,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://cdc2313e0d7c2c0fb6eb2f90f96c8fc1d29e368093c538cc4cc42950e0bfa4c3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5s5v4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 17:10:23.394822 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7255" for this suite. @ 06/23/25 17:10:23.399
• [7.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 06/23/25 17:10:23.408
  I0623 17:10:23.408484 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 17:10:23.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:23.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:23.423
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/23/25 17:10:23.425
  I0623 17:10:23.425903 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-8273 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0623 17:10:23.477292 20 builder.go:146] stderr: ""
  I0623 17:10:23.477330 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/23/25 17:10:23.477
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/23/25 17:10:28.531
  I0623 17:10:28.531964 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-8273 get pod e2e-test-httpd-pod -o json'
  I0623 17:10:28.636169 20 builder.go:146] stderr: ""
  I0623 17:10:28.636264 20 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-06-23T17:10:23Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8273\",\n        \"resourceVersion\": \"19720\",\n        \"uid\": \"a034680a-9571-47ac-b41c-c4058c0a5dda\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-pplhp\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-64-108\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-pplhp\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-06-23T17:10:24Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-06-23T17:10:23Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-06-23T17:10:24Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-06-23T17:10:24Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-06-23T17:10:23Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://990e03a8c1adebf8767c14d043a290d4e99ddeec5abfe1970e5ac0752f623619\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-06-23T17:10:24Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-pplhp\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.64.108\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.64.108\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.81.119\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.81.119\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-06-23T17:10:23Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/23/25 17:10:28.636
  I0623 17:10:28.636355 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-8273 replace -f -'
  I0623 17:10:28.736052 20 builder.go:146] stderr: ""
  I0623 17:10:28.736091 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 06/23/25 17:10:28.736
  I0623 17:10:28.741097 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-8273 delete pods e2e-test-httpd-pod'
  I0623 17:10:30.625387 20 builder.go:146] stderr: ""
  I0623 17:10:30.625424 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0623 17:10:30.625600 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8273" for this suite. @ 06/23/25 17:10:30.63
• [7.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 06/23/25 17:10:30.636
  I0623 17:10:30.636238 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 17:10:30.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:30.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:30.652
  STEP: Creating Pod @ 06/23/25 17:10:30.654
  STEP: Reading file content from the nginx-container @ 06/23/25 17:10:32.672
  I0623 17:10:32.672744 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-6402 PodName:pod-sharedvolume-802fe086-ec6a-4fbd-b70e-7c6a26911abb ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:10:32.672762 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:10:32.672820 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/emptydir-6402/pods/pod-sharedvolume-802fe086-ec6a-4fbd-b70e-7c6a26911abb/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0623 17:10:32.721273 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:10:32.721311 20 exec_util.go:112] Exec stderr: ""
  I0623 17:10:32.721496 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6402" for this suite. @ 06/23/25 17:10:32.726
• [2.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/23/25 17:10:32.732
  I0623 17:10:32.732461 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename events @ 06/23/25 17:10:32.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:32.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:32.748
  STEP: creating a test event @ 06/23/25 17:10:32.75
  STEP: listing events in all namespaces @ 06/23/25 17:10:32.754
  STEP: listing events in test namespace @ 06/23/25 17:10:32.765
  STEP: listing events with field selection filtering on source @ 06/23/25 17:10:32.769
  STEP: listing events with field selection filtering on reportingController @ 06/23/25 17:10:32.772
  STEP: getting the test event @ 06/23/25 17:10:32.775
  STEP: patching the test event @ 06/23/25 17:10:32.778
  STEP: getting the test event @ 06/23/25 17:10:32.787
  STEP: updating the test event @ 06/23/25 17:10:32.791
  STEP: getting the test event @ 06/23/25 17:10:32.797
  STEP: deleting the test event @ 06/23/25 17:10:32.8
  STEP: listing events in all namespaces @ 06/23/25 17:10:32.811
  STEP: listing events in test namespace @ 06/23/25 17:10:32.822
  I0623 17:10:32.826024 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1017" for this suite. @ 06/23/25 17:10:32.83
• [0.104 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 06/23/25 17:10:32.837
  I0623 17:10:32.837024 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:10:32.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:32.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:32.852
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 17:10:32.855
  STEP: Saw pod success @ 06/23/25 17:10:36.877
  I0623 17:10:36.880932 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod downwardapi-volume-bcea952c-05e3-445b-8324-77f99854fa90 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 17:10:36.888
  I0623 17:10:36.905129 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1717" for this suite. @ 06/23/25 17:10:36.909
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 06/23/25 17:10:36.916
  I0623 17:10:36.916760 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 17:10:36.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:36.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:36.932
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/23/25 17:10:36.935
  STEP: Saw pod success @ 06/23/25 17:10:40.959
  I0623 17:10:40.963420 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod pod-8e7cf594-8766-441d-baeb-417cb3f67ffe container test-container: <nil>
  STEP: delete the pod @ 06/23/25 17:10:40.97
  I0623 17:10:40.990088 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4194" for this suite. @ 06/23/25 17:10:40.994
• [4.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 06/23/25 17:10:41.001
  I0623 17:10:41.001418 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replicaset @ 06/23/25 17:10:41.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:41.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:41.016
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/23/25 17:10:41.018
  I0623 17:10:41.028208 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0623 17:10:46.033269 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/23/25 17:10:46.033
  STEP: getting scale subresource @ 06/23/25 17:10:46.033
  STEP: updating a scale subresource @ 06/23/25 17:10:46.036
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/23/25 17:10:46.041
  STEP: Patch a scale subresource @ 06/23/25 17:10:46.044
  I0623 17:10:46.059363 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-932" for this suite. @ 06/23/25 17:10:46.064
• [5.073 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 06/23/25 17:10:46.074
  I0623 17:10:46.074154 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename daemonsets @ 06/23/25 17:10:46.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:46.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:46.09
  STEP: Creating simple DaemonSet "daemon-set" @ 06/23/25 17:10:46.176
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/23/25 17:10:46.185
  I0623 17:10:46.265854 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:10:46.265899 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:10:46.269162 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:10:46.269178 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 17:10:47.191462 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:10:47.191506 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:10:47.195488 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0623 17:10:47.195506 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 17:10:48.190898 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:10:48.190947 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:10:48.195755 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0623 17:10:48.195791 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/23/25 17:10:48.199
  STEP: DeleteCollection of the DaemonSets @ 06/23/25 17:10:48.202
  STEP: Verify that ReplicaSets have been deleted @ 06/23/25 17:10:48.212
  I0623 17:10:48.232858 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20036"},"items":null}

  I0623 17:10:48.238539 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20037"},"items":[{"metadata":{"name":"daemon-set-7vrr6","generateName":"daemon-set-","namespace":"daemonsets-8635","uid":"feb935b0-0bdc-4164-bd43-015668efa571","resourceVersion":"20037","generation":2,"creationTimestamp":"2025-06-23T17:10:46Z","deletionTimestamp":"2025-06-23T17:11:18Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"67bb5041-b820-4926-83f9-c9ef76f7f72e","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-06-23T17:10:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"67bb5041-b820-4926-83f9-c9ef76f7f72e\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-06-23T17:10:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.99.33\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rqxbg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rqxbg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-41-62","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-41-62"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:46Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:46Z"}],"hostIP":"172.31.41.62","hostIPs":[{"ip":"172.31.41.62"}],"podIP":"192.168.99.33","podIPs":[{"ip":"192.168.99.33"}],"startTime":"2025-06-23T17:10:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-06-23T17:10:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://83a7ba44520a966fc8491141c0b7f5169e165ab41c322487d84e3738e699e4b7","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-rqxbg","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-bqwbj","generateName":"daemon-set-","namespace":"daemonsets-8635","uid":"5ab5ff60-312e-4845-b3ed-a26a08c59693","resourceVersion":"20035","generation":2,"creationTimestamp":"2025-06-23T17:10:46Z","deletionTimestamp":"2025-06-23T17:11:18Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"67bb5041-b820-4926-83f9-c9ef76f7f72e","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-06-23T17:10:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"67bb5041-b820-4926-83f9-c9ef76f7f72e\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-06-23T17:10:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.123\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vpn6q","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vpn6q","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-64-108","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-64-108"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:47Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:47Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:47Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:46Z"}],"hostIP":"172.31.64.108","hostIPs":[{"ip":"172.31.64.108"}],"podIP":"192.168.81.123","podIPs":[{"ip":"192.168.81.123"}],"startTime":"2025-06-23T17:10:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-06-23T17:10:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://5b89a546429368e39ba019a5f77a294fa596441eccc8c4776bf7abc4b3b47196","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-vpn6q","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qz9w2","generateName":"daemon-set-","namespace":"daemonsets-8635","uid":"e231d623-8b45-4f2e-9fe8-12a9dae536b1","resourceVersion":"20034","generation":2,"creationTimestamp":"2025-06-23T17:10:46Z","deletionTimestamp":"2025-06-23T17:11:18Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"67bb5041-b820-4926-83f9-c9ef76f7f72e","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-06-23T17:10:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"67bb5041-b820-4926-83f9-c9ef76f7f72e\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-06-23T17:10:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.156.68\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-szzlt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-szzlt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-24-79","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-24-79"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:47Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:47Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:47Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-06-23T17:10:46Z"}],"hostIP":"172.31.24.79","hostIPs":[{"ip":"172.31.24.79"}],"podIP":"192.168.156.68","podIPs":[{"ip":"192.168.156.68"}],"startTime":"2025-06-23T17:10:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-06-23T17:10:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://06c407da756d4e18e8eab469942d63771c2ccf3d7154d555df1950dc8967fdb7","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-szzlt","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0623 17:10:48.302816 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8635" for this suite. @ 06/23/25 17:10:48.306
• [2.240 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 06/23/25 17:10:48.313
  I0623 17:10:48.313870 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:10:48.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:48.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:48.329
  STEP: Setting up server cert @ 06/23/25 17:10:48.346
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:10:48.834
  STEP: Deploying the webhook pod @ 06/23/25 17:10:48.839
  STEP: Wait for the deployment to be ready @ 06/23/25 17:10:48.853
  I0623 17:10:48.862008 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:10:50.876
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:10:50.896
  I0623 17:10:51.896665 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 06/23/25 17:10:51.901
  STEP: verifying the mutating webhook match conditions @ 06/23/25 17:10:51.908
  STEP: updating the mutating webhook match conditions @ 06/23/25 17:10:51.912
  STEP: verifying the mutating webhook match conditions @ 06/23/25 17:10:51.923
  I0623 17:10:51.975566 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2686" for this suite. @ 06/23/25 17:10:51.979
  STEP: Destroying namespace "webhook-markers-3656" for this suite. @ 06/23/25 17:10:51.986
• [3.681 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 06/23/25 17:10:51.995
  I0623 17:10:51.995365 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename gc @ 06/23/25 17:10:51.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:10:52.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:10:52.012
  STEP: create the rc @ 06/23/25 17:10:52.08
  I0623 17:10:52.086326      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 06/23/25 17:10:58.091
  STEP: wait for the rc to be deleted @ 06/23/25 17:10:58.099
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/23/25 17:11:03.11
  STEP: Gathering metrics @ 06/23/25 17:11:33.121
  W0623 17:11:33.126897      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0623 17:11:33.126930 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0623 17:11:33.126986 20 delete.go:95] Deleting pod "simpletest.rc-29cg4" in namespace "gc-8964"
  I0623 17:11:33.143449 20 delete.go:95] Deleting pod "simpletest.rc-2g66m" in namespace "gc-8964"
  I0623 17:11:33.154186 20 delete.go:95] Deleting pod "simpletest.rc-2mm2t" in namespace "gc-8964"
  I0623 17:11:33.170457 20 delete.go:95] Deleting pod "simpletest.rc-2x8dg" in namespace "gc-8964"
  I0623 17:11:33.183517 20 delete.go:95] Deleting pod "simpletest.rc-44r5r" in namespace "gc-8964"
  I0623 17:11:33.195510 20 delete.go:95] Deleting pod "simpletest.rc-4cqq6" in namespace "gc-8964"
  I0623 17:11:33.210275 20 delete.go:95] Deleting pod "simpletest.rc-4j4q2" in namespace "gc-8964"
  I0623 17:11:33.227690 20 delete.go:95] Deleting pod "simpletest.rc-4lbh5" in namespace "gc-8964"
  I0623 17:11:33.244800 20 delete.go:95] Deleting pod "simpletest.rc-4lrjh" in namespace "gc-8964"
  I0623 17:11:33.257836 20 delete.go:95] Deleting pod "simpletest.rc-4rm5s" in namespace "gc-8964"
  I0623 17:11:33.269986 20 delete.go:95] Deleting pod "simpletest.rc-4s9rr" in namespace "gc-8964"
  I0623 17:11:33.282876 20 delete.go:95] Deleting pod "simpletest.rc-4sfh9" in namespace "gc-8964"
  I0623 17:11:33.297188 20 delete.go:95] Deleting pod "simpletest.rc-4xd79" in namespace "gc-8964"
  I0623 17:11:33.309497 20 delete.go:95] Deleting pod "simpletest.rc-6v9tw" in namespace "gc-8964"
  I0623 17:11:33.323250 20 delete.go:95] Deleting pod "simpletest.rc-75swk" in namespace "gc-8964"
  I0623 17:11:33.336241 20 delete.go:95] Deleting pod "simpletest.rc-7kbd8" in namespace "gc-8964"
  I0623 17:11:33.359336 20 delete.go:95] Deleting pod "simpletest.rc-7llgj" in namespace "gc-8964"
  I0623 17:11:33.374607 20 delete.go:95] Deleting pod "simpletest.rc-7mqzv" in namespace "gc-8964"
  I0623 17:11:33.385354 20 delete.go:95] Deleting pod "simpletest.rc-7phzk" in namespace "gc-8964"
  I0623 17:11:33.398067 20 delete.go:95] Deleting pod "simpletest.rc-86px4" in namespace "gc-8964"
  I0623 17:11:33.413527 20 delete.go:95] Deleting pod "simpletest.rc-8b28x" in namespace "gc-8964"
  I0623 17:11:33.429199 20 delete.go:95] Deleting pod "simpletest.rc-8h2tx" in namespace "gc-8964"
  I0623 17:11:33.445571 20 delete.go:95] Deleting pod "simpletest.rc-8jpxs" in namespace "gc-8964"
  I0623 17:11:33.459396 20 delete.go:95] Deleting pod "simpletest.rc-98rqs" in namespace "gc-8964"
  I0623 17:11:33.476075 20 delete.go:95] Deleting pod "simpletest.rc-9brgf" in namespace "gc-8964"
  I0623 17:11:33.490864 20 delete.go:95] Deleting pod "simpletest.rc-9zh6h" in namespace "gc-8964"
  I0623 17:11:33.507272 20 delete.go:95] Deleting pod "simpletest.rc-bklqc" in namespace "gc-8964"
  I0623 17:11:33.523001 20 delete.go:95] Deleting pod "simpletest.rc-bv6n9" in namespace "gc-8964"
  I0623 17:11:33.539890 20 delete.go:95] Deleting pod "simpletest.rc-bvs57" in namespace "gc-8964"
  I0623 17:11:33.551354 20 delete.go:95] Deleting pod "simpletest.rc-bxlxk" in namespace "gc-8964"
  I0623 17:11:33.564319 20 delete.go:95] Deleting pod "simpletest.rc-dfghm" in namespace "gc-8964"
  I0623 17:11:33.580193 20 delete.go:95] Deleting pod "simpletest.rc-dhwr6" in namespace "gc-8964"
  I0623 17:11:33.596507 20 delete.go:95] Deleting pod "simpletest.rc-dm2bg" in namespace "gc-8964"
  I0623 17:11:33.607886 20 delete.go:95] Deleting pod "simpletest.rc-dmrlv" in namespace "gc-8964"
  I0623 17:11:33.622063 20 delete.go:95] Deleting pod "simpletest.rc-dnjxg" in namespace "gc-8964"
  I0623 17:11:33.634542 20 delete.go:95] Deleting pod "simpletest.rc-fghlc" in namespace "gc-8964"
  I0623 17:11:33.651018 20 delete.go:95] Deleting pod "simpletest.rc-fk8wb" in namespace "gc-8964"
  I0623 17:11:33.666380 20 delete.go:95] Deleting pod "simpletest.rc-fl7nj" in namespace "gc-8964"
  I0623 17:11:33.680213 20 delete.go:95] Deleting pod "simpletest.rc-fsm48" in namespace "gc-8964"
  I0623 17:11:33.694152 20 delete.go:95] Deleting pod "simpletest.rc-ftkwx" in namespace "gc-8964"
  I0623 17:11:33.709441 20 delete.go:95] Deleting pod "simpletest.rc-gd52b" in namespace "gc-8964"
  I0623 17:11:33.725302 20 delete.go:95] Deleting pod "simpletest.rc-gn46n" in namespace "gc-8964"
  I0623 17:11:33.736470 20 delete.go:95] Deleting pod "simpletest.rc-gqspd" in namespace "gc-8964"
  I0623 17:11:33.747706 20 delete.go:95] Deleting pod "simpletest.rc-gtdzg" in namespace "gc-8964"
  I0623 17:11:33.765742 20 delete.go:95] Deleting pod "simpletest.rc-h55t2" in namespace "gc-8964"
  I0623 17:11:33.792959 20 delete.go:95] Deleting pod "simpletest.rc-hk4vx" in namespace "gc-8964"
  I0623 17:11:33.811637 20 delete.go:95] Deleting pod "simpletest.rc-hp8bv" in namespace "gc-8964"
  I0623 17:11:33.831021 20 delete.go:95] Deleting pod "simpletest.rc-jl8kd" in namespace "gc-8964"
  I0623 17:11:33.845581 20 delete.go:95] Deleting pod "simpletest.rc-jv7gs" in namespace "gc-8964"
  I0623 17:11:33.862090 20 delete.go:95] Deleting pod "simpletest.rc-kz8jz" in namespace "gc-8964"
  I0623 17:11:33.885522 20 delete.go:95] Deleting pod "simpletest.rc-lbf85" in namespace "gc-8964"
  I0623 17:11:33.900013 20 delete.go:95] Deleting pod "simpletest.rc-ldqlm" in namespace "gc-8964"
  I0623 17:11:33.911971 20 delete.go:95] Deleting pod "simpletest.rc-lnxts" in namespace "gc-8964"
  I0623 17:11:33.928639 20 delete.go:95] Deleting pod "simpletest.rc-lpf4r" in namespace "gc-8964"
  I0623 17:11:33.944645 20 delete.go:95] Deleting pod "simpletest.rc-lvtz8" in namespace "gc-8964"
  I0623 17:11:33.961188 20 delete.go:95] Deleting pod "simpletest.rc-m2fwr" in namespace "gc-8964"
  I0623 17:11:33.976637 20 delete.go:95] Deleting pod "simpletest.rc-m2wcc" in namespace "gc-8964"
  I0623 17:11:33.987861 20 delete.go:95] Deleting pod "simpletest.rc-mctpq" in namespace "gc-8964"
  I0623 17:11:34.000714 20 delete.go:95] Deleting pod "simpletest.rc-mgmfv" in namespace "gc-8964"
  I0623 17:11:34.014076 20 delete.go:95] Deleting pod "simpletest.rc-mhf57" in namespace "gc-8964"
  I0623 17:11:34.027221 20 delete.go:95] Deleting pod "simpletest.rc-mj6rf" in namespace "gc-8964"
  I0623 17:11:34.038552 20 delete.go:95] Deleting pod "simpletest.rc-mmc5j" in namespace "gc-8964"
  I0623 17:11:34.050905 20 delete.go:95] Deleting pod "simpletest.rc-mz87x" in namespace "gc-8964"
  I0623 17:11:34.063625 20 delete.go:95] Deleting pod "simpletest.rc-ndlmp" in namespace "gc-8964"
  I0623 17:11:34.077100 20 delete.go:95] Deleting pod "simpletest.rc-ndzrr" in namespace "gc-8964"
  I0623 17:11:34.089913 20 delete.go:95] Deleting pod "simpletest.rc-nkhbg" in namespace "gc-8964"
  I0623 17:11:34.105654 20 delete.go:95] Deleting pod "simpletest.rc-nn97w" in namespace "gc-8964"
  I0623 17:11:34.119468 20 delete.go:95] Deleting pod "simpletest.rc-nrl22" in namespace "gc-8964"
  I0623 17:11:34.133416 20 delete.go:95] Deleting pod "simpletest.rc-ntm66" in namespace "gc-8964"
  I0623 17:11:34.179970 20 delete.go:95] Deleting pod "simpletest.rc-p4f4k" in namespace "gc-8964"
  I0623 17:11:34.230726 20 delete.go:95] Deleting pod "simpletest.rc-p8rgv" in namespace "gc-8964"
  I0623 17:11:34.286746 20 delete.go:95] Deleting pod "simpletest.rc-pz9cf" in namespace "gc-8964"
  I0623 17:11:34.330731 20 delete.go:95] Deleting pod "simpletest.rc-q8zkg" in namespace "gc-8964"
  I0623 17:11:34.380028 20 delete.go:95] Deleting pod "simpletest.rc-qkfzm" in namespace "gc-8964"
  I0623 17:11:34.427030 20 delete.go:95] Deleting pod "simpletest.rc-qm2sh" in namespace "gc-8964"
  I0623 17:11:34.484048 20 delete.go:95] Deleting pod "simpletest.rc-qv4zs" in namespace "gc-8964"
  I0623 17:11:34.532200 20 delete.go:95] Deleting pod "simpletest.rc-qxb6b" in namespace "gc-8964"
  I0623 17:11:34.581656 20 delete.go:95] Deleting pod "simpletest.rc-rhcps" in namespace "gc-8964"
  I0623 17:11:34.631800 20 delete.go:95] Deleting pod "simpletest.rc-rkn4k" in namespace "gc-8964"
  I0623 17:11:34.696810 20 delete.go:95] Deleting pod "simpletest.rc-scvxd" in namespace "gc-8964"
  I0623 17:11:34.732163 20 delete.go:95] Deleting pod "simpletest.rc-sd9n4" in namespace "gc-8964"
  I0623 17:11:34.780720 20 delete.go:95] Deleting pod "simpletest.rc-sk9mz" in namespace "gc-8964"
  I0623 17:11:34.827713 20 delete.go:95] Deleting pod "simpletest.rc-slqxs" in namespace "gc-8964"
  I0623 17:11:34.881132 20 delete.go:95] Deleting pod "simpletest.rc-szpfw" in namespace "gc-8964"
  I0623 17:11:34.930147 20 delete.go:95] Deleting pod "simpletest.rc-thjrp" in namespace "gc-8964"
  I0623 17:11:34.980798 20 delete.go:95] Deleting pod "simpletest.rc-tm64h" in namespace "gc-8964"
  I0623 17:11:35.029967 20 delete.go:95] Deleting pod "simpletest.rc-tzcnk" in namespace "gc-8964"
  I0623 17:11:35.076960 20 delete.go:95] Deleting pod "simpletest.rc-v68m2" in namespace "gc-8964"
  I0623 17:11:35.129397 20 delete.go:95] Deleting pod "simpletest.rc-v82ds" in namespace "gc-8964"
  I0623 17:11:35.177658 20 delete.go:95] Deleting pod "simpletest.rc-vdkcc" in namespace "gc-8964"
  I0623 17:11:35.226858 20 delete.go:95] Deleting pod "simpletest.rc-vk4wm" in namespace "gc-8964"
  I0623 17:11:35.277171 20 delete.go:95] Deleting pod "simpletest.rc-wt9mh" in namespace "gc-8964"
  I0623 17:11:35.332938 20 delete.go:95] Deleting pod "simpletest.rc-wtzmv" in namespace "gc-8964"
  I0623 17:11:35.383161 20 delete.go:95] Deleting pod "simpletest.rc-wv8cn" in namespace "gc-8964"
  I0623 17:11:35.430568 20 delete.go:95] Deleting pod "simpletest.rc-xd2sl" in namespace "gc-8964"
  I0623 17:11:35.481998 20 delete.go:95] Deleting pod "simpletest.rc-xncmt" in namespace "gc-8964"
  I0623 17:11:35.527522 20 delete.go:95] Deleting pod "simpletest.rc-z2prn" in namespace "gc-8964"
  I0623 17:11:35.582768 20 delete.go:95] Deleting pod "simpletest.rc-zcsbf" in namespace "gc-8964"
  I0623 17:11:35.630062 20 delete.go:95] Deleting pod "simpletest.rc-zh9lp" in namespace "gc-8964"
  I0623 17:11:35.683728 20 delete.go:95] Deleting pod "simpletest.rc-zn9d7" in namespace "gc-8964"
  I0623 17:11:35.730074 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8964" for this suite. @ 06/23/25 17:11:35.774
• [43.828 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 06/23/25 17:11:35.823
  I0623 17:11:35.823324 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/23/25 17:11:35.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:11:35.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:11:35.852
  STEP: fetching the /apis discovery document @ 06/23/25 17:11:35.856
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/23/25 17:11:35.857
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/23/25 17:11:35.857
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/23/25 17:11:35.857
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/23/25 17:11:35.857
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/23/25 17:11:35.857
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/23/25 17:11:35.859
  I0623 17:11:35.860067 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-99" for this suite. @ 06/23/25 17:11:35.869
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 06/23/25 17:11:35.877
  I0623 17:11:35.877209 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 17:11:35.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:11:35.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:11:35.896
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 17:11:35.9
  STEP: Saw pod success @ 06/23/25 17:11:39.924
  I0623 17:11:39.929976 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-b9330ae0-273b-41c7-b9eb-41c7a5dcdaa9 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 17:11:39.942
  I0623 17:11:39.959591 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7192" for this suite. @ 06/23/25 17:11:39.963
• [4.095 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 06/23/25 17:11:39.972
  I0623 17:11:39.972090 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pod-network-test @ 06/23/25 17:11:39.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:11:39.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:11:39.994
  STEP: Performing setup for networking test in namespace pod-network-test-7285 @ 06/23/25 17:11:39.998
  STEP: creating a selector @ 06/23/25 17:11:39.998
  STEP: Creating the service pods in kubernetes @ 06/23/25 17:11:39.998
  I0623 17:11:39.998715 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/23/25 17:11:54.151
  I0623 17:11:56.169645 20 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0623 17:11:56.169681 20 networking.go:42] Breadth first check of 192.168.156.103 on host 172.31.24.79...
  I0623 17:11:56.173156 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.99:9080/dial?request=hostname&protocol=http&host=192.168.156.103&port=8083&tries=1'] Namespace:pod-network-test-7285 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:11:56.173178 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:11:56.173215 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7285/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.99%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.156.103%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0623 17:11:56.213276 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:11:56.213364 20 utils.go:355] Waiting for responses: map[]
  I0623 17:11:56.213376 20 utils.go:359] reached 192.168.156.103 after 0/1 tries
  I0623 17:11:56.213385 20 networking.go:42] Breadth first check of 192.168.99.9 on host 172.31.41.62...
  I0623 17:11:56.218160 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.99:9080/dial?request=hostname&protocol=http&host=192.168.99.9&port=8083&tries=1'] Namespace:pod-network-test-7285 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:11:56.218177 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:11:56.218214 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7285/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.99%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.99.9%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0623 17:11:56.253096 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:11:56.253138 20 utils.go:355] Waiting for responses: map[]
  I0623 17:11:56.253147 20 utils.go:359] reached 192.168.99.9 after 0/1 tries
  I0623 17:11:56.253156 20 networking.go:42] Breadth first check of 192.168.81.98 on host 172.31.64.108...
  I0623 17:11:56.256835 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.99:9080/dial?request=hostname&protocol=http&host=192.168.81.98&port=8083&tries=1'] Namespace:pod-network-test-7285 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:11:56.256850 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:11:56.256887 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7285/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.99%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.81.98%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0623 17:11:56.293081 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:11:56.293128 20 utils.go:355] Waiting for responses: map[]
  I0623 17:11:56.293137 20 utils.go:359] reached 192.168.81.98 after 0/1 tries
  I0623 17:11:56.293148 20 networking.go:53] Going to retry 0 out of 3 pods....
  I0623 17:11:56.293848 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7285" for this suite. @ 06/23/25 17:11:56.3
• [16.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 06/23/25 17:11:56.309
  I0623 17:11:56.309843 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 17:11:56.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:11:56.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:11:56.326
  I0623 17:11:56.332967      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 06/23/25 17:11:56.333
  I0623 17:11:56.337811      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 06/23/25 17:11:56.337
  I0623 17:11:56.339044      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 06/23/25 17:11:56.339
  I0623 17:11:56.342212      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 06/23/25 17:11:56.342
  I0623 17:11:56.347450      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:11:56.348499      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 06/23/25 17:11:56.348
  I0623 17:11:56.351613      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 06/23/25 17:11:56.351
  I0623 17:11:56.357793      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:11:56.359264      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 06/23/25 17:11:56.359
  I0623 17:11:56.363092      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 06/23/25 17:11:56.363
  I0623 17:11:56.372967      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 06/23/25 17:11:56.372
  I0623 17:11:56.374299      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 06/23/25 17:11:56.374
  I0623 17:11:56.376925      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:11:56.377027 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-145" for this suite. @ 06/23/25 17:11:56.399
• [0.097 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 06/23/25 17:11:56.407
  I0623 17:11:56.407066 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename svcaccounts @ 06/23/25 17:11:56.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:11:56.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:11:56.424
  STEP: reading a file in the container @ 06/23/25 17:11:58.458
  I0623 17:11:58.458769 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1274 pod-service-account-8109ce40-416a-41ab-a4c8-2f2e5bc09b6c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 06/23/25 17:11:58.54
  I0623 17:11:58.540583 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1274 pod-service-account-8109ce40-416a-41ab-a4c8-2f2e5bc09b6c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/23/25 17:11:58.618
  I0623 17:11:58.618804 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1274 pod-service-account-8109ce40-416a-41ab-a4c8-2f2e5bc09b6c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0623 17:11:58.701491 20 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-1274"
  I0623 17:11:58.703370 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1274" for this suite. @ 06/23/25 17:11:58.706
• [2.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 06/23/25 17:11:58.715
  I0623 17:11:58.715597 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/23/25 17:11:58.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:11:58.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:11:58.731
  STEP: set up a multi version CRD @ 06/23/25 17:11:58.733
  I0623 17:11:58.734090 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: mark a version not serverd @ 06/23/25 17:12:01.869
  STEP: check the unserved version gets removed @ 06/23/25 17:12:01.886
  STEP: check the other version is not changed @ 06/23/25 17:12:02.618
  I0623 17:12:05.098462 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7178" for this suite. @ 06/23/25 17:12:05.107
• [6.401 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 06/23/25 17:12:05.116
  I0623 17:12:05.116974 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 17:12:05.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:12:05.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:12:05.13
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/23/25 17:12:05.132
  STEP: Saw pod success @ 06/23/25 17:12:09.155
  I0623 17:12:09.159641 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-5a4f405a-cf95-4776-afb1-cb155faa2eab container test-container: <nil>
  STEP: delete the pod @ 06/23/25 17:12:09.166
  I0623 17:12:09.181594 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6282" for this suite. @ 06/23/25 17:12:09.185
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 06/23/25 17:12:09.192
  I0623 17:12:09.192064 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename podtemplate @ 06/23/25 17:12:09.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:12:09.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:12:09.209
  I0623 17:12:09.348096 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2230" for this suite. @ 06/23/25 17:12:09.353
• [0.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 06/23/25 17:12:09.362
  I0623 17:12:09.362452 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 17:12:09.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:12:09.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:12:09.376
  I0623 17:12:09.379486 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-9041 create -f -'
  I0623 17:12:09.466448 20 builder.go:146] stderr: ""
  I0623 17:12:09.466485 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0623 17:12:09.466527 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-9041 create -f -'
  I0623 17:12:09.560384 20 builder.go:146] stderr: ""
  I0623 17:12:09.560438 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/23/25 17:12:09.56
  I0623 17:12:10.565551 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0623 17:12:10.565585 20 framework.go:733] Found 1 / 1
  I0623 17:12:10.565601 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0623 17:12:10.569673 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0623 17:12:10.569693 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0623 17:12:10.569740 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-9041 describe pod agnhost-primary-9w282'
  I0623 17:12:10.621931 20 builder.go:146] stderr: ""
  I0623 17:12:10.621992 20 builder.go:147] stdout: "Name:             agnhost-primary-9w282\nNamespace:        kubectl-9041\nPriority:         0\nService Account:  default\nNode:             ip-172-31-64-108/172.31.64.108\nStart Time:       Mon, 23 Jun 2025 17:12:09 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.81.101\nIPs:\n  IP:           192.168.81.101\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://66d988676a88f0573f4e2b88ae8602ec7d9e09b530f50ac4459416b947d18d6a\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 23 Jun 2025 17:12:10 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-jjtz6 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-jjtz6:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-9041/agnhost-primary-9w282 to ip-172-31-64-108\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    0s    kubelet            Created container: agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0623 17:12:10.622067 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-9041 describe rc agnhost-primary'
  I0623 17:12:10.675227 20 builder.go:146] stderr: ""
  I0623 17:12:10.675279 20 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9041\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-9w282\n"
  I0623 17:12:10.675325 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-9041 describe service agnhost-primary'
  I0623 17:12:10.727551 20 builder.go:146] stderr: ""
  I0623 17:12:10.727587 20 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-9041\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.40\nIPs:                      10.152.183.40\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.81.101:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0623 17:12:10.732533 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-9041 describe node ip-172-31-17-47'
  I0623 17:12:10.817530 20 builder.go:146] stderr: ""
  I0623 17:12:10.817726 20 builder.go:147] stdout: "Name:               ip-172-31-17-47\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-17-47\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    topology.kubernetes.io/zone=us-east-1c\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 23 Jun 2025 16:04:28 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-17-47\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 23 Jun 2025 17:12:06 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 23 Jun 2025 16:26:21 +0000   Mon, 23 Jun 2025 16:26:21 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Mon, 23 Jun 2025 17:09:51 +0000   Mon, 23 Jun 2025 16:04:28 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 23 Jun 2025 17:09:51 +0000   Mon, 23 Jun 2025 16:04:28 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 23 Jun 2025 17:09:51 +0000   Mon, 23 Jun 2025 16:04:28 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 23 Jun 2025 17:09:51 +0000   Mon, 23 Jun 2025 16:04:39 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.17.47\n  Hostname:    ip-172-31-17-47\nCapacity:\n  cpu:                2\n  ephemeral-storage:  15159300Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967604Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  13970810857\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865204Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec29d88e6baa15c6aee4d286a3b5c42b\n  System UUID:                ec29d88e-6baa-15c6-aee4-d286a3b5c42b\n  Boot ID:                    91c24dd6-f991-4cf1-9cdb-fd08e705c029\n  Kernel Version:             6.8.0-1029-aws\n  OS Image:                   Ubuntu 24.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.38\n  Kubelet Version:            v1.33.2\n  Kube-Proxy Version:         \nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-86f85d9979-j77np                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         46m\n  kube-system                 calico-node-vrdsg                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         45m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-wghn4    0 (0%)        0 (0%)      0 (0%)           0 (0%)         43m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age   From             Message\n  ----     ------                   ----  ----             -------\n  Normal   Starting                 53m   kube-proxy       \n  Normal   Starting                 55m   kube-proxy       \n  Normal   Starting                 57m   kube-proxy       \n  Normal   Starting                 56m   kube-proxy       \n  Normal   Starting                 59m   kube-proxy       \n  Normal   Starting                 51m   kube-proxy       \n  Normal   Starting                 55m   kube-proxy       \n  Normal   Starting                 52m   kube-proxy       \n  Normal   Starting                 58m   kube-proxy       \n  Normal   Starting                 60m   kube-proxy       \n  Normal   Starting                 54m   kube-proxy       \n  Normal   Starting                 60m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      60m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     60m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    60m   kubelet          Node ip-172-31-17-47 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  60m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  60m   kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           60m   node-controller  Node ip-172-31-17-47 event: Registered Node ip-172-31-17-47 in Controller\n  Normal   NodeAllocatableEnforced  59m   kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 59m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      59m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  59m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    59m   kubelet          Node ip-172-31-17-47 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     59m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           58m   node-controller  Node ip-172-31-17-47 event: Registered Node ip-172-31-17-47 in Controller\n  Normal   Starting                 58m   kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    58m   kubelet          Node ip-172-31-17-47 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     58m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  58m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  58m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientMemory\n  Warning  InvalidDiskCapacity      58m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  57m   kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 57m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      57m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  57m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    57m   kubelet          Node ip-172-31-17-47 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     57m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           57m   node-controller  Node ip-172-31-17-47 event: Registered Node ip-172-31-17-47 in Controller\n  Normal   NodeHasNoDiskPressure    56m   kubelet          Node ip-172-31-17-47 status is now: NodeHasNoDiskPressure\n  Normal   Starting                 56m   kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     56m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientPID\n  Warning  InvalidDiskCapacity      56m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  56m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  56m   kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           56m   node-controller  Node ip-172-31-17-47 event: Registered Node ip-172-31-17-47 in Controller\n  Normal   NodeHasSufficientMemory  55m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    55m   kubelet          Node ip-172-31-17-47 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     55m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  55m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      55m   kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 55m   kubelet          Starting kubelet.\n  Normal   RegisteredNode           55m   node-controller  Node ip-172-31-17-47 event: Registered Node ip-172-31-17-47 in Controller\n  Normal   Starting                 55m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      55m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  55m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  55m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    55m   kubelet          Node ip-172-31-17-47 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     55m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientPID\n  Normal   Starting                 54m   kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     54m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    54m   kubelet          Node ip-172-31-17-47 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  54m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  54m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      54m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  53m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    53m   kubelet          Node ip-172-31-17-47 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     53m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  53m   kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 53m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      53m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     52m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  52m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    52m   kubelet          Node ip-172-31-17-47 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  52m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      52m   kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 52m   kubelet          Starting kubelet.\n  Normal   RegisteredNode           52m   node-controller  Node ip-172-31-17-47 event: Registered Node ip-172-31-17-47 in Controller\n  Warning  InvalidDiskCapacity      51m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  51m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  51m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    51m   kubelet          Node ip-172-31-17-47 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     51m   kubelet          Node ip-172-31-17-47 status is now: NodeHasSufficientPID\n  Normal   Starting                 51m   kubelet          Starting kubelet.\n  Normal   RegisteredNode           51m   node-controller  Node ip-172-31-17-47 event: Registered Node ip-172-31-17-47 in Controller\n"
  I0623 17:12:10.817804 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-9041 describe namespace kubectl-9041'
  I0623 17:12:10.878072 20 builder.go:146] stderr: ""
  I0623 17:12:10.878111 20 builder.go:147] stdout: "Name:         kubectl-9041\nLabels:       e2e-framework=kubectl\n              e2e-run=e12fcd82-432c-4555-85ff-7efffbce958d\n              kubernetes.io/metadata.name=kubectl-9041\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0623 17:12:10.878257 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9041" for this suite. @ 06/23/25 17:12:10.881
• [1.525 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/23/25 17:12:10.888
  I0623 17:12:10.888124 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:12:10.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:12:10.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:12:10.907
  STEP: Creating projection with secret that has name projected-secret-test-314ac269-48cc-4786-a1ab-f228f14f7b5c @ 06/23/25 17:12:10.909
  STEP: Creating a pod to test consume secrets @ 06/23/25 17:12:10.914
  STEP: Saw pod success @ 06/23/25 17:12:14.994
  I0623 17:12:14.998931 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-secrets-c93c65b1-ca29-4cbe-80d8-a4455f39a149 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 17:12:15.007
  I0623 17:12:15.022129 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7414" for this suite. @ 06/23/25 17:12:15.025
• [4.145 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 06/23/25 17:12:15.033
  I0623 17:12:15.033063 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename disruption @ 06/23/25 17:12:15.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:12:15.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:12:15.048
  STEP: Waiting for the pdb to be processed @ 06/23/25 17:12:15.056
  STEP: Waiting for all pods to be running @ 06/23/25 17:12:17.087
  I0623 17:12:17.091765 20 disruption.go:691] running pods: 0 < 3
  I0623 17:12:19.095882 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7165" for this suite. @ 06/23/25 17:12:19.099
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 06/23/25 17:12:19.106
  I0623 17:12:19.106910 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pod-network-test @ 06/23/25 17:12:19.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:12:19.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:12:19.125
  STEP: Performing setup for networking test in namespace pod-network-test-6316 @ 06/23/25 17:12:19.127
  STEP: creating a selector @ 06/23/25 17:12:19.127
  STEP: Creating the service pods in kubernetes @ 06/23/25 17:12:19.127
  I0623 17:12:19.127548 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/23/25 17:12:33.29
  I0623 17:12:35.308890 20 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0623 17:12:35.308927 20 networking.go:42] Breadth first check of 192.168.156.107 on host 172.31.24.79...
  I0623 17:12:35.312611 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.105:9080/dial?request=hostname&protocol=udp&host=192.168.156.107&port=8081&tries=1'] Namespace:pod-network-test-6316 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:12:35.312640 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:12:35.312682 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6316/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.105%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.156.107%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0623 17:12:35.350255 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:12:35.350435 20 utils.go:355] Waiting for responses: map[]
  I0623 17:12:35.350447 20 utils.go:359] reached 192.168.156.107 after 0/1 tries
  I0623 17:12:35.350456 20 networking.go:42] Breadth first check of 192.168.99.10 on host 172.31.41.62...
  I0623 17:12:35.354377 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.105:9080/dial?request=hostname&protocol=udp&host=192.168.99.10&port=8081&tries=1'] Namespace:pod-network-test-6316 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:12:35.354406 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:12:35.354454 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6316/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.105%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.99.10%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0623 17:12:35.393671 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:12:35.393721 20 utils.go:355] Waiting for responses: map[]
  I0623 17:12:35.393800 20 utils.go:359] reached 192.168.99.10 after 0/1 tries
  I0623 17:12:35.393809 20 networking.go:42] Breadth first check of 192.168.81.104 on host 172.31.64.108...
  I0623 17:12:35.399069 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.105:9080/dial?request=hostname&protocol=udp&host=192.168.81.104&port=8081&tries=1'] Namespace:pod-network-test-6316 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:12:35.399096 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:12:35.399140 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6316/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.105%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.81.104%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0623 17:12:35.436374 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:12:35.436425 20 utils.go:355] Waiting for responses: map[]
  I0623 17:12:35.436434 20 utils.go:359] reached 192.168.81.104 after 0/1 tries
  I0623 17:12:35.436441 20 networking.go:53] Going to retry 0 out of 3 pods....
  I0623 17:12:35.436843 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6316" for this suite. @ 06/23/25 17:12:35.442
• [16.344 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 06/23/25 17:12:35.451
  I0623 17:12:35.451162 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 17:12:35.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:12:35.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:12:35.47
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 17:12:35.472
  STEP: Saw pod success @ 06/23/25 17:12:39.498
  I0623 17:12:39.501630 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-b32b1d12-2e37-4896-8386-ec50aa243098 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 17:12:39.509
  I0623 17:12:39.527712 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2855" for this suite. @ 06/23/25 17:12:39.531
• [4.086 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 06/23/25 17:12:39.537
  I0623 17:12:39.537313 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 17:12:39.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:12:39.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:12:39.552
  STEP: Creating a pod to test downward api env vars @ 06/23/25 17:12:39.554
  STEP: Saw pod success @ 06/23/25 17:12:43.682
  I0623 17:12:43.685272 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downward-api-a53d30ed-2814-4551-adc9-0d4007d16497 container dapi-container: <nil>
  STEP: delete the pod @ 06/23/25 17:12:43.692
  I0623 17:12:43.712108 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4198" for this suite. @ 06/23/25 17:12:43.716
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 06/23/25 17:12:43.725
  I0623 17:12:43.725443 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:12:43.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:12:43.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:12:43.74
  STEP: Setting up server cert @ 06/23/25 17:12:43.759
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:12:43.988
  STEP: Deploying the webhook pod @ 06/23/25 17:12:43.994
  STEP: Wait for the deployment to be ready @ 06/23/25 17:12:44.008
  I0623 17:12:44.016901 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:12:46.03
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:12:46.048
  I0623 17:12:47.048498 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 06/23/25 17:12:47.053
  I0623 17:12:47.099018 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9979" for this suite. @ 06/23/25 17:12:47.102
  STEP: Destroying namespace "webhook-markers-6935" for this suite. @ 06/23/25 17:12:47.11
• [3.393 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 06/23/25 17:12:47.118
  I0623 17:12:47.118509 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename svcaccounts @ 06/23/25 17:12:47.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:12:47.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:12:47.132
  I0623 17:12:47.148721 20 service_accounts.go:646] created pod
  STEP: Saw pod success @ 06/23/25 17:12:51.162
  I0623 17:13:21.164292 20 service_accounts.go:652] polling logs
  I0623 17:13:21.172225 20 service_accounts.go:662] Pod logs: 
  I0623 17:12:47.748844       1 log.go:245] OK: Got token
  I0623 17:12:47.749076       1 log.go:245] validating with in-cluster discovery
  I0623 17:12:47.749355       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0623 17:12:47.749437       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-5055:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00048b4d0), NotBefore:(*jwt.NumericDate)(0xc00048b5c0), IssuedAt:(*jwt.NumericDate)(0xc00048b4e0), ID:"92d99b6b-6d61-4732-a871-0643fca6a4ff"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5055", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"e0e5d9e5-4ea8-4c10-a727-a26abb00adee"}}}
  I0623 17:12:47.757953       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0623 17:12:47.762326       1 log.go:245] OK: Validated signature on JWT
  I0623 17:12:47.762419       1 log.go:245] OK: Got valid claims from token!
  I0623 17:12:47.762484       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-5055:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000126760), NotBefore:(*jwt.NumericDate)(0xc000126788), IssuedAt:(*jwt.NumericDate)(0xc000126768), ID:"92d99b6b-6d61-4732-a871-0643fca6a4ff"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5055", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"e0e5d9e5-4ea8-4c10-a727-a26abb00adee"}}}

  I0623 17:13:21.172261 20 service_accounts.go:666] completed pod
  I0623 17:13:21.180986 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5055" for this suite. @ 06/23/25 17:13:21.185
• [34.076 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 06/23/25 17:13:21.195
  I0623 17:13:21.195159 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 17:13:21.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:13:21.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:13:21.212
  STEP: Counting existing ResourceQuota @ 06/23/25 17:13:21.214
  STEP: Creating a ResourceQuota @ 06/23/25 17:13:26.22
  STEP: Ensuring resource quota status is calculated @ 06/23/25 17:13:26.224
  STEP: Creating a Service @ 06/23/25 17:13:28.231
  STEP: Creating a NodePort Service @ 06/23/25 17:13:28.255
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/23/25 17:13:28.284
  STEP: Ensuring resource quota status captures service creation @ 06/23/25 17:13:28.319
  STEP: Deleting Services @ 06/23/25 17:13:30.325
  STEP: Ensuring resource quota status released usage @ 06/23/25 17:13:30.377
  I0623 17:13:32.382866 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-944" for this suite. @ 06/23/25 17:13:32.387
• [11.200 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/23/25 17:13:32.394
  I0623 17:13:32.395009 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 17:13:32.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:13:32.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:13:32.412
  STEP: Creating secret with name secret-test-8499a4b0-7db4-48af-a482-9c63dcb037d7 @ 06/23/25 17:13:32.414
  STEP: Creating a pod to test consume secrets @ 06/23/25 17:13:32.419
  STEP: Saw pod success @ 06/23/25 17:13:36.444
  I0623 17:13:36.448866 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-secrets-47e874a4-c582-47af-bb84-9cef5c7c7943 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 17:13:36.455
  I0623 17:13:36.476826 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7479" for this suite. @ 06/23/25 17:13:36.481
• [4.094 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 06/23/25 17:13:36.488
  I0623 17:13:36.488721 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/23/25 17:13:36.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:13:36.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:13:36.507
  STEP: create the container to handle the HTTPGet hook request. @ 06/23/25 17:13:36.582
  STEP: create the pod with lifecycle hook @ 06/23/25 17:13:38.606
  STEP: delete the pod with lifecycle hook @ 06/23/25 17:13:40.627
  STEP: check prestop hook @ 06/23/25 17:13:42.643
  I0623 17:13:42.654717 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6146" for this suite. @ 06/23/25 17:13:42.659
• [6.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 06/23/25 17:13:42.666
  I0623 17:13:42.666485 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename server-version @ 06/23/25 17:13:42.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:13:42.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:13:42.682
  STEP: Request ServerVersion @ 06/23/25 17:13:42.684
  STEP: Confirm major version @ 06/23/25 17:13:42.685
  I0623 17:13:42.685548 20 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 06/23/25 17:13:42.685
  I0623 17:13:42.685573 20 server_version.go:58] cleanMinorVersion: 33
  I0623 17:13:42.685584 20 server_version.go:62] Minor version: 33
  I0623 17:13:42.685645 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3012" for this suite. @ 06/23/25 17:13:42.761
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 06/23/25 17:13:42.77
  I0623 17:13:42.770589 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename containers @ 06/23/25 17:13:42.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:13:42.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:13:42.787
  STEP: Creating a pod to test override all @ 06/23/25 17:13:42.789
  STEP: Saw pod success @ 06/23/25 17:13:46.816
  I0623 17:13:46.820209 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod client-containers-035d62b8-3588-4b55-9483-ffbad7979fed container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 17:13:46.826
  I0623 17:13:46.845567 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2109" for this suite. @ 06/23/25 17:13:46.851
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 06/23/25 17:13:46.858
  I0623 17:13:46.858296 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/23/25 17:13:46.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:13:46.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:13:46.872
  STEP: set up a multi version CRD @ 06/23/25 17:13:46.875
  I0623 17:13:46.875320 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: rename a version @ 06/23/25 17:13:50.014
  STEP: check the new version name is served @ 06/23/25 17:13:50.025
  STEP: check the old version name is removed @ 06/23/25 17:13:50.817
  STEP: check the other version is not changed @ 06/23/25 17:13:51.42
  I0623 17:13:53.890848 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3175" for this suite. @ 06/23/25 17:13:53.898
• [7.048 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/23/25 17:13:53.906
  I0623 17:13:53.906907 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/23/25 17:13:53.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:13:53.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:13:53.925
  STEP: Creating two CSIDrivers @ 06/23/25 17:13:53.928
  STEP: Getting "inline-driver-e8acad7f-1846-464c-9137-2497c89f476a" & "inline-driver-424156f9-710d-4809-b1ac-d08736206ed5" @ 06/23/25 17:13:53.948
  STEP: Patching the CSIDriver "inline-driver-424156f9-710d-4809-b1ac-d08736206ed5" @ 06/23/25 17:13:53.954
  STEP: Updating the CSIDriver "inline-driver-424156f9-710d-4809-b1ac-d08736206ed5" @ 06/23/25 17:13:53.962
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7394" @ 06/23/25 17:13:53.97
  STEP: Deleting CSIDriver "inline-driver-e8acad7f-1846-464c-9137-2497c89f476a" @ 06/23/25 17:13:53.974
  STEP: Confirm deletion of CSIDriver "inline-driver-e8acad7f-1846-464c-9137-2497c89f476a" @ 06/23/25 17:13:53.98
  STEP: Deleting CSIDriver "inline-driver-424156f9-710d-4809-b1ac-d08736206ed5" via DeleteCollection @ 06/23/25 17:13:53.983
  STEP: Confirm deletion of CSIDriver "inline-driver-424156f9-710d-4809-b1ac-d08736206ed5" @ 06/23/25 17:13:53.995
  I0623 17:13:53.998558 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7394" for this suite. @ 06/23/25 17:13:54.002
• [0.103 seconds]
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 06/23/25 17:13:54.009
  I0623 17:13:54.009701 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:13:54.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:13:54.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:13:54.027
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-f8905b87-4e91-44b6-bac6-06d033234760 @ 06/23/25 17:13:54.103
  STEP: Creating the pod @ 06/23/25 17:13:54.108
  STEP: Updating configmap projected-configmap-test-upd-f8905b87-4e91-44b6-bac6-06d033234760 @ 06/23/25 17:13:56.148
  STEP: waiting to observe update in volume @ 06/23/25 17:13:56.155
  I0623 17:15:06.483585 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3508" for this suite. @ 06/23/25 17:15:06.488
• [72.488 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 06/23/25 17:15:06.497
  I0623 17:15:06.497941 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename chunking @ 06/23/25 17:15:06.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:15:06.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:15:06.516
  STEP: creating a large number of resources @ 06/23/25 17:15:06.518
  STEP: retrieving the first page @ 06/23/25 17:15:24.207
  I0623 17:15:24.256578 20 chunking.go:163] Retrieved 40/40 results with rv 24968 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 06/23/25 17:15:24.256
  I0623 17:15:44.263020 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:16:04.262029 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:16:24.262874 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:16:44.261366 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:17:04.262402 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:17:24.263203 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:17:44.261957 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:18:04.261914 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:18:24.262238 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:18:44.262451 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:19:04.263104 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:19:24.261771 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:19:44.263034 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:20:04.261341 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:20:24.262546 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:20:44.262463 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:21:04.262476 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:21:24.261980 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:21:44.261827 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:22:04.263761 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:22:24.263569 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:22:44.261352 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:23:04.261718 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:23:24.261756 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:23:44.263003 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:24:04.261975 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:24:24.261541 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:24:44.262133 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:25:04.261498 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ5NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0623 17:25:24.261529 20 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0623 17:25:24.261562 20 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 06/23/25 17:25:24.261
  STEP: retrieving all remaining pages @ 06/23/25 17:25:24.266
  I0623 17:25:24.270213 20 chunking.go:221] Retrieved 40/40 results with rv 26235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0623 17:25:24.274735 20 chunking.go:221] Retrieved 40/40 results with rv 26235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0623 17:25:24.279748 20 chunking.go:221] Retrieved 40/40 results with rv 26235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0623 17:25:24.283200 20 chunking.go:221] Retrieved 40/40 results with rv 26235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0623 17:25:24.287282 20 chunking.go:221] Retrieved 40/40 results with rv 26235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0623 17:25:24.291367 20 chunking.go:221] Retrieved 40/40 results with rv 26235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0623 17:25:24.295097 20 chunking.go:221] Retrieved 40/40 results with rv 26235 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYyMzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0623 17:25:24.299043 20 chunking.go:221] Retrieved 40/40 results with rv 26235 and continue 
  I0623 17:25:24.299200 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8415" for this suite. @ 06/23/25 17:25:24.303
• [617.813 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 06/23/25 17:25:24.31
  I0623 17:25:24.311012 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename svcaccounts @ 06/23/25 17:25:24.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:25:24.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:25:24.336
  STEP: creating a ServiceAccount @ 06/23/25 17:25:24.338
  STEP: watching for the ServiceAccount to be added @ 06/23/25 17:25:24.348
  STEP: patching the ServiceAccount @ 06/23/25 17:25:24.349
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/23/25 17:25:24.354
  STEP: deleting the ServiceAccount @ 06/23/25 17:25:24.358
  I0623 17:25:24.377666 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8948" for this suite. @ 06/23/25 17:25:24.404
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/23/25 17:25:24.413
  I0623 17:25:24.413855 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename deployment @ 06/23/25 17:25:24.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:25:24.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:25:24.431
  I0623 17:25:24.443745 20 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  I0623 17:25:29.447193 20 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/23/25 17:25:29.447
  I0623 17:25:29.447265 20 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/23/25 17:25:29.457
  I0623 17:25:29.471599 20 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2938",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52a04c6d-0a9c-416e-9120-615775c1da82",
      ResourceVersion: (string) (len=5) "26284",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296329,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0623 17:25:29.479209 20 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2938",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea5d1927-29dc-44db-87bd-df242544a32f",
      ResourceVersion: (string) (len=5) "26286",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296329,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "52a04c6d-0a9c-416e-9120-615775c1da82",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 32 61 30 34 63  36 64 2d 30 61 39 63 2d  |\"52a04c6d-0a9c-|
              00000120  34 31 36 65 2d 39 31 32  30 2d 36 31 35 37 37 35  |416e-9120-615775|
              00000130  63 31 64 61 38 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c1da82\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 17:25:29.479654 20 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0623 17:25:29.479995 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2938",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f0a7fe5-cc79-4484-a630-b129389b166b",
      ResourceVersion: (string) (len=5) "26285",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "52a04c6d-0a9c-416e-9120-615775c1da82",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 35 32 61 30 34 63 36  |"uid\":\"52a04c6|
              00000040  64 2d 30 61 39 63 2d 34  31 36 65 2d 39 31 32 30  |d-0a9c-416e-9120|
              00000050  2d 36 31 35 37 37 35 63  31 64 61 38 32 5c 22 7d  |-615775c1da82\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 17:25:29.490488 20 deployment.go:68] Pod "test-cleanup-controller-48svc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-48svc",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2938",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "727280f5-ceb7-494a-9045-8b1ce7147758",
      ResourceVersion: (string) (len=5) "26272",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "5f0a7fe5-cc79-4484-a630-b129389b166b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  35 66 30 61 37 66 65 35  |uid\":\"5f0a7fe5|
              00000080  2d 63 63 37 39 2d 34 34  38 34 2d 61 36 33 30 2d  |-cc79-4484-a630-|
              00000090  62 31 32 39 33 38 39 62  31 36 36 62 5c 22 7d 22  |b129389b166b\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 31 31 34 5c 22 7d 22  |2.168.81.114\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w5cgt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w5cgt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296325,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296324,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=14) "192.168.81.114",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.114"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296324,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886296325,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://88f55cd7147d892a8f346195fe5da8dff57922d2ffe66bc8aeca81c9cc28417d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w5cgt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 17:25:29.491757 20 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-6ktsw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-6ktsw",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-2938",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf638222-c205-49f4-8983-fe8bd422f980",
      ResourceVersion: (string) (len=5) "26289",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296329,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "ea5d1927-29dc-44db-87bd-df242544a32f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  35 64 31 39 32 37 2d 32  |d\":\"ea5d1927-2|
              00000090  39 64 63 2d 34 34 64 62  2d 38 37 62 64 2d 64 66  |9dc-44db-87bd-df|
              000000a0  32 34 32 35 34 34 61 33  32 66 5c 22 7d 22 3a 7b  |242544a32f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ntd25",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ntd25",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 17:25:29.492447 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2938" for this suite. @ 06/23/25 17:25:29.501
• [5.099 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/23/25 17:25:29.512
  I0623 17:25:29.512880 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:25:29.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:25:29.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:25:29.531
  STEP: Creating configMap with name configmap-projected-all-test-volume-393c1184-f51d-48d9-a895-c016447f4184 @ 06/23/25 17:25:29.577
  STEP: Creating secret with name secret-projected-all-test-volume-62547b6d-e616-47e9-8422-bdf8b538b95b @ 06/23/25 17:25:29.582
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/23/25 17:25:29.587
  I0623 17:25:29.596520      20 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  STEP: Saw pod success @ 06/23/25 17:25:33.613
  I0623 17:25:33.617354 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod projected-volume-d6cf3198-d3b3-44bb-8ba4-7463654fe522 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 17:25:33.635
  I0623 17:25:33.654955 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3667" for this suite. @ 06/23/25 17:25:33.659
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 06/23/25 17:25:33.666
  I0623 17:25:33.666979 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename var-expansion @ 06/23/25 17:25:33.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:25:33.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:25:33.685
  STEP: Creating a pod to test substitution in volume subpath @ 06/23/25 17:25:33.687
  STEP: Saw pod success @ 06/23/25 17:25:37.711
  I0623 17:25:37.715693 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod var-expansion-1ac34041-7244-4ed5-9fa3-7bd0b2f450d8 container dapi-container: <nil>
  STEP: delete the pod @ 06/23/25 17:25:37.724
  I0623 17:25:37.745527 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7173" for this suite. @ 06/23/25 17:25:37.75
• [4.090 seconds]
------------------------------
SS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/23/25 17:25:37.756
  I0623 17:25:37.757043 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename hostport @ 06/23/25 17:25:37.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:25:37.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:25:37.773
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/23/25 17:25:37.851
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.24.79 on the node which pod1 resides and expect scheduled @ 06/23/25 17:25:39.869
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.24.79 but use UDP protocol on the node which pod2 resides @ 06/23/25 17:25:41.886
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/23/25 17:25:45.922
  I0623 17:25:45.922392 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.24.79 http://127.0.0.1:54323/hostname] Namespace:hostport-4717 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:25:45.922407 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:25:45.922443 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-4717/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.24.79+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0623 17:25:45.971304 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.24.79, port: 54323 @ 06/23/25 17:25:45.971
  I0623 17:25:45.971406 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.24.79:54323/hostname] Namespace:hostport-4717 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:25:45.971416 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:25:45.971477 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-4717/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.24.79%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0623 17:25:46.003047 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.24.79, port: 54323 UDP @ 06/23/25 17:25:46.003
  I0623 17:25:46.003110 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.24.79 54323] Namespace:hostport-4717 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:25:46.003122 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:25:46.003177 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-4717/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.24.79+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0623 17:25:51.039036 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:25:51.039170 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4717" for this suite. @ 06/23/25 17:25:51.045
• [13.296 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 06/23/25 17:25:51.053
  I0623 17:25:51.053072 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 17:25:51.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:25:51.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:25:51.072
  STEP: creating a ConfigMap @ 06/23/25 17:25:51.075
  STEP: fetching the ConfigMap @ 06/23/25 17:25:51.08
  STEP: patching the ConfigMap @ 06/23/25 17:25:51.083
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/23/25 17:25:51.088
  STEP: deleting the ConfigMap by collection with a label selector @ 06/23/25 17:25:51.091
  STEP: listing all ConfigMaps in test namespace @ 06/23/25 17:25:51.104
  I0623 17:25:51.108348 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5561" for this suite. @ 06/23/25 17:25:51.146
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/23/25 17:25:51.153
  I0623 17:25:51.153440 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pods @ 06/23/25 17:25:51.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:25:51.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:25:51.171
  STEP: creating the pod @ 06/23/25 17:25:51.173
  STEP: submitting the pod to kubernetes @ 06/23/25 17:25:51.173
  STEP: verifying the pod is in kubernetes @ 06/23/25 17:25:53.195
  STEP: updating the pod @ 06/23/25 17:25:53.2
  I0623 17:25:53.715169 20 pod_client.go:173] Successfully updated pod "pod-update-52e225a1-110b-4c40-994c-50db02d0ca75"
  STEP: verifying the updated pod is in kubernetes @ 06/23/25 17:25:53.721
  I0623 17:25:53.730252 20 pods.go:391] Pod update OK
  I0623 17:25:53.730356 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8413" for this suite. @ 06/23/25 17:25:53.738
• [2.596 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/23/25 17:25:53.749
  I0623 17:25:53.749703 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename daemonsets @ 06/23/25 17:25:53.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:25:53.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:25:53.772
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/23/25 17:25:53.849
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/23/25 17:25:53.858
  I0623 17:25:53.945733 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:25:53.945797 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:25:53.958170 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:25:53.958192 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 17:25:54.864817 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:25:54.864868 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:25:54.870254 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0623 17:25:54.870279 20 fixtures.go:131] Node ip-172-31-24-79 is running 0 daemon pod, expected 1
  I0623 17:25:55.864456 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:25:55.864498 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:25:55.867836 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0623 17:25:55.867855 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/23/25 17:25:55.87
  I0623 17:25:55.965187 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:25:55.965229 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:25:55.968650 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0623 17:25:55.968668 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 17:25:56.889537 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-17-47 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:25:56.889594 20 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-88-143 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0623 17:25:56.893520 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0623 17:25:56.893540 20 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/23/25 17:25:56.893
  STEP: Deleting DaemonSet "daemon-set" @ 06/23/25 17:25:56.9
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7267, will wait for the garbage collector to delete the pods @ 06/23/25 17:25:56.9
  I0623 17:25:56.961871 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.90582ms
  I0623 17:25:57.062574 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.698358ms
  I0623 17:25:58.766391 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:25:58.766426 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0623 17:25:58.770022 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27067"},"items":null}

  I0623 17:25:58.773713 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27068"},"items":null}

  I0623 17:25:58.789754 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7267" for this suite. @ 06/23/25 17:25:58.879
• [5.137 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 06/23/25 17:25:58.886
  I0623 17:25:58.886672 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename var-expansion @ 06/23/25 17:25:58.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:25:58.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:25:58.902
  STEP: Creating a pod to test substitution in container's args @ 06/23/25 17:25:58.905
  STEP: Saw pod success @ 06/23/25 17:26:02.931
  I0623 17:26:02.934712 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod var-expansion-5c10013f-5c4d-41bd-9a65-a0e923b56e40 container dapi-container: <nil>
  STEP: delete the pod @ 06/23/25 17:26:02.942
  I0623 17:26:02.961349 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4367" for this suite. @ 06/23/25 17:26:02.965
• [4.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 06/23/25 17:26:02.973
  I0623 17:26:02.973805 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename runtimeclass @ 06/23/25 17:26:02.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:26:02.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:26:02.99
  I0623 17:26:03.024283 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-542" for this suite. @ 06/23/25 17:26:03.066
• [0.100 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 06/23/25 17:26:03.074
  I0623 17:26:03.074303 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:26:03.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:26:03.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:26:03.09
  STEP: Setting up server cert @ 06/23/25 17:26:03.109
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:26:03.539
  STEP: Deploying the webhook pod @ 06/23/25 17:26:03.547
  STEP: Wait for the deployment to be ready @ 06/23/25 17:26:03.562
  I0623 17:26:03.571110 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:26:05.583
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:26:05.598
  I0623 17:26:06.598892 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0623 17:26:06.604654 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2304-crds.webhook.example.com via the AdmissionRegistration API @ 06/23/25 17:26:07.113
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/23/25 17:26:07.128
  I0623 17:26:09.722722 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6221" for this suite. @ 06/23/25 17:26:09.727
  STEP: Destroying namespace "webhook-markers-5354" for this suite. @ 06/23/25 17:26:09.735
• [6.668 seconds]
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 06/23/25 17:26:09.742
  I0623 17:26:09.742301 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/23/25 17:26:09.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:26:09.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:26:09.761
  STEP: Setting up the test @ 06/23/25 17:26:09.763
  STEP: Creating hostNetwork=false pod @ 06/23/25 17:26:09.763
  STEP: Creating hostNetwork=true pod @ 06/23/25 17:26:11.788
  STEP: Running the test @ 06/23/25 17:26:13.814
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/23/25 17:26:13.814
  I0623 17:26:13.814443 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3462 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:26:13.814477 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:26:13.814513 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0623 17:26:13.856903 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:26:13.856933 20 exec_util.go:112] Exec stderr: ""
  I0623 17:26:13.856949 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3462 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:26:13.856974 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:26:13.857016 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0623 17:26:13.888690 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:26:13.888713 20 exec_util.go:112] Exec stderr: ""
  I0623 17:26:13.888727 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3462 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:26:13.888735 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:26:13.888770 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0623 17:26:13.922895 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:26:13.922924 20 exec_util.go:112] Exec stderr: ""
  I0623 17:26:13.922938 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3462 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:26:13.922946 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:26:13.922989 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0623 17:26:13.953889 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:26:13.953914 20 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/23/25 17:26:13.953
  I0623 17:26:13.953957 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3462 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:26:13.953964 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:26:13.954001 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0623 17:26:13.990830 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:26:13.990862 20 exec_util.go:112] Exec stderr: ""
  I0623 17:26:13.990879 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3462 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:26:13.990891 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:26:13.990934 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3462/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0623 17:26:14.023891 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:26:14.024239 20 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/23/25 17:26:14.024
  I0623 17:26:14.024643 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3462 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:26:14.024901 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:26:14.025113 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3462/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0623 17:26:14.064979 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:26:14.065016 20 exec_util.go:112] Exec stderr: ""
  I0623 17:26:14.065042 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3462 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:26:14.065049 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:26:14.065112 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3462/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0623 17:26:14.096813 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:26:14.096838 20 exec_util.go:112] Exec stderr: ""
  I0623 17:26:14.096851 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3462 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:26:14.096858 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:26:14.096918 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3462/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0623 17:26:14.128887 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:26:14.128910 20 exec_util.go:112] Exec stderr: ""
  I0623 17:26:14.128923 20 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3462 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:26:14.128930 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:26:14.128967 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3462/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0623 17:26:14.162721 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:26:14.162741 20 exec_util.go:112] Exec stderr: ""
  I0623 17:26:14.162924 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3462" for this suite. @ 06/23/25 17:26:14.168
• [4.433 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 06/23/25 17:26:14.178
  I0623 17:26:14.178381 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename namespaces @ 06/23/25 17:26:14.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:26:14.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:26:14.198
  STEP: creating a Namespace @ 06/23/25 17:26:14.2
  STEP: patching the Namespace @ 06/23/25 17:26:14.213
  STEP: get the Namespace and ensuring it has the label @ 06/23/25 17:26:14.22
  I0623 17:26:14.226494 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2186" for this suite. @ 06/23/25 17:26:14.268
  STEP: Destroying namespace "nspatchtest-7c9659d6-4d47-4148-be0a-578bf3e75b88-4842" for this suite. @ 06/23/25 17:26:14.276
• [0.108 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/23/25 17:26:14.285
  I0623 17:26:14.285998 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-runtime @ 06/23/25 17:26:14.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:26:14.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:26:14.303
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/23/25 17:26:14.316
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/23/25 17:26:29.399
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/23/25 17:26:29.403
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/23/25 17:26:29.411
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 06/23/25 17:26:29.411
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/23/25 17:26:29.44
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/23/25 17:26:32.463
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/23/25 17:26:33.473
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/23/25 17:26:33.48
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 06/23/25 17:26:33.48
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/23/25 17:26:33.507
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/23/25 17:26:34.517
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/23/25 17:26:36.531
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/23/25 17:26:36.539
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 06/23/25 17:26:36.539
  I0623 17:26:36.573241 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9099" for this suite. @ 06/23/25 17:26:36.577
• [22.298 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 06/23/25 17:26:36.584
  I0623 17:26:36.584388 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replication-controller @ 06/23/25 17:26:36.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:26:36.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:26:36.6
  I0623 17:26:36.602879 20 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/23/25 17:26:37.617
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/23/25 17:26:37.623
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/23/25 17:26:38.631
  I0623 17:26:38.642762 20 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/23/25 17:26:38.642
  I0623 17:26:38.648966 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3500" for this suite. @ 06/23/25 17:26:38.653
• [2.077 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 06/23/25 17:26:38.661
  I0623 17:26:38.661707 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 17:26:38.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:26:38.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:26:38.683
  STEP: creating a replication controller @ 06/23/25 17:26:38.689
  I0623 17:26:38.689109 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2199 create -f -'
  I0623 17:26:38.841135 20 builder.go:146] stderr: ""
  I0623 17:26:38.841301 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/23/25 17:26:38.841
  I0623 17:26:38.841402 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2199 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0623 17:26:38.919293 20 builder.go:146] stderr: ""
  I0623 17:26:38.919363 20 builder.go:147] stdout: "update-demo-nautilus-m8692 update-demo-nautilus-z6nbk "
  I0623 17:26:38.919400 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2199 get pods update-demo-nautilus-m8692 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0623 17:26:38.984408 20 builder.go:146] stderr: ""
  I0623 17:26:38.984764 20 builder.go:147] stdout: ""
  I0623 17:26:38.985011 20 kubectl.go:2505] update-demo-nautilus-m8692 is created but not running
  I0623 17:26:43.989041 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2199 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0623 17:26:44.060179 20 builder.go:146] stderr: ""
  I0623 17:26:44.060226 20 builder.go:147] stdout: "update-demo-nautilus-m8692 update-demo-nautilus-z6nbk "
  I0623 17:26:44.060261 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2199 get pods update-demo-nautilus-m8692 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0623 17:26:44.099738 20 builder.go:146] stderr: ""
  I0623 17:26:44.099769 20 builder.go:147] stdout: "true"
  I0623 17:26:44.099823 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2199 get pods update-demo-nautilus-m8692 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0623 17:26:44.139760 20 builder.go:146] stderr: ""
  I0623 17:26:44.139805 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0623 17:26:44.139814 20 kubectl.go:2396] validating pod update-demo-nautilus-m8692
  I0623 17:26:44.144988 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0623 17:26:44.145028 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0623 17:26:44.145037 20 kubectl.go:2523] update-demo-nautilus-m8692 is verified up and running
  I0623 17:26:44.145102 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2199 get pods update-demo-nautilus-z6nbk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0623 17:26:44.189108 20 builder.go:146] stderr: ""
  I0623 17:26:44.189131 20 builder.go:147] stdout: "true"
  I0623 17:26:44.189217 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2199 get pods update-demo-nautilus-z6nbk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0623 17:26:44.229488 20 builder.go:146] stderr: ""
  I0623 17:26:44.229513 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0623 17:26:44.229522 20 kubectl.go:2396] validating pod update-demo-nautilus-z6nbk
  I0623 17:26:44.235746 20 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0623 17:26:44.235806 20 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0623 17:26:44.235815 20 kubectl.go:2523] update-demo-nautilus-z6nbk is verified up and running
  STEP: using delete to clean up resources @ 06/23/25 17:26:44.235
  I0623 17:26:44.235885 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2199 delete --grace-period=0 --force -f -'
  I0623 17:26:44.282722 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0623 17:26:44.282746 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0623 17:26:44.282793 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2199 get rc,svc -l name=update-demo --no-headers'
  I0623 17:26:44.347888 20 builder.go:146] stderr: "No resources found in kubectl-2199 namespace.\n"
  I0623 17:26:44.347919 20 builder.go:147] stdout: ""
  I0623 17:26:44.347950 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2199 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0623 17:26:44.416330 20 builder.go:146] stderr: ""
  I0623 17:26:44.416356 20 builder.go:147] stdout: ""
  I0623 17:26:44.416561 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2199" for this suite. @ 06/23/25 17:26:44.425
• [5.772 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 06/23/25 17:26:44.433
  I0623 17:26:44.433686 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename dns @ 06/23/25 17:26:44.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:26:44.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:26:44.466
  STEP: Creating a test headless service @ 06/23/25 17:26:44.469
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1751.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-1751.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1751.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-1751.svc.cluster.local;sleep 1; done
   @ 06/23/25 17:26:44.478
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1751.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1751.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1751.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1751.svc.cluster.local;sleep 1; done
   @ 06/23/25 17:26:44.478
  STEP: creating a pod to probe DNS @ 06/23/25 17:26:44.478
  STEP: submitting the pod to kubernetes @ 06/23/25 17:26:44.478
  STEP: retrieving the pod @ 06/23/25 17:26:46.504
  STEP: looking for the results for each expected name from probers @ 06/23/25 17:26:46.508
  I0623 17:26:46.513338 20 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local from pod dns-1751/dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392: the server could not find the requested resource (get pods dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392)
  I0623 17:26:46.519971 20 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local from pod dns-1751/dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392: the server could not find the requested resource (get pods dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392)
  I0623 17:26:46.523900 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-1751.svc.cluster.local from pod dns-1751/dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392: the server could not find the requested resource (get pods dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392)
  I0623 17:26:46.527874 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-1751.svc.cluster.local from pod dns-1751/dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392: the server could not find the requested resource (get pods dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392)
  I0623 17:26:46.532271 20 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local from pod dns-1751/dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392: the server could not find the requested resource (get pods dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392)
  I0623 17:26:46.536917 20 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local from pod dns-1751/dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392: the server could not find the requested resource (get pods dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392)
  I0623 17:26:46.540761 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-1751.svc.cluster.local from pod dns-1751/dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392: the server could not find the requested resource (get pods dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392)
  I0623 17:26:46.545497 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-1751.svc.cluster.local from pod dns-1751/dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392: the server could not find the requested resource (get pods dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392)
  I0623 17:26:46.545520 20 dns_common.go:506] Lookups using dns-1751/dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local agnhost_udp@dns-test-service-2.dns-1751.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-1751.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1751.svc.cluster.local jessie_udp@dns-test-service-2.dns-1751.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1751.svc.cluster.local]

  I0623 17:26:46.552894 20 dns_common.go:514] Pod client logs for webserver: 
  I0623 17:26:46.559092 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0623 17:26:46.565211 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0623 17:26:51.549321 20 dns_common.go:546] DNS probes using dns-1751/dns-test-fab02bd2-df66-401e-9c8b-91b5dfd5c392 succeeded

  STEP: deleting the pod @ 06/23/25 17:26:51.549
  STEP: deleting the test headless service @ 06/23/25 17:26:51.568
  I0623 17:26:51.587904 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1751" for this suite. @ 06/23/25 17:26:51.591
• [7.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 06/23/25 17:26:51.601
  I0623 17:26:51.601243 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename field-validation @ 06/23/25 17:26:51.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:26:51.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:26:51.618
  I0623 17:26:51.620315 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 17:26:54.159100      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0623 17:26:54.159126      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0623 17:26:54.159132      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0623 17:26:54.159137      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0623 17:26:54.159142      20 warnings.go:110] "Warning: unknown field \"gamma\""
  I0623 17:26:54.701768 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4624" for this suite. @ 06/23/25 17:26:54.707
• [3.114 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 06/23/25 17:26:54.715
  I0623 17:26:54.715063 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/23/25 17:26:54.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:26:54.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:26:54.733
  STEP: creating the policy @ 06/23/25 17:26:54.741
  STEP: waiting until the marker is denied @ 06/23/25 17:26:54.762
  STEP: testing a replicated Deployment to be allowed @ 06/23/25 17:26:55.172
  STEP: testing a non-replicated ReplicaSet not to be denied @ 06/23/25 17:26:55.193
  I0623 17:26:55.254734 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8576" for this suite. @ 06/23/25 17:26:55.263
• [0.559 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 06/23/25 17:26:55.274
  I0623 17:26:55.274362 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename statefulset @ 06/23/25 17:26:55.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:26:55.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:26:55.297
  STEP: Creating service test in namespace statefulset-6531 @ 06/23/25 17:26:55.303
  STEP: Creating stateful set ss in namespace statefulset-6531 @ 06/23/25 17:26:55.31
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6531 @ 06/23/25 17:26:55.333
  I0623 17:26:55.342587 20 wait.go:44] Found 0 stateful pods, waiting for 1
  I0623 17:27:05.339260 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/23/25 17:27:05.339
  I0623 17:27:05.342973 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-6531 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0623 17:27:05.434309 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0623 17:27:05.434337 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0623 17:27:05.434347 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0623 17:27:05.438592 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0623 17:27:15.439694 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0623 17:27:15.439732 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0623 17:27:15.463940 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999808s
  I0623 17:27:16.469384 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.989782746s
  I0623 17:27:17.475269 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.983940956s
  I0623 17:27:18.480823 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.978400154s
  I0623 17:27:19.486723 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.972433219s
  I0623 17:27:20.492234 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.966632846s
  I0623 17:27:21.498366 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.9609396s
  I0623 17:27:22.503871 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.955345659s
  I0623 17:27:23.510198 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.948935963s
  I0623 17:27:24.516304 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 942.91249ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6531 @ 06/23/25 17:27:25.516
  I0623 17:27:25.522432 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-6531 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0623 17:27:25.597982 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0623 17:27:25.598015 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0623 17:27:25.598025 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0623 17:27:25.598065 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-6531 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0623 17:27:25.677891 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0623 17:27:25.677925 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0623 17:27:25.677940 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0623 17:27:25.677981 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-6531 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0623 17:27:25.770389 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0623 17:27:25.770425 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0623 17:27:25.770435 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0623 17:27:25.775303 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0623 17:27:35.775748 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0623 17:27:35.775805 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0623 17:27:35.775814 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/23/25 17:27:35.775
  I0623 17:27:35.779381 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-6531 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0623 17:27:35.855485 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0623 17:27:35.855526 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0623 17:27:35.855536 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0623 17:27:35.855568 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-6531 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0623 17:27:35.940588 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0623 17:27:35.940616 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0623 17:27:35.940625 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0623 17:27:35.940656 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-6531 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0623 17:27:36.032579 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0623 17:27:36.032606 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0623 17:27:36.032625 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0623 17:27:36.032633 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0623 17:27:36.036940 20 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0623 17:27:46.041890 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0623 17:27:46.041915 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0623 17:27:46.041949 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0623 17:27:46.061651 20 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0623 17:27:46.061715 20 resource.go:175] ss-0  ip-172-31-24-79   Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:26:56 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:26:55 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:26:55 +0000 UTC  }]
  I0623 17:27:46.061736 20 resource.go:175] ss-1  ip-172-31-64-108  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:16 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:15 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:15 +0000 UTC  }]
  I0623 17:27:46.061766 20 resource.go:175] ss-2  ip-172-31-41-62   Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:16 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:15 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:15 +0000 UTC  }]
  I0623 17:27:46.061772 20 resource.go:178] 
  I0623 17:27:46.061795 20 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  I0623 17:27:47.068167 20 resource.go:168] POD   NODE             PHASE      GRACE  CONDITIONS
  I0623 17:27:47.068217 20 resource.go:175] ss-0  ip-172-31-24-79  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:46 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:26:55 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:36 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:27:36 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:26:55 +0000 UTC  }]
  I0623 17:27:47.068224 20 resource.go:178] 
  I0623 17:27:47.068230 20 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 1
  I0623 17:27:48.072796 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.984081633s
  I0623 17:27:49.079457 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.978510725s
  I0623 17:27:50.084633 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.972843014s
  I0623 17:27:51.089939 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.967667972s
  I0623 17:27:52.094922 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.962343515s
  I0623 17:27:53.099859 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.957398327s
  I0623 17:27:54.105753 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.952497799s
  I0623 17:27:55.111069 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 946.532074ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6531 @ 06/23/25 17:27:56.111
  I0623 17:27:56.117098 20 rest.go:153] Scaling statefulset ss to 0
  I0623 17:27:56.124176 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0623 17:27:56.127191 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6531
  I0623 17:27:56.131206 20 rest.go:153] Scaling statefulset ss to 0
  I0623 17:27:56.138441 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0623 17:27:56.141144 20 rest.go:91] Deleting statefulset ss
  I0623 17:27:56.157451 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6531" for this suite. @ 06/23/25 17:27:56.161
• [60.894 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 06/23/25 17:27:56.168
  I0623 17:27:56.168646 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename statefulset @ 06/23/25 17:27:56.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:27:56.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:27:56.186
  STEP: Creating service test in namespace statefulset-2562 @ 06/23/25 17:27:56.188
  STEP: Creating statefulset ss in namespace statefulset-2562 @ 06/23/25 17:27:56.232
  I0623 17:27:56.244349 20 wait.go:44] Found 0 stateful pods, waiting for 1
  I0623 17:28:06.246509 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/23/25 17:28:06.252
  STEP: Getting /status @ 06/23/25 17:28:06.258
  I0623 17:28:06.261879 20 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/23/25 17:28:06.261
  I0623 17:28:06.271864 20 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/23/25 17:28:06.271
  I0623 17:28:06.273790 20 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0623 17:28:06.273814 20 statefulset.go:1126] Found Statefulset ss in namespace statefulset-2562 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0623 17:28:06.273824 20 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/23/25 17:28:06.273
  I0623 17:28:06.273844 20 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0623 17:28:06.280470 20 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/23/25 17:28:06.28
  I0623 17:28:06.281972 20 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0623 17:28:06.282080 20 statefulset.go:138] Deleting all statefulset in ns statefulset-2562
  I0623 17:28:06.285521 20 rest.go:153] Scaling statefulset ss to 0
  I0623 17:28:16.301647 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0623 17:28:16.305001 20 rest.go:91] Deleting statefulset ss
  I0623 17:28:16.320271 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2562" for this suite. @ 06/23/25 17:28:16.325
• [20.165 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 06/23/25 17:28:16.333
  I0623 17:28:16.333994 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 17:28:16.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:28:16.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:28:16.352
  STEP: creating service in namespace services-2872 @ 06/23/25 17:28:16.354
  STEP: creating service affinity-clusterip-transition in namespace services-2872 @ 06/23/25 17:28:16.354
  I0623 17:28:16.389011 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0623 17:28:18.409741 20 resource.go:361] Creating new exec pod
  I0623 17:28:20.430018 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2872 exec execpod-affinitycpnwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0623 17:28:20.538635 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.152.183.40) 80 port [tcp/http] succeeded!\n"
  I0623 17:28:20.538680 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:28:20.538835 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2872 exec execpod-affinitycpnwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  I0623 17:28:20.641532 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [tcp/http] succeeded!\n"
  I0623 17:28:20.641715 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:28:20.652398 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2872 exec execpod-affinitycpnwj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/ ; done'
  I0623 17:28:20.815885 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n"
  I0623 17:28:20.816078 20 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-7mjdb\naffinity-clusterip-transition-5cffb65545-7mjdb\naffinity-clusterip-transition-5cffb65545-7mjdb\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-7mjdb\naffinity-clusterip-transition-5cffb65545-7mjdb\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-7mjdb\naffinity-clusterip-transition-5cffb65545-7mjdb\naffinity-clusterip-transition-5cffb65545-8h465\naffinity-clusterip-transition-5cffb65545-8h465\naffinity-clusterip-transition-5cffb65545-7mjdb"
  I0623 17:28:20.816093 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.816102 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.816109 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-7mjdb
  I0623 17:28:20.816123 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-7mjdb
  I0623 17:28:20.816130 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-7mjdb
  I0623 17:28:20.816137 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.816143 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.816149 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-7mjdb
  I0623 17:28:20.816156 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-7mjdb
  I0623 17:28:20.816163 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.816168 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.816177 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-7mjdb
  I0623 17:28:20.816183 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-7mjdb
  I0623 17:28:20.816189 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-8h465
  I0623 17:28:20.816196 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-8h465
  I0623 17:28:20.816202 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-7mjdb
  I0623 17:28:20.825788 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2872 exec execpod-affinitycpnwj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/ ; done'
  I0623 17:28:20.979442 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.40:80/\n"
  I0623 17:28:20.979485 20 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx\naffinity-clusterip-transition-5cffb65545-qjtkx"
  I0623 17:28:20.979502 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979511 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979519 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979526 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979532 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979538 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979544 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979550 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979556 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979563 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979569 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979575 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979583 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979590 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979597 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979604 20 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-qjtkx
  I0623 17:28:20.979675 20 service.go:4352] Cleaning up the exec pod
  I0623 17:28:21.031554 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2872" for this suite. @ 06/23/25 17:28:21.042
• [4.719 seconds]
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 06/23/25 17:28:21.052
  I0623 17:28:21.052991 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename limitrange @ 06/23/25 17:28:21.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:28:21.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:28:21.068
  STEP: Creating a LimitRange @ 06/23/25 17:28:21.071
  STEP: Setting up watch @ 06/23/25 17:28:21.071
  STEP: Submitting a LimitRange @ 06/23/25 17:28:21.175
  STEP: Verifying LimitRange creation was observed @ 06/23/25 17:28:21.185
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/23/25 17:28:21.185
  I0623 17:28:21.187846 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0623 17:28:21.187869 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/23/25 17:28:21.187
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/23/25 17:28:21.194
  I0623 17:28:21.198661 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0623 17:28:21.198683 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/23/25 17:28:21.198
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/23/25 17:28:21.206
  I0623 17:28:21.213382 20 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0623 17:28:21.213402 20 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/23/25 17:28:21.213
  STEP: Failing to create a Pod with more than max resources @ 06/23/25 17:28:21.215
  STEP: Updating a LimitRange @ 06/23/25 17:28:21.217
  STEP: Verifying LimitRange updating is effective @ 06/23/25 17:28:21.223
  STEP: Creating a Pod with less than former min resources @ 06/23/25 17:28:23.227
  STEP: Failing to create a Pod with more than max resources @ 06/23/25 17:28:23.235
  STEP: Deleting a LimitRange @ 06/23/25 17:28:23.239
  STEP: Verifying the LimitRange was deleted @ 06/23/25 17:28:23.246
  I0623 17:28:28.256001 20 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/23/25 17:28:28.256
  I0623 17:28:28.264051 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5964" for this suite. @ 06/23/25 17:28:28.27
• [7.224 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 06/23/25 17:28:28.277
  I0623 17:28:28.277146 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 17:28:28.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:28:28.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:28:28.295
  STEP: creating service in namespace services-5304 @ 06/23/25 17:28:28.297
  STEP: creating service affinity-nodeport in namespace services-5304 @ 06/23/25 17:28:28.297
  I0623 17:28:28.333108 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0623 17:28:30.358926 20 resource.go:361] Creating new exec pod
  I0623 17:28:32.385282 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-5304 exec execpod-affinityc6jlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0623 17:28:32.466966 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.152.183.109) 80 port [tcp/http] succeeded!\n"
  I0623 17:28:32.466996 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:28:32.467050 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-5304 exec execpod-affinityc6jlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.109 80'
  I0623 17:28:32.543764 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.109 80\nConnection to 10.152.183.109 80 port [tcp/http] succeeded!\n"
  I0623 17:28:32.543854 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:28:32.543934 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-5304 exec execpod-affinityc6jlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.62 30306'
  I0623 17:28:32.623794 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.41.62 30306\nConnection to 172.31.41.62 30306 port [tcp/*] succeeded!\n"
  I0623 17:28:32.623821 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:28:32.623864 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-5304 exec execpod-affinityc6jlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.64.108 30306'
  I0623 17:28:32.694873 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.64.108 30306\nConnection to 172.31.64.108 30306 port [tcp/*] succeeded!\n"
  I0623 17:28:32.694909 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:28:32.694953 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-5304 exec execpod-affinityc6jlb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/ ; done'
  I0623 17:28:32.867379 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.24.79:30306/\n"
  I0623 17:28:32.867419 20 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn\naffinity-nodeport-85dffb5fc7-p8mpn"
  I0623 17:28:32.867432 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867441 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867448 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867453 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867460 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867468 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867475 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867486 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867492 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867516 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867523 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867529 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867535 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867542 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867549 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867556 20 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-p8mpn
  I0623 17:28:32.867658 20 service.go:4352] Cleaning up the exec pod
  I0623 17:28:32.949102 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5304" for this suite. @ 06/23/25 17:28:32.957
• [4.686 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 06/23/25 17:28:32.963
  I0623 17:28:32.963679 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename dns @ 06/23/25 17:28:32.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:28:32.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:28:32.979
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/23/25 17:28:32.982
  I0623 17:28:32.993170 20 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6871  69c4299b-d1ea-45ef-a951-2b45e83e3eea 28722 1 2025-06-23 17:28:32 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-06-23 17:28:32 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4xx4n,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4xx4n,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/23/25 17:28:35.004
  I0623 17:28:35.004812 20 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6871 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:28:35.004829 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:28:35.004869 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-6871/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0623 17:28:35.060314 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 06/23/25 17:28:35.06
  I0623 17:28:35.060382 20 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6871 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:28:35.060387 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:28:35.060425 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-6871/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0623 17:28:35.141446 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:28:35.141616 20 dns.go:451] Deleting pod test-dns-nameservers...
  I0623 17:28:35.155376 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6871" for this suite. @ 06/23/25 17:28:35.159
• [2.203 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 06/23/25 17:28:35.167
  I0623 17:28:35.167406 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 17:28:35.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:28:35.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:28:35.182
  STEP: Creating the pod @ 06/23/25 17:28:35.185
  I0623 17:28:37.737463 20 pod_client.go:173] Successfully updated pod "annotationupdateb9909a34-f6de-4eba-ad00-983ae57b0bb1"
  I0623 17:28:41.762574 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1202" for this suite. @ 06/23/25 17:28:41.766
• [6.607 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 06/23/25 17:28:41.774
  I0623 17:28:41.774125 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename var-expansion @ 06/23/25 17:28:41.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:28:41.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:28:41.79
  STEP: creating the pod @ 06/23/25 17:28:41.792
  STEP: waiting for pod running @ 06/23/25 17:28:41.803
  STEP: creating a file in subpath @ 06/23/25 17:28:43.812
  I0623 17:28:43.816758 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5185 PodName:var-expansion-479d9fd4-6b8f-4a31-b94f-d36744c90ff2 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:28:43.816800 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:28:43.816835 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-5185/pods/var-expansion-479d9fd4-6b8f-4a31-b94f-d36744c90ff2/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0623 17:28:43.847752 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 06/23/25 17:28:43.847
  I0623 17:28:43.852423 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5185 PodName:var-expansion-479d9fd4-6b8f-4a31-b94f-d36744c90ff2 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:28:43.852441 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:28:43.852476 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-5185/pods/var-expansion-479d9fd4-6b8f-4a31-b94f-d36744c90ff2/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0623 17:28:43.881986 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 06/23/25 17:28:43.882
  I0623 17:28:44.396028 20 pod_client.go:173] Successfully updated pod "var-expansion-479d9fd4-6b8f-4a31-b94f-d36744c90ff2"
  STEP: waiting for annotated pod running @ 06/23/25 17:28:44.396
  STEP: deleting the pod gracefully @ 06/23/25 17:28:44.4
  I0623 17:28:44.400517 20 delete.go:62] Deleting pod "var-expansion-479d9fd4-6b8f-4a31-b94f-d36744c90ff2" in namespace "var-expansion-5185"
  I0623 17:28:44.408851 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-479d9fd4-6b8f-4a31-b94f-d36744c90ff2" to be fully deleted
  I0623 17:29:18.505975 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5185" for this suite. @ 06/23/25 17:29:18.51
• [36.744 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/23/25 17:29:18.518
  I0623 17:29:18.518236 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 17:29:18.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:29:18.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:29:18.535
  STEP: Creating secret with name secret-test-map-4357b02c-daf5-4ba2-9faa-6231beed0d23 @ 06/23/25 17:29:18.537
  STEP: Creating a pod to test consume secrets @ 06/23/25 17:29:18.543
  STEP: Saw pod success @ 06/23/25 17:29:22.566
  I0623 17:29:22.569501 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-secrets-33947cb3-e5ad-4352-8b45-f5e3cc0d34ed container secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 17:29:22.576
  I0623 17:29:22.596064 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5047" for this suite. @ 06/23/25 17:29:22.601
• [4.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 06/23/25 17:29:22.609
  I0623 17:29:22.609467 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 17:29:22.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:29:22.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:29:22.628
  STEP: Creating configMap with name configmap-test-volume-map-eb2cc4d2-2788-4129-af81-da2d511fed43 @ 06/23/25 17:29:22.63
  STEP: Creating a pod to test consume configMaps @ 06/23/25 17:29:22.634
  STEP: Saw pod success @ 06/23/25 17:29:26.663
  I0623 17:29:26.666798 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-configmaps-092de451-4590-42b9-9baf-71f6ecddd4f5 container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 17:29:26.674
  I0623 17:29:26.695192 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3064" for this suite. @ 06/23/25 17:29:26.699
• [4.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 06/23/25 17:29:26.706
  I0623 17:29:26.706505 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename dns @ 06/23/25 17:29:26.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:29:26.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:29:26.723
  STEP: Creating a test externalName service @ 06/23/25 17:29:26.725
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6677.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6677.svc.cluster.local; sleep 1; done
   @ 06/23/25 17:29:26.732
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6677.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6677.svc.cluster.local; sleep 1; done
   @ 06/23/25 17:29:26.732
  STEP: creating a pod to probe DNS @ 06/23/25 17:29:26.732
  STEP: submitting the pod to kubernetes @ 06/23/25 17:29:26.732
  STEP: retrieving the pod @ 06/23/25 17:29:28.756
  STEP: looking for the results for each expected name from probers @ 06/23/25 17:29:28.76
  I0623 17:29:28.770058 20 dns_common.go:571] DNS probes using dns-test-33a2c0a0-a8ba-4f91-bafb-af886bf9080b succeeded

  STEP: changing the externalName to bar.example.com @ 06/23/25 17:29:28.77
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6677.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6677.svc.cluster.local; sleep 1; done
   @ 06/23/25 17:29:28.778
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6677.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6677.svc.cluster.local; sleep 1; done
   @ 06/23/25 17:29:28.778
  STEP: creating a second pod to probe DNS @ 06/23/25 17:29:28.778
  STEP: submitting the pod to kubernetes @ 06/23/25 17:29:28.778
  STEP: retrieving the pod @ 06/23/25 17:29:32.799
  STEP: looking for the results for each expected name from probers @ 06/23/25 17:29:32.803
  I0623 17:29:32.811949 20 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-6677.svc.cluster.local from pod  dns-6677/dns-test-44406b6a-932a-4f9e-9fd9-9d4699a48167 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0623 17:29:32.811981 20 dns_common.go:506] Lookups using dns-6677/dns-test-44406b6a-932a-4f9e-9fd9-9d4699a48167 failed for: [jessie_udp@dns-test-service-3.dns-6677.svc.cluster.local]

  I0623 17:29:32.828017 20 dns_common.go:514] Pod client logs for webserver: 
  I0623 17:29:32.836374 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0623 17:29:32.845764 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0623 17:29:37.815966 20 dns_common.go:571] DNS probes using dns-test-44406b6a-932a-4f9e-9fd9-9d4699a48167 succeeded

  STEP: changing the service to type=ClusterIP @ 06/23/25 17:29:37.816
  I0623 17:29:37.836418      20 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6677.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-6677.svc.cluster.local; sleep 1; done
   @ 06/23/25 17:29:37.836
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6677.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6677.svc.cluster.local; sleep 1; done
   @ 06/23/25 17:29:37.836
  STEP: creating a third pod to probe DNS @ 06/23/25 17:29:37.836
  STEP: submitting the pod to kubernetes @ 06/23/25 17:29:37.841
  STEP: retrieving the pod @ 06/23/25 17:29:39.859
  STEP: looking for the results for each expected name from probers @ 06/23/25 17:29:39.863
  I0623 17:29:39.873871 20 dns_common.go:571] DNS probes using dns-test-89eb62a8-0424-41da-956d-79b843db658a succeeded

  STEP: deleting the pod @ 06/23/25 17:29:39.873
  STEP: deleting the pod @ 06/23/25 17:29:39.889
  STEP: deleting the pod @ 06/23/25 17:29:39.905
  STEP: deleting the test externalName service @ 06/23/25 17:29:39.924
  I0623 17:29:39.949235 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6677" for this suite. @ 06/23/25 17:29:39.954
• [13.254 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 06/23/25 17:29:39.96
  I0623 17:29:39.960474 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:29:39.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:29:39.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:29:39.978
  STEP: Setting up server cert @ 06/23/25 17:29:39.996
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:29:40.513
  STEP: Deploying the webhook pod @ 06/23/25 17:29:40.519
  STEP: Wait for the deployment to be ready @ 06/23/25 17:29:40.534
  I0623 17:29:40.544634 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:29:42.558
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:29:42.574
  I0623 17:29:43.574729 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/23/25 17:29:43.58
  STEP: create a configmap that should be updated by the webhook @ 06/23/25 17:29:43.594
  I0623 17:29:43.665388 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1935" for this suite. @ 06/23/25 17:29:43.671
  STEP: Destroying namespace "webhook-markers-7392" for this suite. @ 06/23/25 17:29:43.677
• [3.724 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/23/25 17:29:43.684
  I0623 17:29:43.684672 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-runtime @ 06/23/25 17:29:43.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:29:43.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:29:43.703
  STEP: create the container @ 06/23/25 17:29:43.706
  I0623 17:29:43.716058      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 06/23/25 17:29:43.716
  STEP: get the container status @ 06/23/25 17:29:46.739
  STEP: the container should be terminated @ 06/23/25 17:29:46.743
  STEP: the termination message should be set @ 06/23/25 17:29:46.743
  I0623 17:29:46.743624 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/23/25 17:29:46.743
  I0623 17:29:46.766075 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7095" for this suite. @ 06/23/25 17:29:46.77
• [3.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 06/23/25 17:29:46.778
  I0623 17:29:46.778252 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pods @ 06/23/25 17:29:46.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:29:46.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:29:46.794
  STEP: creating the pod @ 06/23/25 17:29:46.797
  STEP: submitting the pod to kubernetes @ 06/23/25 17:29:46.797
  STEP: verifying QOS class is set on the pod @ 06/23/25 17:29:46.809
  I0623 17:29:46.813285 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7841" for this suite. @ 06/23/25 17:29:46.871
• [0.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 06/23/25 17:29:46.881
  I0623 17:29:46.881120 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 17:29:46.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:29:46.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:29:46.9
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 17:29:46.902
  STEP: Saw pod success @ 06/23/25 17:29:50.925
  I0623 17:29:50.930472 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-0e64dc47-b508-4b4c-81a8-cdad56a38395 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 17:29:50.937
  I0623 17:29:50.957214 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9420" for this suite. @ 06/23/25 17:29:50.96
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 06/23/25 17:29:50.97
  I0623 17:29:50.970079 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 17:29:50.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:29:50.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:29:50.987
  STEP: creating service multi-endpoint-test in namespace services-2308 @ 06/23/25 17:29:50.989
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2308 to expose endpoints map[] @ 06/23/25 17:29:51.002
  I0623 17:29:51.010535      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:29:51.010593 20 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0623 17:29:52.014386      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:29:52.019814 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2308 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2308 @ 06/23/25 17:29:52.019
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2308 to expose endpoints map[pod1:[100]] @ 06/23/25 17:29:54.047
  I0623 17:29:54.054237      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:29:54.058938 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2308 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2308 @ 06/23/25 17:29:54.058
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2308 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/23/25 17:29:56.077
  I0623 17:29:56.086198      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:29:56.090842 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2308 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/23/25 17:29:56.09
  I0623 17:29:56.090883 20 resource.go:361] Creating new exec pod
  I0623 17:29:58.109929 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2308 exec execpodgdk7j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0623 17:29:58.191596 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.152.183.38) 80 port [tcp/http] succeeded!\n"
  I0623 17:29:58.191644 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:29:58.191695 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2308 exec execpodgdk7j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.38 80'
  I0623 17:29:58.287906 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.38 80\nConnection to 10.152.183.38 80 port [tcp/http] succeeded!\n"
  I0623 17:29:58.287939 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:29:58.287987 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2308 exec execpodgdk7j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0623 17:29:58.370815 20 builder.go:146] stderr: "+ echo+ nc -v -t -w 2 multi-endpoint-test 81\n hostName\nConnection to multi-endpoint-test (10.152.183.38) 81 port [tcp/*] succeeded!\n"
  I0623 17:29:58.370851 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:29:58.370919 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2308 exec execpodgdk7j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.38 81'
  I0623 17:29:58.455039 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.38 81\nConnection to 10.152.183.38 81 port [tcp/*] succeeded!\n"
  I0623 17:29:58.455074 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2308 @ 06/23/25 17:29:58.455
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2308 to expose endpoints map[pod2:[101]] @ 06/23/25 17:29:58.477
  I0623 17:29:58.485711      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:29:58.489755 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2308 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2308 @ 06/23/25 17:29:58.489
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2308 to expose endpoints map[] @ 06/23/25 17:29:58.504
  I0623 17:29:58.511586      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:29:58.517723 20 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2308 exposes endpoints map[]
  I0623 17:29:58.543402 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2308" for this suite. @ 06/23/25 17:29:58.547
• [7.584 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 06/23/25 17:29:58.555
  I0623 17:29:58.555130 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 17:29:58.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:29:58.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:29:58.572
  STEP: Counting existing ResourceQuota @ 06/23/25 17:29:58.575
  STEP: Creating a ResourceQuota @ 06/23/25 17:30:03.579
  STEP: Ensuring resource quota status is calculated @ 06/23/25 17:30:03.586
  STEP: Creating a ReplicaSet @ 06/23/25 17:30:05.591
  STEP: Ensuring resource quota status captures replicaset creation @ 06/23/25 17:30:05.611
  STEP: Deleting a ReplicaSet @ 06/23/25 17:30:07.617
  STEP: Ensuring resource quota status released usage @ 06/23/25 17:30:07.624
  I0623 17:30:09.629518 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1469" for this suite. @ 06/23/25 17:30:09.634
• [11.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 06/23/25 17:30:09.642
  I0623 17:30:09.642875 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:30:09.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:09.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:09.664
  STEP: Creating configMap with name projected-configmap-test-volume-6a4b5b7a-487c-4926-a73c-903fbe534db3 @ 06/23/25 17:30:09.666
  STEP: Creating a pod to test consume configMaps @ 06/23/25 17:30:09.671
  STEP: Saw pod success @ 06/23/25 17:30:13.697
  I0623 17:30:13.700683 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-configmaps-cd50631c-af78-43bb-87f3-d3babcfd5848 container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 17:30:13.706
  I0623 17:30:13.726030 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-162" for this suite. @ 06/23/25 17:30:13.729
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 06/23/25 17:30:13.737
  I0623 17:30:13.737924 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 17:30:13.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:13.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:13.757
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8003 @ 06/23/25 17:30:13.76
  STEP: changing the ExternalName service to type=ClusterIP @ 06/23/25 17:30:13.764
  I0623 17:30:13.805015 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0623 17:30:15.812572 20 resource.go:361] Creating new exec pod
  I0623 17:30:17.835625 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-8003 exec execpodlzgzg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0623 17:30:17.913912 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.193) 80 port [tcp/http] succeeded!\n"
  I0623 17:30:17.913950 20 builder.go:147] stdout: "externalname-service-5ff8fdd7b5-hx6cr"
  I0623 17:30:17.914023 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-8003 exec execpodlzgzg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.193 80'
  I0623 17:30:18.000288 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.193 80\nConnection to 10.152.183.193 80 port [tcp/http] succeeded!\n"
  I0623 17:30:18.000328 20 builder.go:147] stdout: "externalname-service-5ff8fdd7b5-hx6cr"
  I0623 17:30:18.000405 20 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0623 17:30:18.026038 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8003" for this suite. @ 06/23/25 17:30:18.03
• [4.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 06/23/25 17:30:18.039
  I0623 17:30:18.039065 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:30:18.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:18.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:18.055
  STEP: Setting up server cert @ 06/23/25 17:30:18.074
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:30:18.481
  STEP: Deploying the webhook pod @ 06/23/25 17:30:18.489
  STEP: Wait for the deployment to be ready @ 06/23/25 17:30:18.504
  I0623 17:30:18.511641 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:30:20.526
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:30:20.548
  I0623 17:30:21.548923 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/23/25 17:30:21.553
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/23/25 17:30:21.572
  STEP: Creating a configMap that should not be mutated @ 06/23/25 17:30:21.579
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/23/25 17:30:21.591
  STEP: Creating a configMap that should be mutated @ 06/23/25 17:30:21.6
  I0623 17:30:21.667708 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9071" for this suite. @ 06/23/25 17:30:21.671
  STEP: Destroying namespace "webhook-markers-9041" for this suite. @ 06/23/25 17:30:21.683
• [3.653 seconds]
------------------------------
SSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/23/25 17:30:21.691
  I0623 17:30:21.691945 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename conformance-tests @ 06/23/25 17:30:21.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:21.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:21.709
  STEP: Getting node addresses @ 06/23/25 17:30:21.712
  I0623 17:30:21.712808 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0623 17:30:21.772911 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8150" for this suite. @ 06/23/25 17:30:21.776
• [0.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 06/23/25 17:30:21.785
  I0623 17:30:21.785797 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 17:30:21.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:21.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:21.803
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/23/25 17:30:21.806
  STEP: Saw pod success @ 06/23/25 17:30:25.829
  I0623 17:30:25.833609 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-089545d5-1099-454a-96b4-da9bd28fab3d container test-container: <nil>
  STEP: delete the pod @ 06/23/25 17:30:25.84
  I0623 17:30:25.860092 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3006" for this suite. @ 06/23/25 17:30:25.864
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 06/23/25 17:30:25.872
  I0623 17:30:25.872053 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename runtimeclass @ 06/23/25 17:30:25.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:25.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:25.889
  I0623 17:30:25.899147 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7108" for this suite. @ 06/23/25 17:30:25.964
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/23/25 17:30:25.972
  I0623 17:30:25.972400 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename deployment @ 06/23/25 17:30:25.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:25.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:25.991
  I0623 17:30:25.994745 20 deployment.go:1664] Creating simple deployment test-new-deployment
  I0623 17:30:26.007903 20 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 06/23/25 17:30:28.026
  STEP: updating a scale subresource @ 06/23/25 17:30:28.029
  STEP: verifying the deployment Spec.Replicas was modified @ 06/23/25 17:30:28.037
  STEP: Patch a scale subresource @ 06/23/25 17:30:28.04
  I0623 17:30:28.064153 20 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-637",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c442f74d-ec98-4b1a-91e5-846227e61264",
      ResourceVersion: (string) (len=5) "29920",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296625,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0623 17:30:28.074993 20 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-637",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d7375fb-ed94-441b-9916-d4a6f4221a1a",
      ResourceVersion: (string) (len=5) "29927",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "c442f74d-ec98-4b1a-91e5-846227e61264",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 34 34 32 66 37  34 64 2d 65 63 39 38 2d  |\"c442f74d-ec98-|
              00000120  34 62 31 61 2d 39 31 65  35 2d 38 34 36 32 32 37  |4b1a-91e5-846227|
              00000130  65 36 31 32 36 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e61264\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 17:30:28.096524 20 deployment.go:68] Pod "test-new-deployment-685b768f58-hrql7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-hrql7",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-637",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "842a4091-0800-45b1-8c31-cb936b38912b",
      ResourceVersion: (string) (len=5) "29932",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "9d7375fb-ed94-441b-9916-d4a6f4221a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  37 33 37 35 66 62 2d 65  |d\":\"9d7375fb-e|
              00000090  64 39 34 2d 34 34 31 62  2d 39 39 31 36 2d 64 34  |d94-441b-9916-d4|
              000000a0  61 36 66 34 32 32 31 61  31 61 5c 22 7d 22 3a 7b  |a6f4221a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-btl98",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-btl98",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-btl98",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 17:30:28.097843 20 deployment.go:68] Pod "test-new-deployment-685b768f58-jb2pq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-jb2pq",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-637",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02969777-c177-4587-b6a7-e568d77d654b",
      ResourceVersion: (string) (len=5) "29909",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "9d7375fb-ed94-441b-9916-d4a6f4221a1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 64  37 33 37 35 66 62 2d 65  |d\":\"9d7375fb-e|
              00000090  64 39 34 2d 34 34 31 62  2d 39 39 31 36 2d 64 34  |d94-441b-9916-d4|
              000000a0  61 36 66 34 32 32 31 61  31 61 5c 22 7d 22 3a 7b  |a6f4221a1a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 31 32 35 5c 22 7d 22  |2.168.81.125\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ltltw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ltltw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=14) "192.168.81.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886296626,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8d7f822a07403ca5dcd934f11b1c18503dc233cd904fd918630cd3d84c9b6e74",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ltltw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 17:30:28.099162 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-637" for this suite. @ 06/23/25 17:30:28.104
• [2.151 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 06/23/25 17:30:28.124
  I0623 17:30:28.124091 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 17:30:28.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:28.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:28.143
  I0623 17:30:28.146916 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-8035 version'
  I0623 17:30:28.183815 20 builder.go:146] stderr: ""
  I0623 17:30:28.183846 20 builder.go:147] stdout: "Client Version: v1.33.2\nKustomize Version: v5.6.0\nServer Version: v1.33.2\n"
  I0623 17:30:28.184089 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8035" for this suite. @ 06/23/25 17:30:28.205
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 06/23/25 17:30:28.213
  I0623 17:30:28.213492 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 17:30:28.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:28.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:28.232
  STEP: Creating configMap configmap-7254/configmap-test-12e27df2-52ab-48fe-b3ed-d81ca72726ea @ 06/23/25 17:30:28.237
  STEP: Creating a pod to test consume configMaps @ 06/23/25 17:30:28.242
  STEP: Saw pod success @ 06/23/25 17:30:32.266
  I0623 17:30:32.270219 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-configmaps-2e7d8c5b-cac4-4acd-913c-9e2dc15081c8 container env-test: <nil>
  STEP: delete the pod @ 06/23/25 17:30:32.277
  I0623 17:30:32.298489 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7254" for this suite. @ 06/23/25 17:30:32.303
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 06/23/25 17:30:32.311
  I0623 17:30:32.311467 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename volumeattachment @ 06/23/25 17:30:32.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:32.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:32.325
  STEP: Create VolumeAttachment "va-e2e-68s2d" on node "ip-172-31-17-47" @ 06/23/25 17:30:32.404
  STEP: Get VolumeAttachment "va-e2e-68s2d" on node "ip-172-31-17-47" @ 06/23/25 17:30:32.41
  STEP: Patch VolumeAttachment "va-e2e-68s2d" on node "ip-172-31-17-47" @ 06/23/25 17:30:32.414
  STEP: List VolumeAttachments with "va-e2e-68s2d=patched" label @ 06/23/25 17:30:32.42
  STEP: Delete VolumeAttachment "va-e2e-68s2d" on node "ip-172-31-17-47" @ 06/23/25 17:30:32.423
  STEP: Confirm deletion of VolumeAttachment "va-e2e-68s2d" on node "ip-172-31-17-47" @ 06/23/25 17:30:32.43
  STEP: Create VolumeAttachment "va-e2e-pjmxq" on node "ip-172-31-17-47" @ 06/23/25 17:30:32.504
  STEP: Update the VolumeAttachment "va-e2e-pjmxq" on node "ip-172-31-17-47" with label "va-e2e=updated" @ 06/23/25 17:30:32.511
  STEP: Create VolumeAttachment "va-e2e-jrqxj" on node "ip-172-31-64-108" @ 06/23/25 17:30:32.605
  STEP: Update the VolumeAttachment "va-e2e-jrqxj" on node "ip-172-31-64-108" with label "va-e2e=updated" @ 06/23/25 17:30:32.613
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 06/23/25 17:30:32.622
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 06/23/25 17:30:32.64
  I0623 17:30:32.644715 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6167" for this suite. @ 06/23/25 17:30:32.705
• [0.403 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 06/23/25 17:30:32.714
  I0623 17:30:32.714553 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:30:32.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:32.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:32.734
  STEP: Creating the pod @ 06/23/25 17:30:32.737
  I0623 17:30:35.283603 20 pod_client.go:173] Successfully updated pod "labelsupdatef8619ea1-32aa-46fa-b517-cb2683d0e1b1"
  I0623 17:30:37.300821 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-12" for this suite. @ 06/23/25 17:30:37.305
• [4.599 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 06/23/25 17:30:37.313
  I0623 17:30:37.313983 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/23/25 17:30:37.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:37.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:37.334
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/23/25 17:30:37.336
  I0623 17:30:37.336533 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 17:30:38.674312 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 17:30:43.558652 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3674" for this suite. @ 06/23/25 17:30:43.567
• [6.262 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 06/23/25 17:30:43.575
  I0623 17:30:43.575930 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 17:30:43.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:43.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:43.594
  STEP: Creating a ResourceQuota with terminating scope @ 06/23/25 17:30:43.596
  STEP: Ensuring ResourceQuota status is calculated @ 06/23/25 17:30:43.602
  STEP: Creating a ResourceQuota with not terminating scope @ 06/23/25 17:30:45.607
  STEP: Ensuring ResourceQuota status is calculated @ 06/23/25 17:30:45.613
  STEP: Creating a long running pod @ 06/23/25 17:30:47.618
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/23/25 17:30:47.634
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/23/25 17:30:49.638
  STEP: Deleting the pod @ 06/23/25 17:30:51.642
  STEP: Ensuring resource quota status released the pod usage @ 06/23/25 17:30:51.66
  STEP: Creating a terminating pod @ 06/23/25 17:30:53.664
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/23/25 17:30:53.676
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/23/25 17:30:55.683
  STEP: Deleting the pod @ 06/23/25 17:30:57.688
  STEP: Ensuring resource quota status released the pod usage @ 06/23/25 17:30:57.707
  I0623 17:30:59.713998 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2766" for this suite. @ 06/23/25 17:30:59.719
• [16.153 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/23/25 17:30:59.729
  I0623 17:30:59.729038 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:30:59.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:30:59.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:30:59.745
  STEP: Creating projection with secret that has name projected-secret-test-map-3e40547d-81e2-4bc9-9c10-30adced91bed @ 06/23/25 17:30:59.748
  STEP: Creating a pod to test consume secrets @ 06/23/25 17:30:59.752
  STEP: Saw pod success @ 06/23/25 17:31:01.771
  I0623 17:31:01.775503 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-secrets-48bfb6d6-bde5-4dab-9e40-f73f500f2ef9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 17:31:01.789
  I0623 17:31:01.806268 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1413" for this suite. @ 06/23/25 17:31:01.81
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 06/23/25 17:31:01.818
  I0623 17:31:01.818937 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replication-controller @ 06/23/25 17:31:01.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:31:01.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:31:01.835
  STEP: Creating ReplicationController "e2e-rc-5sgwt" @ 06/23/25 17:31:01.838
  I0623 17:31:01.845177 20 rc.go:795] Get Replication Controller "e2e-rc-5sgwt" to confirm replicas
  I0623 17:31:02.845908 20 rc.go:795] Get Replication Controller "e2e-rc-5sgwt" to confirm replicas
  I0623 17:31:02.850242 20 rc.go:804] Found 1 replicas for "e2e-rc-5sgwt" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-5sgwt" @ 06/23/25 17:31:02.85
  STEP: Updating a scale subresource @ 06/23/25 17:31:02.854
  STEP: Verifying replicas where modified for replication controller "e2e-rc-5sgwt" @ 06/23/25 17:31:02.861
  I0623 17:31:02.861554 20 rc.go:795] Get Replication Controller "e2e-rc-5sgwt" to confirm replicas
  I0623 17:31:03.861826 20 rc.go:795] Get Replication Controller "e2e-rc-5sgwt" to confirm replicas
  I0623 17:31:03.866585 20 rc.go:804] Found 2 replicas for "e2e-rc-5sgwt" replication controller
  I0623 17:31:03.866812 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9380" for this suite. @ 06/23/25 17:31:03.871
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 06/23/25 17:31:03.88
  I0623 17:31:03.880017 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename dns @ 06/23/25 17:31:03.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:31:03.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:31:03.894
  STEP: Creating a test headless service @ 06/23/25 17:31:03.897
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3434.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3434.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3434.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3434.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3434.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3434.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3434.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-3434.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3434.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-3434.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 71.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.71_udp@PTR;check="$$(dig +tcp +noall +answer +search 71.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.71_tcp@PTR;sleep 1; done
   @ 06/23/25 17:31:03.925
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3434.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3434.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3434.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3434.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3434.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3434.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3434.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3434.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3434.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3434.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 71.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.71_udp@PTR;check="$$(dig +tcp +noall +answer +search 71.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.71_tcp@PTR;sleep 1; done
   @ 06/23/25 17:31:03.925
  STEP: creating a pod to probe DNS @ 06/23/25 17:31:03.925
  STEP: submitting the pod to kubernetes @ 06/23/25 17:31:03.925
  STEP: retrieving the pod @ 06/23/25 17:31:05.95
  STEP: looking for the results for each expected name from probers @ 06/23/25 17:31:05.954
  I0623 17:31:05.959607 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3434.svc.cluster.local from pod dns-3434/dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e: the server could not find the requested resource (get pods dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e)
  I0623 17:31:05.963181 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3434.svc.cluster.local from pod dns-3434/dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e: the server could not find the requested resource (get pods dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e)
  I0623 17:31:05.967723 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local from pod dns-3434/dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e: the server could not find the requested resource (get pods dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e)
  I0623 17:31:05.972230 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local from pod dns-3434/dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e: the server could not find the requested resource (get pods dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e)
  I0623 17:31:05.993142 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3434.svc.cluster.local from pod dns-3434/dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e: the server could not find the requested resource (get pods dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e)
  I0623 17:31:05.998009 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3434.svc.cluster.local from pod dns-3434/dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e: the server could not find the requested resource (get pods dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e)
  I0623 17:31:06.001883 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local from pod dns-3434/dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e: the server could not find the requested resource (get pods dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e)
  I0623 17:31:06.006627 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local from pod dns-3434/dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e: the server could not find the requested resource (get pods dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e)
  I0623 17:31:06.023596 20 dns_common.go:506] Lookups using dns-3434/dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e failed for: [agnhost_udp@dns-test-service.dns-3434.svc.cluster.local agnhost_tcp@dns-test-service.dns-3434.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local jessie_udp@dns-test-service.dns-3434.svc.cluster.local jessie_tcp@dns-test-service.dns-3434.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3434.svc.cluster.local]

  I0623 17:31:06.030455 20 dns_common.go:514] Pod client logs for webserver: 
  I0623 17:31:06.037196 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0623 17:31:06.043935 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0623 17:31:11.022460 20 dns_common.go:546] DNS probes using dns-3434/dns-test-e88e28cd-ace6-4aa6-8ac2-8cdd7a8e257e succeeded

  STEP: deleting the pod @ 06/23/25 17:31:11.022
  STEP: deleting the test service @ 06/23/25 17:31:11.044
  STEP: deleting the test headless service @ 06/23/25 17:31:11.077
  I0623 17:31:11.091525 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3434" for this suite. @ 06/23/25 17:31:11.095
• [7.222 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 06/23/25 17:31:11.102
  I0623 17:31:11.102473 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 17:31:11.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:31:11.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:31:11.12
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/23/25 17:31:11.122
  STEP: Saw pod success @ 06/23/25 17:31:15.151
  I0623 17:31:15.154495 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-eb8debde-3c0b-4203-8c0b-d2284e867881 container test-container: <nil>
  STEP: delete the pod @ 06/23/25 17:31:15.161
  I0623 17:31:15.181591 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9292" for this suite. @ 06/23/25 17:31:15.186
• [4.093 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 06/23/25 17:31:15.195
  I0623 17:31:15.195868 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename namespaces @ 06/23/25 17:31:15.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:31:15.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:31:15.211
  STEP: Creating a test namespace @ 06/23/25 17:31:15.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:31:15.228
  STEP: Creating a pod in the namespace @ 06/23/25 17:31:15.23
  STEP: Waiting for the pod to have running status @ 06/23/25 17:31:15.241
  STEP: Deleting the namespace @ 06/23/25 17:31:17.254
  STEP: Waiting for the namespace to be removed. @ 06/23/25 17:31:17.261
  STEP: Recreating the namespace @ 06/23/25 17:31:28.266
  STEP: Verifying there are no pods in the namespace @ 06/23/25 17:31:28.28
  I0623 17:31:28.284237 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2988" for this suite. @ 06/23/25 17:31:28.287
  STEP: Destroying namespace "nsdeletetest-6461" for this suite. @ 06/23/25 17:31:28.296
  I0623 17:31:28.299161 20 framework.go:370] Namespace nsdeletetest-6461 was already deleted
  STEP: Destroying namespace "nsdeletetest-3657" for this suite. @ 06/23/25 17:31:28.299
• [13.112 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 06/23/25 17:31:28.308
  I0623 17:31:28.308485 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-probe @ 06/23/25 17:31:28.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:31:28.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:31:28.326
  STEP: Creating pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782 @ 06/23/25 17:31:28.328
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/23/25 17:31:30.35
  I0623 17:31:30.354468 20 container_probe.go:1748] Initial restart count of pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 is 0
  I0623 17:31:30.357253 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:32.361799 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:34.366262 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:36.370676 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:38.377076 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:40.383617 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:42.388485 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:44.393756 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:46.398876 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:48.403451 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:50.408301 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:52.412947 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:54.418912 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:56.425373 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:31:58.430536 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:00.436293 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:02.442043 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:04.447118 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:06.452238 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:08.457621 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:10.462032 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:12.468150 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:14.473485 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:16.478542 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:18.482542 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:20.487995 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:22.493334 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:24.499006 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:26.504540 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:28.509189 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:30.514170 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:32.520728 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:34.526238 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:36.531473 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:38.537550 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:40.543642 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:42.548619 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:44.553308 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:46.560626 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:48.566329 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:50.572092 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:52.578030 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:54.582800 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:56.588201 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:32:58.593940 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:00.602120 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:02.608646 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:04.613557 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:06.620092 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:08.626349 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:10.632245 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:12.637415 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:14.642937 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:16.648393 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:18.654600 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:20.659635 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:22.664901 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:24.669582 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:26.675692 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:28.681341 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:30.687639 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:32.693086 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:34.698672 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:36.704288 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:38.709543 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:40.715653 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:42.721433 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:44.726361 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:46.731429 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:48.736716 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:50.742148 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:52.747819 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:54.752757 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:56.758721 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:33:58.763112 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:00.768402 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:02.773502 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:04.778690 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:06.784106 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:08.789044 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:10.795085 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:12.800827 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:14.805933 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:16.810678 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:18.816393 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:20.821765 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:22.827729 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:24.834087 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:26.840320 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:28.845290 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:30.852311 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:32.856877 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:34.861012 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:36.866154 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:38.872144 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:40.878190 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:42.883559 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:44.890849 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:46.896006 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:48.900882 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:50.907658 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:52.912388 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:54.918195 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:56.924169 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:34:58.929869 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:00.934824 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:02.939605 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:04.944570 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:06.950248 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:08.956103 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:10.960973 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:12.966675 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:14.972175 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:16.977516 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:18.983913 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:20.990257 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:22.996797 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:25.001672 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:27.006741 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  I0623 17:35:29.011772 20 container_probe.go:1758] Get pod test-webserver-63b30bc4-cb76-4586-afb3-8cbf6a433058 in namespace container-probe-5782
  STEP: deleting the pod @ 06/23/25 17:35:31.013
  I0623 17:35:31.031962 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5782" for this suite. @ 06/23/25 17:35:31.036
• [242.735 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 06/23/25 17:35:31.043
  I0623 17:35:31.043262 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename security-context @ 06/23/25 17:35:31.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:35:31.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:35:31.06
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/23/25 17:35:31.063
  STEP: Saw pod success @ 06/23/25 17:35:33.086
  I0623 17:35:33.090244 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod security-context-c39d96be-0882-453c-a523-567eabe17e74 container test-container: <nil>
  STEP: delete the pod @ 06/23/25 17:35:33.1
  I0623 17:35:33.120944 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9240" for this suite. @ 06/23/25 17:35:33.126
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/23/25 17:35:33.135
  I0623 17:35:33.135241 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename daemonsets @ 06/23/25 17:35:33.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:35:33.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:35:33.149
  I0623 17:35:33.237847 20 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/23/25 17:35:33.245
  I0623 17:35:33.249548 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:35:33.249570 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/23/25 17:35:33.249
  I0623 17:35:33.349952 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:35:33.349979 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 17:35:34.346426 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:35:34.346458 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 17:35:35.344970 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0623 17:35:35.345001 20 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/23/25 17:35:35.348
  I0623 17:35:35.372096 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:35:35.372115 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/23/25 17:35:35.372
  I0623 17:35:35.445701 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:35:35.445725 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 17:35:36.392886 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:35:36.392919 20 fixtures.go:131] Node ip-172-31-41-62 is running 0 daemon pod, expected 1
  I0623 17:35:37.395632 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0623 17:35:37.395665 20 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/23/25 17:35:37.405
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3373, will wait for the garbage collector to delete the pods @ 06/23/25 17:35:37.405
  I0623 17:35:37.466672 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.417915ms
  I0623 17:35:37.567193 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.51885ms
  I0623 17:35:38.673337 20 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0623 17:35:38.673372 20 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0623 17:35:38.678315 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31204"},"items":null}

  I0623 17:35:38.682866 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31204"},"items":null}

  I0623 17:35:38.711872 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3373" for this suite. @ 06/23/25 17:35:38.719
• [5.595 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 06/23/25 17:35:38.73
  I0623 17:35:38.730491 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 17:35:38.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:35:38.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:35:38.747
  STEP: Creating a pod to test downward api env vars @ 06/23/25 17:35:38.75
  STEP: Saw pod success @ 06/23/25 17:35:42.773
  I0623 17:35:42.777044 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downward-api-f7f24e5a-c79b-463c-bd0e-39b68860364d container dapi-container: <nil>
  STEP: delete the pod @ 06/23/25 17:35:42.783
  I0623 17:35:42.803538 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2696" for this suite. @ 06/23/25 17:35:42.808
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 06/23/25 17:35:42.815
  I0623 17:35:42.815739 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 17:35:42.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:35:42.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:35:42.834
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 17:35:42.837
  STEP: Saw pod success @ 06/23/25 17:35:46.861
  I0623 17:35:46.865721 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-2bbfde89-0d66-4dc6-91a6-fa44dc0b54a0 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 17:35:46.873
  I0623 17:35:46.893278 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1192" for this suite. @ 06/23/25 17:35:46.897
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 06/23/25 17:35:46.905
  I0623 17:35:46.905502 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename lease-test @ 06/23/25 17:35:46.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:35:46.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:35:46.918
  I0623 17:35:46.984570 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2512" for this suite. @ 06/23/25 17:35:46.998
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 06/23/25 17:35:47.005
  I0623 17:35:47.005943 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 17:35:47.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:35:47.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:35:47.022
  STEP: Creating a ResourceQuota @ 06/23/25 17:35:47.024
  STEP: Getting a ResourceQuota @ 06/23/25 17:35:47.029
  STEP: Updating a ResourceQuota @ 06/23/25 17:35:47.032
  STEP: Verifying a ResourceQuota was modified @ 06/23/25 17:35:47.041
  STEP: Deleting a ResourceQuota @ 06/23/25 17:35:47.045
  STEP: Verifying the deleted ResourceQuota @ 06/23/25 17:35:47.051
  I0623 17:35:47.055060 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1435" for this suite. @ 06/23/25 17:35:47.099
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/23/25 17:35:47.107
  I0623 17:35:47.107092 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename deployment @ 06/23/25 17:35:47.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:35:47.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:35:47.126
  STEP: creating a Deployment @ 06/23/25 17:35:47.132
  STEP: waiting for Deployment to be created @ 06/23/25 17:35:47.139
  STEP: waiting for all Replicas to be Ready @ 06/23/25 17:35:47.14
  I0623 17:35:47.141676 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0623 17:35:47.141692 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0623 17:35:47.153513 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0623 17:35:47.153536 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0623 17:35:47.169636 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0623 17:35:47.169652 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0623 17:35:47.204562 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0623 17:35:47.204579 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0623 17:35:47.875726 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0623 17:35:47.875759 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0623 17:35:48.009262 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/23/25 17:35:48.009
  I0623 17:35:48.018496 20 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/23/25 17:35:48.018
  I0623 17:35:48.019714 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0
  I0623 17:35:48.019732 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0
  I0623 17:35:48.019814 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0
  I0623 17:35:48.019828 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0
  I0623 17:35:48.019835 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0
  I0623 17:35:48.019842 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0
  I0623 17:35:48.019966 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0
  I0623 17:35:48.019977 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 0
  I0623 17:35:48.019985 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  I0623 17:35:48.019991 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  I0623 17:35:48.020088 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:48.020098 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:48.020104 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:48.020111 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:48.031587 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:48.031605 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:48.095970 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:48.096002 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:48.116715 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  I0623 17:35:48.116743 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  I0623 17:35:48.134305 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  I0623 17:35:48.134326 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  I0623 17:35:48.888840 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:48.888876 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:48.915448 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  STEP: listing Deployments @ 06/23/25 17:35:48.915
  I0623 17:35:48.919173 20 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/23/25 17:35:48.919
  I0623 17:35:48.931808 20 deployment.go:360] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/23/25 17:35:48.931
  I0623 17:35:48.937987 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0623 17:35:48.950154 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0623 17:35:48.965998 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0623 17:35:48.981073 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0623 17:35:48.995068 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0623 17:35:49.908850 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0623 17:35:49.925793 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0623 17:35:49.937755 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0623 17:35:49.950290 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0623 17:35:49.958075 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0623 17:35:51.062592 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/23/25 17:35:51.094
  STEP: fetching the DeploymentStatus @ 06/23/25 17:35:51.104
  I0623 17:35:51.109409 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  I0623 17:35:51.109432 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  I0623 17:35:51.109440 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  I0623 17:35:51.109505 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  I0623 17:35:51.109512 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 1
  I0623 17:35:51.109519 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:51.109580 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:51.109589 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:51.109624 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:51.109752 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 2
  I0623 17:35:51.109845 20 deployment.go:448] observed Deployment test-deployment in namespace deployment-3301 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/23/25 17:35:51.109
  I0623 17:35:51.121681 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.121759 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.121839 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.121918 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.121926 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.121938 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.122006 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.122015 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.122022 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.122061 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.122129 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.122141 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.122150 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.122199 20 deployment.go:474] observed event type MODIFIED
  I0623 17:35:51.125317 20 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0623 17:35:51.129051 20 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3301",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ddcd2b3-64c3-4b38-aae6-76e462ee4788",
      ResourceVersion: (string) (len=5) "31403",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296947,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6d8442b1-f531-4ceb-8904-a7f86c2d2367",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 64 38 34  34 32 62 31 2d 66 35 33  |":\"6d8442b1-f53|
              00000130  31 2d 34 63 65 62 2d 38  39 30 34 2d 61 37 66 38  |1-4ceb-8904-a7f8|
              00000140  36 63 32 64 32 33 36 37  5c 22 7d 22 3a 7b 7d 7d  |6c2d2367\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0623 17:35:51.134764 20 deployment.go:656] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3301",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b48bf44-99ea-4261-8ffb-e31c104763b6",
      ResourceVersion: (string) (len=5) "31495",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6d8442b1-f531-4ceb-8904-a7f86c2d2367",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 64 38 34  34 32 62 31 2d 66 35 33  |":\"6d8442b1-f53|
              00000130  31 2d 34 63 65 62 2d 38  39 30 34 2d 61 37 66 38  |1-4ceb-8904-a7f8|
              00000140  36 63 32 64 32 33 36 37  5c 22 7d 22 3a 7b 7d 7d  |6c2d2367\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0623 17:35:51.144196 20 deployment.go:668] pod: "test-deployment-79899bcfcc-lvmnq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-lvmnq",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-3301",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14ea2243-b360-4a0b-b971-06e0dfe18bca",
      ResourceVersion: (string) (len=5) "31450",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "8b48bf44-99ea-4261-8ffb-e31c104763b6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 62 34 38 62 66 34 34  |uid\":\"8b48bf44|
              000000a0  2d 39 39 65 61 2d 34 32  36 31 2d 38 66 66 62 2d  |-99ea-4261-8ffb-|
              000000b0  65 33 31 63 31 30 34 37  36 33 62 36 5c 22 7d 22  |e31c104763b6\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 31 30 32 5c 22 7d 22  |2.168.81.102\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6x7xn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6x7xn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=14) "192.168.81.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886296949,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3a8ad7e6f73964385e991dba9f955c6a05bbadd501bfa42a69c1056659f34c90",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6x7xn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0623 17:35:51.146440 20 deployment.go:668] pod: "test-deployment-79899bcfcc-slct6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-slct6",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-3301",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4dde5f9e-0964-496b-b756-721413bebf77",
      ResourceVersion: (string) (len=5) "31511",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296952,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "8b48bf44-99ea-4261-8ffb-e31c104763b6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 62 34 38 62 66 34 34  |uid\":\"8b48bf44|
              000000a0  2d 39 39 65 61 2d 34 32  36 31 2d 38 66 66 62 2d  |-99ea-4261-8ffb-|
              000000b0  65 33 31 63 31 30 34 37  36 33 62 36 5c 22 7d 22  |e31c104763b6\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 31 32 36 5c 22 7d  |2.168.156.126\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p8tkc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p8tkc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=15) "192.168.156.126",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.126"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886296950,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://39aa4748f71a36fcb04e67e8c7e583a5cf90e4808b0609f87a2b4395ca5d913c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p8tkc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0623 17:35:51.148249 20 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3301",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36573412-744c-478c-873a-77c69c582e25",
      ResourceVersion: (string) (len=5) "31503",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6d8442b1-f531-4ceb-8904-a7f86c2d2367",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 64 38 34  34 32 62 31 2d 66 35 33  |":\"6d8442b1-f53|
              00000130  31 2d 34 63 65 62 2d 38  39 30 34 2d 61 37 66 38  |1-4ceb-8904-a7f8|
              00000140  36 63 32 64 32 33 36 37  5c 22 7d 22 3a 7b 7d 7d  |6c2d2367\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0623 17:35:51.152955 20 deployment.go:668] pod: "test-deployment-f78d658f9-9p746":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-9p746",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-3301",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a7eec5d-180c-45a9-a01a-30224c20c79f",
      ResourceVersion: (string) (len=5) "31499",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296953,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "36573412-744c-478c-873a-77c69c582e25",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 36 35 37 33 34 31 32  |uid\":\"36573412|
              000000a0  2d 37 34 34 63 2d 34 37  38 63 2d 38 37 33 61 2d  |-744c-478c-873a-|
              000000b0  37 37 63 36 39 63 35 38  32 65 32 35 5c 22 7d 22  |77c69c582e25\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 31 30 30 5c 22 7d 22  |2.168.81.100\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8pxtq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8pxtq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886296948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=14) "192.168.81.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886296948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886296948,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://21a0874dd66de6241271a8fcd6064098c3badcd8f5a78965aed2683fa9270142",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8pxtq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0623 17:35:51.154265 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3301" for this suite. @ 06/23/25 17:35:51.159
• [4.060 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/23/25 17:35:51.167
  I0623 17:35:51.167197 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename init-container @ 06/23/25 17:35:51.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:35:51.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:35:51.184
  STEP: creating the pod @ 06/23/25 17:35:51.186
  I0623 17:35:51.186492 20 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0623 17:36:27.954016 20 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-11706b11-65f0-49bc-b718-4db6da535f5e", GenerateName:"", Namespace:"init-container-2411", SelfLink:"", UID:"101d24d6-6120-4653-aa5a-2d50a689e224", ResourceVersion:"31715", Generation:1, CreationTimestamp:time.Date(2025, time.June, 23, 17, 35, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"186484515"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 17, 35, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004353968), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 17, 36, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004353998), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-msfp2", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004858e60), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-msfp2", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-msfp2", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-msfp2", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0041fa4e0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-64-108", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0039a6090), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0041fa5a0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0041fa5c0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0041fa5c8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0041fa5cc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004f2d100), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.June, 23, 17, 35, 51, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.June, 23, 17, 35, 51, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.June, 23, 17, 35, 51, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.June, 23, 17, 35, 51, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.June, 23, 17, 35, 51, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.64.108", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.64.108"}}, PodIP:"192.168.81.101", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.81.101"}}, StartTime:time.Date(2025, time.June, 23, 17, 35, 51, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0031c79d0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0031c7a40)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://59e27a57217a97a2b10d2bf4028cbfb0b1cc613352c68db11f433586ddda979a", Started:(*bool)(0xc0041fa6ca), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc005771020), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-msfp2", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004f2d130)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004858ec0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0041fa71d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-msfp2", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004f2d140)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004858ea0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0041fa654), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-msfp2", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004f2d120)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0623 17:36:27.954519 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2411" for this suite. @ 06/23/25 17:36:27.958
• [36.798 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 06/23/25 17:36:27.965
  I0623 17:36:27.965746 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 17:36:27.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:36:27.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:36:27.983
  STEP: Creating configMap with name cm-test-opt-del-c4334c29-c282-4e4c-af39-aa35967aa4fc @ 06/23/25 17:36:28.059
  STEP: Creating configMap with name cm-test-opt-upd-eefde916-9684-444b-9b06-0b7b7438bf37 @ 06/23/25 17:36:28.066
  STEP: Creating the pod @ 06/23/25 17:36:28.073
  STEP: Deleting configmap cm-test-opt-del-c4334c29-c282-4e4c-af39-aa35967aa4fc @ 06/23/25 17:36:30.127
  STEP: Updating configmap cm-test-opt-upd-eefde916-9684-444b-9b06-0b7b7438bf37 @ 06/23/25 17:36:30.133
  STEP: Creating configMap with name cm-test-opt-create-c265a165-55f5-4771-96fa-017a03ba3e61 @ 06/23/25 17:36:30.139
  STEP: waiting to observe update in volume @ 06/23/25 17:36:30.143
  I0623 17:37:32.446330 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-350" for this suite. @ 06/23/25 17:37:32.45
• [64.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 06/23/25 17:37:32.457
  I0623 17:37:32.457921 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 17:37:32.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:37:32.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:37:32.472
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/23/25 17:37:32.476
  STEP: Saw pod success @ 06/23/25 17:37:34.493
  I0623 17:37:34.496455 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod pod-9f7539bc-7af9-4b3b-af24-3aabd32b0373 container test-container: <nil>
  STEP: delete the pod @ 06/23/25 17:37:34.514
  I0623 17:37:34.534119 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6617" for this suite. @ 06/23/25 17:37:34.538
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 06/23/25 17:37:34.548
  I0623 17:37:34.548470 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 17:37:34.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:37:34.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:37:34.563
  STEP: Counting existing ResourceQuota @ 06/23/25 17:37:51.572
  STEP: Creating a ResourceQuota @ 06/23/25 17:37:56.578
  STEP: Ensuring resource quota status is calculated @ 06/23/25 17:37:56.583
  STEP: Creating a ConfigMap @ 06/23/25 17:37:58.59
  STEP: Ensuring resource quota status captures configMap creation @ 06/23/25 17:37:58.602
  STEP: Deleting a ConfigMap @ 06/23/25 17:38:00.607
  STEP: Ensuring resource quota status released usage @ 06/23/25 17:38:00.614
  I0623 17:38:02.619576 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4187" for this suite. @ 06/23/25 17:38:02.623
• [28.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 06/23/25 17:38:02.629
  I0623 17:38:02.629739 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 17:38:02.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:38:02.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:38:02.65
  STEP: Creating the pod @ 06/23/25 17:38:02.652
  I0623 17:38:05.202972 20 pod_client.go:173] Successfully updated pod "labelsupdate447ef984-34dc-4294-a918-82c01788e358"
  I0623 17:38:09.229018 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3099" for this suite. @ 06/23/25 17:38:09.234
• [6.613 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 06/23/25 17:38:09.242
  I0623 17:38:09.242749 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 17:38:09.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:38:09.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:38:09.264
  STEP: Counting existing ResourceQuota @ 06/23/25 17:38:09.271
  STEP: Creating a ResourceQuota @ 06/23/25 17:38:14.277
  STEP: Ensuring resource quota status is calculated @ 06/23/25 17:38:14.284
  STEP: Creating a ReplicationController @ 06/23/25 17:38:16.289
  STEP: Ensuring resource quota status captures replication controller creation @ 06/23/25 17:38:16.303
  STEP: Deleting a ReplicationController @ 06/23/25 17:38:18.31
  STEP: Ensuring resource quota status released usage @ 06/23/25 17:38:18.317
  I0623 17:38:20.323639 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6527" for this suite. @ 06/23/25 17:38:20.328
• [11.093 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 06/23/25 17:38:20.335
  I0623 17:38:20.335980 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 17:38:20.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:38:20.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:38:20.354
  STEP: creating Agnhost RC @ 06/23/25 17:38:20.358
  I0623 17:38:20.358655 20 kubectl.go:1540] namespace kubectl-4588
  I0623 17:38:20.358724 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4588 create -f -'
  I0623 17:38:20.445534 20 builder.go:146] stderr: ""
  I0623 17:38:20.445573 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/23/25 17:38:20.445
  I0623 17:38:21.451066 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0623 17:38:21.451102 20 framework.go:733] Found 1 / 1
  I0623 17:38:21.451117 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0623 17:38:21.455472 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0623 17:38:21.455491 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0623 17:38:21.455497 20 kubectl.go:1547] wait on agnhost-primary startup in kubectl-4588 
  I0623 17:38:21.455546 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4588 logs agnhost-primary-n2d58 agnhost-primary'
  I0623 17:38:21.504880 20 builder.go:146] stderr: ""
  I0623 17:38:21.504905 20 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 06/23/25 17:38:21.504
  I0623 17:38:21.504965 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4588 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0623 17:38:21.562662 20 builder.go:146] stderr: ""
  I0623 17:38:21.562715 20 builder.go:147] stdout: "service/rm2 exposed\n"
  I0623 17:38:21.574116 20 utils.go:1115] Service rm2 in namespace kubectl-4588 found.
  STEP: exposing service @ 06/23/25 17:38:23.583
  I0623 17:38:23.583375 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-4588 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0623 17:38:23.639992 20 builder.go:146] stderr: ""
  I0623 17:38:23.640040 20 builder.go:147] stdout: "service/rm3 exposed\n"
  I0623 17:38:23.647438 20 utils.go:1115] Service rm3 in namespace kubectl-4588 found.
  I0623 17:38:25.655746 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4588" for this suite. @ 06/23/25 17:38:25.659
• [5.332 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 06/23/25 17:38:25.668
  I0623 17:38:25.668482 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:38:25.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:38:25.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:38:25.683
  STEP: Setting up server cert @ 06/23/25 17:38:25.705
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:38:25.799
  STEP: Deploying the webhook pod @ 06/23/25 17:38:25.803
  STEP: Wait for the deployment to be ready @ 06/23/25 17:38:25.819
  I0623 17:38:25.826715 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:38:27.84
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:38:27.857
  I0623 17:38:28.857298 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/23/25 17:38:28.861
  STEP: create a pod that should be updated by the webhook @ 06/23/25 17:38:28.875
  I0623 17:38:28.954561 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7078" for this suite. @ 06/23/25 17:38:28.959
  STEP: Destroying namespace "webhook-markers-8836" for this suite. @ 06/23/25 17:38:28.967
• [3.306 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/23/25 17:38:28.974
  I0623 17:38:28.974681 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/23/25 17:38:28.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:38:28.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:38:28.987
  STEP: creating a target pod @ 06/23/25 17:38:28.99
  STEP: adding an ephemeral container @ 06/23/25 17:38:31.01
  STEP: verifying the pod's generation is 2 @ 06/23/25 17:38:33.029
  STEP: checking pod container endpoints @ 06/23/25 17:38:33.034
  I0623 17:38:33.034539 20 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6532 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:38:33.034556 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:38:33.034589 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6532/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0623 17:38:33.080395 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:38:33.080422 20 exec_util.go:112] Exec stderr: ""
  I0623 17:38:33.087321 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6532" for this suite. @ 06/23/25 17:38:33.091
• [4.124 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 06/23/25 17:38:33.098
  I0623 17:38:33.098712 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename dns @ 06/23/25 17:38:33.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:38:33.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:38:33.116
  STEP: Creating a test headless service @ 06/23/25 17:38:33.119
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4300 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-4300;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4300 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-4300;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4300.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-4300.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4300.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-4300.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4300.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-4300.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4300.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-4300.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4300.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-4300.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4300.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-4300.svc;check="$$(dig +notcp +noall +answer +search 206.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.206_udp@PTR;check="$$(dig +tcp +noall +answer +search 206.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.206_tcp@PTR;sleep 1; done
   @ 06/23/25 17:38:33.143
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4300 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4300;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4300 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4300;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4300.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4300.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4300.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4300.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4300.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4300.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4300.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4300.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4300.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4300.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4300.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4300.svc;check="$$(dig +notcp +noall +answer +search 206.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.206_udp@PTR;check="$$(dig +tcp +noall +answer +search 206.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.206_tcp@PTR;sleep 1; done
   @ 06/23/25 17:38:33.143
  STEP: creating a pod to probe DNS @ 06/23/25 17:38:33.143
  STEP: submitting the pod to kubernetes @ 06/23/25 17:38:33.143
  STEP: retrieving the pod @ 06/23/25 17:38:35.173
  STEP: looking for the results for each expected name from probers @ 06/23/25 17:38:35.177
  I0623 17:38:35.187126 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.190915 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.194718 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4300 from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.198953 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4300 from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.202335 20 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4300.svc from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.206309 20 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4300.svc from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.210385 20 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4300.svc from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.214460 20 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4300.svc from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.234998 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.239109 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.243341 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4300 from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.247799 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4300 from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.251088 20 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4300.svc from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.255461 20 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4300.svc from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.259576 20 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4300.svc from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.263124 20 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4300.svc from pod dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f: the server could not find the requested resource (get pods dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f)
  I0623 17:38:35.279403 20 dns_common.go:506] Lookups using dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-4300 agnhost_tcp@dns-test-service.dns-4300 agnhost_udp@dns-test-service.dns-4300.svc agnhost_tcp@dns-test-service.dns-4300.svc agnhost_udp@_http._tcp.dns-test-service.dns-4300.svc agnhost_tcp@_http._tcp.dns-test-service.dns-4300.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4300 jessie_tcp@dns-test-service.dns-4300 jessie_udp@dns-test-service.dns-4300.svc jessie_tcp@dns-test-service.dns-4300.svc jessie_udp@_http._tcp.dns-test-service.dns-4300.svc jessie_tcp@_http._tcp.dns-test-service.dns-4300.svc]

  I0623 17:38:35.287395 20 dns_common.go:514] Pod client logs for webserver: 
  I0623 17:38:35.294379 20 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0623 17:38:35.301585 20 dns_common.go:514] Pod client logs for jessie-querier: 
  I0623 17:38:40.281182 20 dns_common.go:546] DNS probes using dns-4300/dns-test-3c76ab0e-31fe-45e2-b923-05cb66657c0f succeeded

  STEP: deleting the pod @ 06/23/25 17:38:40.281
  STEP: deleting the test service @ 06/23/25 17:38:40.297
  STEP: deleting the test headless service @ 06/23/25 17:38:40.334
  I0623 17:38:40.353655 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4300" for this suite. @ 06/23/25 17:38:40.357
• [7.265 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 06/23/25 17:38:40.363
  I0623 17:38:40.363464 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/23/25 17:38:40.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:38:40.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:38:40.377
  STEP: create the container to handle the HTTPGet hook request. @ 06/23/25 17:38:40.458
  STEP: create the pod with lifecycle hook @ 06/23/25 17:38:42.48
  STEP: check poststart hook @ 06/23/25 17:38:44.5
  STEP: delete the pod with lifecycle hook @ 06/23/25 17:38:44.507
  I0623 17:38:46.527903 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3302" for this suite. @ 06/23/25 17:38:46.534
• [6.178 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/23/25 17:38:46.542
  I0623 17:38:46.542106 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename proxy @ 06/23/25 17:38:46.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:38:46.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:38:46.558
  STEP: starting an echo server on multiple ports @ 06/23/25 17:38:46.58
  I0623 17:38:46.598495 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0623 17:38:48.616632      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:38:48.616693 20 proxy.go:273] setup took 2.055248208s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/23/25 17:38:48.616
  I0623 17:38:48.622389 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 5.580532ms)
  I0623 17:38:48.622936 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 5.799005ms)
  I0623 17:38:48.623489 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 6.608568ms)
  I0623 17:38:48.624940 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 8.007481ms)
  I0623 17:38:48.625549 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 8.635449ms)
  I0623 17:38:48.625581 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 8.481465ms)
  I0623 17:38:48.626037 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 9.021322ms)
  I0623 17:38:48.626042 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 8.983209ms)
  I0623 17:38:48.626303 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 9.337692ms)
  I0623 17:38:48.626312 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 9.324162ms)
  I0623 17:38:48.626587 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 9.42913ms)
  I0623 17:38:48.626641 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 9.885821ms)
  I0623 17:38:48.626659 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 9.626203ms)
  I0623 17:38:48.626672 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 9.554113ms)
  I0623 17:38:48.627837 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 10.759514ms)
  I0623 17:38:48.627842 20 proxy.go:601] (0) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 10.666963ms)
  I0623 17:38:48.631252 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 3.323104ms)
  I0623 17:38:48.631510 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 3.624393ms)
  I0623 17:38:48.632060 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 4.057909ms)
  I0623 17:38:48.632536 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 4.410784ms)
  I0623 17:38:48.632785 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 4.907122ms)
  I0623 17:38:48.633168 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 5.094288ms)
  I0623 17:38:48.633250 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 5.159671ms)
  I0623 17:38:48.633993 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 5.85145ms)
  I0623 17:38:48.634223 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 6.169534ms)
  I0623 17:38:48.634310 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 6.204075ms)
  I0623 17:38:48.634347 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 6.409934ms)
  I0623 17:38:48.634430 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 6.448634ms)
  I0623 17:38:48.634940 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 6.903311ms)
  I0623 17:38:48.635070 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 7.050355ms)
  I0623 17:38:48.635516 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 7.358801ms)
  I0623 17:38:48.635712 20 proxy.go:601] (1) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 7.747832ms)
  I0623 17:38:48.639549 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 3.806322ms)
  I0623 17:38:48.640882 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 4.856924ms)
  I0623 17:38:48.641259 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 5.311125ms)
  I0623 17:38:48.641417 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 5.577075ms)
  I0623 17:38:48.641550 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 5.649575ms)
  I0623 17:38:48.641900 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 6.026964ms)
  I0623 17:38:48.642135 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 6.155811ms)
  I0623 17:38:48.642197 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 6.279605ms)
  I0623 17:38:48.642278 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 6.34373ms)
  I0623 17:38:48.642374 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 6.363672ms)
  I0623 17:38:48.642921 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 6.926441ms)
  I0623 17:38:48.643250 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 7.193094ms)
  I0623 17:38:48.643264 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 7.44376ms)
  I0623 17:38:48.643274 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 7.310475ms)
  I0623 17:38:48.643277 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 7.237834ms)
  I0623 17:38:48.643746 20 proxy.go:601] (2) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 7.673213ms)
  I0623 17:38:48.647742 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 3.887321ms)
  I0623 17:38:48.648258 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 4.209491ms)
  I0623 17:38:48.649017 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 5.026401ms)
  I0623 17:38:48.649040 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 5.029998ms)
  I0623 17:38:48.649362 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 5.597902ms)
  I0623 17:38:48.649362 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 5.55775ms)
  I0623 17:38:48.649959 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 6.045753ms)
  I0623 17:38:48.650017 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 6.120566ms)
  I0623 17:38:48.650403 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 6.52578ms)
  I0623 17:38:48.650524 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 6.672875ms)
  I0623 17:38:48.651194 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 7.243294ms)
  I0623 17:38:48.651194 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 7.224079ms)
  I0623 17:38:48.651235 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 7.170948ms)
  I0623 17:38:48.651537 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 7.510212ms)
  I0623 17:38:48.652120 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 8.190573ms)
  I0623 17:38:48.652279 20 proxy.go:601] (3) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 8.197977ms)
  I0623 17:38:48.655668 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 3.371703ms)
  I0623 17:38:48.656692 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 4.272407ms)
  I0623 17:38:48.656916 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 4.438191ms)
  I0623 17:38:48.656936 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 4.419214ms)
  I0623 17:38:48.657126 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 4.489124ms)
  I0623 17:38:48.657147 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 4.548142ms)
  I0623 17:38:48.657586 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 5.18335ms)
  I0623 17:38:48.657843 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 5.405311ms)
  I0623 17:38:48.658543 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 5.92231ms)
  I0623 17:38:48.658758 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 6.258859ms)
  I0623 17:38:48.659264 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 6.687632ms)
  I0623 17:38:48.659340 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 6.992393ms)
  I0623 17:38:48.659408 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 7.03695ms)
  I0623 17:38:48.659509 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 6.952307ms)
  I0623 17:38:48.659700 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 7.240007ms)
  I0623 17:38:48.659895 20 proxy.go:601] (4) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 7.362255ms)
  I0623 17:38:48.669286 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 9.074322ms)
  I0623 17:38:48.670505 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 10.52016ms)
  I0623 17:38:48.672453 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 12.368615ms)
  I0623 17:38:48.672484 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 12.172388ms)
  I0623 17:38:48.672592 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 12.539401ms)
  I0623 17:38:48.672611 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 12.282665ms)
  I0623 17:38:48.672614 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 12.385292ms)
  I0623 17:38:48.672622 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 12.377804ms)
  I0623 17:38:48.672626 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 12.512301ms)
  I0623 17:38:48.672633 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 12.475082ms)
  I0623 17:38:48.672636 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 12.454827ms)
  I0623 17:38:48.673210 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 12.918545ms)
  I0623 17:38:48.674359 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 14.433073ms)
  I0623 17:38:48.674838 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 14.490755ms)
  I0623 17:38:48.675272 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 15.13413ms)
  I0623 17:38:48.675991 20 proxy.go:601] (5) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 15.716092ms)
  I0623 17:38:48.695094 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 18.912009ms)
  I0623 17:38:48.695101 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 18.960352ms)
  I0623 17:38:48.707177 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 31.094049ms)
  I0623 17:38:48.707206 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 31.086312ms)
  I0623 17:38:48.707218 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 31.055071ms)
  I0623 17:38:48.707230 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 31.219082ms)
  I0623 17:38:48.707229 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 31.030533ms)
  I0623 17:38:48.707241 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 30.977026ms)
  I0623 17:38:48.710842 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 34.766646ms)
  I0623 17:38:48.711424 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 35.206382ms)
  I0623 17:38:48.711512 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 35.233544ms)
  I0623 17:38:48.711532 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 35.239217ms)
  I0623 17:38:48.711549 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 35.316464ms)
  I0623 17:38:48.711581 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 35.331521ms)
  I0623 17:38:48.718982 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 42.670037ms)
  I0623 17:38:48.719010 20 proxy.go:601] (6) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 42.68339ms)
  I0623 17:38:48.733976 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 14.772838ms)
  I0623 17:38:48.733976 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 14.653568ms)
  I0623 17:38:48.733994 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 14.953144ms)
  I0623 17:38:48.735452 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 16.317002ms)
  I0623 17:38:48.736288 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 16.950619ms)
  I0623 17:38:48.736297 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 17.035936ms)
  I0623 17:38:48.737344 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 18.038945ms)
  I0623 17:38:48.737654 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 18.288569ms)
  I0623 17:38:48.737712 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 18.540953ms)
  I0623 17:38:48.739488 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 20.196364ms)
  I0623 17:38:48.740360 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 21.123648ms)
  I0623 17:38:48.740371 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 20.973654ms)
  I0623 17:38:48.741074 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 21.692008ms)
  I0623 17:38:48.741519 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 22.301556ms)
  I0623 17:38:48.741706 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 22.354535ms)
  I0623 17:38:48.742039 20 proxy.go:601] (7) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 22.762803ms)
  I0623 17:38:48.749288 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 7.220035ms)
  I0623 17:38:48.754372 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 12.089471ms)
  I0623 17:38:48.754495 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 12.331869ms)
  I0623 17:38:48.754513 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 12.16268ms)
  I0623 17:38:48.754524 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 12.404359ms)
  I0623 17:38:48.754558 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 12.361323ms)
  I0623 17:38:48.754547 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 12.311652ms)
  I0623 17:38:48.755073 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 12.637672ms)
  I0623 17:38:48.755436 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 13.223511ms)
  I0623 17:38:48.755830 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 13.50689ms)
  I0623 17:38:48.756280 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 13.982325ms)
  I0623 17:38:48.756604 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 14.424722ms)
  I0623 17:38:48.756670 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 14.294973ms)
  I0623 17:38:48.756684 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 14.431025ms)
  I0623 17:38:48.756704 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 14.29424ms)
  I0623 17:38:48.756826 20 proxy.go:601] (8) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 14.689957ms)
  I0623 17:38:48.764236 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 7.224274ms)
  I0623 17:38:48.765513 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 8.555437ms)
  I0623 17:38:48.766301 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 9.147152ms)
  I0623 17:38:48.766344 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 9.206952ms)
  I0623 17:38:48.767451 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 10.423242ms)
  I0623 17:38:48.768074 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 11.090712ms)
  I0623 17:38:48.768143 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 10.975883ms)
  I0623 17:38:48.768160 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 11.117376ms)
  I0623 17:38:48.768169 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 11.239393ms)
  I0623 17:38:48.768503 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 11.580209ms)
  I0623 17:38:48.770842 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 13.750813ms)
  I0623 17:38:48.771213 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 14.151379ms)
  I0623 17:38:48.771253 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 14.405421ms)
  I0623 17:38:48.772063 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 14.940064ms)
  I0623 17:38:48.772310 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 15.233805ms)
  I0623 17:38:48.774652 20 proxy.go:601] (9) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 17.545596ms)
  I0623 17:38:48.779405 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 4.712753ms)
  I0623 17:38:48.780956 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 6.112306ms)
  I0623 17:38:48.780970 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 6.011737ms)
  I0623 17:38:48.781528 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 6.702957ms)
  I0623 17:38:48.782434 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 7.627557ms)
  I0623 17:38:48.782576 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 7.570135ms)
  I0623 17:38:48.782767 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 7.910791ms)
  I0623 17:38:48.782800 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 7.828594ms)
  I0623 17:38:48.782954 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 8.224786ms)
  I0623 17:38:48.783255 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 8.265969ms)
  I0623 17:38:48.783395 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 8.453233ms)
  I0623 17:38:48.784677 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 9.755508ms)
  I0623 17:38:48.784690 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 9.936936ms)
  I0623 17:38:48.784677 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 9.772325ms)
  I0623 17:38:48.784889 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 10.116906ms)
  I0623 17:38:48.785113 20 proxy.go:601] (10) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 10.233485ms)
  I0623 17:38:48.792272 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 7.138437ms)
  I0623 17:38:48.800147 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 14.693028ms)
  I0623 17:38:48.800188 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 14.853556ms)
  I0623 17:38:48.800203 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 14.837227ms)
  I0623 17:38:48.800232 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 15.032237ms)
  I0623 17:38:48.800239 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 14.971698ms)
  I0623 17:38:48.800244 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 14.863302ms)
  I0623 17:38:48.800254 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 14.95357ms)
  I0623 17:38:48.800255 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 14.970414ms)
  I0623 17:38:48.800266 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 14.844964ms)
  I0623 17:38:48.800268 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 14.950496ms)
  I0623 17:38:48.800276 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 14.877316ms)
  I0623 17:38:48.800279 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 14.929689ms)
  I0623 17:38:48.800286 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 14.851016ms)
  I0623 17:38:48.800291 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 15.134552ms)
  I0623 17:38:48.800296 20 proxy.go:601] (11) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 14.830547ms)
  I0623 17:38:48.805497 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 5.181772ms)
  I0623 17:38:48.806046 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 5.350604ms)
  I0623 17:38:48.806248 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 5.654324ms)
  I0623 17:38:48.806570 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 5.991732ms)
  I0623 17:38:48.806894 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 6.519697ms)
  I0623 17:38:48.807066 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 6.442371ms)
  I0623 17:38:48.807311 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 6.673665ms)
  I0623 17:38:48.807387 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 6.719159ms)
  I0623 17:38:48.807547 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 7.131065ms)
  I0623 17:38:48.807588 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 6.979833ms)
  I0623 17:38:48.808158 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 7.75891ms)
  I0623 17:38:48.808400 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 7.852684ms)
  I0623 17:38:48.808653 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 8.090071ms)
  I0623 17:38:48.808664 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 8.012263ms)
  I0623 17:38:48.810418 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 9.985001ms)
  I0623 17:38:48.810425 20 proxy.go:601] (12) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 9.721169ms)
  I0623 17:38:48.814538 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 4.088408ms)
  I0623 17:38:48.815000 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 4.420762ms)
  I0623 17:38:48.815893 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 5.163039ms)
  I0623 17:38:48.817145 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 6.474093ms)
  I0623 17:38:48.817153 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 6.444232ms)
  I0623 17:38:48.817610 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 6.920249ms)
  I0623 17:38:48.817690 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 6.877425ms)
  I0623 17:38:48.817819 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 7.209083ms)
  I0623 17:38:48.817884 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 7.092069ms)
  I0623 17:38:48.818491 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 7.746803ms)
  I0623 17:38:48.818491 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 7.960334ms)
  I0623 17:38:48.818828 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 8.299276ms)
  I0623 17:38:48.819222 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 8.586493ms)
  I0623 17:38:48.819496 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 8.844113ms)
  I0623 17:38:48.819663 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 9.104826ms)
  I0623 17:38:48.819663 20 proxy.go:601] (13) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 8.901588ms)
  I0623 17:38:48.834710 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 14.74739ms)
  I0623 17:38:48.834720 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 14.848522ms)
  I0623 17:38:48.834734 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 14.742226ms)
  I0623 17:38:48.834739 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 14.862555ms)
  I0623 17:38:48.834934 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 15.04107ms)
  I0623 17:38:48.835114 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 15.206124ms)
  I0623 17:38:48.836183 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 16.173722ms)
  I0623 17:38:48.836688 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 16.763017ms)
  I0623 17:38:48.836961 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 17.016246ms)
  I0623 17:38:48.837005 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 17.302543ms)
  I0623 17:38:48.837292 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 17.451083ms)
  I0623 17:38:48.837292 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 17.315569ms)
  I0623 17:38:48.837410 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 17.617836ms)
  I0623 17:38:48.837434 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 17.661227ms)
  I0623 17:38:48.837489 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 17.466161ms)
  I0623 17:38:48.837599 20 proxy.go:601] (14) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 17.77532ms)
  I0623 17:38:48.842891 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 5.27166ms)
  I0623 17:38:48.845007 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 7.14377ms)
  I0623 17:38:48.845015 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 7.117637ms)
  I0623 17:38:48.845034 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 7.308088ms)
  I0623 17:38:48.845174 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 7.332984ms)
  I0623 17:38:48.845188 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 7.238763ms)
  I0623 17:38:48.845189 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 7.385314ms)
  I0623 17:38:48.845824 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 8.075119ms)
  I0623 17:38:48.846362 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 8.435103ms)
  I0623 17:38:48.846399 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 8.631619ms)
  I0623 17:38:48.847044 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 9.164874ms)
  I0623 17:38:48.847043 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 9.334465ms)
  I0623 17:38:48.847224 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 9.310496ms)
  I0623 17:38:48.847486 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 9.798025ms)
  I0623 17:38:48.847486 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 9.665942ms)
  I0623 17:38:48.847586 20 proxy.go:601] (15) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 9.927419ms)
  I0623 17:38:48.852236 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 4.629594ms)
  I0623 17:38:48.853837 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 6.014687ms)
  I0623 17:38:48.854549 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 6.711816ms)
  I0623 17:38:48.854581 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 6.653045ms)
  I0623 17:38:48.854606 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 6.927432ms)
  I0623 17:38:48.854642 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 6.941242ms)
  I0623 17:38:48.855010 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 7.112193ms)
  I0623 17:38:48.855030 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 7.177042ms)
  I0623 17:38:48.855311 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 7.427861ms)
  I0623 17:38:48.855438 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 7.568122ms)
  I0623 17:38:48.855453 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 7.827751ms)
  I0623 17:38:48.856472 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 8.555046ms)
  I0623 17:38:48.856683 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 8.923831ms)
  I0623 17:38:48.857011 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 9.200863ms)
  I0623 17:38:48.857012 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 9.273358ms)
  I0623 17:38:48.857086 20 proxy.go:601] (16) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 9.294785ms)
  I0623 17:38:48.861419 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 4.312012ms)
  I0623 17:38:48.863449 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 6.226737ms)
  I0623 17:38:48.865109 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 7.805596ms)
  I0623 17:38:48.865281 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 7.894393ms)
  I0623 17:38:48.865583 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 8.16441ms)
  I0623 17:38:48.865969 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 8.773796ms)
  I0623 17:38:48.866978 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 9.65993ms)
  I0623 17:38:48.867067 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 9.715076ms)
  I0623 17:38:48.876704 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 19.46147ms)
  I0623 17:38:48.876870 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 19.59607ms)
  I0623 17:38:48.876883 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 19.627236ms)
  I0623 17:38:48.877092 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 19.918145ms)
  I0623 17:38:48.877113 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 19.709733ms)
  I0623 17:38:48.877149 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 19.862746ms)
  I0623 17:38:48.877254 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 19.92037ms)
  I0623 17:38:48.877795 20 proxy.go:601] (17) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 20.42879ms)
  I0623 17:38:48.885405 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 7.478898ms)
  I0623 17:38:48.887234 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 9.118102ms)
  I0623 17:38:48.887886 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 9.890617ms)
  I0623 17:38:48.887980 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 9.909307ms)
  I0623 17:38:48.887981 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 9.924661ms)
  I0623 17:38:48.888012 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 10.001728ms)
  I0623 17:38:48.889095 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 11.151853ms)
  I0623 17:38:48.889132 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 11.107813ms)
  I0623 17:38:48.889634 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 11.592753ms)
  I0623 17:38:48.889714 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 11.897207ms)
  I0623 17:38:48.890190 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 12.232076ms)
  I0623 17:38:48.890737 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 12.651926ms)
  I0623 17:38:48.891332 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 13.464196ms)
  I0623 17:38:48.891342 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 13.445013ms)
  I0623 17:38:48.891523 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 13.547297ms)
  I0623 17:38:48.891589 20 proxy.go:601] (18) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 13.47059ms)
  I0623 17:38:48.895539 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/... (200; 3.916033ms)
  I0623 17:38:48.895702 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 3.946249ms)
  I0623 17:38:48.896867 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv/proxy/rewriteme"... (200; 5.064361ms)
  I0623 17:38:48.896915 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 5.028533ms)
  I0623 17:38:48.897051 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:160/proxy/: foo (200; 5.365264ms)
  I0623 17:38:48.897214 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/proxy-service-m8l6z-575d78cd5d-4dnlv:1080/proxy/rewri... (200; 5.374517ms)
  I0623 17:38:48.897280 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:462/proxy/: tls qux (200; 5.456148ms)
  I0623 17:38:48.897403 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/pods/http:proxy-service-m8l6z-575d78cd5d-4dnlv:162/proxy/: bar (200; 5.684961ms)
  I0623 17:38:48.897408 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/: <a href="/api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:443/proxy/... (200; 5.505301ms)
  I0623 17:38:48.897885 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/pods/https:proxy-service-m8l6z-575d78cd5d-4dnlv:460/proxy/: tls baz (200; 6.013793ms)
  I0623 17:38:48.898484 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname2/proxy/: bar (200; 6.879671ms)
  I0623 17:38:48.898900 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/services/http:proxy-service-m8l6z:portname1/proxy/: foo (200; 6.981901ms)
  I0623 17:38:48.898970 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname1/proxy/: tls baz (200; 7.232674ms)
  I0623 17:38:48.899099 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/services/https:proxy-service-m8l6z:tlsportname2/proxy/: tls qux (200; 7.165342ms)
  I0623 17:38:48.899471 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname2/proxy/: bar (200; 7.701137ms)
  I0623 17:38:48.899675 20 proxy.go:601] (19) /api/v1/namespaces/proxy-7189/services/proxy-service-m8l6z:portname1/proxy/: foo (200; 7.820274ms)
  I0623 17:38:48.905932 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7189" for this suite. @ 06/23/25 17:38:48.91
• [2.375 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 06/23/25 17:38:48.92
  I0623 17:38:48.920280 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pods @ 06/23/25 17:38:48.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:38:48.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:38:48.947
  STEP: creating a Pod with a static label @ 06/23/25 17:38:48.954
  STEP: watching for Pod to be ready @ 06/23/25 17:38:48.964
  I0623 17:38:48.966286 20 pods.go:947] observed Pod pod-test in namespace pods-8694 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0623 17:38:48.969700 20 pods.go:947] observed Pod pod-test in namespace pods-8694 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:38:48 +0000 UTC  }]
  I0623 17:38:48.993948 20 pods.go:947] observed Pod pod-test in namespace pods-8694 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:38:48 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:38:48 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:38:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:38:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:38:48 +0000 UTC  }]
  I0623 17:38:50.194418 20 pods.go:950] Found Pod pod-test in namespace pods-8694 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:38:50 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:38:48 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:38:50 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:38:50 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-06-23 17:38:48 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/23/25 17:38:50.198
  STEP: getting the Pod and ensuring that it's patched @ 06/23/25 17:38:50.208
  STEP: replacing the Pod's status Ready condition to False @ 06/23/25 17:38:50.211
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/23/25 17:38:50.224
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/23/25 17:38:50.224
  STEP: watching for the Pod to be deleted @ 06/23/25 17:38:50.236
  I0623 17:38:50.238340 20 pods.go:1060] observed event type MODIFIED
  I0623 17:38:52.192896 20 pods.go:1060] observed event type MODIFIED
  I0623 17:38:52.330938 20 pods.go:1060] observed event type MODIFIED
  I0623 17:38:53.204360 20 pods.go:1060] observed event type MODIFIED
  I0623 17:38:53.218632 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8694" for this suite. @ 06/23/25 17:38:53.223
• [4.310 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 06/23/25 17:38:53.23
  I0623 17:38:53.230328 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sched-preemption @ 06/23/25 17:38:53.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:38:53.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:38:53.246
  I0623 17:38:53.264075 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0623 17:39:53.270223 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/23/25 17:39:53.275
  I0623 17:39:53.275134 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/23/25 17:39:53.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:39:53.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:39:53.29
  STEP: Finding an available node @ 06/23/25 17:39:53.294
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/23/25 17:39:53.294
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/23/25 17:39:55.317
  I0623 17:39:55.331822 20 preemption.go:717] found a healthy node: ip-172-31-64-108
  STEP: Adding a custom resource @ 06/23/25 17:39:55.338
  I0623 17:40:01.401744 20 preemption.go:836] pods created so far: [1 1 1]
  I0623 17:40:01.401771 20 preemption.go:837] length of pods created so far: 3
  I0623 17:40:03.415121 20 preemption.go:854] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 06/23/25 17:40:10.417
  STEP: Removing a custom resource @ 06/23/25 17:40:10.479
  STEP: Removing a custom resource @ 06/23/25 17:40:10.488
  STEP: Removing a custom resource @ 06/23/25 17:40:10.495
  I0623 17:40:10.504314 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3032" for this suite. @ 06/23/25 17:40:10.508
  I0623 17:40:10.515041 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3967" for this suite. @ 06/23/25 17:40:10.609
• [77.389 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 06/23/25 17:40:10.619
  I0623 17:40:10.619279 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-probe @ 06/23/25 17:40:10.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:40:10.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:40:10.645
  STEP: Creating pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406 @ 06/23/25 17:40:10.65
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/23/25 17:40:12.679
  I0623 17:40:12.682943 20 container_probe.go:1748] Initial restart count of pod busybox-6808d40d-6029-4922-bf18-a1055758255e is 0
  I0623 17:40:12.687531 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:14.692899 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:16.698154 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:18.704200 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:20.709708 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:22.714207 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:24.719857 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:26.724980 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:28.729481 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:30.733841 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:32.738676 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:34.743494 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:36.749064 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:38.754337 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:40.759613 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:42.764796 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:44.769062 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:46.774292 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:48.779990 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:50.786089 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:52.791098 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:54.796807 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:56.801462 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:40:58.806806 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:00.811683 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:02.816661 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:04.822752 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:06.828901 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:08.834176 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:10.838922 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:12.845323 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:14.850037 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:16.856116 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:18.861491 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:20.867012 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:22.871689 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:24.878070 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:26.882635 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:28.887857 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:30.893018 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:32.898870 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:34.904456 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:36.909755 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:38.914908 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:40.920216 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:42.925702 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:44.930708 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:46.937107 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:48.944301 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:50.950326 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:52.956260 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:54.961871 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:56.967034 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:41:58.972358 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:00.976544 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:02.982651 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:04.987175 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:06.992349 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:08.997910 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:11.003427 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:13.008019 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:15.014032 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:17.019543 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:19.024930 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:21.030528 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:23.037136 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:25.042336 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:27.047881 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:29.053754 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:31.060732 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:33.066475 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:35.072035 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:37.076705 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:39.080985 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:41.086307 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:43.091323 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:45.097114 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:47.103168 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:49.108719 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:51.113999 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:53.119857 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:55.126105 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:57.132304 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:42:59.139105 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:01.143954 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:03.149884 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:05.155212 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:07.160922 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:09.166029 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:11.170501 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:13.175715 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:15.180742 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:17.187210 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:19.192711 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:21.198135 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:23.203198 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:25.208435 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:27.215115 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:29.220975 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:31.227545 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:33.232584 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:35.238267 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:37.243792 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:39.249275 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:41.254058 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:43.260326 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:45.266005 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:47.270319 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:49.275221 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:51.279998 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:53.285515 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:55.291117 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:57.296188 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:43:59.301267 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:44:01.306492 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:44:03.311517 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:44:05.316928 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:44:07.322747 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:44:09.328044 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  I0623 17:44:11.333484 20 container_probe.go:1758] Get pod busybox-6808d40d-6029-4922-bf18-a1055758255e in namespace container-probe-2406
  STEP: deleting the pod @ 06/23/25 17:44:13.333
  I0623 17:44:13.354764 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2406" for this suite. @ 06/23/25 17:44:13.359
• [242.749 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 06/23/25 17:44:13.368
  I0623 17:44:13.368113 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 17:44:13.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:44:13.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:44:13.388
  STEP: Looking for a node to schedule job pod @ 06/23/25 17:44:13.39
  STEP: Creating a job @ 06/23/25 17:44:13.461
  STEP: Ensuring job fails @ 06/23/25 17:44:13.467
  I0623 17:44:19.489384 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7362" for this suite. @ 06/23/25 17:44:19.493
• [6.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 06/23/25 17:44:19.503
  I0623 17:44:19.503122 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sched-pred @ 06/23/25 17:44:19.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:44:19.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:44:19.523
  I0623 17:44:19.525915 20 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0623 17:44:19.598891 20 util.go:390] Waiting for terminating namespaces to be deleted...
  I0623 17:44:19.602881 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-24-79 before test
  I0623 17:44:19.607022 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-w2dbs from ingress-nginx-kubernetes-worker started at 2025-06-23 16:20:10 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.607039 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 17:44:19.607046 20 predicates.go:958] calico-node-4rnm2 from kube-system started at 2025-06-23 16:26:03 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.607052 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 17:44:19.607057 20 predicates.go:958] sonobuoy-e2e-job-4044e0a013834e18 from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:44:19.607075 20 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0623 17:44:19.607080 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:44:19.607085 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-6jjs2 from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:44:19.607089 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:44:19.607093 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0623 17:44:19.607098 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-41-62 before test
  I0623 17:44:19.610203 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-rzms8 from ingress-nginx-kubernetes-worker started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.610215 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 17:44:19.610221 20 predicates.go:958] pod-failure-failjob-hcltz from job-7362 started at 2025-06-23 17:44:13 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.610227 20 predicates.go:960] 	Container c ready: false, restart count 0
  I0623 17:44:19.610232 20 predicates.go:958] pod-failure-failjob-t5hlp from job-7362 started at 2025-06-23 17:44:13 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.610236 20 predicates.go:960] 	Container c ready: false, restart count 0
  I0623 17:44:19.610242 20 predicates.go:958] calico-node-pkv8k from kube-system started at 2025-06-23 16:25:48 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.610252 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 17:44:19.610257 20 predicates.go:958] coredns-5d946bb58-dwr2m from kube-system started at 2025-06-23 16:13:37 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.610261 20 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0623 17:44:19.610266 20 predicates.go:958] kube-state-metrics-b84f44f45-wtc2j from kube-system started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.610270 20 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 0
  I0623 17:44:19.610275 20 predicates.go:958] metrics-server-v0.7.2-7d878b47f8-5ccr4 from kube-system started at 2025-06-23 16:13:37 +0000 UTC (2 container statuses recorded)
  I0623 17:44:19.610280 20 predicates.go:960] 	Container metrics-server ready: true, restart count 3
  I0623 17:44:19.610285 20 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0623 17:44:19.610290 20 predicates.go:958] dashboard-metrics-scraper-5cf87bc988-rngzp from kubernetes-dashboard started at 2025-06-23 16:13:37 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.610295 20 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0623 17:44:19.610300 20 predicates.go:958] kubernetes-dashboard-6858576c98-k68wt from kubernetes-dashboard started at 2025-06-23 16:13:38 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.610304 20 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 0
  I0623 17:44:19.610309 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-z6cwd from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:44:19.610313 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:44:19.610317 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0623 17:44:19.610322 20 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-64-108 before test
  I0623 17:44:19.614504 20 predicates.go:958] nginx-ingress-controller-kubernetes-worker-422sh from ingress-nginx-kubernetes-worker started at 2025-06-23 16:40:31 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.614524 20 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0623 17:44:19.614531 20 predicates.go:958] calico-node-jfknj from kube-system started at 2025-06-23 16:25:33 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.614537 20 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0623 17:44:19.614543 20 predicates.go:958] sonobuoy from sonobuoy started at 2025-06-23 16:28:34 +0000 UTC (1 container statuses recorded)
  I0623 17:44:19.614547 20 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0623 17:44:19.614553 20 predicates.go:958] sonobuoy-systemd-logs-daemon-set-4ba24a93b622497d-mspjn from sonobuoy started at 2025-06-23 16:28:36 +0000 UTC (2 container statuses recorded)
  I0623 17:44:19.614559 20 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0623 17:44:19.614568 20 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/23/25 17:44:19.614
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/23/25 17:44:21.639
  STEP: Trying to apply a random label on the found node. @ 06/23/25 17:44:21.659
  STEP: verifying the node has the label kubernetes.io/e2e-4fde9f3a-6fbc-4cde-8180-239afba99301 95 @ 06/23/25 17:44:21.667
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/23/25 17:44:21.672
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.64.108 on the node which pod4 resides and expect not scheduled @ 06/23/25 17:44:23.691
  STEP: removing the label kubernetes.io/e2e-4fde9f3a-6fbc-4cde-8180-239afba99301 off the node ip-172-31-64-108 @ 06/23/25 17:49:23.701
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-4fde9f3a-6fbc-4cde-8180-239afba99301 @ 06/23/25 17:49:23.715
  I0623 17:49:23.719460 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4758" for this suite. @ 06/23/25 17:49:23.726
• [304.233 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 06/23/25 17:49:23.735
  I0623 17:49:23.735852 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/23/25 17:49:23.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:49:23.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:49:23.748
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/23/25 17:49:23.752
  I0623 17:49:23.752718 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 17:49:24.972277 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 17:49:30.030411 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7932" for this suite. @ 06/23/25 17:49:30.037
• [6.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/23/25 17:49:30.046
  I0623 17:49:30.046090 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 17:49:30.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:49:30.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:49:30.061
  STEP: Creating secret with name secret-test-ba490ae6-4a41-4919-bb04-8eeec2c7385b @ 06/23/25 17:49:30.063
  STEP: Creating a pod to test consume secrets @ 06/23/25 17:49:30.069
  STEP: Saw pod success @ 06/23/25 17:49:34.093
  I0623 17:49:34.097114 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-secrets-4d7cf36c-fa0f-4c36-82c9-08426a297bbc container secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 17:49:34.116
  I0623 17:49:34.133767 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3922" for this suite. @ 06/23/25 17:49:34.137
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 06/23/25 17:49:34.144
  I0623 17:49:34.144954 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:49:34.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:49:34.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:49:34.161
  STEP: Setting up server cert @ 06/23/25 17:49:34.181
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:49:34.559
  STEP: Deploying the webhook pod @ 06/23/25 17:49:34.564
  STEP: Wait for the deployment to be ready @ 06/23/25 17:49:34.579
  I0623 17:49:34.587096 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:49:36.6
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:49:36.617
  I0623 17:49:37.617503 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0623 17:49:37.623418 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/23/25 17:49:38.134
  STEP: Creating a custom resource that should be denied by the webhook @ 06/23/25 17:49:38.149
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/23/25 17:49:40.166
  STEP: Updating the custom resource with disallowed data should be denied @ 06/23/25 17:49:40.174
  STEP: Deleting the custom resource should be denied @ 06/23/25 17:49:40.184
  STEP: Remove the offending key and value from the custom resource data @ 06/23/25 17:49:40.192
  STEP: Deleting the updated custom resource should be successful @ 06/23/25 17:49:40.201
  I0623 17:49:40.774591 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8307" for this suite. @ 06/23/25 17:49:40.78
  STEP: Destroying namespace "webhook-markers-8076" for this suite. @ 06/23/25 17:49:40.787
• [6.650 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 06/23/25 17:49:40.795
  I0623 17:49:40.795592 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename statefulset @ 06/23/25 17:49:40.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:49:40.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:49:40.813
  STEP: Creating service test in namespace statefulset-549 @ 06/23/25 17:49:40.815
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/23/25 17:49:40.82
  STEP: Creating stateful set ss in namespace statefulset-549 @ 06/23/25 17:49:40.823
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-549 @ 06/23/25 17:49:40.831
  I0623 17:49:40.846859 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0623 17:49:50.838946 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/23/25 17:49:50.838
  I0623 17:49:50.842921 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-549 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0623 17:49:50.934582 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0623 17:49:50.934611 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0623 17:49:50.934623 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0623 17:49:50.939634 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0623 17:50:00.941205 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0623 17:50:00.941240 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0623 17:50:01.042140 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999829s
  I0623 17:50:02.047680 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.913407487s
  I0623 17:50:03.051940 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.908150137s
  I0623 17:50:04.058452 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.903714534s
  I0623 17:50:05.063686 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.897160011s
  I0623 17:50:06.068578 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.892058531s
  I0623 17:50:07.075280 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.887144358s
  I0623 17:50:08.081329 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.879858902s
  I0623 17:50:09.086676 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.874018039s
  I0623 17:50:10.093124 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 869.056688ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-549 @ 06/23/25 17:50:11.093
  I0623 17:50:11.099659 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-549 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0623 17:50:11.172696 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0623 17:50:11.172736 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0623 17:50:11.172744 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0623 17:50:11.176699 20 wait.go:44] Found 1 stateful pods, waiting for 3
  I0623 17:50:21.178983 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0623 17:50:21.179017 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0623 17:50:21.179026 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/23/25 17:50:21.179
  STEP: Scale down will halt with unhealthy stateful pod @ 06/23/25 17:50:21.179
  I0623 17:50:21.187250 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-549 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0623 17:50:21.268016 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0623 17:50:21.268053 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0623 17:50:21.268064 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0623 17:50:21.268106 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-549 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0623 17:50:21.362014 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0623 17:50:21.362051 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0623 17:50:21.362061 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0623 17:50:21.362102 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-549 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0623 17:50:21.463004 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0623 17:50:21.463051 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0623 17:50:21.463059 20 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0623 17:50:21.463071 20 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0623 17:50:21.467190 20 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0623 17:50:31.474974 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0623 17:50:31.475008 20 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0623 17:50:31.475015 20 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0623 17:50:31.575299 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999776s
  I0623 17:50:32.580710 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.910053475s
  I0623 17:50:33.586938 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.904324804s
  I0623 17:50:34.593716 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.897986818s
  I0623 17:50:35.600230 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.892039308s
  I0623 17:50:36.605588 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.885623977s
  I0623 17:50:37.610946 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.880189267s
  I0623 17:50:38.617092 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.874906263s
  I0623 17:50:39.622936 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.86801429s
  I0623 17:50:40.628884 20 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 862.078988ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-549 @ 06/23/25 17:50:41.629
  I0623 17:50:41.635393 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-549 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0623 17:50:41.710944 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0623 17:50:41.710975 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0623 17:50:41.710987 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0623 17:50:41.711258 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-549 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0623 17:50:41.786643 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0623 17:50:41.786686 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0623 17:50:41.786697 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0623 17:50:41.786733 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=statefulset-549 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0623 17:50:41.866621 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0623 17:50:41.866655 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0623 17:50:41.866665 20 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0623 17:50:41.866674 20 rest.go:153] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/23/25 17:50:51.877
  I0623 17:50:51.877109 20 statefulset.go:138] Deleting all statefulset in ns statefulset-549
  I0623 17:50:51.882603 20 rest.go:153] Scaling statefulset ss to 0
  I0623 17:50:51.890257 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0623 17:50:51.893288 20 rest.go:91] Deleting statefulset ss
  I0623 17:50:51.908992 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-549" for this suite. @ 06/23/25 17:50:51.912
• [71.122 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 06/23/25 17:50:51.918
  I0623 17:50:51.918023 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 17:50:51.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:50:51.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:50:51.936
  STEP: fetching services @ 06/23/25 17:50:51.938
  I0623 17:50:51.942858 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6545" for this suite. @ 06/23/25 17:50:52.014
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 06/23/25 17:50:52.022
  I0623 17:50:52.022421 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:50:52.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:50:52.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:50:52.039
  STEP: Creating configMap with name projected-configmap-test-volume-5ed16371-9cb1-4605-9bff-f1c452386fd7 @ 06/23/25 17:50:52.041
  STEP: Creating a pod to test consume configMaps @ 06/23/25 17:50:52.046
  STEP: Saw pod success @ 06/23/25 17:50:56.072
  I0623 17:50:56.075872 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-configmaps-63d705af-22eb-49f1-984e-55143760d7c9 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 17:50:56.083
  I0623 17:50:56.104521 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5414" for this suite. @ 06/23/25 17:50:56.108
• [4.095 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 06/23/25 17:50:56.117
  I0623 17:50:56.117583 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-webhook @ 06/23/25 17:50:56.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:50:56.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:50:56.133
  STEP: Setting up server cert @ 06/23/25 17:50:56.136
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/23/25 17:50:56.315
  STEP: Deploying the custom resource conversion webhook pod @ 06/23/25 17:50:56.321
  STEP: Wait for the deployment to be ready @ 06/23/25 17:50:56.337
  I0623 17:50:56.346408 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:50:58.359
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:50:58.376
  I0623 17:50:59.377277 20 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0623 17:50:59.382690 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Creating a v1 custom resource @ 06/23/25 17:51:01.934
  STEP: v2 custom resource should be converted @ 06/23/25 17:51:01.941
  I0623 17:51:02.505740 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5206" for this suite. @ 06/23/25 17:51:02.509
• [6.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/23/25 17:51:02.517
  I0623 17:51:02.517879 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 17:51:02.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:51:02.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:51:02.535
  STEP: Creating secret with name secret-test-ccd2d582-06ac-400b-b953-782578ea5f68 @ 06/23/25 17:51:02.561
  STEP: Creating a pod to test consume secrets @ 06/23/25 17:51:02.566
  STEP: Saw pod success @ 06/23/25 17:51:04.584
  I0623 17:51:04.587481 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-secrets-dbaacbec-1ce3-49c3-9982-923aef7e31df container secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 17:51:04.596
  I0623 17:51:04.616373 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7689" for this suite. @ 06/23/25 17:51:04.62
  STEP: Destroying namespace "secret-namespace-3110" for this suite. @ 06/23/25 17:51:04.627
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 06/23/25 17:51:04.635
  I0623 17:51:04.635854 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pv @ 06/23/25 17:51:04.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:51:04.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:51:04.65
  STEP: Creating initial PV and PVC @ 06/23/25 17:51:04.653
  I0623 17:51:04.653240 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1949" @ 06/23/25 17:51:04.666
  STEP: Listing PVCs in namespace "pv-1949" @ 06/23/25 17:51:04.67
  STEP: Patching the PV "pv-1949-wn2mp" @ 06/23/25 17:51:04.674
  STEP: Patching the PVC "pvc-r6j88" @ 06/23/25 17:51:04.687
  STEP: Getting PV "pv-1949-wn2mp" @ 06/23/25 17:51:04.705
  STEP: Getting PVC "pvc-r6j88" @ 06/23/25 17:51:04.709
  STEP: Deleting PVC "pvc-r6j88" @ 06/23/25 17:51:04.712
  STEP: Confirm deletion of PVC "pvc-r6j88" @ 06/23/25 17:51:04.72
  STEP: Deleting PV "pv-1949-wn2mp" @ 06/23/25 17:51:06.729
  STEP: Confirm deletion of PV "pv-1949-wn2mp" @ 06/23/25 17:51:06.738
  STEP: Recreating another PV & PVC @ 06/23/25 17:51:08.748
  I0623 17:51:08.748674 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-1949-vtqrp" @ 06/23/25 17:51:08.763
  STEP: Updating the PVC "pvc-lbmlr" @ 06/23/25 17:51:08.774
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-lbmlr=updated" @ 06/23/25 17:51:08.782
  STEP: Deleting PVC "pvc-lbmlr" via DeleteCollection @ 06/23/25 17:51:08.786
  STEP: Confirm deletion of PVC "pvc-lbmlr" @ 06/23/25 17:51:08.801
  STEP: Deleting PV "pv-1949-vtqrp" via DeleteCollection @ 06/23/25 17:51:10.812
  STEP: Confirm deletion of PV "pv-1949-vtqrp" @ 06/23/25 17:51:10.826
  I0623 17:51:12.836455 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0623 17:51:12.836486 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-lbmlr"
  I0623 17:51:12.840509 20 pv.go:193] Deleting PersistentVolume "pv-1949-vtqrp"
  I0623 17:51:12.843683 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1949" for this suite. @ 06/23/25 17:51:12.847
• [8.221 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 06/23/25 17:51:12.857
  I0623 17:51:12.857090 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename ingress @ 06/23/25 17:51:12.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:51:12.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:51:12.876
  STEP: getting /apis @ 06/23/25 17:51:12.878
  STEP: getting /apis/networking.k8s.io @ 06/23/25 17:51:12.881
  STEP: getting /apis/networking.k8s.iov1 @ 06/23/25 17:51:12.882
  STEP: creating @ 06/23/25 17:51:12.882
  STEP: getting @ 06/23/25 17:51:12.9
  STEP: listing @ 06/23/25 17:51:12.906
  STEP: watching @ 06/23/25 17:51:12.912
  I0623 17:51:12.912829 20 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 06/23/25 17:51:12.913
  STEP: cluster-wide watching @ 06/23/25 17:51:13.014
  I0623 17:51:13.014353 20 ingress.go:198] starting watch
  STEP: patching @ 06/23/25 17:51:13.015
  STEP: updating @ 06/23/25 17:51:13.022
  I0623 17:51:13.032636 20 ingress.go:221] waiting for watch events with expected annotations
  I0623 17:51:13.032667 20 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 06/23/25 17:51:13.032
  STEP: updating /status @ 06/23/25 17:51:13.04
  STEP: get /status @ 06/23/25 17:51:13.052
  STEP: deleting @ 06/23/25 17:51:13.058
  STEP: deleting a collection @ 06/23/25 17:51:13.115
  I0623 17:51:13.137604 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6494" for this suite. @ 06/23/25 17:51:13.142
• [0.293 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 06/23/25 17:51:13.15
  I0623 17:51:13.150055 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 17:51:13.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:51:13.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:51:13.166
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/23/25 17:51:13.168
  STEP: Saw pod success @ 06/23/25 17:51:17.193
  I0623 17:51:17.196274 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-9ea5c735-0424-4080-8232-dc9120c54b55 container test-container: <nil>
  STEP: delete the pod @ 06/23/25 17:51:17.204
  I0623 17:51:17.224895 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8913" for this suite. @ 06/23/25 17:51:17.228
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/23/25 17:51:17.234
  I0623 17:51:17.234889 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename svc-latency @ 06/23/25 17:51:17.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:51:17.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:51:17.253
  I0623 17:51:17.256343 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 17:51:17.266623 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0623 17:51:19.273434      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:51:19.274670      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:51:19.391614 20 service_latency.go:351] Created: latency-svc-pd2tc
  I0623 17:51:19.401679 20 service_latency.go:358] Got endpoints: latency-svc-pd2tc [28.86933ms]
  I0623 17:51:19.419827 20 service_latency.go:351] Created: latency-svc-rqd2h
  I0623 17:51:19.427188 20 service_latency.go:358] Got endpoints: latency-svc-rqd2h [25.316583ms]
  I0623 17:51:19.429335 20 service_latency.go:351] Created: latency-svc-lw6tj
  I0623 17:51:19.437411 20 service_latency.go:358] Got endpoints: latency-svc-lw6tj [35.227492ms]
  I0623 17:51:19.439249 20 service_latency.go:351] Created: latency-svc-2swvc
  I0623 17:51:19.447258 20 service_latency.go:358] Got endpoints: latency-svc-2swvc [45.343163ms]
  I0623 17:51:19.450052 20 service_latency.go:351] Created: latency-svc-6sk72
  I0623 17:51:19.462469 20 service_latency.go:351] Created: latency-svc-j79s5
  I0623 17:51:19.462770 20 service_latency.go:358] Got endpoints: latency-svc-6sk72 [60.639162ms]
  I0623 17:51:19.468950 20 service_latency.go:358] Got endpoints: latency-svc-j79s5 [67.006802ms]
  I0623 17:51:19.471151 20 service_latency.go:351] Created: latency-svc-4j77g
  I0623 17:51:19.481454 20 service_latency.go:358] Got endpoints: latency-svc-4j77g [79.476017ms]
  I0623 17:51:19.484962 20 service_latency.go:351] Created: latency-svc-rqktx
  I0623 17:51:19.489997 20 service_latency.go:358] Got endpoints: latency-svc-rqktx [87.781428ms]
  I0623 17:51:19.502888 20 service_latency.go:351] Created: latency-svc-xj9wm
  I0623 17:51:19.507378 20 service_latency.go:351] Created: latency-svc-hbnmt
  I0623 17:51:19.508825 20 service_latency.go:358] Got endpoints: latency-svc-xj9wm [106.750182ms]
  I0623 17:51:19.521136 20 service_latency.go:358] Got endpoints: latency-svc-hbnmt [118.885472ms]
  I0623 17:51:19.521331 20 service_latency.go:351] Created: latency-svc-878r8
  I0623 17:51:19.527983 20 service_latency.go:351] Created: latency-svc-x9gp9
  I0623 17:51:19.529136 20 service_latency.go:358] Got endpoints: latency-svc-878r8 [126.853486ms]
  I0623 17:51:19.537481 20 service_latency.go:351] Created: latency-svc-5xkv2
  I0623 17:51:19.540162 20 service_latency.go:358] Got endpoints: latency-svc-x9gp9 [138.157673ms]
  I0623 17:51:19.549700 20 service_latency.go:358] Got endpoints: latency-svc-5xkv2 [147.325017ms]
  I0623 17:51:19.551889 20 service_latency.go:351] Created: latency-svc-vsjk5
  I0623 17:51:19.558296 20 service_latency.go:351] Created: latency-svc-hdzfc
  I0623 17:51:19.562398 20 service_latency.go:358] Got endpoints: latency-svc-vsjk5 [159.954021ms]
  I0623 17:51:19.567223 20 service_latency.go:351] Created: latency-svc-gpvk8
  I0623 17:51:19.567468 20 service_latency.go:358] Got endpoints: latency-svc-hdzfc [164.997372ms]
  I0623 17:51:19.575029 20 service_latency.go:351] Created: latency-svc-8zv8n
  I0623 17:51:19.578288 20 service_latency.go:358] Got endpoints: latency-svc-gpvk8 [176.459542ms]
  I0623 17:51:19.582663 20 service_latency.go:358] Got endpoints: latency-svc-8zv8n [155.448105ms]
  I0623 17:51:19.587620 20 service_latency.go:351] Created: latency-svc-6wf9h
  I0623 17:51:19.594721 20 service_latency.go:351] Created: latency-svc-bf6mm
  I0623 17:51:19.595799 20 service_latency.go:358] Got endpoints: latency-svc-6wf9h [158.358836ms]
  I0623 17:51:19.603167 20 service_latency.go:351] Created: latency-svc-75l29
  I0623 17:51:19.606494 20 service_latency.go:358] Got endpoints: latency-svc-bf6mm [159.187546ms]
  I0623 17:51:19.611295 20 service_latency.go:358] Got endpoints: latency-svc-75l29 [148.483386ms]
  I0623 17:51:19.616093 20 service_latency.go:351] Created: latency-svc-5ts9t
  I0623 17:51:19.621147 20 service_latency.go:351] Created: latency-svc-mqx2r
  I0623 17:51:19.623566 20 service_latency.go:358] Got endpoints: latency-svc-5ts9t [154.59396ms]
  I0623 17:51:19.630732 20 service_latency.go:358] Got endpoints: latency-svc-mqx2r [149.248699ms]
  I0623 17:51:19.634636 20 service_latency.go:351] Created: latency-svc-zfbcg
  I0623 17:51:19.643511 20 service_latency.go:358] Got endpoints: latency-svc-zfbcg [153.491249ms]
  I0623 17:51:19.644423 20 service_latency.go:351] Created: latency-svc-t9742
  I0623 17:51:19.650847 20 service_latency.go:351] Created: latency-svc-hqbfc
  I0623 17:51:19.653943 20 service_latency.go:358] Got endpoints: latency-svc-t9742 [145.089859ms]
  I0623 17:51:19.660048 20 service_latency.go:351] Created: latency-svc-4d2wz
  I0623 17:51:19.664127 20 service_latency.go:358] Got endpoints: latency-svc-hqbfc [142.964858ms]
  I0623 17:51:19.668289 20 service_latency.go:358] Got endpoints: latency-svc-4d2wz [139.132107ms]
  I0623 17:51:19.674520 20 service_latency.go:351] Created: latency-svc-n6xjd
  I0623 17:51:19.681196 20 service_latency.go:351] Created: latency-svc-s647j
  I0623 17:51:19.682106 20 service_latency.go:358] Got endpoints: latency-svc-n6xjd [141.918204ms]
  I0623 17:51:19.688328 20 service_latency.go:351] Created: latency-svc-hvxqk
  I0623 17:51:19.692227 20 service_latency.go:358] Got endpoints: latency-svc-s647j [142.501729ms]
  I0623 17:51:19.696505 20 service_latency.go:358] Got endpoints: latency-svc-hvxqk [134.080131ms]
  I0623 17:51:19.702405 20 service_latency.go:351] Created: latency-svc-qgx26
  I0623 17:51:19.707608 20 service_latency.go:351] Created: latency-svc-52g7p
  I0623 17:51:19.712127 20 service_latency.go:358] Got endpoints: latency-svc-qgx26 [144.587393ms]
  I0623 17:51:19.716335 20 service_latency.go:351] Created: latency-svc-lp86q
  I0623 17:51:19.729432 20 service_latency.go:358] Got endpoints: latency-svc-lp86q [146.743129ms]
  I0623 17:51:19.729913 20 service_latency.go:358] Got endpoints: latency-svc-52g7p [151.601046ms]
  I0623 17:51:19.735496 20 service_latency.go:351] Created: latency-svc-tflfq
  I0623 17:51:19.738044 20 service_latency.go:351] Created: latency-svc-ds85x
  I0623 17:51:19.744680 20 service_latency.go:358] Got endpoints: latency-svc-tflfq [148.842625ms]
  I0623 17:51:19.747857 20 service_latency.go:358] Got endpoints: latency-svc-ds85x [141.336527ms]
  I0623 17:51:19.750848 20 service_latency.go:351] Created: latency-svc-bc7ff
  I0623 17:51:19.759240 20 service_latency.go:358] Got endpoints: latency-svc-bc7ff [147.808381ms]
  I0623 17:51:19.764895 20 service_latency.go:351] Created: latency-svc-chpdc
  I0623 17:51:19.774341 20 service_latency.go:351] Created: latency-svc-rrzkt
  I0623 17:51:19.775429 20 service_latency.go:358] Got endpoints: latency-svc-chpdc [151.836509ms]
  I0623 17:51:19.780654 20 service_latency.go:351] Created: latency-svc-c7xd4
  I0623 17:51:19.784521 20 service_latency.go:358] Got endpoints: latency-svc-rrzkt [153.763721ms]
  I0623 17:51:19.787798 20 service_latency.go:351] Created: latency-svc-5k2nh
  I0623 17:51:19.801186 20 service_latency.go:351] Created: latency-svc-88zs4
  I0623 17:51:19.804914 20 service_latency.go:358] Got endpoints: latency-svc-c7xd4 [161.375071ms]
  I0623 17:51:19.808502 20 service_latency.go:351] Created: latency-svc-4qrsw
  I0623 17:51:19.817327 20 service_latency.go:351] Created: latency-svc-tjprb
  I0623 17:51:19.824388 20 service_latency.go:351] Created: latency-svc-s8fvc
  I0623 17:51:19.834113 20 service_latency.go:351] Created: latency-svc-cdrsf
  I0623 17:51:19.841505 20 service_latency.go:351] Created: latency-svc-2tfr9
  I0623 17:51:19.846305 20 service_latency.go:351] Created: latency-svc-hm8kd
  I0623 17:51:19.850627 20 service_latency.go:358] Got endpoints: latency-svc-5k2nh [196.656908ms]
  I0623 17:51:19.855141 20 service_latency.go:351] Created: latency-svc-2sq2f
  I0623 17:51:19.865645 20 service_latency.go:351] Created: latency-svc-xhp8g
  I0623 17:51:19.870990 20 service_latency.go:351] Created: latency-svc-pbptk
  I0623 17:51:19.882359 20 service_latency.go:351] Created: latency-svc-sdb8p
  I0623 17:51:19.890382 20 service_latency.go:351] Created: latency-svc-whpgf
  I0623 17:51:19.898823 20 service_latency.go:351] Created: latency-svc-fst6v
  I0623 17:51:19.901961 20 service_latency.go:358] Got endpoints: latency-svc-88zs4 [237.807928ms]
  I0623 17:51:19.902555 20 service_latency.go:351] Created: latency-svc-n7xzv
  I0623 17:51:19.916472 20 service_latency.go:351] Created: latency-svc-2qfdh
  I0623 17:51:19.922196 20 service_latency.go:351] Created: latency-svc-d7g5d
  I0623 17:51:19.951344 20 service_latency.go:358] Got endpoints: latency-svc-4qrsw [283.011888ms]
  I0623 17:51:19.966624 20 service_latency.go:351] Created: latency-svc-vjthl
  I0623 17:51:20.001377 20 service_latency.go:358] Got endpoints: latency-svc-tjprb [319.241885ms]
  I0623 17:51:20.019488 20 service_latency.go:351] Created: latency-svc-zqh7c
  I0623 17:51:20.051867 20 service_latency.go:358] Got endpoints: latency-svc-s8fvc [359.611881ms]
  I0623 17:51:20.068260 20 service_latency.go:351] Created: latency-svc-666xm
  I0623 17:51:20.101666 20 service_latency.go:358] Got endpoints: latency-svc-cdrsf [405.133757ms]
  I0623 17:51:20.119567 20 service_latency.go:351] Created: latency-svc-vvzf8
  I0623 17:51:20.151068 20 service_latency.go:358] Got endpoints: latency-svc-2tfr9 [438.906834ms]
  I0623 17:51:20.170825 20 service_latency.go:351] Created: latency-svc-t492p
  I0623 17:51:20.201378 20 service_latency.go:358] Got endpoints: latency-svc-hm8kd [471.91728ms]
  I0623 17:51:20.217588 20 service_latency.go:351] Created: latency-svc-58nxw
  I0623 17:51:20.252527 20 service_latency.go:358] Got endpoints: latency-svc-2sq2f [522.577783ms]
  I0623 17:51:20.269595 20 service_latency.go:351] Created: latency-svc-4l7tb
  I0623 17:51:20.308255 20 service_latency.go:358] Got endpoints: latency-svc-xhp8g [563.544039ms]
  I0623 17:51:20.324543 20 service_latency.go:351] Created: latency-svc-gshhf
  I0623 17:51:20.351088 20 service_latency.go:358] Got endpoints: latency-svc-pbptk [603.205277ms]
  I0623 17:51:20.365379 20 service_latency.go:351] Created: latency-svc-96vfv
  I0623 17:51:20.402449 20 service_latency.go:358] Got endpoints: latency-svc-sdb8p [643.182437ms]
  I0623 17:51:20.420532 20 service_latency.go:351] Created: latency-svc-jtlhf
  I0623 17:51:20.451424 20 service_latency.go:358] Got endpoints: latency-svc-whpgf [675.970205ms]
  I0623 17:51:20.467627 20 service_latency.go:351] Created: latency-svc-tvxfw
  I0623 17:51:20.501638 20 service_latency.go:358] Got endpoints: latency-svc-fst6v [717.091067ms]
  I0623 17:51:20.517537 20 service_latency.go:351] Created: latency-svc-8cpdw
  I0623 17:51:20.551141 20 service_latency.go:358] Got endpoints: latency-svc-n7xzv [746.058174ms]
  I0623 17:51:20.568204 20 service_latency.go:351] Created: latency-svc-692gn
  I0623 17:51:20.600909 20 service_latency.go:358] Got endpoints: latency-svc-2qfdh [750.255287ms]
  I0623 17:51:20.618468 20 service_latency.go:351] Created: latency-svc-85gbk
  I0623 17:51:20.651121 20 service_latency.go:358] Got endpoints: latency-svc-d7g5d [749.134609ms]
  I0623 17:51:20.674654 20 service_latency.go:351] Created: latency-svc-bl2hp
  I0623 17:51:20.705188 20 service_latency.go:358] Got endpoints: latency-svc-vjthl [753.817126ms]
  I0623 17:51:20.728349 20 service_latency.go:351] Created: latency-svc-s22vf
  I0623 17:51:20.751386 20 service_latency.go:358] Got endpoints: latency-svc-zqh7c [749.984226ms]
  I0623 17:51:20.765658 20 service_latency.go:351] Created: latency-svc-sltmq
  I0623 17:51:20.800570 20 service_latency.go:358] Got endpoints: latency-svc-666xm [748.675803ms]
  I0623 17:51:20.814841 20 service_latency.go:351] Created: latency-svc-tgjzv
  I0623 17:51:20.851278 20 service_latency.go:358] Got endpoints: latency-svc-vvzf8 [749.587445ms]
  I0623 17:51:20.867990 20 service_latency.go:351] Created: latency-svc-kbz4d
  I0623 17:51:20.900747 20 service_latency.go:358] Got endpoints: latency-svc-t492p [749.636217ms]
  I0623 17:51:20.919874 20 service_latency.go:351] Created: latency-svc-vjj6t
  I0623 17:51:20.951676 20 service_latency.go:358] Got endpoints: latency-svc-58nxw [750.131312ms]
  I0623 17:51:20.967401 20 service_latency.go:351] Created: latency-svc-k5bcv
  I0623 17:51:21.001134 20 service_latency.go:358] Got endpoints: latency-svc-4l7tb [748.578297ms]
  I0623 17:51:21.019440 20 service_latency.go:351] Created: latency-svc-sp6js
  I0623 17:51:21.051914 20 service_latency.go:358] Got endpoints: latency-svc-gshhf [743.628952ms]
  I0623 17:51:21.068417 20 service_latency.go:351] Created: latency-svc-lv4p5
  I0623 17:51:21.100452 20 service_latency.go:358] Got endpoints: latency-svc-96vfv [749.334955ms]
  I0623 17:51:21.116580 20 service_latency.go:351] Created: latency-svc-6csbz
  I0623 17:51:21.151570 20 service_latency.go:358] Got endpoints: latency-svc-jtlhf [749.095056ms]
  I0623 17:51:21.167339 20 service_latency.go:351] Created: latency-svc-7vl9j
  I0623 17:51:21.202484 20 service_latency.go:358] Got endpoints: latency-svc-tvxfw [751.033018ms]
  I0623 17:51:21.220250 20 service_latency.go:351] Created: latency-svc-n8p8x
  I0623 17:51:21.252837 20 service_latency.go:358] Got endpoints: latency-svc-8cpdw [751.168984ms]
  I0623 17:51:21.269716 20 service_latency.go:351] Created: latency-svc-wrrtk
  I0623 17:51:21.301328 20 service_latency.go:358] Got endpoints: latency-svc-692gn [750.151717ms]
  I0623 17:51:21.316631 20 service_latency.go:351] Created: latency-svc-cf9h4
  I0623 17:51:21.351401 20 service_latency.go:358] Got endpoints: latency-svc-85gbk [750.461029ms]
  I0623 17:51:21.369647 20 service_latency.go:351] Created: latency-svc-hssl9
  I0623 17:51:21.401150 20 service_latency.go:358] Got endpoints: latency-svc-bl2hp [749.997237ms]
  I0623 17:51:21.420295 20 service_latency.go:351] Created: latency-svc-t4dfp
  I0623 17:51:21.452750 20 service_latency.go:358] Got endpoints: latency-svc-s22vf [747.531016ms]
  I0623 17:51:21.470276 20 service_latency.go:351] Created: latency-svc-6kg5h
  I0623 17:51:21.500649 20 service_latency.go:358] Got endpoints: latency-svc-sltmq [749.23511ms]
  I0623 17:51:21.518095 20 service_latency.go:351] Created: latency-svc-j497n
  I0623 17:51:21.550632 20 service_latency.go:358] Got endpoints: latency-svc-tgjzv [750.03436ms]
  I0623 17:51:21.567686 20 service_latency.go:351] Created: latency-svc-6c7dx
  I0623 17:51:21.601008 20 service_latency.go:358] Got endpoints: latency-svc-kbz4d [749.546714ms]
  I0623 17:51:21.620115 20 service_latency.go:351] Created: latency-svc-r6npg
  I0623 17:51:21.651852 20 service_latency.go:358] Got endpoints: latency-svc-vjj6t [751.032134ms]
  I0623 17:51:21.670410 20 service_latency.go:351] Created: latency-svc-md5ch
  I0623 17:51:21.700723 20 service_latency.go:358] Got endpoints: latency-svc-k5bcv [749.008878ms]
  I0623 17:51:21.717680 20 service_latency.go:351] Created: latency-svc-bn6zq
  I0623 17:51:21.751302 20 service_latency.go:358] Got endpoints: latency-svc-sp6js [750.1049ms]
  I0623 17:51:21.769925 20 service_latency.go:351] Created: latency-svc-958jf
  I0623 17:51:21.800533 20 service_latency.go:358] Got endpoints: latency-svc-lv4p5 [748.588032ms]
  I0623 17:51:21.819164 20 service_latency.go:351] Created: latency-svc-k6g7g
  I0623 17:51:21.850902 20 service_latency.go:358] Got endpoints: latency-svc-6csbz [750.406176ms]
  I0623 17:51:21.867940 20 service_latency.go:351] Created: latency-svc-zwd42
  I0623 17:51:21.901137 20 service_latency.go:358] Got endpoints: latency-svc-7vl9j [749.53131ms]
  I0623 17:51:21.916988 20 service_latency.go:351] Created: latency-svc-ff7rr
  I0623 17:51:21.951043 20 service_latency.go:358] Got endpoints: latency-svc-n8p8x [748.496154ms]
  I0623 17:51:21.966884 20 service_latency.go:351] Created: latency-svc-5p6jv
  I0623 17:51:22.002258 20 service_latency.go:358] Got endpoints: latency-svc-wrrtk [749.379648ms]
  I0623 17:51:22.021092 20 service_latency.go:351] Created: latency-svc-gwvzn
  I0623 17:51:22.051128 20 service_latency.go:358] Got endpoints: latency-svc-cf9h4 [749.754904ms]
  I0623 17:51:22.065803 20 service_latency.go:351] Created: latency-svc-4tdzf
  I0623 17:51:22.104418 20 service_latency.go:358] Got endpoints: latency-svc-hssl9 [752.845982ms]
  I0623 17:51:22.121815 20 service_latency.go:351] Created: latency-svc-ms7vk
  I0623 17:51:22.151808 20 service_latency.go:358] Got endpoints: latency-svc-t4dfp [750.614628ms]
  I0623 17:51:22.168529 20 service_latency.go:351] Created: latency-svc-jmwnp
  I0623 17:51:22.201635 20 service_latency.go:358] Got endpoints: latency-svc-6kg5h [748.833052ms]
  I0623 17:51:22.219830 20 service_latency.go:351] Created: latency-svc-tblcg
  I0623 17:51:22.252053 20 service_latency.go:358] Got endpoints: latency-svc-j497n [751.374012ms]
  I0623 17:51:22.269127 20 service_latency.go:351] Created: latency-svc-t6tqk
  I0623 17:51:22.302231 20 service_latency.go:358] Got endpoints: latency-svc-6c7dx [751.568556ms]
  I0623 17:51:22.318301 20 service_latency.go:351] Created: latency-svc-jkxqn
  I0623 17:51:22.351026 20 service_latency.go:358] Got endpoints: latency-svc-r6npg [749.967047ms]
  I0623 17:51:22.367012 20 service_latency.go:351] Created: latency-svc-hv72r
  I0623 17:51:22.401421 20 service_latency.go:358] Got endpoints: latency-svc-md5ch [749.528601ms]
  I0623 17:51:22.420407 20 service_latency.go:351] Created: latency-svc-pr7xm
  I0623 17:51:22.452331 20 service_latency.go:358] Got endpoints: latency-svc-bn6zq [751.405748ms]
  I0623 17:51:22.468386 20 service_latency.go:351] Created: latency-svc-9r4ll
  I0623 17:51:22.502366 20 service_latency.go:358] Got endpoints: latency-svc-958jf [751.003986ms]
  I0623 17:51:22.520449 20 service_latency.go:351] Created: latency-svc-wb62c
  I0623 17:51:22.551522 20 service_latency.go:358] Got endpoints: latency-svc-k6g7g [750.951285ms]
  I0623 17:51:22.568367 20 service_latency.go:351] Created: latency-svc-m85x2
  I0623 17:51:22.602977 20 service_latency.go:358] Got endpoints: latency-svc-zwd42 [752.038971ms]
  I0623 17:51:22.619170 20 service_latency.go:351] Created: latency-svc-pmnfm
  I0623 17:51:22.651820 20 service_latency.go:358] Got endpoints: latency-svc-ff7rr [750.609747ms]
  I0623 17:51:22.670731 20 service_latency.go:351] Created: latency-svc-cdm2k
  I0623 17:51:22.701932 20 service_latency.go:358] Got endpoints: latency-svc-5p6jv [750.825671ms]
  I0623 17:51:22.719065 20 service_latency.go:351] Created: latency-svc-jgv7d
  I0623 17:51:22.751376 20 service_latency.go:358] Got endpoints: latency-svc-gwvzn [749.085415ms]
  I0623 17:51:22.766527 20 service_latency.go:351] Created: latency-svc-hnd24
  I0623 17:51:22.801214 20 service_latency.go:358] Got endpoints: latency-svc-4tdzf [750.009778ms]
  I0623 17:51:22.817670 20 service_latency.go:351] Created: latency-svc-fl856
  I0623 17:51:22.850924 20 service_latency.go:358] Got endpoints: latency-svc-ms7vk [746.42682ms]
  I0623 17:51:22.868105 20 service_latency.go:351] Created: latency-svc-xxkhq
  I0623 17:51:22.900753 20 service_latency.go:358] Got endpoints: latency-svc-jmwnp [748.906995ms]
  I0623 17:51:22.916710 20 service_latency.go:351] Created: latency-svc-rffdm
  I0623 17:51:22.952031 20 service_latency.go:358] Got endpoints: latency-svc-tblcg [750.360552ms]
  I0623 17:51:22.967438 20 service_latency.go:351] Created: latency-svc-8dnxb
  I0623 17:51:23.002189 20 service_latency.go:358] Got endpoints: latency-svc-t6tqk [750.098085ms]
  I0623 17:51:23.019743 20 service_latency.go:351] Created: latency-svc-r4wgh
  I0623 17:51:23.051452 20 service_latency.go:358] Got endpoints: latency-svc-jkxqn [749.193666ms]
  I0623 17:51:23.067031 20 service_latency.go:351] Created: latency-svc-cbn7d
  I0623 17:51:23.102796 20 service_latency.go:358] Got endpoints: latency-svc-hv72r [751.689985ms]
  I0623 17:51:23.120118 20 service_latency.go:351] Created: latency-svc-bldvw
  I0623 17:51:23.152333 20 service_latency.go:358] Got endpoints: latency-svc-pr7xm [750.871843ms]
  I0623 17:51:23.168696 20 service_latency.go:351] Created: latency-svc-dprs4
  I0623 17:51:23.201987 20 service_latency.go:358] Got endpoints: latency-svc-9r4ll [749.395734ms]
  I0623 17:51:23.219710 20 service_latency.go:351] Created: latency-svc-btllg
  I0623 17:51:23.251724 20 service_latency.go:358] Got endpoints: latency-svc-wb62c [749.263895ms]
  I0623 17:51:23.268519 20 service_latency.go:351] Created: latency-svc-bsjnd
  I0623 17:51:23.301174 20 service_latency.go:358] Got endpoints: latency-svc-m85x2 [749.608645ms]
  I0623 17:51:23.317270 20 service_latency.go:351] Created: latency-svc-mnb2h
  I0623 17:51:23.352271 20 service_latency.go:358] Got endpoints: latency-svc-pmnfm [749.248538ms]
  I0623 17:51:23.369665 20 service_latency.go:351] Created: latency-svc-65hcq
  I0623 17:51:23.401496 20 service_latency.go:358] Got endpoints: latency-svc-cdm2k [749.636697ms]
  I0623 17:51:23.418663 20 service_latency.go:351] Created: latency-svc-nnngc
  I0623 17:51:23.451320 20 service_latency.go:358] Got endpoints: latency-svc-jgv7d [749.361655ms]
  I0623 17:51:23.468798 20 service_latency.go:351] Created: latency-svc-f6x2g
  I0623 17:51:23.501884 20 service_latency.go:358] Got endpoints: latency-svc-hnd24 [750.481162ms]
  I0623 17:51:23.519319 20 service_latency.go:351] Created: latency-svc-hjc5n
  I0623 17:51:23.550847 20 service_latency.go:358] Got endpoints: latency-svc-fl856 [749.607424ms]
  I0623 17:51:23.567287 20 service_latency.go:351] Created: latency-svc-xlmdz
  I0623 17:51:23.602013 20 service_latency.go:358] Got endpoints: latency-svc-xxkhq [751.057425ms]
  I0623 17:51:23.621736 20 service_latency.go:351] Created: latency-svc-6mh5d
  I0623 17:51:23.650827 20 service_latency.go:358] Got endpoints: latency-svc-rffdm [750.021667ms]
  I0623 17:51:23.668191 20 service_latency.go:351] Created: latency-svc-dhnfp
  I0623 17:51:23.701894 20 service_latency.go:358] Got endpoints: latency-svc-8dnxb [749.833433ms]
  I0623 17:51:23.718565 20 service_latency.go:351] Created: latency-svc-cjp6q
  I0623 17:51:23.752004 20 service_latency.go:358] Got endpoints: latency-svc-r4wgh [749.787716ms]
  I0623 17:51:23.769834 20 service_latency.go:351] Created: latency-svc-2hm22
  I0623 17:51:23.801746 20 service_latency.go:358] Got endpoints: latency-svc-cbn7d [750.267051ms]
  I0623 17:51:23.820170 20 service_latency.go:351] Created: latency-svc-n5xvm
  I0623 17:51:23.851393 20 service_latency.go:358] Got endpoints: latency-svc-bldvw [748.529749ms]
  I0623 17:51:23.868003 20 service_latency.go:351] Created: latency-svc-m9mwn
  I0623 17:51:23.901663 20 service_latency.go:358] Got endpoints: latency-svc-dprs4 [749.304145ms]
  I0623 17:51:23.919255 20 service_latency.go:351] Created: latency-svc-fgww5
  I0623 17:51:23.951145 20 service_latency.go:358] Got endpoints: latency-svc-btllg [749.126718ms]
  I0623 17:51:23.965848 20 service_latency.go:351] Created: latency-svc-rf4x8
  I0623 17:51:24.004862 20 service_latency.go:358] Got endpoints: latency-svc-bsjnd [753.104189ms]
  I0623 17:51:24.020121 20 service_latency.go:351] Created: latency-svc-qlb5s
  I0623 17:51:24.052840 20 service_latency.go:358] Got endpoints: latency-svc-mnb2h [751.633452ms]
  I0623 17:51:24.070672 20 service_latency.go:351] Created: latency-svc-7nc5z
  I0623 17:51:24.101707 20 service_latency.go:358] Got endpoints: latency-svc-65hcq [749.407709ms]
  I0623 17:51:24.119896 20 service_latency.go:351] Created: latency-svc-f8chz
  I0623 17:51:24.151008 20 service_latency.go:358] Got endpoints: latency-svc-nnngc [749.483134ms]
  I0623 17:51:24.166795 20 service_latency.go:351] Created: latency-svc-4bwjp
  I0623 17:51:24.202416 20 service_latency.go:358] Got endpoints: latency-svc-f6x2g [751.066998ms]
  I0623 17:51:24.219215 20 service_latency.go:351] Created: latency-svc-286sh
  I0623 17:51:24.251059 20 service_latency.go:358] Got endpoints: latency-svc-hjc5n [749.10993ms]
  I0623 17:51:24.268622 20 service_latency.go:351] Created: latency-svc-2fpt5
  I0623 17:51:24.302100 20 service_latency.go:358] Got endpoints: latency-svc-xlmdz [751.21971ms]
  I0623 17:51:24.319749 20 service_latency.go:351] Created: latency-svc-4nqt7
  I0623 17:51:24.351999 20 service_latency.go:358] Got endpoints: latency-svc-6mh5d [749.957065ms]
  I0623 17:51:24.369856 20 service_latency.go:351] Created: latency-svc-z6mrp
  I0623 17:51:24.401192 20 service_latency.go:358] Got endpoints: latency-svc-dhnfp [750.331079ms]
  I0623 17:51:24.419083 20 service_latency.go:351] Created: latency-svc-qm6bt
  I0623 17:51:24.451690 20 service_latency.go:358] Got endpoints: latency-svc-cjp6q [749.763626ms]
  I0623 17:51:24.468635 20 service_latency.go:351] Created: latency-svc-7lrfx
  I0623 17:51:24.501773 20 service_latency.go:358] Got endpoints: latency-svc-2hm22 [749.736057ms]
  I0623 17:51:24.518573 20 service_latency.go:351] Created: latency-svc-jwxl6
  I0623 17:51:24.552459 20 service_latency.go:358] Got endpoints: latency-svc-n5xvm [750.688222ms]
  I0623 17:51:24.569887 20 service_latency.go:351] Created: latency-svc-blqnc
  I0623 17:51:24.603557 20 service_latency.go:358] Got endpoints: latency-svc-m9mwn [752.130478ms]
  I0623 17:51:24.619722 20 service_latency.go:351] Created: latency-svc-dx66t
  I0623 17:51:24.652589 20 service_latency.go:358] Got endpoints: latency-svc-fgww5 [750.897085ms]
  I0623 17:51:24.670036 20 service_latency.go:351] Created: latency-svc-j4ltz
  I0623 17:51:24.701421 20 service_latency.go:358] Got endpoints: latency-svc-rf4x8 [750.247762ms]
  I0623 17:51:24.718532 20 service_latency.go:351] Created: latency-svc-9cb4k
  I0623 17:51:24.751042 20 service_latency.go:358] Got endpoints: latency-svc-qlb5s [746.140567ms]
  I0623 17:51:24.768826 20 service_latency.go:351] Created: latency-svc-6h6sw
  I0623 17:51:24.802253 20 service_latency.go:358] Got endpoints: latency-svc-7nc5z [749.385278ms]
  I0623 17:51:24.818971 20 service_latency.go:351] Created: latency-svc-xhkb4
  I0623 17:51:24.852202 20 service_latency.go:358] Got endpoints: latency-svc-f8chz [750.466773ms]
  I0623 17:51:24.868985 20 service_latency.go:351] Created: latency-svc-p4gwr
  I0623 17:51:24.901076 20 service_latency.go:358] Got endpoints: latency-svc-4bwjp [750.036687ms]
  I0623 17:51:24.918221 20 service_latency.go:351] Created: latency-svc-hnvfd
  I0623 17:51:24.952345 20 service_latency.go:358] Got endpoints: latency-svc-286sh [749.895865ms]
  I0623 17:51:24.968652 20 service_latency.go:351] Created: latency-svc-qtkzn
  I0623 17:51:25.001342 20 service_latency.go:358] Got endpoints: latency-svc-2fpt5 [750.255023ms]
  I0623 17:51:25.018427 20 service_latency.go:351] Created: latency-svc-76w4w
  I0623 17:51:25.051764 20 service_latency.go:358] Got endpoints: latency-svc-4nqt7 [749.627543ms]
  I0623 17:51:25.069923 20 service_latency.go:351] Created: latency-svc-zjmqf
  I0623 17:51:25.099592 20 service_latency.go:358] Got endpoints: latency-svc-z6mrp [747.564318ms]
  I0623 17:51:25.115609 20 service_latency.go:351] Created: latency-svc-kgd4p
  I0623 17:51:25.156340 20 service_latency.go:358] Got endpoints: latency-svc-qm6bt [755.113392ms]
  I0623 17:51:25.177841 20 service_latency.go:351] Created: latency-svc-qlp75
  I0623 17:51:25.200428 20 service_latency.go:358] Got endpoints: latency-svc-7lrfx [748.701444ms]
  I0623 17:51:25.215041 20 service_latency.go:351] Created: latency-svc-fxjb4
  I0623 17:51:25.251238 20 service_latency.go:358] Got endpoints: latency-svc-jwxl6 [749.418517ms]
  I0623 17:51:25.266248 20 service_latency.go:351] Created: latency-svc-cvx96
  I0623 17:51:25.300589 20 service_latency.go:358] Got endpoints: latency-svc-blqnc [748.101684ms]
  I0623 17:51:25.317032 20 service_latency.go:351] Created: latency-svc-v58n8
  I0623 17:51:25.351387 20 service_latency.go:358] Got endpoints: latency-svc-dx66t [747.799919ms]
  I0623 17:51:25.369740 20 service_latency.go:351] Created: latency-svc-82fb8
  I0623 17:51:25.400518 20 service_latency.go:358] Got endpoints: latency-svc-j4ltz [747.901397ms]
  I0623 17:51:25.419897 20 service_latency.go:351] Created: latency-svc-xvhlm
  I0623 17:51:25.451489 20 service_latency.go:358] Got endpoints: latency-svc-9cb4k [750.03826ms]
  I0623 17:51:25.467360 20 service_latency.go:351] Created: latency-svc-wfks6
  I0623 17:51:25.501267 20 service_latency.go:358] Got endpoints: latency-svc-6h6sw [750.192324ms]
  I0623 17:51:25.519466 20 service_latency.go:351] Created: latency-svc-wlnbb
  I0623 17:51:25.551209 20 service_latency.go:358] Got endpoints: latency-svc-xhkb4 [748.925456ms]
  I0623 17:51:25.566808 20 service_latency.go:351] Created: latency-svc-6n6cc
  I0623 17:51:25.601757 20 service_latency.go:358] Got endpoints: latency-svc-p4gwr [749.519636ms]
  I0623 17:51:25.619748 20 service_latency.go:351] Created: latency-svc-k6v9t
  I0623 17:51:25.650834 20 service_latency.go:358] Got endpoints: latency-svc-hnvfd [749.727938ms]
  I0623 17:51:25.668538 20 service_latency.go:351] Created: latency-svc-q976b
  I0623 17:51:25.701091 20 service_latency.go:358] Got endpoints: latency-svc-qtkzn [748.715773ms]
  I0623 17:51:25.717951 20 service_latency.go:351] Created: latency-svc-jgznw
  I0623 17:51:25.750468 20 service_latency.go:358] Got endpoints: latency-svc-76w4w [749.075469ms]
  I0623 17:51:25.768642 20 service_latency.go:351] Created: latency-svc-dtfvw
  I0623 17:51:25.801082 20 service_latency.go:358] Got endpoints: latency-svc-zjmqf [749.267737ms]
  I0623 17:51:25.817581 20 service_latency.go:351] Created: latency-svc-n9h8g
  I0623 17:51:25.852298 20 service_latency.go:358] Got endpoints: latency-svc-kgd4p [752.632283ms]
  I0623 17:51:25.867897 20 service_latency.go:351] Created: latency-svc-svgb6
  I0623 17:51:25.901016 20 service_latency.go:358] Got endpoints: latency-svc-qlp75 [744.648619ms]
  I0623 17:51:25.915929 20 service_latency.go:351] Created: latency-svc-6cpw5
  I0623 17:51:25.950588 20 service_latency.go:358] Got endpoints: latency-svc-fxjb4 [750.127783ms]
  I0623 17:51:25.967480 20 service_latency.go:351] Created: latency-svc-s76sj
  I0623 17:51:26.001072 20 service_latency.go:358] Got endpoints: latency-svc-cvx96 [749.802999ms]
  I0623 17:51:26.018608 20 service_latency.go:351] Created: latency-svc-pcs9h
  I0623 17:51:26.053963 20 service_latency.go:358] Got endpoints: latency-svc-v58n8 [753.347352ms]
  I0623 17:51:26.070966 20 service_latency.go:351] Created: latency-svc-ldzwh
  I0623 17:51:26.102210 20 service_latency.go:358] Got endpoints: latency-svc-82fb8 [750.791819ms]
  I0623 17:51:26.119145 20 service_latency.go:351] Created: latency-svc-k46ph
  I0623 17:51:26.151876 20 service_latency.go:358] Got endpoints: latency-svc-xvhlm [751.303051ms]
  I0623 17:51:26.170353 20 service_latency.go:351] Created: latency-svc-g9r7j
  I0623 17:51:26.200893 20 service_latency.go:358] Got endpoints: latency-svc-wfks6 [749.375503ms]
  I0623 17:51:26.220034 20 service_latency.go:351] Created: latency-svc-9qcvq
  I0623 17:51:26.250710 20 service_latency.go:358] Got endpoints: latency-svc-wlnbb [749.412582ms]
  I0623 17:51:26.266342 20 service_latency.go:351] Created: latency-svc-6w7d9
  I0623 17:51:26.301802 20 service_latency.go:358] Got endpoints: latency-svc-6n6cc [750.554898ms]
  I0623 17:51:26.320340 20 service_latency.go:351] Created: latency-svc-5jw7c
  I0623 17:51:26.351311 20 service_latency.go:358] Got endpoints: latency-svc-k6v9t [749.384452ms]
  I0623 17:51:26.369432 20 service_latency.go:351] Created: latency-svc-cqhh6
  I0623 17:51:26.401861 20 service_latency.go:358] Got endpoints: latency-svc-q976b [750.993102ms]
  I0623 17:51:26.419944 20 service_latency.go:351] Created: latency-svc-js8bp
  I0623 17:51:26.451069 20 service_latency.go:358] Got endpoints: latency-svc-jgznw [749.945125ms]
  I0623 17:51:26.468330 20 service_latency.go:351] Created: latency-svc-smmls
  I0623 17:51:26.500930 20 service_latency.go:358] Got endpoints: latency-svc-dtfvw [750.426849ms]
  I0623 17:51:26.519345 20 service_latency.go:351] Created: latency-svc-swnt8
  I0623 17:51:26.551321 20 service_latency.go:358] Got endpoints: latency-svc-n9h8g [750.187691ms]
  I0623 17:51:26.567588 20 service_latency.go:351] Created: latency-svc-vnq4j
  I0623 17:51:26.602098 20 service_latency.go:358] Got endpoints: latency-svc-svgb6 [749.766809ms]
  I0623 17:51:26.620290 20 service_latency.go:351] Created: latency-svc-mzqns
  I0623 17:51:26.654400 20 service_latency.go:358] Got endpoints: latency-svc-6cpw5 [753.355086ms]
  I0623 17:51:26.672578 20 service_latency.go:351] Created: latency-svc-cznt8
  I0623 17:51:26.704180 20 service_latency.go:358] Got endpoints: latency-svc-s76sj [753.56085ms]
  I0623 17:51:26.719268 20 service_latency.go:351] Created: latency-svc-467c4
  I0623 17:51:26.756214 20 service_latency.go:358] Got endpoints: latency-svc-pcs9h [755.111098ms]
  I0623 17:51:26.774511 20 service_latency.go:351] Created: latency-svc-zn7gx
  I0623 17:51:26.802634 20 service_latency.go:358] Got endpoints: latency-svc-ldzwh [748.626217ms]
  I0623 17:51:26.820398 20 service_latency.go:351] Created: latency-svc-zc7fc
  I0623 17:51:26.852860 20 service_latency.go:358] Got endpoints: latency-svc-k46ph [750.613595ms]
  I0623 17:51:26.871688 20 service_latency.go:351] Created: latency-svc-cf89k
  I0623 17:51:26.904146 20 service_latency.go:358] Got endpoints: latency-svc-g9r7j [752.225116ms]
  I0623 17:51:26.921234 20 service_latency.go:351] Created: latency-svc-wpvdt
  I0623 17:51:26.952519 20 service_latency.go:358] Got endpoints: latency-svc-9qcvq [751.463835ms]
  I0623 17:51:26.969626 20 service_latency.go:351] Created: latency-svc-9zjnb
  I0623 17:51:27.001281 20 service_latency.go:358] Got endpoints: latency-svc-6w7d9 [750.525658ms]
  I0623 17:51:27.018242 20 service_latency.go:351] Created: latency-svc-jgxr9
  I0623 17:51:27.051159 20 service_latency.go:358] Got endpoints: latency-svc-5jw7c [749.283328ms]
  I0623 17:51:27.067369 20 service_latency.go:351] Created: latency-svc-sznkf
  I0623 17:51:27.101508 20 service_latency.go:358] Got endpoints: latency-svc-cqhh6 [750.148902ms]
  I0623 17:51:27.120277 20 service_latency.go:351] Created: latency-svc-z4sqv
  I0623 17:51:27.151302 20 service_latency.go:358] Got endpoints: latency-svc-js8bp [749.402482ms]
  I0623 17:51:27.168960 20 service_latency.go:351] Created: latency-svc-z875q
  I0623 17:51:27.201879 20 service_latency.go:358] Got endpoints: latency-svc-smmls [750.754823ms]
  I0623 17:51:27.218747 20 service_latency.go:351] Created: latency-svc-lp7mj
  I0623 17:51:27.251400 20 service_latency.go:358] Got endpoints: latency-svc-swnt8 [750.418255ms]
  I0623 17:51:27.301720 20 service_latency.go:358] Got endpoints: latency-svc-vnq4j [750.354411ms]
  I0623 17:51:27.352285 20 service_latency.go:358] Got endpoints: latency-svc-mzqns [750.126638ms]
  I0623 17:51:27.400939 20 service_latency.go:358] Got endpoints: latency-svc-cznt8 [746.498755ms]
  I0623 17:51:27.451426 20 service_latency.go:358] Got endpoints: latency-svc-467c4 [747.20845ms]
  I0623 17:51:27.502704 20 service_latency.go:358] Got endpoints: latency-svc-zn7gx [746.44789ms]
  I0623 17:51:27.551009 20 service_latency.go:358] Got endpoints: latency-svc-zc7fc [748.17021ms]
  I0623 17:51:27.601932 20 service_latency.go:358] Got endpoints: latency-svc-cf89k [749.027448ms]
  I0623 17:51:27.655611 20 service_latency.go:358] Got endpoints: latency-svc-wpvdt [751.414393ms]
  I0623 17:51:27.702026 20 service_latency.go:358] Got endpoints: latency-svc-9zjnb [749.469735ms]
  I0623 17:51:27.751078 20 service_latency.go:358] Got endpoints: latency-svc-jgxr9 [749.754916ms]
  I0623 17:51:27.802421 20 service_latency.go:358] Got endpoints: latency-svc-sznkf [751.124724ms]
  I0623 17:51:27.851805 20 service_latency.go:358] Got endpoints: latency-svc-z4sqv [750.196217ms]
  I0623 17:51:27.902397 20 service_latency.go:358] Got endpoints: latency-svc-z875q [751.019889ms]
  I0623 17:51:27.950513 20 service_latency.go:358] Got endpoints: latency-svc-lp7mj [748.599695ms]
  I0623 17:51:27.950599 20 service_latency.go:114] Latencies: [25.316583ms 35.227492ms 45.343163ms 60.639162ms 67.006802ms 79.476017ms 87.781428ms 106.750182ms 118.885472ms 126.853486ms 134.080131ms 138.157673ms 139.132107ms 141.336527ms 141.918204ms 142.501729ms 142.964858ms 144.587393ms 145.089859ms 146.743129ms 147.325017ms 147.808381ms 148.483386ms 148.842625ms 149.248699ms 151.601046ms 151.836509ms 153.491249ms 153.763721ms 154.59396ms 155.448105ms 158.358836ms 159.187546ms 159.954021ms 161.375071ms 164.997372ms 176.459542ms 196.656908ms 237.807928ms 283.011888ms 319.241885ms 359.611881ms 405.133757ms 438.906834ms 471.91728ms 522.577783ms 563.544039ms 603.205277ms 643.182437ms 675.970205ms 717.091067ms 743.628952ms 744.648619ms 746.058174ms 746.140567ms 746.42682ms 746.44789ms 746.498755ms 747.20845ms 747.531016ms 747.564318ms 747.799919ms 747.901397ms 748.101684ms 748.17021ms 748.496154ms 748.529749ms 748.578297ms 748.588032ms 748.599695ms 748.626217ms 748.675803ms 748.701444ms 748.715773ms 748.833052ms 748.906995ms 748.925456ms 749.008878ms 749.027448ms 749.075469ms 749.085415ms 749.095056ms 749.10993ms 749.126718ms 749.134609ms 749.193666ms 749.23511ms 749.248538ms 749.263895ms 749.267737ms 749.283328ms 749.304145ms 749.334955ms 749.361655ms 749.375503ms 749.379648ms 749.384452ms 749.385278ms 749.395734ms 749.402482ms 749.407709ms 749.412582ms 749.418517ms 749.469735ms 749.483134ms 749.519636ms 749.528601ms 749.53131ms 749.546714ms 749.587445ms 749.607424ms 749.608645ms 749.627543ms 749.636217ms 749.636697ms 749.727938ms 749.736057ms 749.754904ms 749.754916ms 749.763626ms 749.766809ms 749.787716ms 749.802999ms 749.833433ms 749.895865ms 749.945125ms 749.957065ms 749.967047ms 749.984226ms 749.997237ms 750.009778ms 750.021667ms 750.03436ms 750.036687ms 750.03826ms 750.098085ms 750.1049ms 750.126638ms 750.127783ms 750.131312ms 750.148902ms 750.151717ms 750.187691ms 750.192324ms 750.196217ms 750.247762ms 750.255023ms 750.255287ms 750.267051ms 750.331079ms 750.354411ms 750.360552ms 750.406176ms 750.418255ms 750.426849ms 750.461029ms 750.466773ms 750.481162ms 750.525658ms 750.554898ms 750.609747ms 750.613595ms 750.614628ms 750.688222ms 750.754823ms 750.791819ms 750.825671ms 750.871843ms 750.897085ms 750.951285ms 750.993102ms 751.003986ms 751.019889ms 751.032134ms 751.033018ms 751.057425ms 751.066998ms 751.124724ms 751.168984ms 751.21971ms 751.303051ms 751.374012ms 751.405748ms 751.414393ms 751.463835ms 751.568556ms 751.633452ms 751.689985ms 752.038971ms 752.130478ms 752.225116ms 752.632283ms 752.845982ms 753.104189ms 753.347352ms 753.355086ms 753.56085ms 753.817126ms 755.111098ms 755.113392ms]
  I0623 17:51:27.950611 20 service_latency.go:118] 50 %ile: 749.407709ms
  I0623 17:51:27.950618 20 service_latency.go:119] 90 %ile: 751.303051ms
  I0623 17:51:27.950623 20 service_latency.go:120] 99 %ile: 755.111098ms
  I0623 17:51:27.950628 20 service_latency.go:121] Total sample count: 200
  I0623 17:51:27.950716 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7356" for this suite. @ 06/23/25 17:51:27.955
• [10.727 seconds]
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 06/23/25 17:51:27.961
  I0623 17:51:27.961923 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 17:51:27.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:51:27.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:51:27.981
  STEP: Looking for a node to schedule job pods @ 06/23/25 17:51:27.983
  STEP: Creating a job @ 06/23/25 17:51:28.056
  STEP: Waiting for all the pods to be ready @ 06/23/25 17:51:28.065
  STEP: Fetch all running pods @ 06/23/25 17:51:32.081
  STEP: Evict all the Pods @ 06/23/25 17:51:32.085
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-cq5q8/job-3921 @ 06/23/25 17:51:32.085
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-qb958/job-3921 @ 06/23/25 17:51:32.085
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-24gz5/job-3921 @ 06/23/25 17:51:32.085
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-24gz5/job-3921 to be deleted @ 06/23/25 17:51:32.111
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-cq5q8/job-3921 to be deleted @ 06/23/25 17:51:32.116
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-qb958/job-3921 to be deleted @ 06/23/25 17:51:32.118
  STEP: Ensuring job reaches completions @ 06/23/25 17:51:36.129
  I0623 17:52:18.248451 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3921" for this suite. @ 06/23/25 17:52:18.255
• [50.300 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 06/23/25 17:52:18.261
  I0623 17:52:18.261560 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:52:18.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:52:18.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:52:18.283
  STEP: Creating configMap with name projected-configmap-test-volume-map-cb3d6a75-cd99-4989-8172-822f69d5a87b @ 06/23/25 17:52:18.286
  STEP: Creating a pod to test consume configMaps @ 06/23/25 17:52:18.29
  STEP: Saw pod success @ 06/23/25 17:52:22.316
  I0623 17:52:22.320226 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-configmaps-a8bda80d-9815-49bf-8ffe-5b5bd2ddca73 container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 17:52:22.326
  I0623 17:52:22.347002 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7741" for this suite. @ 06/23/25 17:52:22.351
• [4.098 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 06/23/25 17:52:22.359
  I0623 17:52:22.359506 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:52:22.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:52:22.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:52:22.374
  STEP: Setting up server cert @ 06/23/25 17:52:22.399
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:52:22.589
  STEP: Deploying the webhook pod @ 06/23/25 17:52:22.596
  STEP: Wait for the deployment to be ready @ 06/23/25 17:52:22.611
  I0623 17:52:22.621341 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:52:24.635
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:52:24.652
  I0623 17:52:25.652917 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/23/25 17:52:25.736
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/23/25 17:52:25.766
  STEP: Deleting the collection of validation webhooks @ 06/23/25 17:52:25.79
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/23/25 17:52:25.856
  I0623 17:52:25.931980 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5852" for this suite. @ 06/23/25 17:52:25.939
  STEP: Destroying namespace "webhook-markers-9565" for this suite. @ 06/23/25 17:52:25.947
• [3.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 06/23/25 17:52:25.952
  I0623 17:52:25.952977 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replication-controller @ 06/23/25 17:52:25.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:52:25.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:52:25.971
  STEP: Given a ReplicationController is created @ 06/23/25 17:52:25.973
  STEP: When the matched label of one of its pods change @ 06/23/25 17:52:25.981
  I0623 17:52:25.984908 20 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  I0623 17:52:30.991404 20 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/23/25 17:52:31.002
  I0623 17:52:32.011719 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2684" for this suite. @ 06/23/25 17:52:32.016
• [6.073 seconds]
------------------------------
S
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 06/23/25 17:52:32.026
  I0623 17:52:32.026367 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename ingressclass @ 06/23/25 17:52:32.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:52:32.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:52:32.043
  STEP: getting /apis @ 06/23/25 17:52:32.045
  STEP: getting /apis/networking.k8s.io @ 06/23/25 17:52:32.048
  STEP: getting /apis/networking.k8s.iov1 @ 06/23/25 17:52:32.048
  STEP: creating @ 06/23/25 17:52:32.049
  STEP: getting @ 06/23/25 17:52:32.064
  STEP: listing @ 06/23/25 17:52:32.067
  STEP: watching @ 06/23/25 17:52:32.071
  I0623 17:52:32.071533 20 ingressclass.go:348] starting watch
  STEP: patching @ 06/23/25 17:52:32.072
  STEP: updating @ 06/23/25 17:52:32.077
  I0623 17:52:32.082187 20 ingressclass.go:364] waiting for watch events with expected annotations
  I0623 17:52:32.082215 20 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 06/23/25 17:52:32.082
  STEP: deleting a collection @ 06/23/25 17:52:32.095
  I0623 17:52:32.113687 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-351" for this suite. @ 06/23/25 17:52:32.117
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 06/23/25 17:52:32.126
  I0623 17:52:32.126120 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 17:52:32.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:52:32.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:52:32.142
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/23/25 17:52:32.144
  STEP: Saw pod success @ 06/23/25 17:52:36.17
  I0623 17:52:36.175224 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-4cb377b6-4efd-4dd8-924f-bb5921eb6a8b container test-container: <nil>
  STEP: delete the pod @ 06/23/25 17:52:36.183
  I0623 17:52:36.198075 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5404" for this suite. @ 06/23/25 17:52:36.202
• [4.084 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/23/25 17:52:36.21
  I0623 17:52:36.210415 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-runtime @ 06/23/25 17:52:36.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:52:36.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:52:36.228
  STEP: create the container @ 06/23/25 17:52:36.231
  I0623 17:52:36.242213      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 06/23/25 17:52:36.242
  STEP: get the container status @ 06/23/25 17:52:39.261
  STEP: the container should be terminated @ 06/23/25 17:52:39.265
  STEP: the termination message should be set @ 06/23/25 17:52:39.265
  I0623 17:52:39.265221 20 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/23/25 17:52:39.265
  I0623 17:52:39.285884 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5158" for this suite. @ 06/23/25 17:52:39.289
• [3.087 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 06/23/25 17:52:39.297
  I0623 17:52:39.297488 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename dns @ 06/23/25 17:52:39.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:52:39.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:52:39.314
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6161.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-6161.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 06/23/25 17:52:39.316
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6161.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6161.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/23/25 17:52:39.316
  STEP: creating a pod to probe /etc/hosts @ 06/23/25 17:52:39.316
  STEP: submitting the pod to kubernetes @ 06/23/25 17:52:39.316
  STEP: retrieving the pod @ 06/23/25 17:52:41.335
  STEP: looking for the results for each expected name from probers @ 06/23/25 17:52:41.339
  I0623 17:52:41.356720 20 dns_common.go:546] DNS probes using dns-6161/dns-test-9e5ab64f-6b08-4a34-9331-a6fa869d6f84 succeeded

  STEP: deleting the pod @ 06/23/25 17:52:41.356
  I0623 17:52:41.374942 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6161" for this suite. @ 06/23/25 17:52:41.38
• [2.091 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 06/23/25 17:52:41.388
  I0623 17:52:41.388319 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 17:52:41.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:52:41.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:52:41.406
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/23/25 17:52:41.408
  STEP: Saw pod success @ 06/23/25 17:52:45.436
  I0623 17:52:45.439974 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-df26fe4d-9062-428d-b730-5424287987ee container test-container: <nil>
  STEP: delete the pod @ 06/23/25 17:52:45.446
  I0623 17:52:45.465196 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7156" for this suite. @ 06/23/25 17:52:45.469
• [4.087 seconds]
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/23/25 17:52:45.474
  I0623 17:52:45.474974 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename watch @ 06/23/25 17:52:45.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:52:45.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:52:45.492
  STEP: creating a watch on configmaps with label A @ 06/23/25 17:52:45.494
  STEP: creating a watch on configmaps with label B @ 06/23/25 17:52:45.495
  STEP: creating a watch on configmaps with label A or B @ 06/23/25 17:52:45.495
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/23/25 17:52:45.496
  I0623 17:52:45.503574 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2251  c7fbf0c1-ae2d-4e64-86f5-08724a420764 38190 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 17:52:45.503663 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2251  c7fbf0c1-ae2d-4e64-86f5-08724a420764 38190 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/23/25 17:52:45.503
  I0623 17:52:45.510886 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2251  c7fbf0c1-ae2d-4e64-86f5-08724a420764 38191 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 17:52:45.510953 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2251  c7fbf0c1-ae2d-4e64-86f5-08724a420764 38191 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/23/25 17:52:45.51
  I0623 17:52:45.518486 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2251  c7fbf0c1-ae2d-4e64-86f5-08724a420764 38192 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 17:52:45.518552 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2251  c7fbf0c1-ae2d-4e64-86f5-08724a420764 38192 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/23/25 17:52:45.518
  I0623 17:52:45.524356 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2251  c7fbf0c1-ae2d-4e64-86f5-08724a420764 38193 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 17:52:45.524386 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2251  c7fbf0c1-ae2d-4e64-86f5-08724a420764 38193 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/23/25 17:52:45.524
  I0623 17:52:45.530580 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2251  aefc9cb7-33ee-4f4b-9aa9-f45241405082 38194 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 17:52:45.530635 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2251  aefc9cb7-33ee-4f4b-9aa9-f45241405082 38194 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/23/25 17:52:55.531
  I0623 17:52:55.540436 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2251  aefc9cb7-33ee-4f4b-9aa9-f45241405082 38241 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 17:52:55.540474 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2251  aefc9cb7-33ee-4f4b-9aa9-f45241405082 38241 0 2025-06-23 17:52:45 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-06-23 17:52:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 17:53:05.541435 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2251" for this suite. @ 06/23/25 17:53:05.547
• [20.080 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 06/23/25 17:53:05.554
  I0623 17:53:05.554763 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 17:53:05.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:05.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:05.573
  STEP: Creating a job @ 06/23/25 17:53:05.575
  STEP: Ensuring job reaches completions @ 06/23/25 17:53:05.581
  I0623 17:53:13.606941 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9028" for this suite. @ 06/23/25 17:53:13.61
• [8.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 06/23/25 17:53:13.621
  I0623 17:53:13.621983 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:53:13.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:13.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:13.638
  STEP: Setting up server cert @ 06/23/25 17:53:13.662
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:53:14.294
  STEP: Deploying the webhook pod @ 06/23/25 17:53:14.301
  STEP: Wait for the deployment to be ready @ 06/23/25 17:53:14.317
  I0623 17:53:14.325818 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:53:16.339
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:53:16.355
  I0623 17:53:17.355145 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 06/23/25 17:53:17.361
  STEP: create the configmap with a random name @ 06/23/25 17:53:17.379
  STEP: verify the configmap is mutated @ 06/23/25 17:53:17.39
  STEP: create the configmap with 'skip-me' name @ 06/23/25 17:53:17.39
  I0623 17:53:17.448483 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4280" for this suite. @ 06/23/25 17:53:17.454
  STEP: Destroying namespace "webhook-markers-5785" for this suite. @ 06/23/25 17:53:17.463
• [3.847 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 06/23/25 17:53:17.469
  I0623 17:53:17.469020 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:53:17.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:17.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:17.487
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 17:53:17.489
  STEP: Saw pod success @ 06/23/25 17:53:21.514
  I0623 17:53:21.517443 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-b35a468f-08b3-4c7f-ac39-1d212744f7a7 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 17:53:21.525
  I0623 17:53:21.544942 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1030" for this suite. @ 06/23/25 17:53:21.548
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 06/23/25 17:53:21.558
  I0623 17:53:21.558101 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename emptydir @ 06/23/25 17:53:21.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:21.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:21.576
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/23/25 17:53:21.578
  STEP: Saw pod success @ 06/23/25 17:53:25.604
  I0623 17:53:25.608220 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-41da7fc0-3173-4460-a634-10a8eef6c38d container test-container: <nil>
  STEP: delete the pod @ 06/23/25 17:53:25.615
  I0623 17:53:25.636265 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6230" for this suite. @ 06/23/25 17:53:25.64
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 06/23/25 17:53:25.648
  I0623 17:53:25.648613 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename servicecidr @ 06/23/25 17:53:25.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:25.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:25.665
  STEP: getting @ 06/23/25 17:53:25.667
  STEP: patching @ 06/23/25 17:53:25.67
  STEP: updating @ 06/23/25 17:53:25.678
  STEP: listing @ 06/23/25 17:53:25.709
  STEP: watching @ 06/23/25 17:53:25.712
  I0623 17:53:25.713342 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-5093" for this suite. @ 06/23/25 17:53:25.741
• [0.102 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 06/23/25 17:53:25.75
  I0623 17:53:25.750952 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:53:25.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:25.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:25.769
  STEP: Setting up server cert @ 06/23/25 17:53:25.791
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:53:26.174
  STEP: Deploying the webhook pod @ 06/23/25 17:53:26.182
  STEP: Wait for the deployment to be ready @ 06/23/25 17:53:26.197
  I0623 17:53:26.205864 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:53:28.219
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:53:28.238
  I0623 17:53:29.242893 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/23/25 17:53:29.321
  STEP: Creating a configMap that should be mutated @ 06/23/25 17:53:29.33
  STEP: Deleting the collection of validation webhooks @ 06/23/25 17:53:29.355
  STEP: Creating a configMap that should not be mutated @ 06/23/25 17:53:29.414
  I0623 17:53:29.471343 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7103" for this suite. @ 06/23/25 17:53:29.476
  STEP: Destroying namespace "webhook-markers-3170" for this suite. @ 06/23/25 17:53:29.485
• [3.742 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 06/23/25 17:53:29.492
  I0623 17:53:29.492617 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename field-validation @ 06/23/25 17:53:29.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:29.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:29.509
  I0623 17:53:29.512491 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 17:53:32.595960 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9153" for this suite. @ 06/23/25 17:53:32.599
• [3.113 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 06/23/25 17:53:32.605
  I0623 17:53:32.605961 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/23/25 17:53:32.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:32.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:32.62
  STEP: creating a target pod @ 06/23/25 17:53:32.623
  STEP: adding an ephemeral container @ 06/23/25 17:53:34.642
  STEP: verifying the pod's generation is 2 @ 06/23/25 17:53:36.66
  STEP: checking pod container endpoints @ 06/23/25 17:53:36.663
  I0623 17:53:36.663843 20 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2356 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 17:53:36.663860 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 17:53:36.663925 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-2356/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0623 17:53:36.694092 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 17:53:36.694115 20 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/23/25 17:53:36.702
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/23/25 17:53:36.707
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/23/25 17:53:36.719
  I0623 17:53:36.723663 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2356" for this suite. @ 06/23/25 17:53:36.727
• [4.128 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 06/23/25 17:53:36.733
  I0623 17:53:36.733897 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 17:53:36.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:36.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:36.799
  STEP: Creating a job @ 06/23/25 17:53:36.801
  STEP: Ensuring active pods == parallelism @ 06/23/25 17:53:36.808
  STEP: Orphaning one of the Job's Pods @ 06/23/25 17:53:38.819
  I0623 17:53:39.335766 20 pod_client.go:173] Successfully updated pod "adopt-release-76cm4"
  STEP: Checking that the Job readopts the Pod @ 06/23/25 17:53:39.335
  STEP: Removing the labels from the Job's Pod @ 06/23/25 17:53:41.344
  I0623 17:53:41.858992 20 pod_client.go:173] Successfully updated pod "adopt-release-76cm4"
  STEP: Checking that the Job releases the Pod @ 06/23/25 17:53:41.859
  I0623 17:53:43.866964 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1543" for this suite. @ 06/23/25 17:53:43.87
• [7.145 seconds]
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/23/25 17:53:43.879
  I0623 17:53:43.879447 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename subjectreview @ 06/23/25 17:53:43.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:43.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:43.896
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3743" @ 06/23/25 17:53:43.898
  I0623 17:53:43.903000 20 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-3743:e2e"
  I0623 17:53:43.903022 20 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3743"}
  I0623 17:53:43.903029 20 subjectreviews.go:71] saUID: "97ff1453-4333-4cd3-9b9d-2859006a5d91"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3743:e2e" @ 06/23/25 17:53:43.903
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3743:e2e" @ 06/23/25 17:53:43.903
  I0623 17:53:43.904607 20 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3743:e2e" api 'list' configmaps in "subjectreview-3743" namespace @ 06/23/25 17:53:43.904
  I0623 17:53:43.905868 20 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3743:e2e" @ 06/23/25 17:53:43.905
  I0623 17:53:43.907542 20 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0623 17:53:43.907558 20 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0623 17:53:43.907719 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3743" for this suite. @ 06/23/25 17:53:43.972
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/23/25 17:53:43.981
  I0623 17:53:43.981937 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename init-container @ 06/23/25 17:53:43.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:43.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:43.999
  STEP: creating the pod @ 06/23/25 17:53:44.001
  I0623 17:53:44.001912 20 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0623 17:53:46.798750 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2595" for this suite. @ 06/23/25 17:53:46.803
• [2.828 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 06/23/25 17:53:46.809
  I0623 17:53:46.809710 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:53:46.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:46.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:46.826
  STEP: Setting up server cert @ 06/23/25 17:53:46.849
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:53:47.005
  STEP: Deploying the webhook pod @ 06/23/25 17:53:47.011
  STEP: Wait for the deployment to be ready @ 06/23/25 17:53:47.024
  I0623 17:53:47.035657 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:53:49.046
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:53:49.061
  I0623 17:53:50.062823 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 06/23/25 17:53:50.068
  I0623 17:53:50.118409 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8630" for this suite. @ 06/23/25 17:53:50.121
  STEP: Destroying namespace "webhook-markers-6379" for this suite. @ 06/23/25 17:53:50.133
• [3.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 06/23/25 17:53:50.142
  I0623 17:53:50.142320 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename gc @ 06/23/25 17:53:50.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:53:50.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:53:50.16
  STEP: create the rc @ 06/23/25 17:53:50.222
  I0623 17:53:50.231814      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 06/23/25 17:53:56.242
  STEP: wait for the rc to be deleted @ 06/23/25 17:53:56.267
  I0623 17:53:57.280941 20 garbage_collector.go:678] 80 pods remaining
  I0623 17:53:57.280968 20 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0623 17:53:57.280973 20 garbage_collector.go:686] 
  I0623 17:53:58.279365 20 garbage_collector.go:678] 71 pods remaining
  I0623 17:53:58.279404 20 garbage_collector.go:685] 71 pods has nil DeletionTimestamp
  I0623 17:53:58.279411 20 garbage_collector.go:686] 
  I0623 17:53:59.283589 20 garbage_collector.go:678] 59 pods remaining
  I0623 17:53:59.283615 20 garbage_collector.go:685] 59 pods has nil DeletionTimestamp
  I0623 17:53:59.283620 20 garbage_collector.go:686] 
  I0623 17:54:00.280897 20 garbage_collector.go:678] 40 pods remaining
  I0623 17:54:00.280938 20 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0623 17:54:00.280946 20 garbage_collector.go:686] 
  I0623 17:54:01.275983 20 garbage_collector.go:678] 31 pods remaining
  I0623 17:54:01.276019 20 garbage_collector.go:685] 31 pods has nil DeletionTimestamp
  I0623 17:54:01.276027 20 garbage_collector.go:686] 
  I0623 17:54:02.283702 20 garbage_collector.go:678] 19 pods remaining
  I0623 17:54:02.283735 20 garbage_collector.go:685] 19 pods has nil DeletionTimestamp
  I0623 17:54:02.283743 20 garbage_collector.go:686] 
  STEP: Gathering metrics @ 06/23/25 17:54:03.277
  W0623 17:54:03.282384      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0623 17:54:03.283908 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0623 17:54:03.284083 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4130" for this suite. @ 06/23/25 17:54:03.288
• [13.156 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 06/23/25 17:54:03.298
  I0623 17:54:03.298618 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename runtimeclass @ 06/23/25 17:54:03.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:54:03.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:54:03.317
  I0623 17:54:05.347953 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8843" for this suite. @ 06/23/25 17:54:05.353
• [2.062 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 06/23/25 17:54:05.36
  I0623 17:54:05.360748 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename gc @ 06/23/25 17:54:05.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:54:05.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:54:05.377
  STEP: create the rc1 @ 06/23/25 17:54:05.454
  STEP: create the rc2 @ 06/23/25 17:54:05.46
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/23/25 17:54:11.471
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/23/25 17:54:11.978
  STEP: wait for the rc to be deleted @ 06/23/25 17:54:11.991
  I0623 17:54:17.005200 20 garbage_collector.go:770] 71 pods remaining
  I0623 17:54:17.005231 20 garbage_collector.go:777] 70 pods has nil DeletionTimestamp
  I0623 17:54:17.005237 20 garbage_collector.go:778] 
  STEP: Gathering metrics @ 06/23/25 17:54:22.004
  W0623 17:54:22.009486      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0623 17:54:22.009516 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0623 17:54:22.009567 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2bfng" in namespace "gc-4447"
  I0623 17:54:22.024421 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2bgb9" in namespace "gc-4447"
  I0623 17:54:22.037324 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2kbzv" in namespace "gc-4447"
  I0623 17:54:22.051723 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2kfwg" in namespace "gc-4447"
  I0623 17:54:22.065197 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2s2ms" in namespace "gc-4447"
  I0623 17:54:22.077094 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2vntc" in namespace "gc-4447"
  I0623 17:54:22.091017 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4d2fv" in namespace "gc-4447"
  I0623 17:54:22.104287 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4sbpx" in namespace "gc-4447"
  I0623 17:54:22.115204 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-568f8" in namespace "gc-4447"
  I0623 17:54:22.128853 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-64gbh" in namespace "gc-4447"
  I0623 17:54:22.147068 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6g8xb" in namespace "gc-4447"
  I0623 17:54:22.160004 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6h85h" in namespace "gc-4447"
  I0623 17:54:22.176877 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-75m52" in namespace "gc-4447"
  I0623 17:54:22.192562 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7hrdr" in namespace "gc-4447"
  I0623 17:54:22.207285 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7jc7q" in namespace "gc-4447"
  I0623 17:54:22.226606 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7jlxx" in namespace "gc-4447"
  I0623 17:54:22.243087 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qqbv" in namespace "gc-4447"
  I0623 17:54:22.257735 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qtnt" in namespace "gc-4447"
  I0623 17:54:22.273139 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7rltc" in namespace "gc-4447"
  I0623 17:54:22.289273 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7w666" in namespace "gc-4447"
  I0623 17:54:22.301932 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8l9s4" in namespace "gc-4447"
  I0623 17:54:22.316520 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8lg75" in namespace "gc-4447"
  I0623 17:54:22.340109 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8ndkh" in namespace "gc-4447"
  I0623 17:54:22.357478 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8sw8p" in namespace "gc-4447"
  I0623 17:54:22.373574 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bh5r7" in namespace "gc-4447"
  I0623 17:54:22.391102 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bt2rm" in namespace "gc-4447"
  I0623 17:54:22.402142 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bxm9h" in namespace "gc-4447"
  I0623 17:54:22.414544 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cb4b8" in namespace "gc-4447"
  I0623 17:54:22.428140 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdzgj" in namespace "gc-4447"
  I0623 17:54:22.439847 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-crhk9" in namespace "gc-4447"
  I0623 17:54:22.453084 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ctbkt" in namespace "gc-4447"
  I0623 17:54:22.464733 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ctsqn" in namespace "gc-4447"
  I0623 17:54:22.477874 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-czvw5" in namespace "gc-4447"
  I0623 17:54:22.494125 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4mp7" in namespace "gc-4447"
  I0623 17:54:22.506933 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dkkml" in namespace "gc-4447"
  I0623 17:54:22.520660 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dx4hk" in namespace "gc-4447"
  I0623 17:54:22.534999 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f7mt5" in namespace "gc-4447"
  I0623 17:54:22.551409 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gphzs" in namespace "gc-4447"
  I0623 17:54:22.567966 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gpqdv" in namespace "gc-4447"
  I0623 17:54:22.583967 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gsdhk" in namespace "gc-4447"
  I0623 17:54:22.599265 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gvsj6" in namespace "gc-4447"
  I0623 17:54:22.615389 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h2g74" in namespace "gc-4447"
  I0623 17:54:22.637182 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hz8sp" in namespace "gc-4447"
  I0623 17:54:22.662979 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j75mq" in namespace "gc-4447"
  I0623 17:54:22.674316 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jdgcx" in namespace "gc-4447"
  I0623 17:54:22.691022 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jfnpn" in namespace "gc-4447"
  I0623 17:54:22.705357 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jnbm8" in namespace "gc-4447"
  I0623 17:54:22.716745 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jx5df" in namespace "gc-4447"
  I0623 17:54:22.737674 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k6snr" in namespace "gc-4447"
  I0623 17:54:22.754871 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-l5lpc" in namespace "gc-4447"
  I0623 17:54:22.770496 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4447" for this suite. @ 06/23/25 17:54:22.776
• [17.424 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 06/23/25 17:54:22.784
  I0623 17:54:22.784531 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 17:54:22.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:54:22.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:54:22.811
  STEP: Counting existing ResourceQuota @ 06/23/25 17:54:22.819
  STEP: Creating a ResourceQuota @ 06/23/25 17:54:27.827
  STEP: Ensuring resource quota status is calculated @ 06/23/25 17:54:27.834
  I0623 17:54:29.838987 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-332" for this suite. @ 06/23/25 17:54:29.843
• [7.067 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 06/23/25 17:54:29.852
  I0623 17:54:29.852271 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replicaset @ 06/23/25 17:54:29.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:54:29.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:54:29.87
  STEP: Create a Replicaset @ 06/23/25 17:54:29.876
  STEP: Verify that the required pods have come up. @ 06/23/25 17:54:29.882
  I0623 17:54:29.887675 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0623 17:54:34.894017 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/23/25 17:54:34.894
  STEP: Getting /status @ 06/23/25 17:54:34.894
  I0623 17:54:34.897725 20 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/23/25 17:54:34.897
  I0623 17:54:34.909182 20 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/23/25 17:54:34.909
  I0623 17:54:34.910682 20 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0623 17:54:34.910739 20 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0623 17:54:34.910805 20 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0623 17:54:34.910950 20 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0623 17:54:34.910972 20 replica_set.go:688] Found replicaset test-rs in namespace replicaset-4548 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0623 17:54:34.911017 20 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/23/25 17:54:34.911
  I0623 17:54:34.911041 20 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0623 17:54:34.918470 20 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/23/25 17:54:34.918
  I0623 17:54:34.920073 20 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0623 17:54:34.920168 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0623 17:54:34.920228 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0623 17:54:34.920381 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0623 17:54:34.920398 20 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-4548 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0623 17:54:34.920513 20 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0623 17:54:34.920528 20 replica_set.go:724] Found replicaset test-rs in namespace replicaset-4548 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0623 17:54:34.920538 20 replica_set.go:735] Replicaset test-rs has a patched status
  I0623 17:54:34.920619 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4548" for this suite. @ 06/23/25 17:54:34.924
• [5.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 06/23/25 17:54:34.93
  I0623 17:54:34.931000 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubelet-test @ 06/23/25 17:54:34.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:54:34.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:54:34.947
  I0623 17:54:36.986084 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8367" for this suite. @ 06/23/25 17:54:36.99
• [2.066 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 06/23/25 17:54:36.996
  I0623 17:54:36.996659 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:54:36.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:54:37.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:54:37.015
  STEP: Creating configMap with name projected-configmap-test-volume-a9923543-ee33-4d0b-8da8-7eb9b771227d @ 06/23/25 17:54:37.017
  STEP: Creating a pod to test consume configMaps @ 06/23/25 17:54:37.023
  STEP: Saw pod success @ 06/23/25 17:54:41.048
  I0623 17:54:41.051280 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod pod-projected-configmaps-369f7370-372f-4f0a-8f94-22229c42d774 container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 17:54:41.068
  I0623 17:54:41.086853 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8680" for this suite. @ 06/23/25 17:54:41.09
• [4.100 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 06/23/25 17:54:41.096
  I0623 17:54:41.096717 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-probe @ 06/23/25 17:54:41.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:54:41.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:54:41.116
  STEP: Creating pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601 @ 06/23/25 17:54:41.118
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/23/25 17:54:43.137
  I0623 17:54:43.139963 20 container_probe.go:1748] Initial restart count of pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 is 0
  I0623 17:54:43.143826 20 container_probe.go:1758] Get pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601
  I0623 17:54:45.148891 20 container_probe.go:1758] Get pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601
  I0623 17:54:47.153657 20 container_probe.go:1758] Get pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601
  I0623 17:54:49.158960 20 container_probe.go:1758] Get pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601
  I0623 17:54:51.164394 20 container_probe.go:1758] Get pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601
  I0623 17:54:53.169033 20 container_probe.go:1758] Get pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601
  I0623 17:54:55.174142 20 container_probe.go:1758] Get pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601
  I0623 17:54:57.178690 20 container_probe.go:1758] Get pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601
  I0623 17:54:59.184831 20 container_probe.go:1758] Get pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601
  I0623 17:55:01.190800 20 container_probe.go:1758] Get pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601
  I0623 17:55:03.197429 20 container_probe.go:1758] Get pod liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 in namespace container-probe-1601
  I0623 17:55:03.197464 20 container_probe.go:1762] Restart count of pod container-probe-1601/liveness-dc859658-4bc7-4f94-a2e5-e72b2a9794c2 is now 1 (20.057463024s elapsed)
  STEP: deleting the pod @ 06/23/25 17:55:03.197
  I0623 17:55:03.213668 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1601" for this suite. @ 06/23/25 17:55:03.22
• [22.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 06/23/25 17:55:03.234
  I0623 17:55:03.234201 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:55:03.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:55:03.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:55:03.25
  STEP: Creating configMap with name cm-test-opt-del-5947d881-07b0-4cfa-8d2e-42d1579ef2b1 @ 06/23/25 17:55:03.321
  STEP: Creating configMap with name cm-test-opt-upd-53974cc7-da9d-442c-95c3-624e98877f82 @ 06/23/25 17:55:03.329
  STEP: Creating the pod @ 06/23/25 17:55:03.337
  STEP: Deleting configmap cm-test-opt-del-5947d881-07b0-4cfa-8d2e-42d1579ef2b1 @ 06/23/25 17:55:05.384
  STEP: Updating configmap cm-test-opt-upd-53974cc7-da9d-442c-95c3-624e98877f82 @ 06/23/25 17:55:05.391
  STEP: Creating configMap with name cm-test-opt-create-2301ffa9-b833-409c-a9c2-717297522a6e @ 06/23/25 17:55:05.397
  STEP: waiting to observe update in volume @ 06/23/25 17:55:05.402
  I0623 17:56:29.806458 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3578" for this suite. @ 06/23/25 17:56:29.81
• [86.585 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 06/23/25 17:56:29.819
  I0623 17:56:29.819449 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename namespaces @ 06/23/25 17:56:29.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:56:29.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:56:29.837
  STEP: Updating Namespace "namespaces-6184" @ 06/23/25 17:56:29.84
  I0623 17:56:29.848623 20 namespace.go:390] Namespace "namespaces-6184" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"e12fcd82-432c-4555-85ff-7efffbce958d", "kubernetes.io/metadata.name":"namespaces-6184", "namespaces-6184":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0623 17:56:29.848695 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6184" for this suite. @ 06/23/25 17:56:29.911
• [0.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 06/23/25 17:56:29.918
  I0623 17:56:29.918736 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 17:56:29.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:56:29.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:56:29.936
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 17:56:29.939
  STEP: Saw pod success @ 06/23/25 17:56:33.96
  I0623 17:56:33.965078 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod downwardapi-volume-f47d97ea-c963-4604-8ed5-9eb93b97d882 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 17:56:33.977
  I0623 17:56:33.997585 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7767" for this suite. @ 06/23/25 17:56:34.001
• [4.089 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 06/23/25 17:56:34.007
  I0623 17:56:34.007408 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:56:34.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:56:34.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:56:34.036
  STEP: Setting up server cert @ 06/23/25 17:56:34.06
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:56:34.34
  STEP: Deploying the webhook pod @ 06/23/25 17:56:34.347
  STEP: Wait for the deployment to be ready @ 06/23/25 17:56:34.363
  I0623 17:56:34.370035 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:56:36.384
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:56:36.4
  I0623 17:56:37.401040 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0623 17:56:37.406332 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3009-crds.webhook.example.com via the AdmissionRegistration API @ 06/23/25 17:56:37.916
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/23/25 17:56:37.93
  I0623 17:56:40.527410 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4202" for this suite. @ 06/23/25 17:56:40.531
  STEP: Destroying namespace "webhook-markers-6917" for this suite. @ 06/23/25 17:56:40.539
• [6.539 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 06/23/25 17:56:40.546
  I0623 17:56:40.546549 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 17:56:40.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:56:40.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:56:40.564
  STEP: Setting up server cert @ 06/23/25 17:56:40.587
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 17:56:40.827
  STEP: Deploying the webhook pod @ 06/23/25 17:56:40.835
  STEP: Wait for the deployment to be ready @ 06/23/25 17:56:40.85
  I0623 17:56:40.857351 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 17:56:42.875
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 17:56:42.89
  I0623 17:56:43.890494 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/23/25 17:56:43.896
  STEP: create a pod @ 06/23/25 17:56:43.909
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/23/25 17:56:45.93
  I0623 17:56:45.930878 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=webhook-3848 attach --namespace=webhook-3848 to-be-attached-pod -i -c=container1'
  I0623 17:56:45.992014 20 builder.go:135] rc: 1
  I0623 17:56:46.047493 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3848" for this suite. @ 06/23/25 17:56:46.053
  STEP: Destroying namespace "webhook-markers-4224" for this suite. @ 06/23/25 17:56:46.061
• [5.524 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/23/25 17:56:46.07
  I0623 17:56:46.070330 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-runtime @ 06/23/25 17:56:46.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:56:46.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:56:46.086
  STEP: create the container @ 06/23/25 17:56:46.088
  I0623 17:56:46.096862      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 06/23/25 17:56:46.096
  STEP: get the container status @ 06/23/25 17:56:49.117
  STEP: the container should be terminated @ 06/23/25 17:56:49.12
  STEP: the termination message should be set @ 06/23/25 17:56:49.12
  I0623 17:56:49.120677 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/23/25 17:56:49.12
  I0623 17:56:49.137388 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2074" for this suite. @ 06/23/25 17:56:49.141
• [3.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 06/23/25 17:56:49.149
  I0623 17:56:49.149895 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubelet-test @ 06/23/25 17:56:49.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:56:49.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:56:49.165
  I0623 17:56:53.189570 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1922" for this suite. @ 06/23/25 17:56:53.193
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/23/25 17:56:53.201
  I0623 17:56:53.201073 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pods @ 06/23/25 17:56:53.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:56:53.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:56:53.22
  STEP: creating the pod @ 06/23/25 17:56:53.222
  STEP: submitting the pod to kubernetes @ 06/23/25 17:56:53.223
  I0623 17:56:53.232342      20 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: verifying the pod is in kubernetes @ 06/23/25 17:56:55.245
  STEP: updating the pod @ 06/23/25 17:56:55.249
  I0623 17:56:55.763596 20 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-460c78e4-5487-4b6f-ab0f-84d7ef40bdf2"
  I0623 17:56:59.776443 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7120" for this suite. @ 06/23/25 17:56:59.782
• [6.589 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 06/23/25 17:56:59.79
  I0623 17:56:59.790196 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:56:59.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:56:59.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:56:59.807
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 17:56:59.809
  STEP: Saw pod success @ 06/23/25 17:57:03.837
  I0623 17:57:03.841632 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-4faf1cb3-9ee4-4ed5-a66b-ae2ecd95656e container client-container: <nil>
  STEP: delete the pod @ 06/23/25 17:57:03.849
  I0623 17:57:03.869332 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1324" for this suite. @ 06/23/25 17:57:03.873
• [4.090 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 06/23/25 17:57:03.88
  I0623 17:57:03.880029 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 17:57:03.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:03.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:03.897
  STEP: creating service in namespace services-767 @ 06/23/25 17:57:03.899
  STEP: creating service affinity-clusterip in namespace services-767 @ 06/23/25 17:57:03.899
  I0623 17:57:03.931689 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0623 17:57:05.953395 20 resource.go:361] Creating new exec pod
  I0623 17:57:07.976419 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-767 exec execpod-affinitydwmn5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0623 17:57:08.076468 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.152.183.54) 80 port [tcp/http] succeeded!\n"
  I0623 17:57:08.076502 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:57:08.076556 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-767 exec execpod-affinitydwmn5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.54 80'
  I0623 17:57:08.151851 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.54 80\nConnection to 10.152.183.54 80 port [tcp/http] succeeded!\n"
  I0623 17:57:08.151886 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:57:08.151935 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-767 exec execpod-affinitydwmn5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/ ; done'
  I0623 17:57:08.275662 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.54:80/\n"
  I0623 17:57:08.275716 20 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl\naffinity-clusterip-6dd57cf8dc-xt2sl"
  I0623 17:57:08.275729 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275738 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275746 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275752 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275758 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275764 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275770 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275793 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275801 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275811 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275821 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275843 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275850 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275855 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275861 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.275867 20 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-xt2sl
  I0623 17:57:08.276046 20 service.go:4352] Cleaning up the exec pod
  I0623 17:57:08.325936 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-767" for this suite. @ 06/23/25 17:57:08.33
• [4.462 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 06/23/25 17:57:08.342
  I0623 17:57:08.342563 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename var-expansion @ 06/23/25 17:57:08.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:08.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:08.362
  I0623 17:57:10.386210 20 delete.go:62] Deleting pod "var-expansion-be4427ae-475a-4879-aed9-ed8db0686bed" in namespace "var-expansion-5458"
  I0623 17:57:10.396893 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-be4427ae-475a-4879-aed9-ed8db0686bed" to be fully deleted
  I0623 17:57:12.406178 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5458" for this suite. @ 06/23/25 17:57:12.411
• [4.076 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 06/23/25 17:57:12.419
  I0623 17:57:12.419224 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename fake-node @ 06/23/25 17:57:12.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:12.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:12.436
  STEP: Create "e2e-fake-node-4ztxp" @ 06/23/25 17:57:12.439
  STEP: Getting "e2e-fake-node-4ztxp" @ 06/23/25 17:57:12.446
  STEP: Patching "e2e-fake-node-4ztxp" @ 06/23/25 17:57:12.448
  STEP: Listing nodes with LabelSelector "e2e-fake-node-4ztxp=patched" @ 06/23/25 17:57:12.453
  STEP: Updating "e2e-fake-node-4ztxp" @ 06/23/25 17:57:12.455
  STEP: Delete "e2e-fake-node-4ztxp" @ 06/23/25 17:57:12.487
  STEP: Confirm deletion of "e2e-fake-node-4ztxp" @ 06/23/25 17:57:12.495
  I0623 17:57:12.499074 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-3040" for this suite. @ 06/23/25 17:57:12.504
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 06/23/25 17:57:12.512
  I0623 17:57:12.512742 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:57:12.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:12.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:12.529
  STEP: Creating configMap with name projected-configmap-test-volume-map-927ffc14-6e0a-45b0-a75e-eb2349b71cbe @ 06/23/25 17:57:12.532
  STEP: Creating a pod to test consume configMaps @ 06/23/25 17:57:12.536
  STEP: Saw pod success @ 06/23/25 17:57:14.558
  I0623 17:57:14.561968 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-configmaps-23b5b394-7ced-4a22-9543-066fd3a61131 container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 17:57:14.568
  I0623 17:57:14.589619 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2755" for this suite. @ 06/23/25 17:57:14.593
• [2.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 06/23/25 17:57:14.6
  I0623 17:57:14.600557 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 17:57:14.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:14.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:14.621
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 17:57:14.624
  STEP: Saw pod success @ 06/23/25 17:57:16.643
  I0623 17:57:16.647068 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-9403d014-61c2-4bad-96bb-7c561045823f container client-container: <nil>
  STEP: delete the pod @ 06/23/25 17:57:16.654
  I0623 17:57:16.676268 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1245" for this suite. @ 06/23/25 17:57:16.68
• [2.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 06/23/25 17:57:16.687
  I0623 17:57:16.687298 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename svcaccounts @ 06/23/25 17:57:16.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:16.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:16.704
  STEP: Creating ServiceAccount "e2e-sa-2zrmk"  @ 06/23/25 17:57:16.707
  I0623 17:57:16.713047 20 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-2zrmk"  @ 06/23/25 17:57:16.713
  I0623 17:57:16.721179 20 service_accounts.go:867] AutomountServiceAccountToken: true
  I0623 17:57:16.721308 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9457" for this suite. @ 06/23/25 17:57:16.781
• [0.102 seconds]
------------------------------
SS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 06/23/25 17:57:16.789
  I0623 17:57:16.789563 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename servicecidr @ 06/23/25 17:57:16.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:16.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:16.806
  STEP: creating @ 06/23/25 17:57:16.808
  STEP: patching @ 06/23/25 17:57:16.819
  STEP: updating @ 06/23/25 17:57:16.824
  STEP: getting @ 06/23/25 17:57:16.833
  STEP: listing @ 06/23/25 17:57:16.836
  STEP: watching @ 06/23/25 17:57:16.839
  STEP: deleting @ 06/23/25 17:57:16.84
  STEP: deleting a collection @ 06/23/25 17:57:16.847
  I0623 17:57:16.864399 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-5942" for this suite. @ 06/23/25 17:57:16.881
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 06/23/25 17:57:16.889
  I0623 17:57:16.889848 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 17:57:16.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:16.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:16.906
  STEP: Creating a pod to test downward api env vars @ 06/23/25 17:57:16.908
  STEP: Saw pod success @ 06/23/25 17:57:20.933
  I0623 17:57:20.937750 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downward-api-2e08b18b-55a0-4874-8f7a-6110b661811b container dapi-container: <nil>
  STEP: delete the pod @ 06/23/25 17:57:20.945
  I0623 17:57:20.966234 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3011" for this suite. @ 06/23/25 17:57:20.971
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 06/23/25 17:57:20.98
  I0623 17:57:20.980096 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename proxy @ 06/23/25 17:57:20.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:20.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:20.997
  I0623 17:57:20.999915 20 proxy.go:336] Creating pod...
  I0623 17:57:23.017597 20 proxy.go:360] Creating service...
  I0623 17:57:23.035234 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/pods/agnhost/proxy/some/path/with/DELETE
  I0623 17:57:23.040585 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0623 17:57:23.040611 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/pods/agnhost/proxy/some/path/with/GET
  I0623 17:57:23.044790 20 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0623 17:57:23.044814 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/pods/agnhost/proxy/some/path/with/HEAD
  I0623 17:57:23.048523 20 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0623 17:57:23.048547 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/pods/agnhost/proxy/some/path/with/OPTIONS
  I0623 17:57:23.054344 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0623 17:57:23.054377 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/pods/agnhost/proxy/some/path/with/PATCH
  I0623 17:57:23.058442 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0623 17:57:23.058465 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/pods/agnhost/proxy/some/path/with/POST
  I0623 17:57:23.062313 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0623 17:57:23.062336 20 proxy.go:397] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/pods/agnhost/proxy/some/path/with/PUT
  I0623 17:57:23.065847 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0623 17:57:23.065870 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/services/test-service/proxy/some/path/with/DELETE
  I0623 17:57:23.072542 20 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0623 17:57:23.072567 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/services/test-service/proxy/some/path/with/GET
  I0623 17:57:23.077272 20 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0623 17:57:23.077309 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/services/test-service/proxy/some/path/with/HEAD
  I0623 17:57:23.083394 20 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0623 17:57:23.083414 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/services/test-service/proxy/some/path/with/OPTIONS
  I0623 17:57:23.090979 20 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0623 17:57:23.091006 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/services/test-service/proxy/some/path/with/PATCH
  I0623 17:57:23.096183 20 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0623 17:57:23.096209 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/services/test-service/proxy/some/path/with/POST
  I0623 17:57:23.102433 20 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0623 17:57:23.102458 20 proxy.go:408] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7516/services/test-service/proxy/some/path/with/PUT
  I0623 17:57:23.109202 20 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0623 17:57:23.109320 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7516" for this suite. @ 06/23/25 17:57:23.113
• [2.141 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 06/23/25 17:57:23.121
  I0623 17:57:23.121355 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 17:57:23.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:23.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:23.141
  STEP: creating service endpoint-test2 in namespace services-5844 @ 06/23/25 17:57:23.143
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5844 to expose endpoints map[] @ 06/23/25 17:57:23.159
  I0623 17:57:23.162922      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:57:23.162955 20 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0623 17:57:24.168435      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:57:24.174459 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5844 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5844 @ 06/23/25 17:57:24.174
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5844 to expose endpoints map[pod1:[80]] @ 06/23/25 17:57:26.195
  I0623 17:57:26.201301      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:57:26.205538 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5844 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/23/25 17:57:26.205
  I0623 17:57:26.205578 20 resource.go:361] Creating new exec pod
  I0623 17:57:28.222977 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-5844 exec execpodf29ch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0623 17:57:28.340288 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.175) 80 port [tcp/http] succeeded!\n"
  I0623 17:57:28.340335 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:57:28.340423 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-5844 exec execpodf29ch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.175 80'
  I0623 17:57:28.446880 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.175 80\nConnection to 10.152.183.175 80 port [tcp/http] succeeded!\n"
  I0623 17:57:28.446929 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5844 @ 06/23/25 17:57:28.446
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5844 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/23/25 17:57:30.468
  I0623 17:57:30.480216      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:57:30.485492 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5844 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/23/25 17:57:30.485
  I0623 17:57:30.488463 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-5844 exec execpodf29ch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0623 17:57:30.570915 20 builder.go:146] stderr: "+ + nc -v -t -w 2 endpoint-test2 80\necho hostName\nConnection to endpoint-test2 (10.152.183.175) 80 port [tcp/http] succeeded!\n"
  I0623 17:57:30.570949 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:57:30.571000 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-5844 exec execpodf29ch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.175 80'
  I0623 17:57:30.647736 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.175 80\nConnection to 10.152.183.175 80 port [tcp/http] succeeded!\n"
  I0623 17:57:30.647765 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5844 @ 06/23/25 17:57:30.647
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5844 to expose endpoints map[pod2:[80]] @ 06/23/25 17:57:30.667
  I0623 17:57:30.678027      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:57:30.683373 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5844 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/23/25 17:57:30.683
  I0623 17:57:30.687213 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-5844 exec execpodf29ch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0623 17:57:30.792897 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.175) 80 port [tcp/http] succeeded!\n"
  I0623 17:57:30.792932 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 17:57:30.792986 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-5844 exec execpodf29ch -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.175 80'
  I0623 17:57:30.907035 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.175 80\nConnection to 10.152.183.175 80 port [tcp/http] succeeded!\n"
  I0623 17:57:30.907067 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5844 @ 06/23/25 17:57:30.907
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5844 to expose endpoints map[] @ 06/23/25 17:57:30.924
  I0623 17:57:30.929033      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:57:31.939100      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 17:57:31.944464 20 service.go:4645] successfully validated that service endpoint-test2 in namespace services-5844 exposes endpoints map[]
  I0623 17:57:31.970945 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5844" for this suite. @ 06/23/25 17:57:31.975
• [8.864 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 06/23/25 17:57:31.985
  I0623 17:57:31.985805 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 17:57:31.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:32.002
  STEP: validating cluster-info @ 06/23/25 17:57:32.004
  I0623 17:57:32.004909 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-2980 cluster-info'
  I0623 17:57:32.049236 20 builder.go:146] stderr: ""
  I0623 17:57:32.049260 20 builder.go:147] stdout: "Kubernetes control plane is running at https://10.152.183.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0623 17:57:32.049436 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2980" for this suite. @ 06/23/25 17:57:32.077
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 06/23/25 17:57:32.086
  I0623 17:57:32.086313 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-probe @ 06/23/25 17:57:32.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:32.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:32.107
  I0623 17:57:56.193909 20 container_probe.go:91] Container started at 2025-06-23 17:57:32 +0000 UTC, pod became ready at 2025-06-23 17:57:54 +0000 UTC
  I0623 17:57:56.194023 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2930" for this suite. @ 06/23/25 17:57:56.199
• [24.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 06/23/25 17:57:56.209
  I0623 17:57:56.209769 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 17:57:56.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:57:56.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:57:56.229
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 06/23/25 17:57:56.231
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 06/23/25 17:57:56.238
  STEP: Verifying the Job status fields to ensure early termination of the job @ 06/23/25 17:58:00.252
  I0623 17:58:00.255381 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6640" for this suite. @ 06/23/25 17:58:00.259
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/23/25 17:58:00.268
  I0623 17:58:00.268850 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename watch @ 06/23/25 17:58:00.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:58:00.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:58:00.288
  STEP: creating a watch on configmaps @ 06/23/25 17:58:00.29
  STEP: creating a new configmap @ 06/23/25 17:58:00.291
  STEP: modifying the configmap once @ 06/23/25 17:58:00.295
  STEP: closing the watch once it receives two notifications @ 06/23/25 17:58:00.303
  I0623 17:58:00.304060 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1468  444684ee-92a8-4d55-90c5-bda822ad3a59 45603 0 2025-06-23 17:58:00 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-06-23 17:58:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 17:58:00.304159 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1468  444684ee-92a8-4d55-90c5-bda822ad3a59 45605 0 2025-06-23 17:58:00 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-06-23 17:58:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/23/25 17:58:00.304
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/23/25 17:58:00.313
  STEP: deleting the configmap @ 06/23/25 17:58:00.314
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/23/25 17:58:00.319
  I0623 17:58:00.320044 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1468  444684ee-92a8-4d55-90c5-bda822ad3a59 45606 0 2025-06-23 17:58:00 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-06-23 17:58:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 17:58:00.320191 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1468  444684ee-92a8-4d55-90c5-bda822ad3a59 45607 0 2025-06-23 17:58:00 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-06-23 17:58:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0623 17:58:00.320358 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1468" for this suite. @ 06/23/25 17:58:00.36
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 06/23/25 17:58:00.369
  I0623 17:58:00.369709 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 17:58:00.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:58:00.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:58:00.39
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1349 @ 06/23/25 17:58:00.392
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/23/25 17:58:00.408
  STEP: creating service externalsvc in namespace services-1349 @ 06/23/25 17:58:00.408
  I0623 17:58:00.440255 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the ClusterIP service to type=ExternalName @ 06/23/25 17:58:02.458
  I0623 17:58:02.476719 20 resource.go:361] Creating new exec pod
  I0623 17:58:04.501329 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-1349 exec execpod85b4k -- /bin/sh -x -c nslookup clusterip-service.services-1349.svc.cluster.local'
  I0623 17:58:04.608759 20 builder.go:146] stderr: "+ nslookup clusterip-service.services-1349.svc.cluster.local\n"
  I0623 17:58:04.608815 20 builder.go:147] stdout: "Server:\t\t10.152.183.127\nAddress:\t10.152.183.127#53\n\nclusterip-service.services-1349.svc.cluster.local\tcanonical name = externalsvc.services-1349.svc.cluster.local.\nName:\texternalsvc.services-1349.svc.cluster.local\nAddress: 10.152.183.38\n\n"
  I0623 17:58:04.648318 20 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0623 17:58:04.665936 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1349" for this suite. @ 06/23/25 17:58:04.67
• [4.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 06/23/25 17:58:04.677
  I0623 17:58:04.677291 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename chunking @ 06/23/25 17:58:04.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:58:04.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:58:04.693
  STEP: creating a large number of resources @ 06/23/25 17:58:04.695
  STEP: retrieving those results in paged fashion several times @ 06/23/25 17:58:22.384
  I0623 17:58:22.435277 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0623 17:58:22.482704 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0623 17:58:22.533474 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0623 17:58:22.583529 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0623 17:58:22.633053 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0623 17:58:22.683491 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0623 17:58:22.734005 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0623 17:58:22.782468 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0623 17:58:22.834105 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0623 17:58:22.882959 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0623 17:58:22.932433 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0623 17:58:22.984127 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0623 17:58:23.033151 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0623 17:58:23.082255 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0623 17:58:23.134104 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0623 17:58:23.182956 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0623 17:58:23.232579 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0623 17:58:23.283355 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0623 17:58:23.333063 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0623 17:58:23.382272 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0623 17:58:23.433886 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0623 17:58:23.482737 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0623 17:58:23.532896 20 chunking.go:98] Retrieved 17/17 results with rv 46219 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMTksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0623 17:58:23.583312 20 chunking.go:98] Retrieved 9/17 results with rv 46219 and continue 
  I0623 17:58:23.636037 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0623 17:58:23.684128 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0623 17:58:23.733303 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0623 17:58:23.785599 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0623 17:58:23.834104 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0623 17:58:23.882954 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0623 17:58:23.932469 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0623 17:58:23.984140 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0623 17:58:24.032614 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0623 17:58:24.083060 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0623 17:58:24.133473 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0623 17:58:24.182685 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0623 17:58:24.232353 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0623 17:58:24.282893 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0623 17:58:24.333099 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0623 17:58:24.382532 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0623 17:58:24.434249 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0623 17:58:24.482857 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0623 17:58:24.532183 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0623 17:58:24.583431 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0623 17:58:24.633667 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0623 17:58:24.682084 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0623 17:58:24.733705 20 chunking.go:98] Retrieved 17/17 results with rv 46222 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0623 17:58:24.782227 20 chunking.go:98] Retrieved 9/17 results with rv 46222 and continue 
  I0623 17:58:24.835883 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0623 17:58:24.882577 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0623 17:58:24.933087 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0623 17:58:24.983526 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0623 17:58:25.033550 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0623 17:58:25.082990 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0623 17:58:25.133526 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0623 17:58:25.183381 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0623 17:58:25.233121 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0623 17:58:25.283823 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0623 17:58:25.332630 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0623 17:58:25.382269 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0623 17:58:25.433604 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0623 17:58:25.483507 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0623 17:58:25.533301 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0623 17:58:25.584097 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0623 17:58:25.632673 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0623 17:58:25.681748 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0623 17:58:25.733093 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0623 17:58:25.782893 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0623 17:58:25.832333 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0623 17:58:25.884083 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0623 17:58:25.932468 20 chunking.go:98] Retrieved 17/17 results with rv 46224 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYyMjQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0623 17:58:25.982157 20 chunking.go:98] Retrieved 9/17 results with rv 46224 and continue 
  STEP: retrieving those results all at once @ 06/23/25 17:58:25.982
  I0623 17:58:26.046598 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5653" for this suite. @ 06/23/25 17:58:26.083
• [21.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 06/23/25 17:58:26.136
  I0623 17:58:26.136601 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename security-context-test @ 06/23/25 17:58:26.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:58:26.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:58:26.153
  I0623 17:58:30.183148 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8527" for this suite. @ 06/23/25 17:58:30.188
• [4.060 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 06/23/25 17:58:30.196
  I0623 17:58:30.196626 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replicaset @ 06/23/25 17:58:30.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:58:30.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:58:30.217
  I0623 17:58:30.234138 20 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0623 17:58:35.240031 20 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/23/25 17:58:35.24
  STEP: Scaling up "test-rs" replicaset @ 06/23/25 17:58:35.24
  I0623 17:58:35.248873 20 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/23/25 17:58:35.248
  I0623 17:58:35.261445 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8532 with ReadyReplicas 1, AvailableReplicas 1
  I0623 17:58:35.281059 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8532 with ReadyReplicas 1, AvailableReplicas 1
  I0623 17:58:35.300153 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8532 with ReadyReplicas 1, AvailableReplicas 1
  I0623 17:58:35.307364 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8532 with ReadyReplicas 1, AvailableReplicas 1
  I0623 17:58:36.744671 20 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-8532 with ReadyReplicas 2, AvailableReplicas 2
  I0623 17:58:36.934880 20 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-8532 with ReadyReplicas 3 found true
  I0623 17:58:36.935015 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8532" for this suite. @ 06/23/25 17:58:36.94
• [6.750 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 06/23/25 17:58:36.946
  I0623 17:58:36.946738 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 17:58:36.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:58:36.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:58:36.966
  STEP: Creating configMap configmap-5203/configmap-test-4c09e477-bd62-4a4c-ab38-e5e7952f87e7 @ 06/23/25 17:58:36.968
  STEP: Creating a pod to test consume configMaps @ 06/23/25 17:58:36.972
  STEP: Saw pod success @ 06/23/25 17:58:40.996
  I0623 17:58:41.000152 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-configmaps-c689e98a-8a0b-4b31-aaf3-e234342d5404 container env-test: <nil>
  STEP: delete the pod @ 06/23/25 17:58:41.006
  I0623 17:58:41.025509 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5203" for this suite. @ 06/23/25 17:58:41.03
• [4.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 06/23/25 17:58:41.036
  I0623 17:58:41.036675 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename csi-storageclass @ 06/23/25 17:58:41.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:58:41.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:58:41.05
  STEP: Creating a StorageClass @ 06/23/25 17:58:41.053
  STEP: Get StorageClass "e2e-cjsd7" @ 06/23/25 17:58:41.057
  STEP: Patching the StorageClass "e2e-cjsd7" @ 06/23/25 17:58:41.061
  STEP: Delete StorageClass "e2e-cjsd7" @ 06/23/25 17:58:41.068
  STEP: Confirm deletion of StorageClass "e2e-cjsd7" @ 06/23/25 17:58:41.074
  STEP: Create a replacement StorageClass @ 06/23/25 17:58:41.078
  STEP: Updating StorageClass "e2e-v2-fx8mg" @ 06/23/25 17:58:41.082
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-fx8mg=updated" @ 06/23/25 17:58:41.091
  STEP: Deleting StorageClass "e2e-v2-fx8mg" via DeleteCollection @ 06/23/25 17:58:41.094
  STEP: Confirm deletion of StorageClass "e2e-v2-fx8mg" @ 06/23/25 17:58:41.105
  I0623 17:58:41.108851 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8802" for this suite. @ 06/23/25 17:58:41.13
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/23/25 17:58:41.138
  I0623 17:58:41.138259 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename deployment @ 06/23/25 17:58:41.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:58:41.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:58:41.154
  I0623 17:58:41.167377 20 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  I0623 17:58:46.172529 20 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/23/25 17:58:46.172
  I0623 17:58:46.172593 20 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0623 17:58:48.177138 20 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0623 17:58:48.187384 20 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0623 17:58:50.195374 20 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0623 17:58:50.205374 20 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0623 17:58:50.210917 20 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0623 17:58:50.220442 20 deployment.go:314] Updating deployment test-rollover-deployment
  I0623 17:58:50.220470 20 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0623 17:58:52.229552 20 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0623 17:58:52.237132 20 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0623 17:58:52.244085 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0623 17:58:52.244124 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 17, 58, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 17:58:54.253380 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0623 17:58:54.253442 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 17, 58, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 17:58:56.252350 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0623 17:58:56.252413 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 17, 58, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 17:58:58.253644 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0623 17:58:58.253698 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 17, 58, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 17:59:00.251708 20 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0623 17:59:00.251767 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 17, 58, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 17, 58, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0623 17:59:02.254090 20 deployment.go:95] 
  I0623 17:59:02.254137 20 deployment.go:993] Ensure that both old replica sets have no replicas
  I0623 17:59:02.264981 20 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5641",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "540397a6-a91c-4952-a497-2b725d8a033a",
      ResourceVersion: (string) (len=5) "46986",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298328,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0623 17:59:02.269648 20 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5641",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fbae88a-abf9-4968-bb6a-d3667add672d",
      ResourceVersion: (string) (len=5) "46976",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298330,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "540397a6-a91c-4952-a497-2b725d8a033a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 34 30 33 39 37  61 36 2d 61 39 31 63 2d  |\"540397a6-a91c-|
              00000120  34 39 35 32 2d 61 34 39  37 2d 32 62 37 32 35 64  |4952-a497-2b725d|
              00000130  38 61 30 33 33 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8a033a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 17:59:02.270161 20 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0623 17:59:02.270358 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5641",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "366ecd74-5f0b-4140-b55f-9e84ad961bdd",
      ResourceVersion: (string) (len=5) "46985",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298321,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "540397a6-a91c-4952-a497-2b725d8a033a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 34 30 33 39 37 61 36  2d 61 39 31 63 2d 34 39  |540397a6-a91c-49|
              000000c0  35 32 2d 61 34 39 37 2d  32 62 37 32 35 64 38 61  |52-a497-2b725d8a|
              000000d0  30 33 33 61 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |033a\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298341,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 17:59:02.272027 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5641",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a760c73-c0e5-4e74-8a73-029ee44506ec",
      ResourceVersion: (string) (len=5) "46933",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298328,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "540397a6-a91c-4952-a497-2b725d8a033a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 34 30 33 39 37  61 36 2d 61 39 31 63 2d  |\"540397a6-a91c-|
              00000120  34 39 35 32 2d 61 34 39  37 2d 32 62 37 32 35 64  |4952-a497-2b725d|
              00000130  38 61 30 33 33 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8a033a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 17:59:02.277388 20 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-txdr8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-txdr8",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-5641",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa1f7588-ab71-49ec-865f-2411e2c4b68b",
      ResourceVersion: (string) (len=5) "46953",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298330,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "9fbae88a-abf9-4968-bb6a-d3667add672d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  62 61 65 38 38 61 2d 61  |d\":\"9fbae88a-a|
              00000090  62 66 39 2d 34 39 36 38  2d 62 62 36 61 2d 64 33  |bf9-4968-bb6a-d3|
              000000a0  36 36 37 61 64 64 36 37  32 64 5c 22 7d 22 3a 7b  |667add672d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 36 39 5c 22 7d 22  |2.168.156.69\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6rls6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6rls6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=14) "192.168.156.69",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.156.69"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298330,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298330,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://1d0c638891cb1b1beb7076566b603ed116d2066adc45ed01c93202e420ecc181",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6rls6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 17:59:02.278543 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5641" for this suite. @ 06/23/25 17:59:02.282
• [21.150 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 06/23/25 17:59:02.288
  I0623 17:59:02.288905 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename secrets @ 06/23/25 17:59:02.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:59:02.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:59:02.305
  STEP: Creating secret with name secret-test-04fd5e52-3c60-45d3-8cb4-4c3b4c848461 @ 06/23/25 17:59:02.307
  STEP: Creating a pod to test consume secrets @ 06/23/25 17:59:02.313
  STEP: Saw pod success @ 06/23/25 17:59:06.34
  I0623 17:59:06.343507 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-secrets-7ea38aea-4a6c-455c-b152-691a78cfe94d container secret-env-test: <nil>
  STEP: delete the pod @ 06/23/25 17:59:06.351
  I0623 17:59:06.371171 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6857" for this suite. @ 06/23/25 17:59:06.375
• [4.094 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 06/23/25 17:59:06.382
  I0623 17:59:06.382946 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sched-preemption @ 06/23/25 17:59:06.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 17:59:06.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 17:59:06.399
  I0623 17:59:06.414169 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0623 18:00:06.419730 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 06/23/25 18:00:06.423
  STEP: Adding a custom resource @ 06/23/25 18:00:06.423
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 06/23/25 18:00:06.431
  I0623 18:00:06.443694 20 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 06/23/25 18:00:06.443
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 06/23/25 18:00:08.451
  I0623 18:00:08.459325 20 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 06/23/25 18:00:08.459
  STEP: Verifying the pod has the pod disruption condition @ 06/23/25 18:00:10.467
  I0623 18:00:10.471380 20 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0623 18:00:10.985907 20 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 06/23/25 18:00:11.007
  STEP: Removing a custom resource @ 06/23/25 18:00:11.02
  STEP: Removing a custom resource @ 06/23/25 18:00:11.028
  I0623 18:00:11.036095 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4637" for this suite. @ 06/23/25 18:00:11.039
• [64.665 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 06/23/25 18:00:11.047
  I0623 18:00:11.047517 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename endpointslice @ 06/23/25 18:00:11.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:11.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:00:11.066
  STEP: referencing a single matching pod @ 06/23/25 18:00:13.148
  I0623 18:00:13.157632      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 06/23/25 18:00:13.157
  I0623 18:00:13.163699      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/23/25 18:00:13.163
  I0623 18:00:13.169920      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 06/23/25 18:00:13.169
  I0623 18:00:13.188330 20 endpointslice.go:938] EndpointSlice for Service endpointslice-7266/example-named-port not found
  I0623 18:00:15.194335      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 18:00:15.194480 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7266" for this suite. @ 06/23/25 18:00:15.199
• [4.160 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 06/23/25 18:00:15.207
  I0623 18:00:15.207532 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename field-validation @ 06/23/25 18:00:15.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:15.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:00:15.225
  I0623 18:00:15.227583 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  W0623 18:00:15.228147      20 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000ff62e0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  I0623 18:00:17.761581      20 warnings.go:110] "Warning: unknown field \"alpha\""
  I0623 18:00:17.761603      20 warnings.go:110] "Warning: unknown field \"beta\""
  I0623 18:00:17.761611      20 warnings.go:110] "Warning: unknown field \"delta\""
  I0623 18:00:17.761617      20 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0623 18:00:17.761625      20 warnings.go:110] "Warning: unknown field \"gamma\""
  I0623 18:00:18.303265 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6807" for this suite. @ 06/23/25 18:00:18.306
• [3.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 06/23/25 18:00:18.315
  I0623 18:00:18.315196 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename security-context-test @ 06/23/25 18:00:18.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:18.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:00:18.33
  I0623 18:00:22.372164 20 security_context.go:619] Got logs for pod "busybox-privileged-false-e17ef926-9911-4d54-b36d-baecbc1ab397": "ip: RTNETLINK answers: Operation not permitted\n"
  I0623 18:00:22.372282 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5035" for this suite. @ 06/23/25 18:00:22.376
• [4.069 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 06/23/25 18:00:22.384
  I0623 18:00:22.384075 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/23/25 18:00:22.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:22.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:00:22.398
  I0623 18:00:22.400673 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  I0623 18:00:28.595340 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3456" for this suite. @ 06/23/25 18:00:28.598
• [6.222 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 06/23/25 18:00:28.606
  I0623 18:00:28.606454 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename containers @ 06/23/25 18:00:28.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:28.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:00:28.623
  STEP: Creating a pod to test override command @ 06/23/25 18:00:28.625
  STEP: Saw pod success @ 06/23/25 18:00:32.649
  I0623 18:00:32.652220 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod client-containers-bf41ba66-11b9-4480-9425-06f35de24083 container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 18:00:32.666
  I0623 18:00:32.687115 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9306" for this suite. @ 06/23/25 18:00:32.691
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/23/25 18:00:32.708
  I0623 18:00:32.708758 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/23/25 18:00:32.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:32.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:00:32.728
  STEP: mirroring a new custom Endpoint @ 06/23/25 18:00:32.748
  I0623 18:00:32.754169      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 18:00:32.757908 20 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 06/23/25 18:00:34.762
  I0623 18:00:34.768216      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 06/23/25 18:00:34.775
  I0623 18:00:34.782698      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 18:00:34.790369 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6545" for this suite. @ 06/23/25 18:00:34.794
• [2.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 06/23/25 18:00:34.801
  I0623 18:00:34.801482 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 18:00:34.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:34.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:00:34.818
  STEP: Setting up server cert @ 06/23/25 18:00:34.841
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 18:00:35.081
  STEP: Deploying the webhook pod @ 06/23/25 18:00:35.087
  STEP: Wait for the deployment to be ready @ 06/23/25 18:00:35.1
  I0623 18:00:35.110061 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 18:00:37.124
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 18:00:37.136
  I0623 18:00:38.136683 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/23/25 18:00:38.142
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/23/25 18:00:38.157
  STEP: Creating a dummy validating-webhook-configuration object @ 06/23/25 18:00:38.17
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/23/25 18:00:38.18
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/23/25 18:00:38.185
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/23/25 18:00:38.195
  I0623 18:00:38.257953 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2797" for this suite. @ 06/23/25 18:00:38.264
  STEP: Destroying namespace "webhook-markers-3223" for this suite. @ 06/23/25 18:00:38.269
• [3.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/23/25 18:00:38.276
  I0623 18:00:38.276012 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 18:00:38.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:38.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:00:38.29
  STEP: Creating projection with secret that has name projected-secret-test-map-373ebb05-6cd3-407e-b312-a7884beaef24 @ 06/23/25 18:00:38.292
  STEP: Creating a pod to test consume secrets @ 06/23/25 18:00:38.297
  STEP: Saw pod success @ 06/23/25 18:00:42.319
  I0623 18:00:42.322604 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-secrets-cc480466-5793-42f0-89ff-e4bf4700ffd1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 18:00:42.33
  I0623 18:00:42.348397 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2469" for this suite. @ 06/23/25 18:00:42.353
• [4.083 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 06/23/25 18:00:42.359
  I0623 18:00:42.359242 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename namespaces @ 06/23/25 18:00:42.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:42.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:00:42.376
  STEP: Creating a test namespace @ 06/23/25 18:00:42.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:42.392
  STEP: Creating a service in the namespace @ 06/23/25 18:00:42.394
  STEP: Deleting the namespace @ 06/23/25 18:00:42.409
  STEP: Waiting for the namespace to be removed. @ 06/23/25 18:00:42.417
  STEP: Recreating the namespace @ 06/23/25 18:00:48.422
  STEP: Verifying there is no service in the namespace @ 06/23/25 18:00:48.437
  I0623 18:00:48.440053 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7540" for this suite. @ 06/23/25 18:00:48.444
  STEP: Destroying namespace "nsdeletetest-9801" for this suite. @ 06/23/25 18:00:48.45
  I0623 18:00:48.453960 20 framework.go:370] Namespace nsdeletetest-9801 was already deleted
  STEP: Destroying namespace "nsdeletetest-7471" for this suite. @ 06/23/25 18:00:48.454
• [6.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 06/23/25 18:00:48.461
  I0623 18:00:48.461300 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 18:00:48.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:48.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:00:48.479
  STEP: Creating a job @ 06/23/25 18:00:48.481
  STEP: Ensuring active pods == parallelism @ 06/23/25 18:00:48.488
  STEP: delete a job @ 06/23/25 18:00:50.498
  STEP: deleting Job.batch foo in namespace job-7068, will wait for the garbage collector to delete the pods @ 06/23/25 18:00:50.498
  I0623 18:00:50.560829 20 resources.go:139] Deleting Job.batch foo took: 7.279003ms
  I0623 18:00:50.661256 20 resources.go:163] Terminating Job.batch foo pods took: 100.424669ms
  STEP: Ensuring job was deleted @ 06/23/25 18:00:51.861
  I0623 18:00:51.867342 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7068" for this suite. @ 06/23/25 18:00:51.871
• [3.418 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/23/25 18:00:51.879
  I0623 18:00:51.879381 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename subpath @ 06/23/25 18:00:51.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:00:51.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:00:51.895
  STEP: Setting up data @ 06/23/25 18:00:51.898
  STEP: Creating pod pod-subpath-test-secret-bwkx @ 06/23/25 18:00:51.909
  STEP: Creating a pod to test atomic-volume-subpath @ 06/23/25 18:00:51.909
  STEP: Saw pod success @ 06/23/25 18:01:13.982
  I0623 18:01:13.986575 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-subpath-test-secret-bwkx container test-container-subpath-secret-bwkx: <nil>
  STEP: delete the pod @ 06/23/25 18:01:13.992
  STEP: Deleting pod pod-subpath-test-secret-bwkx @ 06/23/25 18:01:14.012
  I0623 18:01:14.012608 20 delete.go:62] Deleting pod "pod-subpath-test-secret-bwkx" in namespace "subpath-8747"
  I0623 18:01:14.016174 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8747" for this suite. @ 06/23/25 18:01:14.022
• [22.151 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 06/23/25 18:01:14.031
  I0623 18:01:14.031226 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename statefulset @ 06/23/25 18:01:14.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:01:14.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:01:14.049
  STEP: Creating service test in namespace statefulset-794 @ 06/23/25 18:01:14.051
  STEP: Looking for a node to schedule stateful set and pod @ 06/23/25 18:01:14.056
  STEP: Creating pod with conflicting port in namespace statefulset-794 @ 06/23/25 18:01:14.122
  STEP: Waiting until pod test-pod will start running in namespace statefulset-794 @ 06/23/25 18:01:14.133
  STEP: Creating statefulset with conflicting port in namespace statefulset-794 @ 06/23/25 18:01:16.141
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-794 @ 06/23/25 18:01:16.147
  I0623 18:01:16.163412 20 statefulset.go:884] Observed stateful pod in namespace: statefulset-794, name: ss-0, uid: 8b625c68-8c62-4970-a422-dab5b7cdf931, status phase: Pending. Waiting for statefulset controller to delete.
  I0623 18:01:16.185764 20 statefulset.go:884] Observed stateful pod in namespace: statefulset-794, name: ss-0, uid: 8b625c68-8c62-4970-a422-dab5b7cdf931, status phase: Failed. Waiting for statefulset controller to delete.
  I0623 18:01:16.207385 20 statefulset.go:884] Observed stateful pod in namespace: statefulset-794, name: ss-0, uid: 8b625c68-8c62-4970-a422-dab5b7cdf931, status phase: Failed. Waiting for statefulset controller to delete.
  I0623 18:01:16.214152 20 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-794
  STEP: Removing pod with conflicting port in namespace statefulset-794 @ 06/23/25 18:01:16.214
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-794 and will be in running state @ 06/23/25 18:01:16.234
  I0623 18:01:18.242833 20 statefulset.go:138] Deleting all statefulset in ns statefulset-794
  I0623 18:01:18.246939 20 rest.go:153] Scaling statefulset ss to 0
  I0623 18:01:28.265673 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0623 18:01:28.272065 20 rest.go:91] Deleting statefulset ss
  I0623 18:01:28.286295 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-794" for this suite. @ 06/23/25 18:01:28.289
• [14.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/23/25 18:01:28.296
  I0623 18:01:28.297009 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 18:01:28.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:01:28.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:01:28.314
  STEP: Creating projection with secret that has name projected-secret-test-5ee55414-dda3-4f91-bbbf-1926a554d53a @ 06/23/25 18:01:28.316
  STEP: Creating a pod to test consume secrets @ 06/23/25 18:01:28.321
  STEP: Saw pod success @ 06/23/25 18:01:32.343
  I0623 18:01:32.348240 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-secrets-67fc770c-6c27-475a-800b-a25adfdb731c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 18:01:32.356
  I0623 18:01:32.377412 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9616" for this suite. @ 06/23/25 18:01:32.381
• [4.092 seconds]
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 06/23/25 18:01:32.388
  I0623 18:01:32.388893 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename security-context @ 06/23/25 18:01:32.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:01:32.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:01:32.407
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/23/25 18:01:32.409
  STEP: Saw pod success @ 06/23/25 18:01:36.433
  I0623 18:01:36.437533 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod security-context-5dc2b3e6-3020-4aa6-9bbd-0ff8941ca226 container test-container: <nil>
  STEP: delete the pod @ 06/23/25 18:01:36.445
  I0623 18:01:36.463284 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1413" for this suite. @ 06/23/25 18:01:36.469
• [4.089 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 06/23/25 18:01:36.477
  I0623 18:01:36.477831 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pod-network-test @ 06/23/25 18:01:36.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:01:36.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:01:36.494
  STEP: Performing setup for networking test in namespace pod-network-test-7046 @ 06/23/25 18:01:36.497
  STEP: creating a selector @ 06/23/25 18:01:36.497
  STEP: Creating the service pods in kubernetes @ 06/23/25 18:01:36.497
  I0623 18:01:36.497085 20 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/23/25 18:01:50.661
  I0623 18:01:52.693349 20 utils.go:802] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0623 18:01:52.693394 20 utils.go:495] Going to poll 192.168.156.74 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0623 18:01:52.696398 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.156.74:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7046 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 18:01:52.696418 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 18:01:52.696456 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7046/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.156.74%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0623 18:01:52.735288 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 18:01:52.735327 20 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0623 18:01:52.735340 20 utils.go:495] Going to poll 192.168.99.30 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0623 18:01:52.740756 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.99.30:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7046 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 18:01:52.740791 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 18:01:52.740828 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7046/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.99.30%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0623 18:01:52.791769 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 18:01:52.791833 20 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0623 18:01:52.791865 20 utils.go:495] Going to poll 192.168.81.83 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0623 18:01:52.796624 20 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.81.83:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7046 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0623 18:01:52.796642 20 exec_util.go:68] ExecWithOptions: Clientset creation
  I0623 18:01:52.796681 20 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7046/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.81.83%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0623 18:01:52.840512 20 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0623 18:01:52.840555 20 utils.go:512] Found all 1 expected endpoints: [netserver-2]
  I0623 18:01:52.840687 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7046" for this suite. @ 06/23/25 18:01:52.845
• [16.374 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 06/23/25 18:01:52.852
  I0623 18:01:52.852370 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-selectable-fields @ 06/23/25 18:01:52.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:01:52.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:01:52.868
  STEP: Setting up server cert @ 06/23/25 18:01:52.87
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/23/25 18:01:53.433
  STEP: Deploying the custom resource conversion webhook pod @ 06/23/25 18:01:53.441
  STEP: Wait for the deployment to be ready @ 06/23/25 18:01:53.457
  I0623 18:01:53.465339 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 18:01:55.479
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 18:01:55.494
  I0623 18:01:56.494175 20 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 06/23/25 18:01:56.5
  I0623 18:01:56.500902 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Creating a custom resource conversion webhook @ 06/23/25 18:01:57.012
  STEP: Watching with field selectors @ 06/23/25 18:01:59.052
  STEP: Registering informers with field selectors @ 06/23/25 18:01:59.055
  STEP: Creating custom resources @ 06/23/25 18:01:59.055
  STEP: Listing v2 custom resources with field selector host=host1 @ 06/23/25 18:01:59.079
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 06/23/25 18:01:59.083
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 06/23/25 18:01:59.085
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 06/23/25 18:01:59.09
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 06/23/25 18:01:59.092
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 06/23/25 18:01:59.098
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 06/23/25 18:01:59.098
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 06/23/25 18:01:59.098
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 06/23/25 18:01:59.098
  STEP: Deleting one custom resources to ensure that deletions are observed @ 06/23/25 18:01:59.098
  STEP: Updating one custom resources to ensure that deletions are observed @ 06/23/25 18:01:59.117
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 06/23/25 18:01:59.128
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 06/23/25 18:01:59.132
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 06/23/25 18:01:59.136
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 06/23/25 18:01:59.141
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 06/23/25 18:01:59.141
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 06/23/25 18:01:59.141
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 06/23/25 18:01:59.141
  I0623 18:01:59.705390 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-8796" for this suite. @ 06/23/25 18:01:59.711
• [6.866 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 06/23/25 18:01:59.719
  I0623 18:01:59.719037 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename job @ 06/23/25 18:01:59.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:01:59.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:01:59.737
  STEP: Creating a job @ 06/23/25 18:01:59.739
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/23/25 18:01:59.744
  STEP: patching /status @ 06/23/25 18:02:01.753
  STEP: updating /status @ 06/23/25 18:02:01.761
  STEP: get /status @ 06/23/25 18:02:01.769
  I0623 18:02:01.773732 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1662" for this suite. @ 06/23/25 18:02:01.778
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 06/23/25 18:02:01.787
  I0623 18:02:01.787826 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 18:02:01.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:02:01.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:02:01.804
  STEP: Creating a ResourceQuota @ 06/23/25 18:02:01.806
  STEP: Getting a ResourceQuota @ 06/23/25 18:02:01.81
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/23/25 18:02:01.814
  STEP: Patching the ResourceQuota @ 06/23/25 18:02:01.817
  STEP: Deleting a Collection of ResourceQuotas @ 06/23/25 18:02:01.823
  STEP: Verifying the deleted ResourceQuota @ 06/23/25 18:02:01.838
  I0623 18:02:01.842195 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1327" for this suite. @ 06/23/25 18:02:01.879
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/23/25 18:02:01.887
  I0623 18:02:01.887822 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pods @ 06/23/25 18:02:01.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:02:01.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:02:01.903
  STEP: creating pod @ 06/23/25 18:02:01.905
  I0623 18:02:03.931666 20 pods.go:83] Pod pod-hostip-fd01014a-f8a6-48fd-ad23-02b2ba120fb6 has hostIP: 172.31.24.79
  I0623 18:02:03.931802 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-168" for this suite. @ 06/23/25 18:02:03.937
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 06/23/25 18:02:03.944
  I0623 18:02:03.944604 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 18:02:03.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:02:03.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:02:03.96
  STEP: Creating a ResourceQuota with best effort scope @ 06/23/25 18:02:03.965
  STEP: Ensuring ResourceQuota status is calculated @ 06/23/25 18:02:03.97
  STEP: Creating a ResourceQuota with not best effort scope @ 06/23/25 18:02:05.976
  STEP: Ensuring ResourceQuota status is calculated @ 06/23/25 18:02:05.981
  STEP: Creating a best-effort pod @ 06/23/25 18:02:07.985
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/23/25 18:02:08.005
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/23/25 18:02:10.011
  STEP: Deleting the pod @ 06/23/25 18:02:12.015
  STEP: Ensuring resource quota status released the pod usage @ 06/23/25 18:02:12.03
  STEP: Creating a not best-effort pod @ 06/23/25 18:02:14.036
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/23/25 18:02:14.05
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/23/25 18:02:16.056
  STEP: Deleting the pod @ 06/23/25 18:02:18.061
  STEP: Ensuring resource quota status released the pod usage @ 06/23/25 18:02:18.077
  I0623 18:02:20.082867 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-754" for this suite. @ 06/23/25 18:02:20.087
• [16.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/23/25 18:02:20.095
  I0623 18:02:20.095755 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pods @ 06/23/25 18:02:20.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:02:20.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:02:20.11
  STEP: creating the pod @ 06/23/25 18:02:20.115
  STEP: setting up watch @ 06/23/25 18:02:20.115
  STEP: submitting the pod to kubernetes @ 06/23/25 18:02:20.22
  STEP: verifying the pod is in kubernetes @ 06/23/25 18:02:20.232
  STEP: verifying pod creation was observed @ 06/23/25 18:02:20.236
  STEP: deleting the pod gracefully @ 06/23/25 18:02:22.25
  STEP: verifying pod deletion was observed @ 06/23/25 18:02:22.26
  I0623 18:02:23.005111 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5964" for this suite. @ 06/23/25 18:02:23.009
• [2.921 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/23/25 18:02:23.016
  I0623 18:02:23.016983 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-watch @ 06/23/25 18:02:23.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:02:23.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:02:23.035
  I0623 18:02:23.037263 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Creating first CR  @ 06/23/25 18:02:25.571
  I0623 18:02:25.576418 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-23T18:02:25Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-23T18:02:25Z]] name:name1 resourceVersion:48675 uid:00bd7811-0755-49ca-9745-8cb290299fa1] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 06/23/25 18:02:35.576
  I0623 18:02:35.584702 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-23T18:02:35Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-23T18:02:35Z]] name:name2 resourceVersion:48708 uid:f18626dd-7e6f-44b6-a6e5-75af904b1976] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 06/23/25 18:02:45.584
  I0623 18:02:45.593279 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-23T18:02:25Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-23T18:02:45Z]] name:name1 resourceVersion:48729 uid:00bd7811-0755-49ca-9745-8cb290299fa1] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 06/23/25 18:02:55.593
  I0623 18:02:55.601152 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-23T18:02:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-23T18:02:55Z]] name:name2 resourceVersion:48750 uid:f18626dd-7e6f-44b6-a6e5-75af904b1976] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 06/23/25 18:03:05.601
  I0623 18:03:05.610899 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-23T18:02:25Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-23T18:02:45Z]] name:name1 resourceVersion:48772 uid:00bd7811-0755-49ca-9745-8cb290299fa1] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 06/23/25 18:03:15.611
  I0623 18:03:15.621137 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-06-23T18:02:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-06-23T18:02:55Z]] name:name2 resourceVersion:48792 uid:f18626dd-7e6f-44b6-a6e5-75af904b1976] num:map[num1:9223372036854775807 num2:1000000]]}
  I0623 18:03:26.135806 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2312" for this suite. @ 06/23/25 18:03:26.141
• [63.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 06/23/25 18:03:26.148
  I0623 18:03:26.148038 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename gc @ 06/23/25 18:03:26.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:03:26.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:03:26.167
  I0623 18:03:26.200891 20 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"b43b3d72-3a03-46cc-8b9e-04ee05cad868", Controller:(*bool)(0xc00259241e), BlockOwnerDeletion:(*bool)(0xc00259241f)}}
  I0623 18:03:26.207871 20 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"fd379214-cd15-49d5-ac80-54d76fb26a8b", Controller:(*bool)(0xc0025925de), BlockOwnerDeletion:(*bool)(0xc0025925df)}}
  I0623 18:03:26.212651 20 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"e4895844-b03a-4beb-be47-2de099e19fa9", Controller:(*bool)(0xc002592786), BlockOwnerDeletion:(*bool)(0xc002592787)}}
  I0623 18:03:31.228739 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4321" for this suite. @ 06/23/25 18:03:31.232
• [5.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 06/23/25 18:03:31.239
  I0623 18:03:31.239138 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 18:03:31.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:03:31.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:03:31.255
  STEP: creating service multiprotocol-test in namespace services-2026 @ 06/23/25 18:03:31.257
  STEP: creating pod pod1 in namespace services-2026 @ 06/23/25 18:03:31.272
  STEP: Creating pod pod1 in namespace services-2026 @ 06/23/25 18:03:31.272
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-2026 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 06/23/25 18:03:33.302
  I0623 18:03:33.310093      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 18:03:33.314614 20 service.go:4729] successfully validated that service multiprotocol-test in namespace services-2026 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 06/23/25 18:03:33.314
  I0623 18:03:33.314655 20 resource.go:361] Creating new exec pod
  I0623 18:03:35.327702 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80'
  I0623 18:03:35.409262 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.145 80\nConnection to 10.152.183.145 80 port [tcp/http] succeeded!\n"
  I0623 18:03:35.409295 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 18:03:35.409360 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.145 80'
  I0623 18:03:37.490649 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.145 80\n"
  I0623 18:03:37.490687 20 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 06/23/25 18:03:37.49
  I0623 18:03:37.500435 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80'
  I0623 18:03:37.588997 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.145 80\nConnection to 10.152.183.145 80 port [tcp/http] succeeded!\n"
  I0623 18:03:37.589028 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0623 18:03:37.589091 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.145 80'
  I0623 18:03:39.672819 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.145 80\n"
  I0623 18:03:39.672869 20 builder.go:147] stdout: ""
  I0623 18:03:39.672930 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.145 80'
  I0623 18:03:41.753708 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.145 80\n"
  I0623 18:03:41.753824 20 builder.go:147] stdout: ""
  I0623 18:03:41.753876 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.145 80'
  I0623 18:03:43.835489 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.145 80\n"
  I0623 18:03:43.835537 20 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 06/23/25 18:03:43.835
  I0623 18:03:43.845916 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.145 80'
  I0623 18:03:45.933110 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.145 80\n"
  I0623 18:03:45.933153 20 builder.go:147] stdout: "pod1"
  I0623 18:03:45.933248 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80'
  I0623 18:03:48.015102 20 builder.go:135] rc: 1
  I0623 18:03:48.015176 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.145 80
  nc: connect to 10.152.183.145 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0623 18:03:48.015242 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80'
  I0623 18:03:50.111449 20 builder.go:135] rc: 1
  I0623 18:03:50.111509 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.145 80
  nc: connect to 10.152.183.145 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0623 18:03:50.111577 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80'
  I0623 18:03:52.188370 20 builder.go:135] rc: 1
  I0623 18:03:52.188433 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-2026 exec execpod4pr5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.145 80
  nc: connect to 10.152.183.145 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0623 18:03:52.188581 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2026" for this suite. @ 06/23/25 18:03:52.193
• [20.961 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 06/23/25 18:03:52.2
  I0623 18:03:52.200495 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 18:03:52.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:03:52.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:03:52.218
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 18:03:52.22
  STEP: Saw pod success @ 06/23/25 18:03:56.242
  I0623 18:03:56.246529 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod downwardapi-volume-ccef232e-c4c2-41a8-9fae-93ac769e0d99 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 18:03:56.255
  I0623 18:03:56.272819 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7750" for this suite. @ 06/23/25 18:03:56.276
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 06/23/25 18:03:56.286
  I0623 18:03:56.286638 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 18:03:56.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:03:56.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:03:56.303
  STEP: Setting up server cert @ 06/23/25 18:03:56.324
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 18:03:56.84
  STEP: Deploying the webhook pod @ 06/23/25 18:03:56.846
  STEP: Wait for the deployment to be ready @ 06/23/25 18:03:56.86
  I0623 18:03:56.868436 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/23/25 18:03:58.882
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 18:03:58.898
  I0623 18:03:59.898647 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 06/23/25 18:03:59.904
  STEP: verifying the validating webhook match conditions @ 06/23/25 18:03:59.912
  STEP: updating the validating webhook match conditions @ 06/23/25 18:03:59.915
  STEP: verifying the validating webhook match conditions @ 06/23/25 18:03:59.927
  I0623 18:03:59.981919 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4521" for this suite. @ 06/23/25 18:03:59.985
  STEP: Destroying namespace "webhook-markers-1231" for this suite. @ 06/23/25 18:03:59.996
• [3.718 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 06/23/25 18:04:00.004
  I0623 18:04:00.004549 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 18:04:00.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:04:00.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:04:00.019
  I0623 18:04:00.024703 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-976" for this suite. @ 06/23/25 18:04:00.086
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 06/23/25 18:04:00.094
  I0623 18:04:00.094420 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename gc @ 06/23/25 18:04:00.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:04:00.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:04:00.112
  STEP: create the deployment @ 06/23/25 18:04:00.114
  I0623 18:04:00.120880      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/23/25 18:04:00.12
  STEP: delete the deployment @ 06/23/25 18:04:00.232
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/23/25 18:04:00.241
  STEP: Gathering metrics @ 06/23/25 18:04:00.76
  W0623 18:04:00.764560      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0623 18:04:00.764588 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0623 18:04:00.764722 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8715" for this suite. @ 06/23/25 18:04:00.768
• [0.683 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 06/23/25 18:04:00.777
  I0623 18:04:00.777301 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 18:04:00.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:04:00.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:04:00.792
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 18:04:00.794
  STEP: Saw pod success @ 06/23/25 18:04:04.819
  I0623 18:04:04.824442 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-7ebab4f3-a781-4d5e-9d1f-57555d564a82 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 18:04:04.834
  I0623 18:04:04.856928 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3528" for this suite. @ 06/23/25 18:04:04.861
• [4.092 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/23/25 18:04:04.869
  I0623 18:04:04.869188 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 18:04:04.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:04:04.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:04:04.886
  STEP: Creating secret with name s-test-opt-del-6f6d4c88-77c7-4c07-85a6-c3ac553e9389 @ 06/23/25 18:04:04.962
  STEP: Creating secret with name s-test-opt-upd-71dcb2a7-c28d-4aa3-82fd-e8e1f42ad80e @ 06/23/25 18:04:04.968
  STEP: Creating the pod @ 06/23/25 18:04:04.973
  STEP: Deleting secret s-test-opt-del-6f6d4c88-77c7-4c07-85a6-c3ac553e9389 @ 06/23/25 18:04:07.019
  STEP: Updating secret s-test-opt-upd-71dcb2a7-c28d-4aa3-82fd-e8e1f42ad80e @ 06/23/25 18:04:07.028
  STEP: Creating secret with name s-test-opt-create-c2855191-3e71-4fff-8cec-e32878cf352f @ 06/23/25 18:04:07.033
  STEP: waiting to observe update in volume @ 06/23/25 18:04:07.039
  I0623 18:05:29.435571 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2657" for this suite. @ 06/23/25 18:05:29.44
• [84.579 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 06/23/25 18:05:29.448
  I0623 18:05:29.448191 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename kubectl @ 06/23/25 18:05:29.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:05:29.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:05:29.465
  STEP: starting the proxy server @ 06/23/25 18:05:29.469
  I0623 18:05:29.469332 20 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=kubectl-7914 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/23/25 18:05:29.499
  I0623 18:05:29.504597 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0623 18:05:29.505764 20 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:33891

  I0623 18:05:29.505853 20 kubectl.go:2232] kubectl proxy stderr: W0623 18:05:29.499181     911 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-7914" for this suite. @ 06/23/25 18:05:29.541
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 06/23/25 18:05:29.549
  I0623 18:05:29.549378 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replication-controller @ 06/23/25 18:05:29.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:05:29.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:05:29.567
  STEP: creating a ReplicationController @ 06/23/25 18:05:29.575
  STEP: waiting for RC to be added @ 06/23/25 18:05:29.581
  STEP: waiting for available Replicas @ 06/23/25 18:05:29.581
  STEP: patching ReplicationController @ 06/23/25 18:05:30.378
  STEP: waiting for RC to be modified @ 06/23/25 18:05:30.387
  STEP: patching ReplicationController status @ 06/23/25 18:05:30.387
  STEP: waiting for RC to be modified @ 06/23/25 18:05:30.393
  STEP: waiting for available Replicas @ 06/23/25 18:05:30.393
  STEP: fetching ReplicationController status @ 06/23/25 18:05:30.401
  STEP: patching ReplicationController scale @ 06/23/25 18:05:30.405
  STEP: waiting for RC to be modified @ 06/23/25 18:05:30.412
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/23/25 18:05:30.412
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/23/25 18:05:31.288
  STEP: updating ReplicationController status @ 06/23/25 18:05:31.293
  STEP: waiting for RC to be modified @ 06/23/25 18:05:31.3
  STEP: listing all ReplicationControllers @ 06/23/25 18:05:31.3
  STEP: checking that ReplicationController has expected values @ 06/23/25 18:05:31.304
  STEP: deleting ReplicationControllers by collection @ 06/23/25 18:05:31.304
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/23/25 18:05:31.315
  I0623 18:05:31.374188 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0623 18:05:31.374299      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9591" for this suite. @ 06/23/25 18:05:31.377
• [1.837 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 06/23/25 18:05:31.386
  I0623 18:05:31.386468 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/23/25 18:05:31.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:05:31.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:05:31.401
  I0623 18:05:31.403957 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  E0623 18:05:32.375073      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/23/25 18:05:32.623
  I0623 18:05:32.624030 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 --namespace=crd-publish-openapi-93 create -f -'
  E0623 18:05:33.375998      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:34.376870      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:05:34.689844 20 builder.go:146] stderr: ""
  I0623 18:05:34.689884 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3025-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0623 18:05:34.689933 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 --namespace=crd-publish-openapi-93 delete e2e-test-crd-publish-openapi-3025-crds test-foo'
  I0623 18:05:34.762442 20 builder.go:146] stderr: ""
  I0623 18:05:34.762481 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3025-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0623 18:05:34.762517 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 --namespace=crd-publish-openapi-93 apply -f -'
  I0623 18:05:34.822226 20 builder.go:146] stderr: ""
  I0623 18:05:34.822262 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3025-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0623 18:05:34.822300 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 --namespace=crd-publish-openapi-93 delete e2e-test-crd-publish-openapi-3025-crds test-foo'
  I0623 18:05:34.875420 20 builder.go:146] stderr: ""
  I0623 18:05:34.875456 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3025-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/23/25 18:05:34.875
  I0623 18:05:34.875532 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 --namespace=crd-publish-openapi-93 create -f -'
  I0623 18:05:34.920888 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/23/25 18:05:34.92
  I0623 18:05:34.920989 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 --namespace=crd-publish-openapi-93 create -f -'
  I0623 18:05:34.965088 20 builder.go:135] rc: 1
  I0623 18:05:34.965165 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 --namespace=crd-publish-openapi-93 apply -f -'
  I0623 18:05:35.013523 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/23/25 18:05:35.013
  I0623 18:05:35.013627 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 --namespace=crd-publish-openapi-93 create -f -'
  I0623 18:05:35.059113 20 builder.go:135] rc: 1
  I0623 18:05:35.059194 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 --namespace=crd-publish-openapi-93 apply -f -'
  I0623 18:05:35.109608 20 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/23/25 18:05:35.109
  I0623 18:05:35.109712 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 explain e2e-test-crd-publish-openapi-3025-crds'
  I0623 18:05:35.152747 20 builder.go:146] stderr: ""
  I0623 18:05:35.152824 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3025-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/23/25 18:05:35.153
  I0623 18:05:35.153106 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 explain e2e-test-crd-publish-openapi-3025-crds.metadata'
  I0623 18:05:35.194080 20 builder.go:146] stderr: ""
  I0623 18:05:35.194198 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3025-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0623 18:05:35.194442 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 explain e2e-test-crd-publish-openapi-3025-crds.spec'
  I0623 18:05:35.234653 20 builder.go:146] stderr: ""
  I0623 18:05:35.234682 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3025-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0623 18:05:35.234768 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 explain e2e-test-crd-publish-openapi-3025-crds.spec.bars'
  I0623 18:05:35.276868 20 builder.go:146] stderr: ""
  I0623 18:05:35.276894 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3025-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/23/25 18:05:35.277
  I0623 18:05:35.277099 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-93 explain e2e-test-crd-publish-openapi-3025-crds.spec.bars2'
  I0623 18:05:35.315476 20 builder.go:135] rc: 1
  E0623 18:05:35.377828      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:36.378297      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:05:36.549094 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-93" for this suite. @ 06/23/25 18:05:36.57
• [5.190 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 06/23/25 18:05:36.576
  I0623 18:05:36.576888 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename svcaccounts @ 06/23/25 18:05:36.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:05:36.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:05:36.596
  STEP: Creating a Serviceaccount "e2e-sa-2brds" in namespace "svcaccounts-9847" @ 06/23/25 18:05:36.599
  STEP: Creating a ServiceaccountToken "e2e-sa-2brds" in namespace "svcaccounts-9847" @ 06/23/25 18:05:36.603
  STEP: Creating a TokenReview for "e2e-sa-2brds" in namespace "svcaccounts-9847" @ 06/23/25 18:05:36.61
  I0623 18:05:36.612320 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9847" for this suite. @ 06/23/25 18:05:36.665
• [0.095 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 06/23/25 18:05:36.672
  I0623 18:05:36.672204 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sched-preemption @ 06/23/25 18:05:36.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:05:36.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:05:36.69
  I0623 18:05:36.707817 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0623 18:05:37.379023      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:38.379265      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:39.379864      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:40.379966      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:41.380053      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:42.380136      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:43.380244      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:44.380286      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:45.380996      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:46.381075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:47.381173      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:48.381233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:49.381342      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:50.381420      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:51.381660      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:52.381953      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:53.382018      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:54.382756      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:55.382920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:56.383987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:57.384290      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:58.384985      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:05:59.386047      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:00.386233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:01.386449      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:02.386641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:03.386757      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:04.387440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:05.388443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:06.388506      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:07.388949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:08.389984      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:09.390468      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:10.390639      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:11.390771      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:12.390991      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:13.391087      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:14.391904      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:15.392870      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:16.392921      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:17.393013      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:18.393968      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:19.394511      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:20.394611      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:21.394735      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:22.394949      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:23.395068      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:24.395850      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:25.396728      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:26.396931      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:27.397978      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:28.398170      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:29.398366      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:30.398585      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:31.399056      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:32.399029      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:33.399142      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:34.399862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:35.400666      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:36.401608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:06:36.714231 20 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/23/25 18:06:36.718
  STEP: Adding a custom resource @ 06/23/25 18:06:36.718
  I0623 18:06:36.737957 20 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0623 18:06:36.745469 20 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 06/23/25 18:06:36.745
  I0623 18:06:36.760387 20 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0623 18:06:36.768452 20 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 06/23/25 18:06:36.768
  I0623 18:06:36.786549 20 preemption.go:170] Created pod: pod2-0-sched-preemption-medium-priority
  I0623 18:06:36.793752 20 preemption.go:170] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/23/25 18:06:36.793
  E0623 18:06:37.402463      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:38.402580      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/23/25 18:06:38.821
  E0623 18:06:39.402661      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:40.402730      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 06/23/25 18:06:40.879
  STEP: Removing a custom resource @ 06/23/25 18:06:40.891
  STEP: Removing a custom resource @ 06/23/25 18:06:40.901
  I0623 18:06:40.913661 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4398" for this suite. @ 06/23/25 18:06:40.916
• [64.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 06/23/25 18:06:40.923
  I0623 18:06:40.923020 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 18:06:40.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:06:40.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:06:40.944
  STEP: Counting existing ResourceQuota @ 06/23/25 18:06:40.946
  E0623 18:06:41.402912      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:42.403600      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:43.404548      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:44.404649      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:45.404934      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/23/25 18:06:45.95
  STEP: Ensuring resource quota status is calculated @ 06/23/25 18:06:45.958
  E0623 18:06:46.406032      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:47.406132      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 06/23/25 18:06:47.963
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/23/25 18:06:47.98
  E0623 18:06:48.406833      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:49.407875      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/23/25 18:06:49.984
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/23/25 18:06:49.987
  STEP: Ensuring a pod cannot update its resource requirements @ 06/23/25 18:06:49.989
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/23/25 18:06:49.994
  E0623 18:06:50.408839      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:51.408992      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/23/25 18:06:51.998
  STEP: Ensuring resource quota status released the pod usage @ 06/23/25 18:06:52.018
  E0623 18:06:52.409898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:53.409930      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:06:54.026027 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2370" for this suite. @ 06/23/25 18:06:54.031
• [13.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 06/23/25 18:06:54.039
  I0623 18:06:54.039608 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename projected @ 06/23/25 18:06:54.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:06:54.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:06:54.058
  STEP: Creating configMap with name projected-configmap-test-volume-11ca1a51-e606-4290-9a4d-57b26f9e1ee9 @ 06/23/25 18:06:54.06
  STEP: Creating a pod to test consume configMaps @ 06/23/25 18:06:54.065
  E0623 18:06:54.410052      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:55.410163      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:56.410272      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:57.410345      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/23/25 18:06:58.091
  I0623 18:06:58.095487 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-projected-configmaps-a47e807d-1ef4-4799-be45-cab5960e31b0 container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 18:06:58.109
  I0623 18:06:58.132144 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4093" for this suite. @ 06/23/25 18:06:58.135
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/23/25 18:06:58.144
  I0623 18:06:58.144019 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/23/25 18:06:58.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:06:58.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:06:58.16
  STEP: creating @ 06/23/25 18:06:58.162
  STEP: getting @ 06/23/25 18:06:58.182
  STEP: listing in namespace @ 06/23/25 18:06:58.185
  STEP: patching @ 06/23/25 18:06:58.19
  STEP: deleting @ 06/23/25 18:06:58.198
  I0623 18:06:58.217477 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1370" for this suite. @ 06/23/25 18:06:58.236
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 06/23/25 18:06:58.246
  I0623 18:06:58.246523 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename services @ 06/23/25 18:06:58.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:06:58.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:06:58.261
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6731 @ 06/23/25 18:06:58.263
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/23/25 18:06:58.287
  STEP: creating service externalsvc in namespace services-6731 @ 06/23/25 18:06:58.287
  I0623 18:06:58.318173 20 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0623 18:06:58.410500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:06:59.411464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the NodePort service to type=ExternalName @ 06/23/25 18:07:00.334
  I0623 18:07:00.364444 20 resource.go:361] Creating new exec pod
  E0623 18:07:00.412497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:01.412705      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:07:02.385347 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=services-6731 exec execpodrp7pv -- /bin/sh -x -c nslookup nodeport-service.services-6731.svc.cluster.local'
  E0623 18:07:02.412889      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:07:02.487798 20 builder.go:146] stderr: "+ nslookup nodeport-service.services-6731.svc.cluster.local\n"
  I0623 18:07:02.487834 20 builder.go:147] stdout: "Server:\t\t10.152.183.127\nAddress:\t10.152.183.127#53\n\nnodeport-service.services-6731.svc.cluster.local\tcanonical name = externalsvc.services-6731.svc.cluster.local.\nName:\texternalsvc.services-6731.svc.cluster.local\nAddress: 10.152.183.83\n\n"
  I0623 18:07:02.519881 20 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0623 18:07:02.542140 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6731" for this suite. @ 06/23/25 18:07:02.545
• [4.308 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/23/25 18:07:02.554
  I0623 18:07:02.554796 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pods @ 06/23/25 18:07:02.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:02.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:02.571
  E0623 18:07:03.413027      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:04.413988      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:05.414591      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:06.414813      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:07.414934      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:08.415052      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/23/25 18:07:08.631
  I0623 18:07:08.636348 20 output.go:207] Trying to get logs from node ip-172-31-24-79 pod client-envvars-b03110d2-9ffe-48e6-94d2-a3c363fcb959 container env3cont: <nil>
  STEP: delete the pod @ 06/23/25 18:07:08.654
  I0623 18:07:08.673896 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5402" for this suite. @ 06/23/25 18:07:08.678
• [6.130 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 06/23/25 18:07:08.684
  I0623 18:07:08.684574 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename gc @ 06/23/25 18:07:08.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:08.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:08.703
  STEP: create the rc @ 06/23/25 18:07:08.705
  I0623 18:07:08.714920      20 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0623 18:07:09.415945      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:10.417008      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:11.417104      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:12.417269      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:13.417358      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/23/25 18:07:13.72
  STEP: wait for all pods to be garbage collected @ 06/23/25 18:07:13.726
  E0623 18:07:14.417412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:15.417647      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:16.417952      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:17.418045      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:18.418186      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/23/25 18:07:18.737
  W0623 18:07:18.741734      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0623 18:07:18.741763 20 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0623 18:07:18.741900 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9170" for this suite. @ 06/23/25 18:07:18.745
• [10.069 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 06/23/25 18:07:18.754
  I0623 18:07:18.754146 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename events @ 06/23/25 18:07:18.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:18.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:18.769
  STEP: Create set of events @ 06/23/25 18:07:18.771
  I0623 18:07:18.776262 20 core_events.go:198] created test-event-1
  I0623 18:07:18.782383 20 core_events.go:198] created test-event-2
  I0623 18:07:18.787301 20 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/23/25 18:07:18.787
  STEP: delete collection of events @ 06/23/25 18:07:18.79
  I0623 18:07:18.790140 20 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/23/25 18:07:18.813
  I0623 18:07:18.813455 20 core_events.go:230] requesting list of events to confirm quantity
  I0623 18:07:18.816515 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5464" for this suite. @ 06/23/25 18:07:18.847
• [0.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/23/25 18:07:18.856
  I0623 18:07:18.856590 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename deployment @ 06/23/25 18:07:18.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:18.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:18.872
  I0623 18:07:18.874457 20 deployment.go:1215] Creating deployment "webserver-deployment"
  I0623 18:07:18.881542 20 deployment.go:1219] Waiting for observed generation 1
  E0623 18:07:19.419005      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:20.419130      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:07:20.889498 20 deployment.go:1224] Waiting for all required pods to come up
  I0623 18:07:20.894022 20 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/23/25 18:07:20.894
  I0623 18:07:20.894091 20 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0623 18:07:20.901986 20 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0623 18:07:20.912341 20 deployment.go:314] Updating deployment webserver-deployment
  I0623 18:07:20.912363 20 deployment.go:1243] Waiting for observed generation 2
  E0623 18:07:21.419990      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:22.420768      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:07:22.920031 20 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0623 18:07:22.923511 20 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0623 18:07:22.926495 20 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0623 18:07:22.936490 20 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0623 18:07:22.936512 20 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0623 18:07:22.940141 20 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0623 18:07:22.945574 20 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0623 18:07:22.945594 20 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0623 18:07:22.957370 20 deployment.go:314] Updating deployment webserver-deployment
  I0623 18:07:22.957393 20 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0623 18:07:22.965404 20 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0623 18:07:22.967840 20 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  E0623 18:07:23.421548      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:24.421644      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:07:24.976156 20 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ecaba84-7e5c-4ee7-aaa9-2b4649b81cd7",
      ResourceVersion: (string) (len=5) "50924",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 18,
      AvailableReplicas: (int32) 18,
      UnavailableReplicas: (int32) 15,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0623 18:07:24.980340 20 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
      ResourceVersion: (string) (len=5) "50704",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0ecaba84-7e5c-4ee7-aaa9-2b4649b81cd7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 65 63 61 62 61  38 34 2d 37 65 35 63 2d  |\"0ecaba84-7e5c-|
              00000120  34 65 65 37 2d 61 61 61  39 2d 32 62 34 36 34 39  |4ee7-aaa9-2b4649|
              00000130  62 38 31 63 64 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b81cd7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 18:07:24.980854 20 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0623 18:07:24.981027 20 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
      ResourceVersion: (string) (len=5) "50923",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0ecaba84-7e5c-4ee7-aaa9-2b4649b81cd7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 65 63 61 62 61  38 34 2d 37 65 35 63 2d  |\"0ecaba84-7e5c-|
              00000120  34 65 65 37 2d 61 61 61  39 2d 32 62 34 36 34 39  |4ee7-aaa9-2b4649|
              00000130  62 38 31 63 64 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b81cd7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 18,
      AvailableReplicas: (int32) 18,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 18:07:24.986256 20 deployment.go:68] Pod "webserver-deployment-685b768f58-6zvvw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6zvvw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71581221-f3b5-49ce-9856-02f5b84cce2d",
      ResourceVersion: (string) (len=5) "50503",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 37 34 5c 22 7d 22 3a  |2.168.81.74\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qkhtf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qkhtf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=13) "192.168.81.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.81.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298839,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e99d65c4db78f76d879a385f13058d8421c428edd013e66e873c269f5d6b0e40",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qkhtf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:24.988411 20 deployment.go:68] Pod "webserver-deployment-685b768f58-762c2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-762c2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f127662e-0365-4344-909f-9646673c48c3",
      ResourceVersion: (string) (len=5) "50497",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 37 37 5c 22 7d 22 3a  |2.168.81.77\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-96n8s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-96n8s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=13) "192.168.81.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.81.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298839,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c39de3c5fd63fdb643a5e232297044e4f12fa875ce241710434972993ef5e32b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-96n8s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:24.989790 20 deployment.go:68] Pod "webserver-deployment-685b768f58-77n8k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-77n8k",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "558e0774-80e9-429a-8ae9-be19e4dd1723",
      ResourceVersion: (string) (len=5) "50481",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 39  2e 37 5c 22 7d 22 3a 7b  |2.168.99.7\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ms5pj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ms5pj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-62",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.62",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.62"
        }
      },
      PodIP: (string) (len=12) "192.168.99.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.99.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298839,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6123d415a2e7c4055f861b50ba4573945d1aa8789be5144b53b94d201aa5c343",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ms5pj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:24.991113 20 deployment.go:68] Pod "webserver-deployment-685b768f58-872mb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-872mb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "788b1ffc-8831-46fc-903d-3f75a4d89e2b",
      ResourceVersion: (string) (len=5) "50922",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 39  2e 34 37 5c 22 7d 22 3a  |2.168.99.47\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hr6j2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hr6j2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-62",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.62",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.62"
        }
      },
      PodIP: (string) (len=13) "192.168.99.47",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.99.47"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b572034044be6567e5d2ad5c8b8861abacbe1abb5563464c3a90956bb63f3741",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hr6j2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:24.993432 20 deployment.go:68] Pod "webserver-deployment-685b768f58-9wvgb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9wvgb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5325677-e091-4acb-8a68-d3d120d5bdcc",
      ResourceVersion: (string) (len=5) "50901",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 38 39 5c 22 7d 22  |2.168.156.89\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m9zks",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m9zks",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=14) "192.168.156.89",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.156.89"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7ec4cec46142082464f0f8069645ee46b82a5c4609af3cb61a15b9fff2594d62",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m9zks",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:24.994756 20 deployment.go:68] Pod "webserver-deployment-685b768f58-c6f6l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-c6f6l",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "227fb77e-77b0-492f-b32f-7e3bb1dd74a3",
      ResourceVersion: (string) (len=5) "50917",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 39  2e 33 36 5c 22 7d 22 3a  |2.168.99.36\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h7z25",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h7z25",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-62",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.62",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.62"
        }
      },
      PodIP: (string) (len=13) "192.168.99.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.99.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://725450a03eefb15dd1221df8a62cd405a0771483dbe0c0886495b1f59a1e5941",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h7z25",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:24.996082 20 deployment.go:68] Pod "webserver-deployment-685b768f58-cjs52" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cjs52",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "966537ad-a137-478c-94f7-91f80db18b54",
      ResourceVersion: (string) (len=5) "50729",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bmpcv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bmpcv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bmpcv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:24.997360 20 deployment.go:68] Pod "webserver-deployment-685b768f58-cn2vg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cn2vg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1077a60f-4474-4130-b64a-e9f7f66d0341",
      ResourceVersion: (string) (len=5) "50891",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 36 38 5c 22 7d 22  |2.168.156.68\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q7pw8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q7pw8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=14) "192.168.156.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.156.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://40a44cfd126a1e73006a222867052ea204cd0af015c4bbd678ca1b7aa893ea9a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q7pw8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:24.998692 20 deployment.go:68] Pod "webserver-deployment-685b768f58-ggg9n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ggg9n",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55590e97-253a-4701-9e27-c86b06c03a99",
      ResourceVersion: (string) (len=5) "50512",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 39 36 5c 22 7d 22  |2.168.156.96\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8czk7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8czk7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=14) "192.168.156.96",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.156.96"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298839,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3a3eaf007a41affd1fb4c4e2968faf1d795d68460f5ac804336f16cdbca8ecfa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8czk7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.000064 20 deployment.go:68] Pod "webserver-deployment-685b768f58-hpvq9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hpvq9",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6246aee-e730-4b55-a02c-365239b82c1e",
      ResourceVersion: (string) (len=5) "50509",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 31 31 32 5c 22 7d  |2.168.156.112\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lzkrl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lzkrl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=15) "192.168.156.112",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.112"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298839,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2861a390d6e1babcd9b8df6dec0459204ee9288abd9e7b98fc7cc1128c323dca",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lzkrl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.001411 20 deployment.go:68] Pod "webserver-deployment-685b768f58-jfmlf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jfmlf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5ad4fae-7e3a-4276-812f-15e2a4adc52b",
      ResourceVersion: (string) (len=5) "50897",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 31 31 34 5c 22 7d  |2.168.156.114\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s46qg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s46qg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=15) "192.168.156.114",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.114"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4d9dee982a093794370f76370d949837f5db75e5132eb7bde30461ea309f80c7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s46qg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.002678 20 deployment.go:68] Pod "webserver-deployment-685b768f58-kz4fq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kz4fq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d397f3d5-058f-4e4a-a631-ef846766605e",
      ResourceVersion: (string) (len=5) "50516",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 39  2e 36 31 5c 22 7d 22 3a  |2.168.99.61\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mqgfn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mqgfn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-62",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.62",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.62"
        }
      },
      PodIP: (string) (len=13) "192.168.99.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.99.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298839,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://31f0e7a9d24881e0063f8c1a366ab5afc3e6ca81fd400d167cb68d99921f3e14",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mqgfn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.004007 20 deployment.go:68] Pod "webserver-deployment-685b768f58-l8x4f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-l8x4f",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e3aed4d-1095-439b-93df-7cc323cf8eca",
      ResourceVersion: (string) (len=5) "50506",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 37 31 5c 22 7d 22  |2.168.156.71\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2crq8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2crq8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=14) "192.168.156.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.156.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298839,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5f1849466984d5be4385bb2f8749c507579992a1205cd493dc17966404320972",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2crq8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.005315 20 deployment.go:68] Pod "webserver-deployment-685b768f58-lf79k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lf79k",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cae43ce3-5fdf-41e7-b127-2aa2b537c02e",
      ResourceVersion: (string) (len=5) "50874",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 38 30 5c 22 7d 22 3a  |2.168.81.80\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7jlv9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7jlv9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=13) "192.168.81.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.81.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://83d64de7639e016e983f17f98439fd61790ba66a4dfc16aa265117376012512e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7jlv9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.006573 20 deployment.go:68] Pod "webserver-deployment-685b768f58-mlkvp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-mlkvp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd33b2a4-8e47-4368-9aa7-8ca5783613c6",
      ResourceVersion: (string) (len=5) "50912",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 39  2e 33 38 5c 22 7d 22 3a  |2.168.99.38\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9kgtb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9kgtb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-62",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.62",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.62"
        }
      },
      PodIP: (string) (len=13) "192.168.99.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.99.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7b78bac2ac740605cf88867ac16ec8171923a1d396c6609ea79de25375262a8a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9kgtb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.007897 20 deployment.go:68] Pod "webserver-deployment-685b768f58-plvm6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-plvm6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74fe51ea-78b7-4465-9c75-46b0319d133d",
      ResourceVersion: (string) (len=5) "50869",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 38 36 5c 22 7d 22 3a  |2.168.81.86\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rs85t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rs85t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=13) "192.168.81.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.81.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://041a95fc53d064aa4db90c9fe25f003fea54ae6532e8167cdea5baf11aa727cd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rs85t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.009217 20 deployment.go:68] Pod "webserver-deployment-685b768f58-rg2tw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rg2tw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b40e8c47-b7f3-4380-8e3f-9b2fbd1a4af5",
      ResourceVersion: (string) (len=5) "50519",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 39 39  2e 33 35 5c 22 7d 22 3a  |2.168.99.35\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-55tv5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-55tv5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-62",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.62",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.62"
        }
      },
      PodIP: (string) (len=13) "192.168.99.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.99.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298839,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5ed9354264eda2dcb0529629bccc2bb60d8258a70b9502136ba4262aade2ac93",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-55tv5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.010636 20 deployment.go:68] Pod "webserver-deployment-685b768f58-s49jb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-s49jb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a07a6eae-8748-4898-976c-255461514f95",
      ResourceVersion: (string) (len=5) "50883",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 39 31 5c 22 7d 22 3a  |2.168.81.91\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-86ksq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-86ksq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=13) "192.168.81.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.81.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4085d01330a843e0aa62fd0e72fd996bff45f5a83f7c3fa27b6fd1052c142c81",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-86ksq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.011946 20 deployment.go:68] Pod "webserver-deployment-685b768f58-s54g8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-s54g8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1edace88-fe3b-44c2-9448-3867ce54a605",
      ResourceVersion: (string) (len=5) "50710",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rdrl4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rdrl4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rdrl4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.013261 20 deployment.go:68] Pod "webserver-deployment-685b768f58-vbrnv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vbrnv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "597d4a9a-0939-447e-852b-4bec7888af13",
      ResourceVersion: (string) (len=5) "50877",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "588de907-c7c2-4480-b13d-6e75affbf651",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  38 64 65 39 30 37 2d 63  |d\":\"588de907-c|
              00000090  37 63 32 2d 34 34 38 30  2d 62 31 33 64 2d 36 65  |7c2-4480-b13d-6e|
              000000a0  37 35 61 66 66 62 66 36  35 31 5c 22 7d 22 3a 7b  |75affbf651\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  36 2e 31 30 38 5c 22 7d  |2.168.156.108\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g7kgl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g7kgl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=15) "192.168.156.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886298844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://12434cb5d50e4d1bec2d140e68d687031621cee0cdbdf5e45cdd10ef4abf8972",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g7kgl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.014516 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-5sk96" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-5sk96",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d382c8a-5eae-427b-9071-de2265cd4d6c",
      ResourceVersion: (string) (len=5) "50624",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 36 2e 31  32 37 5c 22 7d 22 3a 7b  |68.156.127\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m8dlt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m8dlt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=15) "192.168.156.127",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.127"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m8dlt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.015802 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-7j6m6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-7j6m6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3dfbaa82-e3c8-4c64-9bb2-85fc0322db23",
      ResourceVersion: (string) (len=5) "50721",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5zl6j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5zl6j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5zl6j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.017100 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-844n9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-844n9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b058312-7af0-4204-9d3a-304a89d23be1",
      ResourceVersion: (string) (len=5) "50900",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 36 2e 31  32 31 5c 22 7d 22 3a 7b  |68.156.121\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxct5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxct5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=15) "192.168.156.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nxct5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.018371 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-8gfsl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-8gfsl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e155aa26-163e-4633-80ef-3b8a1d8ffb58",
      ResourceVersion: (string) (len=5) "50921",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 39 39 2e 35 37  5c 22 7d 22 3a 7b 22 2e  |68.99.57\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jg4t4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jg4t4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-62",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.62",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.62"
        }
      },
      PodIP: (string) (len=13) "192.168.99.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.99.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jg4t4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.019615 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9tlqc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9tlqc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c173cfaa-56ff-4bb6-abc8-662b8dec54f7",
      ResourceVersion: (string) (len=5) "50895",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 31 2e 37 35  5c 22 7d 22 3a 7b 22 2e  |68.81.75\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j27s2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j27s2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=13) "192.168.81.75",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.81.75"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j27s2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.020988 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cd927" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cd927",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7caa350e-2431-4e10-a83d-f0bb9088bf6a",
      ResourceVersion: (string) (len=5) "50620",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 36 2e 38  37 5c 22 7d 22 3a 7b 22  |68.156.87\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bvl8k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bvl8k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=14) "192.168.156.87",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.156.87"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bvl8k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.022256 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fpdpr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fpdpr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb0a3a77-b0fc-41a1-bc44-cdde430bc061",
      ResourceVersion: (string) (len=5) "50907",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 39 39 2e 34 31  5c 22 7d 22 3a 7b 22 2e  |68.99.41\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hcng5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hcng5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-62",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.62",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.62"
        }
      },
      PodIP: (string) (len=13) "192.168.99.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.99.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hcng5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.023497 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-j4cpr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-j4cpr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b694b60-961f-4ed0-b486-65ef1abc7ca7",
      ResourceVersion: (string) (len=5) "50886",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 36 2e 31  30 35 5c 22 7d 22 3a 7b  |68.156.105\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zlvnv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zlvnv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-24-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.24.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.24.79"
        }
      },
      PodIP: (string) (len=15) "192.168.156.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.156.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zlvnv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.024759 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mqhxw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mqhxw",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21d5a55b-c187-404d-b8d1-bda549ca7388",
      ResourceVersion: (string) (len=5) "50614",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 31 2e 31 32  33 5c 22 7d 22 3a 7b 22  |68.81.123\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pr9cg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pr9cg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=14) "192.168.81.123",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.123"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pr9cg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.026004 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-sqm7t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-sqm7t",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e905245a-0c02-40dc-b47c-ef01600d92dd",
      ResourceVersion: (string) (len=5) "50925",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 39 39 2e 34 35  5c 22 7d 22 3a 7b 22 2e  |68.99.45\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xv7t8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xv7t8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-62",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.62",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.62"
        }
      },
      PodIP: (string) (len=13) "192.168.99.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.99.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xv7t8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.027294 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vf64k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vf64k",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f2178e3-2832-498d-96a3-7c3fc252f7ab",
      ResourceVersion: (string) (len=5) "50617",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 31 2e 31 31  31 5c 22 7d 22 3a 7b 22  |68.81.111\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p5999",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p5999",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=14) "192.168.81.111",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.111"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p5999",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.028865 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xg7pn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xg7pn",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08eea269-2f14-492a-8fe3-891124e60293",
      ResourceVersion: (string) (len=5) "50727",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8w5bv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8w5bv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8w5bv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.030106 20 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zgqsj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zgqsj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5316",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cca61683-362f-4a65-bac6-305c7e9eca79",
      ResourceVersion: (string) (len=5) "50608",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "5f1d19b3-d92e-4a3f-9038-34e2ab35050d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  31 64 31 39 62 33 2d 64  |d\":\"5f1d19b3-d|
              00000090  39 32 65 2d 34 61 33 66  2d 39 30 33 38 2d 33 34  |92e-4a3f-9038-34|
              000000a0  65 32 61 62 33 35 30 35  30 64 5c 22 7d 22 3a 7b  |e2ab35050d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 39 39 2e 36 5c  22 7d 22 3a 7b 22 2e 22  |68.99.6\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vlt2g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vlt2g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-62",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886298840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.62",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.62"
        }
      },
      PodIP: (string) (len=12) "192.168.99.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "192.168.99.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886298840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vlt2g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:07:25.031199 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5316" for this suite. @ 06/23/25 18:07:25.036
• [6.187 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 06/23/25 18:07:25.044
  I0623 18:07:25.044481 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename statefulset @ 06/23/25 18:07:25.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:25.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:25.061
  STEP: Creating service test in namespace statefulset-9827 @ 06/23/25 18:07:25.063
  STEP: Creating statefulset ss in namespace statefulset-9827 @ 06/23/25 18:07:25.067
  I0623 18:07:25.081646 20 wait.go:44] Found 0 stateful pods, waiting for 1
  E0623 18:07:25.422013      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:26.422081      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:27.422277      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:28.422368      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:29.423214      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:30.423350      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:31.423438      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:32.423507      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:33.423813      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:34.424886      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:07:35.080867 20 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/23/25 18:07:35.087
  STEP: updating a scale subresource @ 06/23/25 18:07:35.091
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/23/25 18:07:35.098
  STEP: Patch a scale subresource @ 06/23/25 18:07:35.101
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/23/25 18:07:35.11
  I0623 18:07:35.119393 20 statefulset.go:138] Deleting all statefulset in ns statefulset-9827
  I0623 18:07:35.122304 20 rest.go:153] Scaling statefulset ss to 0
  E0623 18:07:35.425188      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:36.425403      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:37.425614      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:38.425863      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:39.426877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:40.426942      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:41.427059      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:42.427278      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:43.427483      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:44.428443      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:07:45.138745 20 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0623 18:07:45.142605 20 rest.go:91] Deleting statefulset ss
  I0623 18:07:45.157836 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9827" for this suite. @ 06/23/25 18:07:45.162
• [20.128 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 06/23/25 18:07:45.172
  I0623 18:07:45.172279 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename webhook @ 06/23/25 18:07:45.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:45.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:45.187
  STEP: Setting up server cert @ 06/23/25 18:07:45.209
  E0623 18:07:45.429034      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/23/25 18:07:45.641
  STEP: Deploying the webhook pod @ 06/23/25 18:07:45.65
  STEP: Wait for the deployment to be ready @ 06/23/25 18:07:45.664
  I0623 18:07:45.673950 20 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0623 18:07:46.429733      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:47.429933      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/23/25 18:07:47.685
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 18:07:47.703
  E0623 18:07:48.430927      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:07:48.704161 20 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/23/25 18:07:48.71
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/23/25 18:07:48.711
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/23/25 18:07:48.711
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/23/25 18:07:48.711
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/23/25 18:07:48.712
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/23/25 18:07:48.712
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/23/25 18:07:48.713
  I0623 18:07:48.757543 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2222" for this suite. @ 06/23/25 18:07:48.76
  STEP: Destroying namespace "webhook-markers-3920" for this suite. @ 06/23/25 18:07:48.771
• [3.607 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 06/23/25 18:07:48.779
  I0623 18:07:48.779143 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/23/25 18:07:48.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:48.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:48.794
  I0623 18:07:48.797337 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  E0623 18:07:49.431270      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/23/25 18:07:50.005
  I0623 18:07:50.005257 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-4585 --namespace=crd-publish-openapi-4585 create -f -'
  I0623 18:07:50.069002 20 builder.go:146] stderr: ""
  I0623 18:07:50.069027 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5710-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0623 18:07:50.069068 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-4585 --namespace=crd-publish-openapi-4585 delete e2e-test-crd-publish-openapi-5710-crds test-cr'
  I0623 18:07:50.116323 20 builder.go:146] stderr: ""
  I0623 18:07:50.116349 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5710-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0623 18:07:50.116391 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-4585 --namespace=crd-publish-openapi-4585 apply -f -'
  I0623 18:07:50.165303 20 builder.go:146] stderr: ""
  I0623 18:07:50.165328 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5710-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0623 18:07:50.165358 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-4585 --namespace=crd-publish-openapi-4585 delete e2e-test-crd-publish-openapi-5710-crds test-cr'
  I0623 18:07:50.213440 20 builder.go:146] stderr: ""
  I0623 18:07:50.213464 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5710-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/23/25 18:07:50.213
  I0623 18:07:50.213523 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1123132851 --namespace=crd-publish-openapi-4585 explain e2e-test-crd-publish-openapi-5710-crds'
  I0623 18:07:50.251921 20 builder.go:146] stderr: ""
  I0623 18:07:50.251952 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5710-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0623 18:07:50.431602      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:51.432383      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:07:51.475388 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4585" for this suite. @ 06/23/25 18:07:51.482
• [2.711 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/23/25 18:07:51.489
  I0623 18:07:51.489881 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename init-container @ 06/23/25 18:07:51.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:51.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:51.506
  STEP: creating the pod @ 06/23/25 18:07:51.509
  I0623 18:07:51.509273 20 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0623 18:07:52.433003      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:53.433937      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:54.434020      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:07:54.685489 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7902" for this suite. @ 06/23/25 18:07:54.69
• [3.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 06/23/25 18:07:54.7
  I0623 18:07:54.700542 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 18:07:54.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:54.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:54.718
  STEP: Creating configMap with name configmap-test-volume-6a2e6bde-e882-4f54-a7b7-95d8e6e04bec @ 06/23/25 18:07:54.72
  STEP: Creating a pod to test consume configMaps @ 06/23/25 18:07:54.727
  E0623 18:07:55.434877      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:56.435127      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:57.435232      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:07:58.435439      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/23/25 18:07:58.75
  I0623 18:07:58.755167 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-configmaps-147551e1-cb1e-4a50-9bf9-851d71aa4c5c container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/23/25 18:07:58.761
  I0623 18:07:58.777151 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9704" for this suite. @ 06/23/25 18:07:58.78
• [4.087 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 06/23/25 18:07:58.787
  I0623 18:07:58.787558 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename volumeattachment @ 06/23/25 18:07:58.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:58.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:58.807
  STEP: Create VolumeAttachment "va-e2e-8ntm8" on node "ip-172-31-17-47" @ 06/23/25 18:07:58.881
  STEP: Patch VolumeAttachment "va-e2e-8ntm8" on node "ip-172-31-17-47" @ 06/23/25 18:07:58.886
  STEP: Reading "va-e2e-8ntm8" Status @ 06/23/25 18:07:58.893
  STEP: Patching "va-e2e-8ntm8" Status @ 06/23/25 18:07:58.897
  I0623 18:07:58.903468 20 volume_attachment.go:224] "va-e2e-8ntm8" Status.Attached: true
  STEP: Updating "va-e2e-8ntm8" Status @ 06/23/25 18:07:58.903
  I0623 18:07:58.912601 20 volume_attachment.go:240] "va-e2e-8ntm8" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-8ntm8" on node "ip-172-31-17-47" @ 06/23/25 18:07:58.912
  STEP: Confirm deletion of VolumeAttachment "va-e2e-8ntm8" on node "ip-172-31-17-47" @ 06/23/25 18:07:58.919
  I0623 18:07:58.922196 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1712" for this suite. @ 06/23/25 18:07:58.982
• [0.202 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 06/23/25 18:07:58.989
  I0623 18:07:58.989947 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename endpointslice @ 06/23/25 18:07:58.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:59.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:59.008
  I0623 18:07:59.017309      20 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0623 18:07:59.020686 20 endpointslice.go:1045] Endpoints addresses: [172.31.17.47 172.31.88.143] , ports: [6443]
  I0623 18:07:59.020703 20 endpointslice.go:1075] EndpointSlices addresses: [172.31.17.47 172.31.88.143] , ports: [6443]
  I0623 18:07:59.020844 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1294" for this suite. @ 06/23/25 18:07:59.083
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 06/23/25 18:07:59.09
  I0623 18:07:59.090866 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename sysctl @ 06/23/25 18:07:59.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:07:59.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:07:59.105
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/23/25 18:07:59.107
  STEP: Watching for error events or started pod @ 06/23/25 18:07:59.116
  E0623 18:07:59.436269      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:00.436409      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 06/23/25 18:08:01.121
  E0623 18:08:01.437015      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:02.437111      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 06/23/25 18:08:03.135
  STEP: Getting logs from the pod @ 06/23/25 18:08:03.135
  STEP: Checking that the sysctl is actually updated @ 06/23/25 18:08:03.141
  I0623 18:08:03.142121 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2885" for this suite. @ 06/23/25 18:08:03.146
• [4.064 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 06/23/25 18:08:03.155
  I0623 18:08:03.155048 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename downward-api @ 06/23/25 18:08:03.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:08:03.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:08:03.173
  STEP: Creating a pod to test downward API volume plugin @ 06/23/25 18:08:03.175
  E0623 18:08:03.437265      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:04.437332      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:05.437465      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:06.437541      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/23/25 18:08:07.199
  I0623 18:08:07.204661 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod downwardapi-volume-a1cbd126-58c6-44aa-a25d-9d1b34c40635 container client-container: <nil>
  STEP: delete the pod @ 06/23/25 18:08:07.211
  I0623 18:08:07.228801 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-885" for this suite. @ 06/23/25 18:08:07.234
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 06/23/25 18:08:07.241
  I0623 18:08:07.241526 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replication-controller @ 06/23/25 18:08:07.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:08:07.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:08:07.264
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/23/25 18:08:07.267
  E0623 18:08:07.438309      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:08.438393      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 06/23/25 18:08:09.291
  STEP: Then the orphan pod is adopted @ 06/23/25 18:08:09.297
  E0623 18:08:09.439028      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:08:10.305356 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4010" for this suite. @ 06/23/25 18:08:10.309
• [3.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 06/23/25 18:08:10.317
  I0623 18:08:10.317232 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename disruption @ 06/23/25 18:08:10.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:08:10.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:08:10.333
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/23/25 18:08:10.335
  STEP: Waiting for the pdb to be processed @ 06/23/25 18:08:10.34
  E0623 18:08:10.440015      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:11.440170      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/23/25 18:08:12.351
  STEP: Waiting for all pods to be running @ 06/23/25 18:08:12.351
  I0623 18:08:12.356248 20 disruption.go:680] pods: 0 < 3
  E0623 18:08:12.440456      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:13.440576      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/23/25 18:08:14.357
  STEP: Updating the pdb to allow a pod to be evicted @ 06/23/25 18:08:14.369
  STEP: Waiting for the pdb to be processed @ 06/23/25 18:08:14.379
  E0623 18:08:14.441332      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:15.441451      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/23/25 18:08:16.385
  STEP: Waiting for all pods to be running @ 06/23/25 18:08:16.385
  STEP: Waiting for the pdb to observed all healthy pods @ 06/23/25 18:08:16.389
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/23/25 18:08:16.422
  E0623 18:08:16.442091      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 06/23/25 18:08:16.442
  E0623 18:08:17.442246      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:18.442551      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/23/25 18:08:18.448
  STEP: locating a running pod @ 06/23/25 18:08:18.453
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/23/25 18:08:18.463
  STEP: Waiting for the pdb to be deleted @ 06/23/25 18:08:18.471
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/23/25 18:08:18.474
  STEP: Waiting for all pods to be running @ 06/23/25 18:08:18.474
  I0623 18:08:18.574266 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5956" for this suite. @ 06/23/25 18:08:18.578
• [8.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 06/23/25 18:08:18.6
  I0623 18:08:18.600618 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename replicaset @ 06/23/25 18:08:18.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:08:18.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:08:18.621
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/23/25 18:08:18.625
  E0623 18:08:19.443474      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:20.444013      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 06/23/25 18:08:20.655
  STEP: Then the orphan pod is adopted @ 06/23/25 18:08:20.66
  E0623 18:08:21.444086      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 06/23/25 18:08:21.669
  I0623 18:08:21.672823 20 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/23/25 18:08:21.685
  E0623 18:08:22.444182      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:08:22.694389 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1131" for this suite. @ 06/23/25 18:08:22.699
• [4.107 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 06/23/25 18:08:22.707
  I0623 18:08:22.707770 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename cronjob @ 06/23/25 18:08:22.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:08:22.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:08:22.725
  STEP: Creating a cronjob @ 06/23/25 18:08:22.727
  STEP: creating @ 06/23/25 18:08:22.727
  STEP: getting @ 06/23/25 18:08:22.735
  STEP: listing @ 06/23/25 18:08:22.738
  STEP: watching @ 06/23/25 18:08:22.741
  I0623 18:08:22.741388 20 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 06/23/25 18:08:22.742
  STEP: cluster-wide watching @ 06/23/25 18:08:22.746
  I0623 18:08:22.746854 20 cronjob.go:407] starting watch
  STEP: patching @ 06/23/25 18:08:22.747
  STEP: updating @ 06/23/25 18:08:22.754
  I0623 18:08:22.763994 20 cronjob.go:431] waiting for watch events with expected annotations
  I0623 18:08:22.764018 20 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 06/23/25 18:08:22.764
  STEP: updating /status @ 06/23/25 18:08:22.769
  STEP: get /status @ 06/23/25 18:08:22.777
  STEP: deleting @ 06/23/25 18:08:22.781
  STEP: deleting a collection @ 06/23/25 18:08:22.797
  I0623 18:08:22.812006 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2925" for this suite. @ 06/23/25 18:08:22.815
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 06/23/25 18:08:22.824
  I0623 18:08:22.824603 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename crd-webhook @ 06/23/25 18:08:22.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:08:22.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:08:22.84
  STEP: Setting up server cert @ 06/23/25 18:08:22.843
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/23/25 18:08:23.206
  STEP: Deploying the custom resource conversion webhook pod @ 06/23/25 18:08:23.213
  STEP: Wait for the deployment to be ready @ 06/23/25 18:08:23.228
  I0623 18:08:23.237587 20 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0623 18:08:23.444902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:24.445980      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/23/25 18:08:25.25
  STEP: Verifying the service has paired with the endpoint @ 06/23/25 18:08:25.265
  E0623 18:08:25.446440      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:08:26.266160 20 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0623 18:08:26.272550 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  E0623 18:08:26.446958      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:27.447106      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:28.447202      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 06/23/25 18:08:28.843
  STEP: Create a v2 custom resource @ 06/23/25 18:08:28.859
  STEP: List CRs in v1 @ 06/23/25 18:08:28.885
  STEP: List CRs in v2 @ 06/23/25 18:08:28.889
  E0623 18:08:29.448068      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:08:29.457825 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5802" for this suite. @ 06/23/25 18:08:29.464
• [6.653 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 06/23/25 18:08:29.477
  I0623 18:08:29.477456 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 18:08:29.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:08:29.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:08:29.496
  STEP: Creating configMap with name configmap-test-volume-8aa4aeef-71cf-4448-aa6e-625eb2a7abba @ 06/23/25 18:08:29.5
  STEP: Creating a pod to test consume configMaps @ 06/23/25 18:08:29.505
  E0623 18:08:30.448294      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:31.448366      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:32.448512      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:33.448583      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/23/25 18:08:33.534
  I0623 18:08:33.538660 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-configmaps-ac9fd4aa-ea59-4479-bc84-bdc8f141d2ab container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 18:08:33.545
  I0623 18:08:33.565938 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6282" for this suite. @ 06/23/25 18:08:33.57
• [4.100 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 06/23/25 18:08:33.577
  I0623 18:08:33.577110 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename resourcequota @ 06/23/25 18:08:33.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:08:33.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:08:33.593
  STEP: Creating resourceQuota "e2e-rq-status-kpwsc" @ 06/23/25 18:08:33.6
  I0623 18:08:33.611176 20 resource_quota.go:1106] Resource quota "e2e-rq-status-kpwsc" reports spec: hard cpu limit of 500m
  I0623 18:08:33.611196 20 resource_quota.go:1108] Resource quota "e2e-rq-status-kpwsc" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-kpwsc" /status @ 06/23/25 18:08:33.611
  STEP: Confirm /status for "e2e-rq-status-kpwsc" resourceQuota via watch @ 06/23/25 18:08:33.62
  I0623 18:08:33.621390 20 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-kpwsc" in namespace "resourcequota-2406" with hard status: v1.ResourceList(nil)
  I0623 18:08:33.621438 20 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-kpwsc" in namespace "resourcequota-2406" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0623 18:08:33.621449 20 resource_quota.go:1145] ResourceQuota "e2e-rq-status-kpwsc" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/23/25 18:08:33.625
  I0623 18:08:33.630059 20 resource_quota.go:1156] Resource quota "e2e-rq-status-kpwsc" reports spec: hard cpu limit of 1
  I0623 18:08:33.630077 20 resource_quota.go:1157] Resource quota "e2e-rq-status-kpwsc" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-kpwsc" /status @ 06/23/25 18:08:33.63
  STEP: Confirm /status for "e2e-rq-status-kpwsc" resourceQuota via watch @ 06/23/25 18:08:33.637
  I0623 18:08:33.638992 20 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-kpwsc" in namespace "resourcequota-2406" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0623 18:08:33.639055 20 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-kpwsc" in namespace "resourcequota-2406" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0623 18:08:33.639068 20 resource_quota.go:1189] ResourceQuota "e2e-rq-status-kpwsc" /status was patched
  STEP: Get "e2e-rq-status-kpwsc" /status @ 06/23/25 18:08:33.639
  I0623 18:08:33.644602 20 resource_quota.go:1200] Resourcequota "e2e-rq-status-kpwsc" reports status: hard cpu of 1
  I0623 18:08:33.644628 20 resource_quota.go:1202] Resourcequota "e2e-rq-status-kpwsc" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-kpwsc" /status before checking Spec is unchanged @ 06/23/25 18:08:33.647
  I0623 18:08:33.662595 20 resource_quota.go:1222] Resourcequota "e2e-rq-status-kpwsc" reports status: hard cpu of 2
  I0623 18:08:33.662617 20 resource_quota.go:1224] Resourcequota "e2e-rq-status-kpwsc" reports status: hard memory of 2Gi
  I0623 18:08:33.664229 20 resource_quota.go:1233] observed resourceQuota "e2e-rq-status-kpwsc" in namespace "resourcequota-2406" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0623 18:08:33.664260 20 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-kpwsc" in namespace "resourcequota-2406" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0623 18:08:33.667325 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2498), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b24e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:08:34.449369      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:35.449490      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:36.449756      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:37.449898      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:38.449972      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:08:38.669981 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2840), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2870), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:08:39.450896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:40.450982      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:41.451059      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:42.451233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:43.451938      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:08:43.669591 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b29c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:08:44.452480      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:45.452547      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:46.452674      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:47.452740      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:48.452929      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:08:48.668958 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2c00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2c30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2c78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:08:49.453855      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:50.453922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:51.454046      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:52.454117      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:53.454261      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:08:53.669659 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559d668), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559d698), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559d6c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:08:54.454347      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:55.454474      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:56.454606      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:57.454852      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:08:58.454968      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:08:58.669752 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559d8d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559d908), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559d950), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:08:59.455497      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:00.455584      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:01.455890      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:02.455958      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:03.456047      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:03.669034 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559db60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559dba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559dbd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:04.456925      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:05.457021      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:06.457152      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:07.457245      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:08.457389      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:08.669370 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559de00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559de30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00559de60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:09.458375      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:10.458464      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:11.458604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:12.458686      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:13.458829      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:13.669635 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:14.459481      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:15.459732      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:16.459885      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:17.460102      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:18.460314      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:18.668660 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a3c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:19.460431      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:20.460530      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:21.460650      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:22.460740      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:23.460896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:23.669866 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2e88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2ed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2f00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:24.461492      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:25.461553      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:26.461688      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:27.461756      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:28.461970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:28.670026 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b31b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b31e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b3218), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:29.462629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:30.463007      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:31.463079      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:32.463195      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:33.463259      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:33.669239 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b34e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b3518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b3560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:34.463982      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:35.464061      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:36.464170      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:37.464974      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:38.465970      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:38.669498 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b36c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b3710), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b3740), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:39.466099      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:40.466220      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:41.466414      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:42.466595      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:43.467012      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:43.669665 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a738), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a7b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:44.467429      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:45.467622      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:46.467979      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:47.468238      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:48.468445      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:48.669696 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a888), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a8d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:49.469491      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:50.469672      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:51.469951      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:52.469981      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:53.470031      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:53.669670 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a078), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a0a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:54.470437      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:55.470729      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:56.470945      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:57.471126      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:09:58.471321      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:09:58.668558 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b22a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b22d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:09:59.472399      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:00.472495      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:01.472973      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:02.473974      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:03.474979      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:03.670578 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b23c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b23f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:10:04.475500      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:05.475696      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:06.475908      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:07.476089      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:08.476990      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:08.669752 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2570), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b25b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:10:09.477341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:10.477988      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:11.478169      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:12.478352      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:13.478543      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:13.669193 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a498), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:10:14.479138      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:15.479329      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:16.479519      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:17.479760      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:18.479968      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:18.670095 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a5b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a5e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:10:19.481030      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:20.481213      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:21.481341      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:22.481441      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:23.481624      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:23.669584 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a6c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a738), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:10:24.482413      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:25.482514      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:26.483206      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:27.483310      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:28.483977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:28.669416 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a828), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:10:29.484361      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:30.484987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:31.485164      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:32.485983      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:33.486977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:33.669609 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a978), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8a9d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8aa08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:10:34.487533      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:35.487653      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:36.487867      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:37.488055      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:38.488241      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:38.668972 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8aaf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8ab28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8ab58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:10:39.488903      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:40.489092      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:41.489271      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:42.489461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:43.489972      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:43.669435 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2f78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b2fc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b3008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:10:44.490089      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:45.490270      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:46.490451      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:47.490640      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:48.490862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:48.670522 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8ad68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8ad98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8adc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:10:49.491513      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:50.492364      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:51.492980      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:52.493971      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:53.494145      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:53.669992 20 resource_quota.go:1267] ResourceQuota "e2e-rq-status-kpwsc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-kpwsc", GenerateName:"", Namespace:"resourcequota-2406", SelfLink:"", UID:"7904ef67-c625-4854-bb08-b97fe12e9367", ResourceVersion:"52270", Generation:0, CreationTimestamp:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-kpwsc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8aea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8aed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.June, 23, 18, 8, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d8af00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0623 18:10:54.494896      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:55.495868      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:56.495946      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:57.496139      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:10:58.496325      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:10:58.668352 20 resource_quota.go:1264] ResourceQuota "e2e-rq-status-kpwsc" Spec was unchanged and /status reset
  I0623 18:10:58.668479 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2406" for this suite. @ 06/23/25 18:10:58.672
• [145.103 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 06/23/25 18:10:58.68
  I0623 18:10:58.680392 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename deployment @ 06/23/25 18:10:58.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:10:58.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:10:58.699
  STEP: creating a Deployment @ 06/23/25 18:10:58.705
  I0623 18:10:58.705905 20 deployment.go:506] Creating simple deployment test-deployment-g7bk5
  I0623 18:10:58.719415 20 deployment.go:223] deployment "test-deployment-g7bk5" doesn't have the required revision set
  E0623 18:10:59.496400      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:00.496525      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 06/23/25 18:11:00.735
  I0623 18:11:00.739557 20 deployment.go:531] Deployment test-deployment-g7bk5 has Conditions: [{Available True 2025-06-23 18:11:00 +0000 UTC 2025-06-23 18:11:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-06-23 18:11:00 +0000 UTC 2025-06-23 18:10:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-g7bk5-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/23/25 18:11:00.739
  I0623 18:11:00.749911 20 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 18, 11, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 18, 11, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.June, 23, 18, 11, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.June, 23, 18, 10, 58, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-g7bk5-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/23/25 18:11:00.749
  I0623 18:11:00.751495 20 deployment.go:578] Observed &Deployment event: ADDED
  I0623 18:11:00.751516 20 deployment.go:574] Observed Deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-23 18:10:58 +0000 UTC 2025-06-23 18:10:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-g7bk5-6fb4c74686"}
  I0623 18:11:00.751605 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0623 18:11:00.751619 20 deployment.go:574] Observed Deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-23 18:10:58 +0000 UTC 2025-06-23 18:10:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-g7bk5-6fb4c74686"}
  I0623 18:11:00.751627 20 deployment.go:574] Observed Deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-06-23 18:10:58 +0000 UTC 2025-06-23 18:10:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0623 18:11:00.751692 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0623 18:11:00.751763 20 deployment.go:574] Observed Deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-06-23 18:10:58 +0000 UTC 2025-06-23 18:10:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0623 18:11:00.751830 20 deployment.go:574] Observed Deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-23 18:10:58 +0000 UTC 2025-06-23 18:10:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-g7bk5-6fb4c74686" is progressing.}
  I0623 18:11:00.751931 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0623 18:11:00.751971 20 deployment.go:574] Observed Deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-06-23 18:11:00 +0000 UTC 2025-06-23 18:11:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0623 18:11:00.751981 20 deployment.go:574] Observed Deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-23 18:11:00 +0000 UTC 2025-06-23 18:10:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-g7bk5-6fb4c74686" has successfully progressed.}
  I0623 18:11:00.752126 20 deployment.go:578] Observed &Deployment event: MODIFIED
  I0623 18:11:00.752141 20 deployment.go:574] Observed Deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-06-23 18:11:00 +0000 UTC 2025-06-23 18:11:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0623 18:11:00.752151 20 deployment.go:574] Observed Deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-23 18:11:00 +0000 UTC 2025-06-23 18:10:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-g7bk5-6fb4c74686" has successfully progressed.}
  I0623 18:11:00.752162 20 deployment.go:571] Found Deployment test-deployment-g7bk5 in namespace deployment-9181 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0623 18:11:00.752180 20 deployment.go:582] Deployment test-deployment-g7bk5 has an updated status
  STEP: patching the Statefulset Status @ 06/23/25 18:11:00.752
  I0623 18:11:00.752232 20 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0623 18:11:00.759736 20 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/23/25 18:11:00.759
  I0623 18:11:00.761004 20 deployment.go:615] Observed &Deployment event: ADDED
  I0623 18:11:00.761025 20 deployment.go:611] Observed deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-23 18:10:58 +0000 UTC 2025-06-23 18:10:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-g7bk5-6fb4c74686"}
  I0623 18:11:00.761081 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0623 18:11:00.761102 20 deployment.go:611] Observed deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-23 18:10:58 +0000 UTC 2025-06-23 18:10:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-g7bk5-6fb4c74686"}
  I0623 18:11:00.761110 20 deployment.go:611] Observed deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-06-23 18:10:58 +0000 UTC 2025-06-23 18:10:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0623 18:11:00.761255 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0623 18:11:00.761322 20 deployment.go:611] Observed deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-06-23 18:10:58 +0000 UTC 2025-06-23 18:10:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0623 18:11:00.761335 20 deployment.go:611] Observed deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-23 18:10:58 +0000 UTC 2025-06-23 18:10:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-g7bk5-6fb4c74686" is progressing.}
  I0623 18:11:00.761486 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0623 18:11:00.761533 20 deployment.go:611] Observed deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-06-23 18:11:00 +0000 UTC 2025-06-23 18:11:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0623 18:11:00.761546 20 deployment.go:611] Observed deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-23 18:11:00 +0000 UTC 2025-06-23 18:10:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-g7bk5-6fb4c74686" has successfully progressed.}
  I0623 18:11:00.761638 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0623 18:11:00.761656 20 deployment.go:611] Observed deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-06-23 18:11:00 +0000 UTC 2025-06-23 18:11:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0623 18:11:00.761679 20 deployment.go:611] Observed deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-06-23 18:11:00 +0000 UTC 2025-06-23 18:10:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-g7bk5-6fb4c74686" has successfully progressed.}
  I0623 18:11:00.761688 20 deployment.go:611] Observed deployment test-deployment-g7bk5 in namespace deployment-9181 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0623 18:11:00.761767 20 deployment.go:615] Observed &Deployment event: MODIFIED
  I0623 18:11:00.761805 20 deployment.go:608] Found deployment test-deployment-g7bk5 in namespace deployment-9181 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0623 18:11:00.761817 20 deployment.go:619] Deployment test-deployment-g7bk5 has a patched status
  I0623 18:11:00.767191 20 deployment.go:632] Deployment "test-deployment-g7bk5":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-g7bk5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bef7747a-d492-4725-b7dd-8734eec10617",
      ResourceVersion: (string) (len=5) "52627",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886299058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-g7bk5-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0623 18:11:00.830440 20 deployment.go:40] New ReplicaSet "test-deployment-g7bk5-6fb4c74686" of Deployment "test-deployment-g7bk5":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-g7bk5-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c56be10-dd2b-4a85-bd4d-1e9be1e4980b",
      ResourceVersion: (string) (len=5) "52620",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886299058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-g7bk5",
          UID: (types.UID) (len=36) "bef7747a-d492-4725-b7dd-8734eec10617",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 62 65 66  |k:{\"uid\":\"bef|
              00000120  37 37 34 37 61 2d 64 34  39 32 2d 34 37 32 35 2d  |7747a-d492-4725-|
              00000130  62 37 64 64 2d 38 37 33  34 65 65 63 31 30 36 31  |b7dd-8734eec1061|
              00000140  37 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |7\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0623 18:11:00.835468 20 deployment.go:68] Pod "test-deployment-g7bk5-6fb4c74686-sgx47" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-g7bk5-6fb4c74686-sgx47",
      GenerateName: (string) (len=33) "test-deployment-g7bk5-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-9181",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d26acc5-234d-46c5-8df4-0d47c9da55c3",
      ResourceVersion: (string) (len=5) "52619",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886299058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-g7bk5-6fb4c74686",
          UID: (types.UID) (len=36) "9c56be10-dd2b-4a85-bd4d-1e9be1e4980b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 39 63 35 36 62 65 31  30 2d 64 64 32 62 2d 34  |"9c56be10-dd2b-4|
              000000a0  61 38 35 2d 62 64 34 64  2d 31 65 39 62 65 31 65  |a85-bd4d-1e9be1e|
              000000b0  34 39 38 30 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |4980b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 38 34 5c 22 7d 22 3a  |2.168.81.84\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ngsvm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ngsvm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-64-108",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63886299058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.64.108",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.64.108"
        }
      },
      PodIP: (string) (len=13) "192.168.81.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.81.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63886299058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63886299059,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c8e0d727f49b33db6b921e2aebfe17b1dceb547743a0817cb853c8a4a28d016e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ngsvm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0623 18:11:00.836576 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9181" for this suite. @ 06/23/25 18:11:00.841
• [2.170 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 06/23/25 18:11:00.85
  I0623 18:11:00.850904 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename pods @ 06/23/25 18:11:00.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:11:00.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:11:00.872
  STEP: Create set of pods @ 06/23/25 18:11:00.874
  I0623 18:11:00.884912 20 pods.go:874] created test-pod-1
  I0623 18:11:00.890424 20 pods.go:874] created test-pod-2
  I0623 18:11:00.896419 20 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/23/25 18:11:00.896
  E0623 18:11:01.496711      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:02.496862      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 06/23/25 18:11:02.935
  I0623 18:11:02.939350 20 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0623 18:11:03.496986      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:03.940859 20 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0623 18:11:04.497528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:04.940508 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7417" for this suite. @ 06/23/25 18:11:04.944
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 06/23/25 18:11:04.953
  I0623 18:11:04.953106 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename configmap @ 06/23/25 18:11:04.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:11:04.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:11:04.971
  STEP: Creating configMap with name configmap-test-volume-map-166c8628-782e-4689-ac36-688c041b1774 @ 06/23/25 18:11:04.973
  STEP: Creating a pod to test consume configMaps @ 06/23/25 18:11:04.978
  E0623 18:11:05.497629      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:06.497754      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:07.497878      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:08.498092      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/23/25 18:11:09.001
  I0623 18:11:09.007016 20 output.go:207] Trying to get logs from node ip-172-31-64-108 pod pod-configmaps-610c8336-49e0-4d01-ace4-5006cc9472c4 container agnhost-container: <nil>
  STEP: delete the pod @ 06/23/25 18:11:09.018
  I0623 18:11:09.040263 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3121" for this suite. @ 06/23/25 18:11:09.044
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 06/23/25 18:11:09.052
  I0623 18:11:09.052253 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename field-validation @ 06/23/25 18:11:09.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:11:09.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:11:09.068
  STEP: apply creating a deployment @ 06/23/25 18:11:09.07
  I0623 18:11:09.085212 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3140" for this suite. @ 06/23/25 18:11:09.146
• [0.105 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 06/23/25 18:11:09.157
  I0623 18:11:09.157232 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename container-probe @ 06/23/25 18:11:09.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:11:09.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:11:09.172
  STEP: Creating pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376 @ 06/23/25 18:11:09.175
  E0623 18:11:09.498197      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:10.498291      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/23/25 18:11:11.195
  I0623 18:11:11.199528 20 container_probe.go:1748] Initial restart count of pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 is 0
  I0623 18:11:11.202931 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:11.498378      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:12.498593      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:13.207635 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:13.499058      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:14.499129      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:15.212082 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:15.499276      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:16.499376      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:17.218349 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:17.499505      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:18.500023      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:19.223223 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:19.500902      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:20.501011      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:21.227476 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:21.501920      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:22.502041      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:23.233357 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:23.502707      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:24.503513      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:25.238583 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:25.503924      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:26.504131      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:27.242676 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:27.504984      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:28.505067      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:29.248589 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:29.506015      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:30.506225      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:31.253409 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:31.506798      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:32.507009      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:33.257695 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:33.507037      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:34.507934      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:35.262754 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:35.508054      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:36.509028      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:37.267800 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:37.509075      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:38.509167      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:39.274489 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:39.509922      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:40.510991      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:41.278974 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:41.511089      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:42.511212      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:43.284084 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:43.511325      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:44.511476      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:45.290155 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:45.512379      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:46.512472      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:47.296438 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:47.512568      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:48.512683      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:49.300977 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:49.513282      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:50.514077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:51.306654 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:51.514317      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:52.514373      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:53.311557 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:53.514895      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:54.514924      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:55.316418 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:55.515837      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:56.516024      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:57.321430 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:57.516701      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:11:58.516842      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:11:59.326206 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:11:59.517470      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:00.517642      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:12:01.331562 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:12:01.517848      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:02.518046      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:12:03.336678 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:12:03.518906      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:04.519019      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:12:05.340901 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:12:05.519116      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:06.519355      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:12:07.346103 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:12:07.519374      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:08.519572      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:12:09.351599 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:12:09.519954      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:10.520128      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:12:11.356472 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:12:11.520797      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:12.520909      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:12:13.361456 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  E0623 18:12:13.521671      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:14.522156      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:12:15.366609 20 container_probe.go:1758] Get pod test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 in namespace container-probe-4376
  I0623 18:12:15.366647 20 container_probe.go:1762] Restart count of pod container-probe-4376/test-grpc-bf1de93b-b322-459b-bc8c-3932843edf43 is now 1 (1m4.167093397s elapsed)
  STEP: deleting the pod @ 06/23/25 18:12:15.366
  I0623 18:12:15.378656 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4376" for this suite. @ 06/23/25 18:12:15.382
• [66.233 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 06/23/25 18:12:15.39
  I0623 18:12:15.390893 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/23/25 18:12:15.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:12:15.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:12:15.408
  STEP: getting /apis @ 06/23/25 18:12:15.417
  STEP: getting /apis/admissionregistration.k8s.io @ 06/23/25 18:12:15.421
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 06/23/25 18:12:15.422
  STEP: creating @ 06/23/25 18:12:15.423
  STEP: getting @ 06/23/25 18:12:15.44
  STEP: listing @ 06/23/25 18:12:15.443
  STEP: watching @ 06/23/25 18:12:15.446
  I0623 18:12:15.446493 20 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 06/23/25 18:12:15.447
  STEP: updating @ 06/23/25 18:12:15.453
  I0623 18:12:15.461490 20 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 06/23/25 18:12:15.461
  STEP: deleting a collection @ 06/23/25 18:12:15.475
  I0623 18:12:15.501155 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2239" for this suite. @ 06/23/25 18:12:15.505
• [0.124 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 06/23/25 18:12:15.514
  I0623 18:12:15.514923 20 util.go:453] >>> kubeConfig: /tmp/kubeconfig-1123132851
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/23/25 18:12:15.515
  E0623 18:12:15.522125      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/23/25 18:12:15.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/23/25 18:12:15.534
  I0623 18:12:15.536405 20 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0623 18:12:16.522936      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:17.524006      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:18.524119      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:19.524994      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:20.525186      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:21.525277      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:22.525407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:23.525508      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:24.525610      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:25.525847      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:26.525939      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:27.526025      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:28.526172      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:29.526271      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:30.526391      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:31.526461      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:32.526641      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:33.526734      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:34.526923      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:35.528013      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:36.528118      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:37.528209      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:38.528430      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:39.528528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:40.528617      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:41.528746      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:42.528907      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:43.529141      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:44.529999      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:45.530083      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:46.530243      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:47.531020      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:48.531233      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:49.531946      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:50.532033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:51.532987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:52.533987      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:53.534111      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:54.534604      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:55.535021      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:56.535983      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:57.536091      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:58.536819      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:12:59.537578      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:00.537933      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:01.538528      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:02.539096      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:03.539758      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:04.539923      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:05.540838      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:06.540915      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:07.540891      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:08.541023      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:09.541040      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:10.541204      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:11.541228      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:12.541910      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:13.541946      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:14.542158      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:13:15.537219 20 util.go:390] Waiting for terminating namespaces to be deleted...
  E0623 18:13:15.542345      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:13:15.543352 20 taints.go:144] Starting informer...
  STEP: Starting pods... @ 06/23/25 18:13:15.543
  I0623 18:13:15.761617 20 taints.go:463] Pod1 is running on ip-172-31-64-108. Tainting Node
  E0623 18:13:16.543253      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:17.544077      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:13:17.985269 20 taints.go:471] Pod2 is running on ip-172-31-64-108. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/23/25 18:13:17.985
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/23/25 18:13:17.994
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/23/25 18:13:17.998
  E0623 18:13:18.545021      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:19.545989      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:20.546192      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:21.546412      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:22.546628      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:23.546852      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:13:24.265861 20 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0623 18:13:24.547264      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:25.547407      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:26.547489      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:27.547608      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:28.547716      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:29.548698      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:30.548829      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:31.549033      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:32.549708      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:33.550003      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:34.550990      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:35.551100      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:36.551978      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:37.552975      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:38.553069      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:39.553977      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:40.554159      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:41.555008      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:42.555071      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0623 18:13:43.555736      20 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0623 18:13:43.597208 20 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/23/25 18:13:43.608
  I0623 18:13:43.611066 20 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2356" for this suite. @ 06/23/25 18:13:43.614
• [88.109 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0623 18:13:43.623563 20 suites.go:34] Running AfterSuite actions on node 1
  I0623 18:13:43.623577 20 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.039 seconds]
------------------------------

Ran 419 of 6731 Specs in 6299.315 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h45m0.19467345s
Test Suite Passed
