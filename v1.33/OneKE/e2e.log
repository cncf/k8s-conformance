  I0909 21:04:03.581579      22 e2e.go:109] Starting e2e run "57eba362-f52f-4455-b471-d00e2be59338" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1757451841 - will randomize all specs

Will run 419 of 6730 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0909 21:04:03.869087 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  I0909 21:04:03.871411 22 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0909 21:04:03.898538 22 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0909 21:04:03.909554 22 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-canal' (0 seconds elapsed)
  I0909 21:04:03.909616 22 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-multus' (0 seconds elapsed)
  I0909 21:04:03.909627 22 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'rke2-multus-rke2-whereabouts' (0 seconds elapsed)
  I0909 21:04:03.909645 22 e2e.go:245] e2e test version: v1.33.4
  I0909 21:04:03.910672 22 e2e.go:254] kube-apiserver version: v1.33.4+rke2r1
  I0909 21:04:03.910760 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  I0909 21:04:03.912740 22 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/09/25 21:04:04.15
  I0909 21:04:04.150163 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sysctl @ 09/09/25 21:04:04.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:04:04.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:04:04.191
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/09/25 21:04:04.194
  STEP: Watching for error events or started pod @ 09/09/25 21:04:04.209
  STEP: Waiting for pod completion @ 09/09/25 21:04:10.22
  STEP: Checking that the pod succeeded @ 09/09/25 21:04:12.234
  STEP: Getting logs from the pod @ 09/09/25 21:04:12.235
  STEP: Checking that the sysctl is actually updated @ 09/09/25 21:04:12.316
  I0909 21:04:12.317563 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7508" for this suite. @ 09/09/25 21:04:12.336
• [8.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/09/25 21:04:12.38
  I0909 21:04:12.381158 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename podtemplate @ 09/09/25 21:04:12.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:04:12.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:04:12.408
  I0909 21:04:12.471238 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-225" for this suite. @ 09/09/25 21:04:12.474
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 09/09/25 21:04:12.497
  I0909 21:04:12.498068 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename namespaces @ 09/09/25 21:04:12.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:04:12.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:04:12.545
  STEP: Read namespace status @ 09/09/25 21:04:12.549
  I0909 21:04:12.551903 22 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/09/25 21:04:12.551
  I0909 21:04:12.565026 22 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/09/25 21:04:12.565
  I0909 21:04:12.577349 22 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0909 21:04:12.578835 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9724" for this suite. @ 09/09/25 21:04:12.584
• [0.109 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 09/09/25 21:04:12.607
  I0909 21:04:12.607547 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/09/25 21:04:12.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:04:12.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:04:12.642
  STEP: Creating 50 configmaps @ 09/09/25 21:04:12.648
  STEP: Creating RC which spawns configmap-volume pods @ 09/09/25 21:04:13.01
  I0909 21:04:13.041514 22 resource.go:81] Pod name wrapped-volume-race-f6638fb0-3a20-42e8-ace2-a648f47ec8d9: Found 0 pods out of 5
  I0909 21:04:18.052100 22 resource.go:81] Pod name wrapped-volume-race-f6638fb0-3a20-42e8-ace2-a648f47ec8d9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/09/25 21:04:18.052
  STEP: Creating RC which spawns configmap-volume pods @ 09/09/25 21:04:20.106
  I0909 21:04:20.209208 22 resource.go:81] Pod name wrapped-volume-race-1f2a795c-4a69-4442-8b10-5544ad7a5b71: Found 1 pods out of 5
  I0909 21:04:25.222890 22 resource.go:81] Pod name wrapped-volume-race-1f2a795c-4a69-4442-8b10-5544ad7a5b71: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/09/25 21:04:25.223
  STEP: Creating RC which spawns configmap-volume pods @ 09/09/25 21:04:25.26
  I0909 21:04:25.301424 22 resource.go:81] Pod name wrapped-volume-race-bedc13e7-9cba-4f0f-a932-c48ec6000f53: Found 1 pods out of 5
  I0909 21:04:30.333198 22 resource.go:81] Pod name wrapped-volume-race-bedc13e7-9cba-4f0f-a932-c48ec6000f53: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/09/25 21:04:30.333
  STEP: deleting ReplicationController wrapped-volume-race-bedc13e7-9cba-4f0f-a932-c48ec6000f53 in namespace emptydir-wrapper-3020, will wait for the garbage collector to delete the pods @ 09/09/25 21:04:32.356
  I0909 21:04:32.424082 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-bedc13e7-9cba-4f0f-a932-c48ec6000f53 took: 14.490213ms
  I0909 21:04:32.525705 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-bedc13e7-9cba-4f0f-a932-c48ec6000f53 pods took: 101.619528ms
  STEP: deleting ReplicationController wrapped-volume-race-1f2a795c-4a69-4442-8b10-5544ad7a5b71 in namespace emptydir-wrapper-3020, will wait for the garbage collector to delete the pods @ 09/09/25 21:04:35.326
  I0909 21:04:35.396229 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-1f2a795c-4a69-4442-8b10-5544ad7a5b71 took: 11.568552ms
  I0909 21:04:35.504318 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-1f2a795c-4a69-4442-8b10-5544ad7a5b71 pods took: 108.088252ms
  STEP: deleting ReplicationController wrapped-volume-race-f6638fb0-3a20-42e8-ace2-a648f47ec8d9 in namespace emptydir-wrapper-3020, will wait for the garbage collector to delete the pods @ 09/09/25 21:04:38.105
  I0909 21:04:38.168449 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-f6638fb0-3a20-42e8-ace2-a648f47ec8d9 took: 8.329832ms
  I0909 21:04:38.369153 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-f6638fb0-3a20-42e8-ace2-a648f47ec8d9 pods took: 200.697875ms
  STEP: Cleaning up the configMaps @ 09/09/25 21:04:40.27
  I0909 21:04:40.587088 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3020" for this suite. @ 09/09/25 21:04:40.592
• [27.991 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/09/25 21:04:40.599
  I0909 21:04:40.599655 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replicaset @ 09/09/25 21:04:40.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:04:40.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:04:40.622
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/09/25 21:04:40.626
  I0909 21:04:40.642900 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0909 21:04:45.657798 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/09/25 21:04:45.658
  STEP: getting scale subresource @ 09/09/25 21:04:49.674
  STEP: updating a scale subresource @ 09/09/25 21:04:49.682
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/09/25 21:04:49.701
  STEP: Patch a scale subresource @ 09/09/25 21:04:49.715
  I0909 21:04:49.751109 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4369" for this suite. @ 09/09/25 21:04:49.782
• [9.216 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/09/25 21:04:49.818
  I0909 21:04:49.818291 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 21:04:49.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:04:49.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:04:49.852
  I0909 21:04:49.894995 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-162" for this suite. @ 09/09/25 21:04:49.899
• [0.090 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 09/09/25 21:04:49.907
  I0909 21:04:49.907753 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 21:04:49.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:04:49.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:04:49.928
  STEP: Setting up server cert @ 09/09/25 21:04:49.955
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 21:04:50.345
  STEP: Deploying the webhook pod @ 09/09/25 21:04:50.36
  STEP: Wait for the deployment to be ready @ 09/09/25 21:04:50.393
  I0909 21:04:50.444678 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0909 21:04:52.466741 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0909 21:04:54.476567 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0909 21:04:56.473375 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 4, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/09/25 21:04:58.474
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 21:04:58.508
  I0909 21:04:59.533691 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/09/25 21:04:59.666
  STEP: Creating a configMap that should be mutated @ 09/09/25 21:04:59.705
  STEP: Deleting the collection of validation webhooks @ 09/09/25 21:04:59.766
  STEP: Creating a configMap that should not be mutated @ 09/09/25 21:04:59.832
  I0909 21:04:59.954862 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1076" for this suite. @ 09/09/25 21:04:59.975
  STEP: Destroying namespace "webhook-markers-8761" for this suite. @ 09/09/25 21:04:59.989
• [10.090 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/09/25 21:04:59.997
  I0909 21:04:59.997288 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename field-validation @ 09/09/25 21:04:59.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:05:00.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:05:00.028
  STEP: apply creating a deployment @ 09/09/25 21:05:00.03
  I0909 21:05:00.041768 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6914" for this suite. @ 09/09/25 21:05:00.063
• [0.073 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/09/25 21:05:00.07
  I0909 21:05:00.070881 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename watch @ 09/09/25 21:05:00.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:05:00.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:05:00.091
  STEP: creating a watch on configmaps with a certain label @ 09/09/25 21:05:00.097
  STEP: creating a new configmap @ 09/09/25 21:05:00.099
  STEP: modifying the configmap once @ 09/09/25 21:05:00.11
  STEP: changing the label value of the configmap @ 09/09/25 21:05:00.119
  STEP: Expecting to observe a delete notification for the watched object @ 09/09/25 21:05:00.128
  I0909 21:05:00.128858 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2101  072bb844-f88b-46b8-92eb-39e7275723a5 7816 0 2025-09-09 21:05:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-09 21:05:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:05:00.130575 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2101  072bb844-f88b-46b8-92eb-39e7275723a5 7818 0 2025-09-09 21:05:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-09 21:05:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:05:00.131056 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2101  072bb844-f88b-46b8-92eb-39e7275723a5 7819 0 2025-09-09 21:05:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-09 21:05:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/09/25 21:05:00.131
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/09/25 21:05:00.139
  STEP: changing the label value of the configmap back @ 09/09/25 21:05:10.14
  STEP: modifying the configmap a third time @ 09/09/25 21:05:10.177
  STEP: deleting the configmap @ 09/09/25 21:05:10.188
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/09/25 21:05:10.197
  I0909 21:05:10.199145 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2101  072bb844-f88b-46b8-92eb-39e7275723a5 7886 0 2025-09-09 21:05:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-09 21:05:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:05:10.202790 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2101  072bb844-f88b-46b8-92eb-39e7275723a5 7887 0 2025-09-09 21:05:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-09 21:05:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:05:10.204399 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2101  072bb844-f88b-46b8-92eb-39e7275723a5 7888 0 2025-09-09 21:05:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-09 21:05:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:05:10.206827 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2101" for this suite. @ 09/09/25 21:05:10.216
• [10.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/09/25 21:05:10.229
  I0909 21:05:10.229906 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename disruption @ 09/09/25 21:05:10.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:05:10.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:05:10.253
  STEP: creating the pdb @ 09/09/25 21:05:10.257
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:05:10.262
  STEP: updating the pdb @ 09/09/25 21:05:12.269
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:05:12.28
  STEP: patching the pdb @ 09/09/25 21:05:14.285
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:05:14.4
  STEP: Waiting for the pdb to be deleted @ 09/09/25 21:05:14.481
  I0909 21:05:14.485982 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-304" for this suite. @ 09/09/25 21:05:14.489
• [4.266 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 09/09/25 21:05:14.495
  I0909 21:05:14.495620 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:05:14.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:05:14.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:05:14.519
  STEP: creating service multiprotocol-test in namespace services-1051 @ 09/09/25 21:05:14.522
  STEP: creating pod pod1 in namespace services-1051 @ 09/09/25 21:05:14.549
  STEP: Creating pod pod1 in namespace services-1051 @ 09/09/25 21:05:14.549
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1051 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/09/25 21:05:16.589
  I0909 21:05:16.599989      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:05:16.613249 22 service.go:4729] successfully validated that service multiprotocol-test in namespace services-1051 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/09/25 21:05:16.613
  I0909 21:05:16.614405 22 resource.go:361] Creating new exec pod
  I0909 21:05:24.666620 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.109.98 80'
  I0909 21:05:25.206794 22 builder.go:146] stderr: "+ + nc -v -t -w 2 10.43.109.98 80\necho hostNameConnection to 10.43.109.98 80 port [tcp/http] succeeded!\n\n"
  I0909 21:05:25.206875 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:05:25.206977 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.109.98 80'
  I0909 21:05:27.471924 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.109.98 80\n"
  I0909 21:05:27.472028 22 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/09/25 21:05:27.472
  I0909 21:05:27.491901 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.109.98 80'
  I0909 21:05:27.735642 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.109.98 80\nConnection to 10.43.109.98 80 port [tcp/http] succeeded!\n"
  I0909 21:05:27.736086 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:05:27.736464 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.109.98 80'
  I0909 21:05:29.956901 22 builder.go:146] stderr: "+ nc+ echo hostName\n -v -u -w 2 10.43.109.98 80\n"
  I0909 21:05:29.957046 22 builder.go:147] stdout: ""
  I0909 21:05:29.957304 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.109.98 80'
  I0909 21:05:32.211176 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.109.98 80\n"
  I0909 21:05:32.211274 22 builder.go:147] stdout: ""
  I0909 21:05:32.211530 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.109.98 80'
  I0909 21:05:34.471231 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.109.98 80\n"
  I0909 21:05:34.471337 22 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/09/25 21:05:34.471
  I0909 21:05:34.500499 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.109.98 80'
  I0909 21:05:36.719441 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.109.98 80\n"
  I0909 21:05:36.719501 22 builder.go:147] stdout: "pod1"
  I0909 21:05:36.719664 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.109.98 80'
  I0909 21:05:39.026410 22 builder.go:135] rc: 1
  I0909 21:05:39.026500 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.109.98 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.109.98 80
  nc: connect to 10.43.109.98 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0909 21:05:39.026613 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.109.98 80'
  I0909 21:05:41.282151 22 builder.go:135] rc: 1
  I0909 21:05:41.282655 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.109.98 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.109.98 80
  + echo hostName
  nc: connect to 10.43.109.98 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0909 21:05:41.283157 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.109.98 80'
  I0909 21:05:43.504201 22 builder.go:135] rc: 1
  I0909 21:05:43.504279 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1051 exec execpodl7ndf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.109.98 80:
  Command stdout:

  stderr:
  + + nc -v -t -w 2 10.43.109.98 80
  echo hostName
  nc: connect to 10.43.109.98 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0909 21:05:43.504572 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1051" for this suite. @ 09/09/25 21:05:43.512
• [29.027 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/09/25 21:05:43.525
  I0909 21:05:43.525195 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename deployment @ 09/09/25 21:05:43.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:05:43.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:05:43.561
  I0909 21:05:43.578703 22 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  I0909 21:05:48.593637 22 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/09/25 21:05:48.593
  I0909 21:05:52.612485 22 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/09/25 21:05:52.65
  I0909 21:05:56.682041 22 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7734",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a8702993-3ec5-429d-93bf-8f5d00c12a0d",
      ResourceVersion: (string) (len=4) "8218",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893048752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0909 21:05:56.726659 22 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7734",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7390e37b-1da2-4d50-ac87-1952c6394410",
      ResourceVersion: (string) (len=4) "8208",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893048752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "a8702993-3ec5-429d-93bf-8f5d00c12a0d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 38 37 30 32 39  39 33 2d 33 65 63 35 2d  |\"a8702993-3ec5-|
              00000120  34 32 39 64 2d 39 33 62  66 2d 38 66 35 64 30 30  |429d-93bf-8f5d00|
              00000130  63 31 32 61 30 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c12a0d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 21:05:56.738407 22 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-v8977" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-v8977",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-7734",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee9e7ece-6fec-4717-abdb-37cdd4fbd501",
      ResourceVersion: (string) (len=4) "8207",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893048752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.38/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.38\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a6532919e139083d7f93fb9e0048e1f46860b1d70a1e732f3e9adffbd8567b38",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "7390e37b-1da2-4d50-ac87-1952c6394410",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  39 30 65 33 37 62 2d 31  |d\":\"7390e37b-1|
              00000090  64 61 32 2d 34 64 35 30  2d 61 63 38 37 2d 31 39  |da2-4d50-ac87-19|
              000000a0  35 32 63 36 33 39 34 34  31 30 5c 22 7d 22 3a 7b  |52c6394410\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 33 38  5c 22 7d 22 3a 7b 22 2e  |.42.1.38\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n58hx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n58hx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048752,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=10) "10.42.1.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893048752,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893048753,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://bc3e629a7d66cb31b5088191f91b2544a524bafa646b0a8acf6c623f4cde30f4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n58hx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:05:56.742679 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7734" for this suite. @ 09/09/25 21:05:56.75
• [13.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/09/25 21:05:56.762
  I0909 21:05:56.762289 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 21:05:56.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:05:56.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:05:56.796
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 21:05:56.801
  STEP: Saw pod success @ 09/09/25 21:06:00.83
  I0909 21:06:00.834222 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-8c26a677-9eb6-456f-9670-e8be2b037489 container client-container: <nil>
  STEP: delete the pod @ 09/09/25 21:06:00.876
  I0909 21:06:00.915656 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9604" for this suite. @ 09/09/25 21:06:00.919
• [4.166 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/09/25 21:06:00.928
  I0909 21:06:00.928085 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 21:06:00.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:06:00.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:06:00.968
  STEP: Creating secret with name secret-test-46f5580d-90f7-4b22-b892-73a7595145d1 @ 09/09/25 21:06:00.973
  STEP: Creating a pod to test consume secrets @ 09/09/25 21:06:00.981
  STEP: Saw pod success @ 09/09/25 21:06:05.048
  I0909 21:06:05.052976 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-secrets-f20d857b-adc4-4c9b-b60e-44165ac213ea container secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 21:06:05.091
  I0909 21:06:05.123505 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9477" for this suite. @ 09/09/25 21:06:05.134
• [4.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/09/25 21:06:05.159
  I0909 21:06:05.159094 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename var-expansion @ 09/09/25 21:06:05.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:06:05.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:06:05.183
  STEP: creating the pod with failed condition @ 09/09/25 21:06:05.185
  STEP: updating the pod @ 09/09/25 21:08:05.199
  I0909 21:08:05.741275 22 pod_client.go:173] Successfully updated pod "var-expansion-aebcc3de-4d64-4cb6-9aa9-9a2b696e7fee"
  STEP: waiting for pod running @ 09/09/25 21:08:05.741
  STEP: deleting the pod gracefully @ 09/09/25 21:08:07.751
  I0909 21:08:07.752362 22 delete.go:62] Deleting pod "var-expansion-aebcc3de-4d64-4cb6-9aa9-9a2b696e7fee" in namespace "var-expansion-720"
  I0909 21:08:07.768264 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-aebcc3de-4d64-4cb6-9aa9-9a2b696e7fee" to be fully deleted
  I0909 21:08:40.005960 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-720" for this suite. @ 09/09/25 21:08:40.014
• [154.874 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 09/09/25 21:08:40.04
  I0909 21:08:40.041474 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 21:08:40.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:08:40.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:08:40.082
  STEP: Creating a suspended job @ 09/09/25 21:08:40.094
  STEP: Patching the Job @ 09/09/25 21:08:40.113
  STEP: Watching for Job to be patched @ 09/09/25 21:08:40.14
  I0909 21:08:40.143728 22 job.go:1369] Event ADDED observed for Job e2e-7jwv5 in namespace job-2180 with labels: map[e2e-job-label:e2e-7jwv5] and annotations: map[]
  I0909 21:08:40.143825 22 job.go:1369] Event MODIFIED observed for Job e2e-7jwv5 in namespace job-2180 with labels: map[e2e-job-label:e2e-7jwv5] and annotations: map[]
  I0909 21:08:40.143844 22 job.go:1372] Event MODIFIED found for Job e2e-7jwv5 in namespace job-2180 with labels: map[e2e-7jwv5:patched e2e-job-label:e2e-7jwv5] and annotations: map[]
  STEP: Updating the job @ 09/09/25 21:08:40.144
  STEP: Watching for Job to be updated @ 09/09/25 21:08:40.153
  I0909 21:08:40.154745 22 job.go:1372] Event MODIFIED found for Job e2e-7jwv5 in namespace job-2180 with labels: map[e2e-7jwv5:patched e2e-job-label:e2e-7jwv5] and annotations: map[updated:true]
  I0909 21:08:40.154785 22 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/09/25 21:08:40.154
  I0909 21:08:40.159406 22 job.go:1247] Job: e2e-7jwv5 as labels: map[e2e-7jwv5:patched e2e-job-label:e2e-7jwv5]
  STEP: Waiting for job to complete @ 09/09/25 21:08:40.161
  STEP: Delete a job collection with a labelselector @ 09/09/25 21:08:48.194
  STEP: Watching for Job to be deleted @ 09/09/25 21:08:48.204
  I0909 21:08:48.207230 22 job.go:1369] Event MODIFIED observed for Job e2e-7jwv5 in namespace job-2180 with labels: map[e2e-7jwv5:patched e2e-job-label:e2e-7jwv5] and annotations: map[updated:true]
  I0909 21:08:48.208215 22 job.go:1369] Event MODIFIED observed for Job e2e-7jwv5 in namespace job-2180 with labels: map[e2e-7jwv5:patched e2e-job-label:e2e-7jwv5] and annotations: map[updated:true]
  I0909 21:08:48.209070 22 job.go:1369] Event MODIFIED observed for Job e2e-7jwv5 in namespace job-2180 with labels: map[e2e-7jwv5:patched e2e-job-label:e2e-7jwv5] and annotations: map[updated:true]
  I0909 21:08:48.210093 22 job.go:1369] Event MODIFIED observed for Job e2e-7jwv5 in namespace job-2180 with labels: map[e2e-7jwv5:patched e2e-job-label:e2e-7jwv5] and annotations: map[updated:true]
  I0909 21:08:48.210579 22 job.go:1369] Event MODIFIED observed for Job e2e-7jwv5 in namespace job-2180 with labels: map[e2e-7jwv5:patched e2e-job-label:e2e-7jwv5] and annotations: map[updated:true]
  I0909 21:08:48.211348 22 job.go:1372] Event DELETED found for Job e2e-7jwv5 in namespace job-2180 with labels: map[e2e-7jwv5:patched e2e-job-label:e2e-7jwv5] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/09/25 21:08:48.211
  I0909 21:08:48.298913 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2180" for this suite. @ 09/09/25 21:08:48.303
• [8.272 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/09/25 21:08:48.311
  I0909 21:08:48.311974 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename deployment @ 09/09/25 21:08:48.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:08:48.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:08:48.339
  STEP: creating a Deployment @ 09/09/25 21:08:48.348
  I0909 21:08:48.348715 22 deployment.go:506] Creating simple deployment test-deployment-6f24f
  I0909 21:08:48.366459 22 deployment.go:223] deployment "test-deployment-6f24f" doesn't have the required revision set
  STEP: Getting /status @ 09/09/25 21:08:50.389
  I0909 21:08:50.392978 22 deployment.go:531] Deployment test-deployment-6f24f has Conditions: [{Available True 2025-09-09 21:08:49 +0000 UTC 2025-09-09 21:08:49 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-09 21:08:49 +0000 UTC 2025-09-09 21:08:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6f24f-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/09/25 21:08:50.393
  I0909 21:08:50.404309 22 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 8, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 8, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 8, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 8, 48, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-6f24f-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/09/25 21:08:50.404
  I0909 21:08:50.409439 22 deployment.go:578] Observed &Deployment event: ADDED
  I0909 21:08:50.409586 22 deployment.go:574] Observed Deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-09 21:08:48 +0000 UTC 2025-09-09 21:08:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6f24f-6fb4c74686"}
  I0909 21:08:50.409823 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0909 21:08:50.409949 22 deployment.go:574] Observed Deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-09 21:08:48 +0000 UTC 2025-09-09 21:08:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6f24f-6fb4c74686"}
  I0909 21:08:50.410445 22 deployment.go:574] Observed Deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-09 21:08:48 +0000 UTC 2025-09-09 21:08:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0909 21:08:50.410645 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0909 21:08:50.410809 22 deployment.go:574] Observed Deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-09 21:08:48 +0000 UTC 2025-09-09 21:08:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0909 21:08:50.410990 22 deployment.go:574] Observed Deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-09 21:08:48 +0000 UTC 2025-09-09 21:08:48 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6f24f-6fb4c74686" is progressing.}
  I0909 21:08:50.411138 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0909 21:08:50.411264 22 deployment.go:574] Observed Deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-09 21:08:49 +0000 UTC 2025-09-09 21:08:49 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0909 21:08:50.411414 22 deployment.go:574] Observed Deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-09 21:08:49 +0000 UTC 2025-09-09 21:08:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6f24f-6fb4c74686" has successfully progressed.}
  I0909 21:08:50.411578 22 deployment.go:578] Observed &Deployment event: MODIFIED
  I0909 21:08:50.411702 22 deployment.go:574] Observed Deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-09 21:08:49 +0000 UTC 2025-09-09 21:08:49 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0909 21:08:50.411886 22 deployment.go:574] Observed Deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-09 21:08:49 +0000 UTC 2025-09-09 21:08:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6f24f-6fb4c74686" has successfully progressed.}
  I0909 21:08:50.412027 22 deployment.go:571] Found Deployment test-deployment-6f24f in namespace deployment-3792 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0909 21:08:50.412232 22 deployment.go:582] Deployment test-deployment-6f24f has an updated status
  STEP: patching the Statefulset Status @ 09/09/25 21:08:50.412
  I0909 21:08:50.413000 22 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0909 21:08:50.423690 22 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/09/25 21:08:50.424
  I0909 21:08:50.426182 22 deployment.go:615] Observed &Deployment event: ADDED
  I0909 21:08:50.426204 22 deployment.go:611] Observed deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-09 21:08:48 +0000 UTC 2025-09-09 21:08:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6f24f-6fb4c74686"}
  I0909 21:08:50.426409 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0909 21:08:50.426918 22 deployment.go:611] Observed deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-09 21:08:48 +0000 UTC 2025-09-09 21:08:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6f24f-6fb4c74686"}
  I0909 21:08:50.426934 22 deployment.go:611] Observed deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-09 21:08:48 +0000 UTC 2025-09-09 21:08:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0909 21:08:50.427142 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0909 21:08:50.427155 22 deployment.go:611] Observed deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-09 21:08:48 +0000 UTC 2025-09-09 21:08:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0909 21:08:50.427498 22 deployment.go:611] Observed deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-09 21:08:48 +0000 UTC 2025-09-09 21:08:48 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6f24f-6fb4c74686" is progressing.}
  I0909 21:08:50.427772 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0909 21:08:50.427868 22 deployment.go:611] Observed deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-09 21:08:49 +0000 UTC 2025-09-09 21:08:49 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0909 21:08:50.427877 22 deployment.go:611] Observed deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-09 21:08:49 +0000 UTC 2025-09-09 21:08:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6f24f-6fb4c74686" has successfully progressed.}
  I0909 21:08:50.428223 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0909 21:08:50.428472 22 deployment.go:611] Observed deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-09 21:08:49 +0000 UTC 2025-09-09 21:08:49 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0909 21:08:50.428549 22 deployment.go:611] Observed deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-09 21:08:49 +0000 UTC 2025-09-09 21:08:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6f24f-6fb4c74686" has successfully progressed.}
  I0909 21:08:50.428559 22 deployment.go:611] Observed deployment test-deployment-6f24f in namespace deployment-3792 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0909 21:08:50.428960 22 deployment.go:615] Observed &Deployment event: MODIFIED
  I0909 21:08:50.429319 22 deployment.go:608] Found deployment test-deployment-6f24f in namespace deployment-3792 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0909 21:08:50.429680 22 deployment.go:619] Deployment test-deployment-6f24f has a patched status
  I0909 21:08:50.432545 22 deployment.go:632] Deployment "test-deployment-6f24f":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-6f24f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3792",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bde25e3b-02da-41f7-bd65-dbcb75b0b007",
      ResourceVersion: (string) (len=4) "9246",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893048928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0909 21:08:50.488333 22 deployment.go:40] New ReplicaSet "test-deployment-6f24f-6fb4c74686" of Deployment "test-deployment-6f24f":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6f24f-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3792",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5281bafd-6638-4c10-90e5-d0a4acb5eea4",
      ResourceVersion: (string) (len=4) "9239",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893048928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-6f24f",
          UID: (types.UID) (len=36) "bde25e3b-02da-41f7-bd65-dbcb75b0b007",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 62 64 65  |k:{\"uid\":\"bde|
              00000120  32 35 65 33 62 2d 30 32  64 61 2d 34 31 66 37 2d  |25e3b-02da-41f7-|
              00000130  62 64 36 35 2d 64 62 63  62 37 35 62 30 62 30 30  |bd65-dbcb75b0b00|
              00000140  37 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |7\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 21:08:50.492354 22 deployment.go:68] Pod "test-deployment-6f24f-6fb4c74686-j49h5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-6f24f-6fb4c74686-j49h5",
      GenerateName: (string) (len=33) "test-deployment-6f24f-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-3792",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b5c3889-fd53-4515-9fd9-01f53e9a67d1",
      ResourceVersion: (string) (len=4) "9238",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893048928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.43/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.43/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.43\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "68d551b05f36591f78a4a781fbda52207b0a4bdd50d2f5b50cc3246621a48b0c"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-6f24f-6fb4c74686",
          UID: (types.UID) (len=36) "5281bafd-6638-4c10-90e5-d0a4acb5eea4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 35 32 38 31 62 61 66  64 2d 36 36 33 38 2d 34  |"5281bafd-6638-4|
              000000a0  63 31 30 2d 39 30 65 35  2d 64 30 61 34 61 63 62  |c10-90e5-d0a4acb|
              000000b0  35 65 65 61 34 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |5eea4\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 34 33  5c 22 7d 22 3a 7b 22 2e  |.42.1.43\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-78zxl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-78zxl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893048928,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=10) "10.42.1.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893048928,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893048929,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d0df68ea7e11c560bc02e8968451d6e3a1266bb8e77fa91d2465ef293848412a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-78zxl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:08:50.496108 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3792" for this suite. @ 09/09/25 21:08:50.5
• [2.196 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 09/09/25 21:08:50.508
  I0909 21:08:50.508209 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename gc @ 09/09/25 21:08:50.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:08:50.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:08:50.542
  STEP: create the rc @ 09/09/25 21:08:50.603
  I0909 21:08:50.613445      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/09/25 21:08:56.619
  STEP: wait for the rc to be deleted @ 09/09/25 21:08:56.636
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/09/25 21:09:01.643
  STEP: Gathering metrics @ 09/09/25 21:09:31.67
  I0909 21:09:32.189441 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0909 21:09:32.189531 22 delete.go:95] Deleting pod "simpletest.rc-245kn" in namespace "gc-1256"
  I0909 21:09:32.216124 22 delete.go:95] Deleting pod "simpletest.rc-2l2bn" in namespace "gc-1256"
  I0909 21:09:32.244784 22 delete.go:95] Deleting pod "simpletest.rc-2tml8" in namespace "gc-1256"
  I0909 21:09:32.277383 22 delete.go:95] Deleting pod "simpletest.rc-4b6fg" in namespace "gc-1256"
  I0909 21:09:32.305743 22 delete.go:95] Deleting pod "simpletest.rc-4dpf4" in namespace "gc-1256"
  I0909 21:09:32.323236 22 delete.go:95] Deleting pod "simpletest.rc-4gfq8" in namespace "gc-1256"
  I0909 21:09:32.344925 22 delete.go:95] Deleting pod "simpletest.rc-4hlhq" in namespace "gc-1256"
  I0909 21:09:32.371975 22 delete.go:95] Deleting pod "simpletest.rc-4rc7w" in namespace "gc-1256"
  I0909 21:09:32.392476 22 delete.go:95] Deleting pod "simpletest.rc-56ckf" in namespace "gc-1256"
  I0909 21:09:32.412056 22 delete.go:95] Deleting pod "simpletest.rc-5gqbw" in namespace "gc-1256"
  I0909 21:09:32.435709 22 delete.go:95] Deleting pod "simpletest.rc-5t9nd" in namespace "gc-1256"
  I0909 21:09:32.454041 22 delete.go:95] Deleting pod "simpletest.rc-5zblk" in namespace "gc-1256"
  I0909 21:09:32.477542 22 delete.go:95] Deleting pod "simpletest.rc-6spm8" in namespace "gc-1256"
  I0909 21:09:32.502268 22 delete.go:95] Deleting pod "simpletest.rc-7fp6x" in namespace "gc-1256"
  I0909 21:09:32.525920 22 delete.go:95] Deleting pod "simpletest.rc-7j5tt" in namespace "gc-1256"
  I0909 21:09:32.546696 22 delete.go:95] Deleting pod "simpletest.rc-7jjfz" in namespace "gc-1256"
  I0909 21:09:32.576379 22 delete.go:95] Deleting pod "simpletest.rc-8bt99" in namespace "gc-1256"
  I0909 21:09:32.608850 22 delete.go:95] Deleting pod "simpletest.rc-8hxmf" in namespace "gc-1256"
  I0909 21:09:32.634520 22 delete.go:95] Deleting pod "simpletest.rc-8jq2b" in namespace "gc-1256"
  I0909 21:09:32.656223 22 delete.go:95] Deleting pod "simpletest.rc-8qm2p" in namespace "gc-1256"
  I0909 21:09:32.684607 22 delete.go:95] Deleting pod "simpletest.rc-92pml" in namespace "gc-1256"
  I0909 21:09:32.720397 22 delete.go:95] Deleting pod "simpletest.rc-97sbx" in namespace "gc-1256"
  I0909 21:09:32.744710 22 delete.go:95] Deleting pod "simpletest.rc-988gr" in namespace "gc-1256"
  I0909 21:09:32.786595 22 delete.go:95] Deleting pod "simpletest.rc-9c25r" in namespace "gc-1256"
  I0909 21:09:32.822966 22 delete.go:95] Deleting pod "simpletest.rc-9f2st" in namespace "gc-1256"
  I0909 21:09:32.850845 22 delete.go:95] Deleting pod "simpletest.rc-b2vzq" in namespace "gc-1256"
  I0909 21:09:32.884489 22 delete.go:95] Deleting pod "simpletest.rc-bchgs" in namespace "gc-1256"
  I0909 21:09:32.899900 22 delete.go:95] Deleting pod "simpletest.rc-bg9kz" in namespace "gc-1256"
  I0909 21:09:32.929027 22 delete.go:95] Deleting pod "simpletest.rc-bn9l6" in namespace "gc-1256"
  I0909 21:09:32.942590 22 delete.go:95] Deleting pod "simpletest.rc-bvfh5" in namespace "gc-1256"
  I0909 21:09:32.959238 22 delete.go:95] Deleting pod "simpletest.rc-c76cp" in namespace "gc-1256"
  I0909 21:09:32.975602 22 delete.go:95] Deleting pod "simpletest.rc-cmq8c" in namespace "gc-1256"
  I0909 21:09:33.000006 22 delete.go:95] Deleting pod "simpletest.rc-cqj6g" in namespace "gc-1256"
  I0909 21:09:33.020843 22 delete.go:95] Deleting pod "simpletest.rc-dwtv8" in namespace "gc-1256"
  I0909 21:09:33.040320 22 delete.go:95] Deleting pod "simpletest.rc-dxcbl" in namespace "gc-1256"
  I0909 21:09:33.060402 22 delete.go:95] Deleting pod "simpletest.rc-fk2p2" in namespace "gc-1256"
  I0909 21:09:33.072944 22 delete.go:95] Deleting pod "simpletest.rc-fnn2n" in namespace "gc-1256"
  I0909 21:09:33.090169 22 delete.go:95] Deleting pod "simpletest.rc-fpd4b" in namespace "gc-1256"
  I0909 21:09:33.110605 22 delete.go:95] Deleting pod "simpletest.rc-fqqx4" in namespace "gc-1256"
  I0909 21:09:33.135868 22 delete.go:95] Deleting pod "simpletest.rc-gp2kx" in namespace "gc-1256"
  I0909 21:09:33.152651 22 delete.go:95] Deleting pod "simpletest.rc-h2kp8" in namespace "gc-1256"
  I0909 21:09:33.172220 22 delete.go:95] Deleting pod "simpletest.rc-h56t6" in namespace "gc-1256"
  I0909 21:09:33.186741 22 delete.go:95] Deleting pod "simpletest.rc-h5j4v" in namespace "gc-1256"
  I0909 21:09:33.209046 22 delete.go:95] Deleting pod "simpletest.rc-hcjpg" in namespace "gc-1256"
  I0909 21:09:33.225499 22 delete.go:95] Deleting pod "simpletest.rc-hh8bb" in namespace "gc-1256"
  I0909 21:09:33.239539 22 delete.go:95] Deleting pod "simpletest.rc-hlzmr" in namespace "gc-1256"
  I0909 21:09:33.256648 22 delete.go:95] Deleting pod "simpletest.rc-hsk7l" in namespace "gc-1256"
  I0909 21:09:33.276407 22 delete.go:95] Deleting pod "simpletest.rc-jbqrk" in namespace "gc-1256"
  I0909 21:09:33.290188 22 delete.go:95] Deleting pod "simpletest.rc-jgh6c" in namespace "gc-1256"
  I0909 21:09:33.311113 22 delete.go:95] Deleting pod "simpletest.rc-jskhp" in namespace "gc-1256"
  I0909 21:09:33.333885 22 delete.go:95] Deleting pod "simpletest.rc-k45r4" in namespace "gc-1256"
  I0909 21:09:33.356919 22 delete.go:95] Deleting pod "simpletest.rc-k5gcb" in namespace "gc-1256"
  I0909 21:09:33.373276 22 delete.go:95] Deleting pod "simpletest.rc-k77l8" in namespace "gc-1256"
  I0909 21:09:33.388118 22 delete.go:95] Deleting pod "simpletest.rc-k85w7" in namespace "gc-1256"
  I0909 21:09:33.402195 22 delete.go:95] Deleting pod "simpletest.rc-kk6nw" in namespace "gc-1256"
  I0909 21:09:33.415568 22 delete.go:95] Deleting pod "simpletest.rc-l7pfv" in namespace "gc-1256"
  I0909 21:09:33.431820 22 delete.go:95] Deleting pod "simpletest.rc-lhzck" in namespace "gc-1256"
  I0909 21:09:33.452331 22 delete.go:95] Deleting pod "simpletest.rc-lm26k" in namespace "gc-1256"
  I0909 21:09:33.471442 22 delete.go:95] Deleting pod "simpletest.rc-lxjjg" in namespace "gc-1256"
  I0909 21:09:33.496780 22 delete.go:95] Deleting pod "simpletest.rc-lzh5c" in namespace "gc-1256"
  I0909 21:09:33.521027 22 delete.go:95] Deleting pod "simpletest.rc-m2vz4" in namespace "gc-1256"
  I0909 21:09:33.540588 22 delete.go:95] Deleting pod "simpletest.rc-m4mwq" in namespace "gc-1256"
  I0909 21:09:33.565656 22 delete.go:95] Deleting pod "simpletest.rc-mcg6k" in namespace "gc-1256"
  I0909 21:09:33.591006 22 delete.go:95] Deleting pod "simpletest.rc-mfhtz" in namespace "gc-1256"
  I0909 21:09:33.614227 22 delete.go:95] Deleting pod "simpletest.rc-n8czb" in namespace "gc-1256"
  I0909 21:09:33.634827 22 delete.go:95] Deleting pod "simpletest.rc-nd5nr" in namespace "gc-1256"
  I0909 21:09:33.653199 22 delete.go:95] Deleting pod "simpletest.rc-p2xhb" in namespace "gc-1256"
  I0909 21:09:33.678064 22 delete.go:95] Deleting pod "simpletest.rc-p87gf" in namespace "gc-1256"
  I0909 21:09:33.704606 22 delete.go:95] Deleting pod "simpletest.rc-pc6f7" in namespace "gc-1256"
  I0909 21:09:33.733180 22 delete.go:95] Deleting pod "simpletest.rc-pkdxh" in namespace "gc-1256"
  I0909 21:09:33.752359 22 delete.go:95] Deleting pod "simpletest.rc-pxxsz" in namespace "gc-1256"
  I0909 21:09:33.766824 22 delete.go:95] Deleting pod "simpletest.rc-q8dwz" in namespace "gc-1256"
  I0909 21:09:33.783382 22 delete.go:95] Deleting pod "simpletest.rc-q98qj" in namespace "gc-1256"
  I0909 21:09:33.798128 22 delete.go:95] Deleting pod "simpletest.rc-qbn9q" in namespace "gc-1256"
  I0909 21:09:33.813485 22 delete.go:95] Deleting pod "simpletest.rc-qbzpc" in namespace "gc-1256"
  I0909 21:09:33.828371 22 delete.go:95] Deleting pod "simpletest.rc-qgmtl" in namespace "gc-1256"
  I0909 21:09:33.844761 22 delete.go:95] Deleting pod "simpletest.rc-qhkjx" in namespace "gc-1256"
  I0909 21:09:33.873097 22 delete.go:95] Deleting pod "simpletest.rc-qjhv8" in namespace "gc-1256"
  I0909 21:09:33.894518 22 delete.go:95] Deleting pod "simpletest.rc-qpblt" in namespace "gc-1256"
  I0909 21:09:33.906886 22 delete.go:95] Deleting pod "simpletest.rc-rbqs4" in namespace "gc-1256"
  I0909 21:09:33.928770 22 delete.go:95] Deleting pod "simpletest.rc-rdj4j" in namespace "gc-1256"
  I0909 21:09:33.956610 22 delete.go:95] Deleting pod "simpletest.rc-rg692" in namespace "gc-1256"
  I0909 21:09:33.984490 22 delete.go:95] Deleting pod "simpletest.rc-rsnb5" in namespace "gc-1256"
  I0909 21:09:34.005082 22 delete.go:95] Deleting pod "simpletest.rc-s2xnm" in namespace "gc-1256"
  I0909 21:09:34.023261 22 delete.go:95] Deleting pod "simpletest.rc-s98dz" in namespace "gc-1256"
  I0909 21:09:34.042321 22 delete.go:95] Deleting pod "simpletest.rc-sf9dn" in namespace "gc-1256"
  I0909 21:09:34.059592 22 delete.go:95] Deleting pod "simpletest.rc-stjp7" in namespace "gc-1256"
  I0909 21:09:34.076304 22 delete.go:95] Deleting pod "simpletest.rc-stmmj" in namespace "gc-1256"
  I0909 21:09:34.107844 22 delete.go:95] Deleting pod "simpletest.rc-tncjc" in namespace "gc-1256"
  I0909 21:09:34.155585 22 delete.go:95] Deleting pod "simpletest.rc-v2hgp" in namespace "gc-1256"
  I0909 21:09:34.204731 22 delete.go:95] Deleting pod "simpletest.rc-v8r5c" in namespace "gc-1256"
  I0909 21:09:34.256623 22 delete.go:95] Deleting pod "simpletest.rc-wktpz" in namespace "gc-1256"
  I0909 21:09:34.304193 22 delete.go:95] Deleting pod "simpletest.rc-x9fmq" in namespace "gc-1256"
  I0909 21:09:34.359820 22 delete.go:95] Deleting pod "simpletest.rc-xhmm5" in namespace "gc-1256"
  I0909 21:09:34.404070 22 delete.go:95] Deleting pod "simpletest.rc-xkqn8" in namespace "gc-1256"
  I0909 21:09:34.473102 22 delete.go:95] Deleting pod "simpletest.rc-xsqjx" in namespace "gc-1256"
  I0909 21:09:34.517209 22 delete.go:95] Deleting pod "simpletest.rc-xv4cq" in namespace "gc-1256"
  I0909 21:09:34.566001 22 delete.go:95] Deleting pod "simpletest.rc-z2wgx" in namespace "gc-1256"
  I0909 21:09:34.626052 22 delete.go:95] Deleting pod "simpletest.rc-zj7d5" in namespace "gc-1256"
  I0909 21:09:34.658273 22 delete.go:95] Deleting pod "simpletest.rc-zjzp5" in namespace "gc-1256"
  I0909 21:09:34.721385 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1256" for this suite. @ 09/09/25 21:09:34.746
• [44.292 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 09/09/25 21:09:34.812
  I0909 21:09:34.812466 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 21:09:34.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:09:34.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:09:34.851
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/09/25 21:09:34.854
  STEP: Saw pod success @ 09/09/25 21:09:48.905
  I0909 21:09:48.909737 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-392f0539-9110-4b24-b3c5-d2e5b3f760f1 container test-container: <nil>
  STEP: delete the pod @ 09/09/25 21:09:48.94
  I0909 21:09:48.976300 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3464" for this suite. @ 09/09/25 21:09:48.986
• [14.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/09/25 21:09:49.002
  I0909 21:09:49.002619 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename events @ 09/09/25 21:09:49.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:09:49.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:09:49.033
  STEP: Create set of events @ 09/09/25 21:09:49.037
  STEP: get a list of Events with a label in the current namespace @ 09/09/25 21:09:49.05
  STEP: delete a list of events @ 09/09/25 21:09:49.052
  I0909 21:09:49.052245 22 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/09/25 21:09:49.069
  I0909 21:09:49.073363 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9055" for this suite. @ 09/09/25 21:09:49.083
• [0.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 09/09/25 21:09:49.095
  I0909 21:09:49.095600 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 21:09:49.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:09:49.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:09:49.131
  STEP: creating all guestbook components @ 09/09/25 21:09:49.137
  I0909 21:09:49.138032 22 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0909 21:09:49.140972 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 create -f -'
  I0909 21:09:49.379920 22 builder.go:146] stderr: ""
  I0909 21:09:49.379969 22 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0909 21:09:49.380019 22 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0909 21:09:49.380082 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 create -f -'
  I0909 21:09:49.565794 22 builder.go:146] stderr: ""
  I0909 21:09:49.565838 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0909 21:09:49.565884 22 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0909 21:09:49.565955 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 create -f -'
  I0909 21:09:49.778861 22 builder.go:146] stderr: ""
  I0909 21:09:49.778918 22 builder.go:147] stdout: "service/frontend created\n"
  I0909 21:09:49.779653 22 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0909 21:09:49.779796 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 create -f -'
  I0909 21:09:49.985968 22 builder.go:146] stderr: ""
  I0909 21:09:49.986013 22 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0909 21:09:49.986084 22 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0909 21:09:49.986172 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 create -f -'
  I0909 21:09:50.197474 22 builder.go:146] stderr: ""
  I0909 21:09:50.197535 22 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0909 21:09:50.197619 22 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0909 21:09:50.197740 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 create -f -'
  I0909 21:09:50.365669 22 builder.go:146] stderr: ""
  I0909 21:09:50.365797 22 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/09/25 21:09:50.365
  I0909 21:09:50.365872 22 kubectl.go:2275] Waiting for all frontend pods to be Running.
  I0909 21:09:55.416368 22 kubectl.go:2279] Waiting for frontend to serve content.
  I0909 21:09:55.441860 22 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0909 21:09:55.479577 22 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/09/25 21:09:55.505
  I0909 21:09:55.505168 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 delete --grace-period=0 --force -f -'
  I0909 21:09:55.673969 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0909 21:09:55.674033 22 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/09/25 21:09:55.674
  I0909 21:09:55.674808 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 delete --grace-period=0 --force -f -'
  I0909 21:09:55.780032 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0909 21:09:55.780118 22 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/09/25 21:09:55.78
  I0909 21:09:55.780494 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 delete --grace-period=0 --force -f -'
  I0909 21:09:55.930644 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0909 21:09:55.930721 22 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/09/25 21:09:55.93
  I0909 21:09:55.931136 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 delete --grace-period=0 --force -f -'
  I0909 21:09:56.020436 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0909 21:09:56.020490 22 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/09/25 21:09:56.02
  I0909 21:09:56.020947 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 delete --grace-period=0 --force -f -'
  I0909 21:09:56.115656 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0909 21:09:56.115751 22 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/09/25 21:09:56.115
  I0909 21:09:56.116225 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-126 delete --grace-period=0 --force -f -'
  I0909 21:09:56.305022 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0909 21:09:56.305065 22 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0909 21:09:56.305183 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-126" for this suite. @ 09/09/25 21:09:56.328
• [7.298 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 09/09/25 21:09:56.448
  I0909 21:09:56.448832 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename svcaccounts @ 09/09/25 21:09:56.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:09:56.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:09:56.478
  STEP: Creating a Serviceaccount "e2e-sa-x7q76" in namespace "svcaccounts-6873" @ 09/09/25 21:09:56.48
  STEP: Creating a ServiceaccountToken "e2e-sa-x7q76" in namespace "svcaccounts-6873" @ 09/09/25 21:09:56.488
  STEP: Creating a TokenReview for "e2e-sa-x7q76" in namespace "svcaccounts-6873" @ 09/09/25 21:09:56.491
  I0909 21:09:56.493948 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6873" for this suite. @ 09/09/25 21:09:56.503
• [0.063 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/09/25 21:09:56.511
  I0909 21:09:56.512049 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 21:09:56.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:09:56.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:09:56.548
  STEP: Setting up server cert @ 09/09/25 21:09:56.582
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 21:09:57.925
  STEP: Deploying the webhook pod @ 09/09/25 21:09:57.933
  STEP: Wait for the deployment to be ready @ 09/09/25 21:09:57.951
  I0909 21:09:57.956353 22 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/09/25 21:09:59.972
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 21:10:00.013
  I0909 21:10:01.015997 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/09/25 21:10:01.02
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/09/25 21:10:01.021
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/09/25 21:10:01.022
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/09/25 21:10:01.022
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/09/25 21:10:01.023
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/09/25 21:10:01.023
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/09/25 21:10:01.025
  I0909 21:10:01.113846 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9909" for this suite. @ 09/09/25 21:10:01.125
  STEP: Destroying namespace "webhook-markers-4951" for this suite. @ 09/09/25 21:10:01.14
• [4.635 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 09/09/25 21:10:01.15
  I0909 21:10:01.150750 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-runtime @ 09/09/25 21:10:01.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:10:01.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:10:01.172
  STEP: create the container @ 09/09/25 21:10:01.178
  I0909 21:10:01.189862      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/09/25 21:10:01.197
  STEP: get the container status @ 09/09/25 21:10:04.255
  STEP: the container should be terminated @ 09/09/25 21:10:04.258
  STEP: the termination message should be set @ 09/09/25 21:10:04.258
  I0909 21:10:04.258858 22 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/09/25 21:10:04.259
  I0909 21:10:04.279258 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8154" for this suite. @ 09/09/25 21:10:04.284
• [3.142 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 09/09/25 21:10:04.294
  I0909 21:10:04.294802 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sched-pred @ 09/09/25 21:10:04.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:10:04.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:10:04.32
  I0909 21:10:04.324553 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0909 21:10:04.398961 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0909 21:10:04.404707 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-103 before test
  I0909 21:10:04.419656 22 predicates.go:958] helm-install-one-longhorn-476cj from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.419703 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:10:04.419716 22 predicates.go:958] helm-install-one-metallb-6gskx from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.419726 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:10:04.419735 22 predicates.go:958] helm-install-one-traefik-tfqs6 from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.419742 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:10:04.419751 22 predicates.go:958] helm-install-rke2-metrics-server-rrcmj from kube-system started at 2025-09-09 20:49:49 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.419758 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:10:04.419767 22 predicates.go:958] helm-install-rke2-runtimeclasses-jvflg from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.419774 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:10:04.419782 22 predicates.go:958] helm-install-rke2-snapshot-controller-9dhg9 from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.419789 22 predicates.go:960] 	Container helm ready: false, restart count 2
  I0909 21:10:04.419797 22 predicates.go:958] helm-install-rke2-snapshot-controller-crd-gqjzf from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.419804 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:10:04.419812 22 predicates.go:958] kube-proxy-oneke-ip-192-168-150-103 from kube-system started at 2025-09-09 20:49:22 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.419820 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0909 21:10:04.419857 22 predicates.go:958] rke2-canal-pwldb from kube-system started at 2025-09-09 20:49:22 +0000 UTC (2 container statuses recorded)
  I0909 21:10:04.420099 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0909 21:10:04.420106 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0909 21:10:04.420201 22 predicates.go:958] rke2-coredns-rke2-coredns-86c455b944-rbv9n from kube-system started at 2025-09-09 20:50:11 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.420214 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0909 21:10:04.420224 22 predicates.go:958] rke2-coredns-rke2-coredns-autoscaler-79677f89c4-szrjv from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.420231 22 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0909 21:10:04.420238 22 predicates.go:958] rke2-metrics-server-69bdccfdd9-sk8pq from kube-system started at 2025-09-09 20:50:13 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.420245 22 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0909 21:10:04.420374 22 predicates.go:958] rke2-multus-6kq6h from kube-system started at 2025-09-09 20:49:22 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.420536 22 predicates.go:960] 	Container kube-rke2-multus ready: true, restart count 2
  I0909 21:10:04.420548 22 predicates.go:958] rke2-multus-rke2-whereabouts-8zl9g from kube-system started at 2025-09-09 20:49:22 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.420557 22 predicates.go:960] 	Container rke2-whereabouts ready: true, restart count 1
  I0909 21:10:04.420565 22 predicates.go:958] rke2-snapshot-controller-696989ffdd-zc5kj from kube-system started at 2025-09-09 20:50:30 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.420572 22 predicates.go:960] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0909 21:10:04.420667 22 predicates.go:958] csi-attacher-6d6c77b95b-t927f from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.420679 22 predicates.go:960] 	Container csi-attacher ready: true, restart count 0
  I0909 21:10:04.420688 22 predicates.go:958] csi-provisioner-5584b8f578-4428r from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.420696 22 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I0909 21:10:04.420704 22 predicates.go:958] csi-resizer-7d76b968d9-kz99t from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.420712 22 predicates.go:960] 	Container csi-resizer ready: true, restart count 0
  I0909 21:10:04.420720 22 predicates.go:958] csi-resizer-7d76b968d9-ms7j4 from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.421242 22 predicates.go:960] 	Container csi-resizer ready: true, restart count 0
  I0909 21:10:04.421255 22 predicates.go:958] csi-snapshotter-7f46d58c9f-4b462 from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.421262 22 predicates.go:960] 	Container csi-snapshotter ready: true, restart count 0
  I0909 21:10:04.421347 22 predicates.go:958] csi-snapshotter-7f46d58c9f-7hh6b from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.421391 22 predicates.go:960] 	Container csi-snapshotter ready: true, restart count 0
  I0909 21:10:04.421524 22 predicates.go:958] engine-image-ei-b4bcf0a5-vldxv from longhorn-system started at 2025-09-09 20:50:47 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.421536 22 predicates.go:960] 	Container engine-image-ei-b4bcf0a5 ready: true, restart count 0
  I0909 21:10:04.421547 22 predicates.go:958] instance-manager-a66ef38aea842eb90d02b3a6a3136a1e from longhorn-system started at 2025-09-09 20:50:47 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.421554 22 predicates.go:960] 	Container instance-manager ready: true, restart count 0
  I0909 21:10:04.421562 22 predicates.go:958] longhorn-csi-plugin-vpmsb from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (3 container statuses recorded)
  I0909 21:10:04.421569 22 predicates.go:960] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0909 21:10:04.421706 22 predicates.go:960] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0909 21:10:04.421714 22 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0909 21:10:04.421723 22 predicates.go:958] longhorn-manager-xh6dp from longhorn-system started at 2025-09-09 20:50:15 +0000 UTC (2 container statuses recorded)
  I0909 21:10:04.421730 22 predicates.go:960] 	Container longhorn-manager ready: true, restart count 0
  I0909 21:10:04.421829 22 predicates.go:960] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0909 21:10:04.421840 22 predicates.go:958] one-metallb-controller-8576445d78-bh5vd from metallb-system started at 2025-09-09 20:50:14 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.421848 22 predicates.go:960] 	Container controller ready: true, restart count 0
  I0909 21:10:04.421856 22 predicates.go:958] one-metallb-speaker-kc9mm from metallb-system started at 2025-09-09 20:50:14 +0000 UTC (4 container statuses recorded)
  I0909 21:10:04.421863 22 predicates.go:960] 	Container frr ready: true, restart count 0
  I0909 21:10:04.421870 22 predicates.go:960] 	Container frr-metrics ready: true, restart count 0
  I0909 21:10:04.421961 22 predicates.go:960] 	Container reloader ready: true, restart count 0
  I0909 21:10:04.421971 22 predicates.go:960] 	Container speaker ready: true, restart count 0
  I0909 21:10:04.421979 22 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-09 21:03:43 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.421987 22 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0909 21:10:04.421995 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-743f0bf30f3f4846-j94rb from sonobuoy started at 2025-09-09 21:03:49 +0000 UTC (2 container statuses recorded)
  I0909 21:10:04.422002 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0909 21:10:04.422009 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0909 21:10:04.422239 22 predicates.go:958] one-traefik-6b6df477ff-2gnbg from traefik-system started at 2025-09-09 20:50:16 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.422250 22 predicates.go:960] 	Container one-traefik ready: true, restart count 0
  I0909 21:10:04.422259 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-105 before test
  I0909 21:10:04.436048 22 predicates.go:958] kube-proxy-oneke-ip-192-168-150-105 from kube-system started at 2025-09-09 20:57:09 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.436521 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0909 21:10:04.436721 22 predicates.go:958] rke2-canal-2p6vz from kube-system started at 2025-09-09 20:57:10 +0000 UTC (2 container statuses recorded)
  I0909 21:10:04.437218 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0909 21:10:04.437836 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0909 21:10:04.438563 22 predicates.go:958] rke2-multus-lfldf from kube-system started at 2025-09-09 20:57:10 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.438782 22 predicates.go:960] 	Container kube-rke2-multus ready: true, restart count 1
  I0909 21:10:04.438973 22 predicates.go:958] rke2-multus-rke2-whereabouts-sdwcp from kube-system started at 2025-09-09 20:57:10 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.439190 22 predicates.go:960] 	Container rke2-whereabouts ready: true, restart count 1
  I0909 21:10:04.439384 22 predicates.go:958] engine-image-ei-b4bcf0a5-jjsbq from longhorn-system started at 2025-09-09 20:57:38 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.439691 22 predicates.go:960] 	Container engine-image-ei-b4bcf0a5 ready: true, restart count 0
  I0909 21:10:04.439917 22 predicates.go:958] instance-manager-4b2431e7d9277de65a4f9968308c14c0 from longhorn-system started at 2025-09-09 20:58:06 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.440391 22 predicates.go:960] 	Container instance-manager ready: true, restart count 0
  I0909 21:10:04.441029 22 predicates.go:958] longhorn-csi-plugin-mvjcx from longhorn-system started at 2025-09-09 20:57:38 +0000 UTC (3 container statuses recorded)
  I0909 21:10:04.441241 22 predicates.go:960] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0909 21:10:04.441430 22 predicates.go:960] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0909 21:10:04.441665 22 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0909 21:10:04.442214 22 predicates.go:958] longhorn-manager-bjsmm from longhorn-system started at 2025-09-09 20:57:38 +0000 UTC (2 container statuses recorded)
  I0909 21:10:04.442856 22 predicates.go:960] 	Container longhorn-manager ready: true, restart count 0
  I0909 21:10:04.443278 22 predicates.go:960] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0909 21:10:04.443495 22 predicates.go:958] one-metallb-speaker-w2s8k from metallb-system started at 2025-09-09 20:57:38 +0000 UTC (4 container statuses recorded)
  I0909 21:10:04.443688 22 predicates.go:960] 	Container frr ready: true, restart count 0
  I0909 21:10:04.443941 22 predicates.go:960] 	Container frr-metrics ready: true, restart count 0
  I0909 21:10:04.444251 22 predicates.go:960] 	Container reloader ready: true, restart count 0
  I0909 21:10:04.444456 22 predicates.go:960] 	Container speaker ready: true, restart count 0
  I0909 21:10:04.445009 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-743f0bf30f3f4846-hm229 from sonobuoy started at 2025-09-09 21:03:49 +0000 UTC (2 container statuses recorded)
  I0909 21:10:04.445535 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0909 21:10:04.446052 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0909 21:10:04.449321 22 predicates.go:958] one-traefik-6b6df477ff-vv6wk from traefik-system started at 2025-09-09 20:57:37 +0000 UTC (1 container statuses recorded)
  I0909 21:10:04.450136 22 predicates.go:960] 	Container one-traefik ready: true, restart count 0
  STEP: verifying the node has the label node oneke-ip-192-168-150-103 @ 09/09/25 21:10:04.562
  STEP: verifying the node has the label node oneke-ip-192-168-150-105 @ 09/09/25 21:10:04.611
  I0909 21:10:04.637835 22 predicates.go:373] Pod kube-proxy-oneke-ip-192-168-150-103 requesting resource cpu=250m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.637887 22 predicates.go:373] Pod kube-proxy-oneke-ip-192-168-150-105 requesting resource cpu=250m on Node oneke-ip-192-168-150-105
  I0909 21:10:04.637898 22 predicates.go:373] Pod rke2-canal-2p6vz requesting resource cpu=250m on Node oneke-ip-192-168-150-105
  I0909 21:10:04.637907 22 predicates.go:373] Pod rke2-canal-pwldb requesting resource cpu=250m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.637915 22 predicates.go:373] Pod rke2-coredns-rke2-coredns-86c455b944-rbv9n requesting resource cpu=100m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.637924 22 predicates.go:373] Pod rke2-coredns-rke2-coredns-autoscaler-79677f89c4-szrjv requesting resource cpu=25m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.637932 22 predicates.go:373] Pod rke2-metrics-server-69bdccfdd9-sk8pq requesting resource cpu=100m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.637939 22 predicates.go:373] Pod rke2-multus-6kq6h requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.637945 22 predicates.go:373] Pod rke2-multus-lfldf requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0909 21:10:04.637953 22 predicates.go:373] Pod rke2-multus-rke2-whereabouts-8zl9g requesting resource cpu=100m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.637960 22 predicates.go:373] Pod rke2-multus-rke2-whereabouts-sdwcp requesting resource cpu=100m on Node oneke-ip-192-168-150-105
  I0909 21:10:04.637968 22 predicates.go:373] Pod rke2-snapshot-controller-696989ffdd-zc5kj requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.637976 22 predicates.go:373] Pod csi-attacher-6d6c77b95b-t927f requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.637983 22 predicates.go:373] Pod csi-provisioner-5584b8f578-4428r requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.637990 22 predicates.go:373] Pod csi-resizer-7d76b968d9-kz99t requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.637998 22 predicates.go:373] Pod csi-resizer-7d76b968d9-ms7j4 requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638005 22 predicates.go:373] Pod csi-snapshotter-7f46d58c9f-4b462 requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638012 22 predicates.go:373] Pod csi-snapshotter-7f46d58c9f-7hh6b requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638020 22 predicates.go:373] Pod engine-image-ei-b4bcf0a5-jjsbq requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0909 21:10:04.638320 22 predicates.go:373] Pod engine-image-ei-b4bcf0a5-vldxv requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638329 22 predicates.go:373] Pod instance-manager-4b2431e7d9277de65a4f9968308c14c0 requesting resource cpu=240m on Node oneke-ip-192-168-150-105
  I0909 21:10:04.638337 22 predicates.go:373] Pod instance-manager-a66ef38aea842eb90d02b3a6a3136a1e requesting resource cpu=240m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638345 22 predicates.go:373] Pod longhorn-csi-plugin-mvjcx requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0909 21:10:04.638352 22 predicates.go:373] Pod longhorn-csi-plugin-vpmsb requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638360 22 predicates.go:373] Pod longhorn-manager-bjsmm requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0909 21:10:04.638370 22 predicates.go:373] Pod longhorn-manager-xh6dp requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638378 22 predicates.go:373] Pod one-metallb-controller-8576445d78-bh5vd requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638416 22 predicates.go:373] Pod one-metallb-speaker-kc9mm requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638424 22 predicates.go:373] Pod one-metallb-speaker-w2s8k requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0909 21:10:04.638432 22 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638440 22 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-743f0bf30f3f4846-hm229 requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0909 21:10:04.638448 22 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-743f0bf30f3f4846-j94rb requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638456 22 predicates.go:373] Pod one-traefik-6b6df477ff-2gnbg requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0909 21:10:04.638464 22 predicates.go:373] Pod one-traefik-6b6df477ff-vv6wk requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/09/25 21:10:04.638
  I0909 21:10:04.638610 22 predicates.go:383] Creating a pod which consumes cpu=812m on Node oneke-ip-192-168-150-105
  I0909 21:10:04.655643 22 predicates.go:383] Creating a pod which consumes cpu=654m on Node oneke-ip-192-168-150-103
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/09/25 21:10:06.698
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-842d1871-59a8-4971-9ca9-9857f0ad7dee.1863b97800e6164a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8617/filler-pod-842d1871-59a8-4971-9ca9-9857f0ad7dee to oneke-ip-192-168-150-105] @ 09/09/25 21:10:06.706
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-842d1871-59a8-4971-9ca9-9857f0ad7dee.1863b97822b35ef9], Reason = [AddedInterface], Message = [Add eth0 [10.42.3.75/32] from k8s-pod-network] @ 09/09/25 21:10:06.706
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-842d1871-59a8-4971-9ca9-9857f0ad7dee.1863b9782eadc341], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/09/25 21:10:06.706
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-842d1871-59a8-4971-9ca9-9857f0ad7dee.1863b9783111af4f], Reason = [Created], Message = [Created container: filler-pod-842d1871-59a8-4971-9ca9-9857f0ad7dee] @ 09/09/25 21:10:06.706
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-842d1871-59a8-4971-9ca9-9857f0ad7dee.1863b97839fad155], Reason = [Started], Message = [Started container filler-pod-842d1871-59a8-4971-9ca9-9857f0ad7dee] @ 09/09/25 21:10:06.706
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-da0da85e-3109-4f83-b1bf-0fab89c4cf4e.1863b978019d3a4f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8617/filler-pod-da0da85e-3109-4f83-b1bf-0fab89c4cf4e to oneke-ip-192-168-150-103] @ 09/09/25 21:10:06.706
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-da0da85e-3109-4f83-b1bf-0fab89c4cf4e.1863b9782857fc5f], Reason = [AddedInterface], Message = [Add eth0 [10.42.1.97/32] from k8s-pod-network] @ 09/09/25 21:10:06.706
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-da0da85e-3109-4f83-b1bf-0fab89c4cf4e.1863b978358dd021], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/09/25 21:10:06.706
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-da0da85e-3109-4f83-b1bf-0fab89c4cf4e.1863b97837fa16dc], Reason = [Created], Message = [Created container: filler-pod-da0da85e-3109-4f83-b1bf-0fab89c4cf4e] @ 09/09/25 21:10:06.706
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-da0da85e-3109-4f83-b1bf-0fab89c4cf4e.1863b97840b0204c], Reason = [Started], Message = [Started container filler-pod-da0da85e-3109-4f83-b1bf-0fab89c4cf4e] @ 09/09/25 21:10:06.706
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1863b9787bd9ff37], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {CriticalAddonsOnly: true}, 1 node(s) had untolerated taint {node.longhorn.io/create-default-disk: true}, 2 Insufficient cpu. preemption: 0/4 nodes are available: 2 No preemption victims found for incoming pod, 2 Preemption is not helpful for scheduling.] @ 09/09/25 21:10:06.745
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1863b9788600632e], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {CriticalAddonsOnly: true}, 1 node(s) had untolerated taint {node.longhorn.io/create-default-disk: true}, 2 Insufficient cpu. preemption: 0/4 nodes are available: 2 No preemption victims found for incoming pod, 2 Preemption is not helpful for scheduling.] @ 09/09/25 21:10:06.905
  STEP: removing the label node off the node oneke-ip-192-168-150-105 @ 09/09/25 21:10:07.74
  STEP: verifying the node doesn't have the label node @ 09/09/25 21:10:07.766
  STEP: removing the label node off the node oneke-ip-192-168-150-103 @ 09/09/25 21:10:07.771
  STEP: verifying the node doesn't have the label node @ 09/09/25 21:10:07.81
  I0909 21:10:07.815608 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8617" for this suite. @ 09/09/25 21:10:07.822
• [3.545 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 09/09/25 21:10:07.845
  I0909 21:10:07.845218 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename statefulset @ 09/09/25 21:10:07.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:10:07.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:10:07.883
  STEP: Creating service test in namespace statefulset-6394 @ 09/09/25 21:10:07.885
  STEP: Creating statefulset ss in namespace statefulset-6394 @ 09/09/25 21:10:07.901
  I0909 21:10:07.920299 22 wait.go:44] Found 0 stateful pods, waiting for 1
  I0909 21:10:17.921184 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/09/25 21:10:17.944
  STEP: Getting /status @ 09/09/25 21:10:17.958
  I0909 21:10:17.973730 22 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/09/25 21:10:17.973
  I0909 21:10:17.997792 22 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/09/25 21:10:17.997
  I0909 21:10:18.001240 22 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0909 21:10:18.001313 22 statefulset.go:1126] Found Statefulset ss in namespace statefulset-6394 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0909 21:10:18.001335 22 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/09/25 21:10:18.001
  I0909 21:10:18.001606 22 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0909 21:10:18.010715 22 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/09/25 21:10:18.01
  I0909 21:10:18.014390 22 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0909 21:10:18.014514 22 statefulset.go:138] Deleting all statefulset in ns statefulset-6394
  I0909 21:10:18.020647 22 rest.go:153] Scaling statefulset ss to 0
  I0909 21:10:28.041133 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0909 21:10:28.045232 22 rest.go:91] Deleting statefulset ss
  I0909 21:10:28.071121 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6394" for this suite. @ 09/09/25 21:10:28.08
• [20.251 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/09/25 21:10:28.1
  I0909 21:10:28.100899 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename watch @ 09/09/25 21:10:28.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:10:28.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:10:28.147
  STEP: creating a watch on configmaps @ 09/09/25 21:10:28.152
  STEP: creating a new configmap @ 09/09/25 21:10:28.154
  STEP: modifying the configmap once @ 09/09/25 21:10:28.169
  STEP: closing the watch once it receives two notifications @ 09/09/25 21:10:28.177
  I0909 21:10:28.179500 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1024  cfd10c15-9288-4481-a4f4-c70278b031aa 12655 0 2025-09-09 21:10:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-09 21:10:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:10:28.180545 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1024  cfd10c15-9288-4481-a4f4-c70278b031aa 12656 0 2025-09-09 21:10:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-09 21:10:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/09/25 21:10:28.181
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/09/25 21:10:28.187
  STEP: deleting the configmap @ 09/09/25 21:10:28.189
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/09/25 21:10:28.194
  I0909 21:10:28.194935 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1024  cfd10c15-9288-4481-a4f4-c70278b031aa 12657 0 2025-09-09 21:10:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-09 21:10:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:10:28.195449 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1024  cfd10c15-9288-4481-a4f4-c70278b031aa 12658 0 2025-09-09 21:10:28 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-09 21:10:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:10:28.195892 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1024" for this suite. @ 09/09/25 21:10:28.199
• [0.107 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/09/25 21:10:28.208
  I0909 21:10:28.208966 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/09/25 21:10:28.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:10:28.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:10:28.237
  STEP: create the container to handle the HTTPGet hook request. @ 09/09/25 21:10:28.301
  STEP: create the pod with lifecycle hook @ 09/09/25 21:10:30.34
  STEP: delete the pod with lifecycle hook @ 09/09/25 21:10:32.374
  STEP: check prestop hook @ 09/09/25 21:10:36.411
  I0909 21:10:36.422836 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3496" for this suite. @ 09/09/25 21:10:36.435
• [8.239 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 09/09/25 21:10:36.451
  I0909 21:10:36.451738 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename servicecidr @ 09/09/25 21:10:36.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:10:36.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:10:36.492
  STEP: creating @ 09/09/25 21:10:36.496
  STEP: patching @ 09/09/25 21:10:36.509
  STEP: updating @ 09/09/25 21:10:36.52
  STEP: getting @ 09/09/25 21:10:36.529
  STEP: listing @ 09/09/25 21:10:36.531
  STEP: watching @ 09/09/25 21:10:36.534
  STEP: deleting @ 09/09/25 21:10:36.536
  STEP: deleting a collection @ 09/09/25 21:10:36.543
  I0909 21:10:36.554867 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-9347" for this suite. @ 09/09/25 21:10:36.56
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 09/09/25 21:10:36.57
  I0909 21:10:36.570181 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 21:10:36.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:10:36.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:10:36.593
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/09/25 21:10:36.642
  STEP: Saw pod success @ 09/09/25 21:10:40.692
  I0909 21:10:40.696280 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-c06822fa-8959-4371-aa17-637e6d450e1f container test-container: <nil>
  STEP: delete the pod @ 09/09/25 21:10:40.724
  I0909 21:10:40.750548 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2472" for this suite. @ 09/09/25 21:10:40.755
• [4.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/09/25 21:10:40.771
  I0909 21:10:40.772055 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pods @ 09/09/25 21:10:40.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:10:40.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:10:40.799
  STEP: creating the pod @ 09/09/25 21:10:40.801
  STEP: submitting the pod to kubernetes @ 09/09/25 21:10:40.802
  STEP: verifying the pod is in kubernetes @ 09/09/25 21:10:42.835
  STEP: updating the pod @ 09/09/25 21:10:42.837
  I0909 21:10:43.369781 22 pod_client.go:173] Successfully updated pod "pod-update-7d220e1a-7914-4483-b3dc-dc34bfc4745d"
  STEP: verifying the updated pod is in kubernetes @ 09/09/25 21:10:43.375
  I0909 21:10:43.381131 22 pods.go:391] Pod update OK
  I0909 21:10:43.381283 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1045" for this suite. @ 09/09/25 21:10:43.389
• [2.625 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/09/25 21:10:43.397
  I0909 21:10:43.397165 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/09/25 21:10:43.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:10:43.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:10:43.431
  I0909 21:10:43.436469 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  I0909 21:10:44.507541 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-314" for this suite. @ 09/09/25 21:10:44.521
• [1.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/09/25 21:10:44.545
  I0909 21:10:44.546048 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replicaset @ 09/09/25 21:10:44.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:10:44.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:10:44.573
  STEP: Create a ReplicaSet @ 09/09/25 21:10:44.577
  STEP: Verify that the required pods have come up @ 09/09/25 21:10:44.587
  I0909 21:10:44.592950 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  I0909 21:10:49.603478 22 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/09/25 21:10:49.604
  I0909 21:10:49.608547 22 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/09/25 21:10:49.608
  STEP: DeleteCollection of the ReplicaSets @ 09/09/25 21:10:49.613
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/09/25 21:10:49.63
  I0909 21:10:49.642066 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6648" for this suite. @ 09/09/25 21:10:49.656
• [5.161 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 09/09/25 21:10:49.707
  I0909 21:10:49.707651 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-probe @ 09/09/25 21:10:49.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:10:49.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:10:49.754
  STEP: Creating pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124 @ 09/09/25 21:10:49.769
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/09/25 21:10:51.798
  I0909 21:10:51.807571 22 container_probe.go:1748] Initial restart count of pod liveness-042468b8-9831-41ed-8add-543b33002c46 is 0
  I0909 21:10:51.812535 22 container_probe.go:1758] Get pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124
  I0909 21:10:53.816341 22 container_probe.go:1758] Get pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124
  I0909 21:10:55.822276 22 container_probe.go:1758] Get pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124
  I0909 21:10:57.826469 22 container_probe.go:1758] Get pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124
  I0909 21:10:59.832534 22 container_probe.go:1758] Get pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124
  I0909 21:11:01.838501 22 container_probe.go:1758] Get pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124
  I0909 21:11:03.844594 22 container_probe.go:1758] Get pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124
  I0909 21:11:05.850159 22 container_probe.go:1758] Get pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124
  I0909 21:11:07.853828 22 container_probe.go:1758] Get pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124
  I0909 21:11:09.861617 22 container_probe.go:1758] Get pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124
  I0909 21:11:11.868550 22 container_probe.go:1758] Get pod liveness-042468b8-9831-41ed-8add-543b33002c46 in namespace container-probe-4124
  I0909 21:11:11.868638 22 container_probe.go:1762] Restart count of pod container-probe-4124/liveness-042468b8-9831-41ed-8add-543b33002c46 is now 1 (20.059623239s elapsed)
  STEP: deleting the pod @ 09/09/25 21:11:11.868
  I0909 21:11:11.910050 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4124" for this suite. @ 09/09/25 21:11:11.92
• [22.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/09/25 21:11:11.94
  I0909 21:11:11.940578 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename cronjob @ 09/09/25 21:11:11.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:11:11.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:11:11.971
  STEP: Creating a cronjob @ 09/09/25 21:11:11.981
  STEP: creating @ 09/09/25 21:11:11.981
  STEP: getting @ 09/09/25 21:11:11.997
  STEP: listing @ 09/09/25 21:11:12
  STEP: watching @ 09/09/25 21:11:12.008
  I0909 21:11:12.008503 22 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/09/25 21:11:12.01
  STEP: cluster-wide watching @ 09/09/25 21:11:12.015
  I0909 21:11:12.015270 22 cronjob.go:407] starting watch
  STEP: patching @ 09/09/25 21:11:12.016
  STEP: updating @ 09/09/25 21:11:12.03
  I0909 21:11:12.038409 22 cronjob.go:431] waiting for watch events with expected annotations
  I0909 21:11:12.038500 22 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/09/25 21:11:12.038
  STEP: updating /status @ 09/09/25 21:11:12.048
  STEP: get /status @ 09/09/25 21:11:12.053
  STEP: deleting @ 09/09/25 21:11:12.056
  STEP: deleting a collection @ 09/09/25 21:11:12.079
  I0909 21:11:12.087452 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8596" for this suite. @ 09/09/25 21:11:12.097
• [0.165 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/09/25 21:11:12.107
  I0909 21:11:12.107241 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename endpointslice @ 09/09/25 21:11:12.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:11:12.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:11:12.134
  I0909 21:11:12.145250      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:11:12.150501 22 endpointslice.go:1045] Endpoints addresses: [192.168.150.102] , ports: [6443]
  I0909 21:11:12.150781 22 endpointslice.go:1075] EndpointSlices addresses: [192.168.150.102] , ports: [6443]
  I0909 21:11:12.151564 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6448" for this suite. @ 09/09/25 21:11:12.193
• [0.105 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/09/25 21:11:12.213
  I0909 21:11:12.213569 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/09/25 21:11:12.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:11:12.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:11:12.25
  STEP: creating a policy with variables @ 09/09/25 21:11:12.268
  STEP: waiting until the marker is denied @ 09/09/25 21:11:12.323
  STEP: testing a replicated Deployment to be allowed @ 09/09/25 21:11:13.048
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/09/25 21:11:13.125
  I0909 21:11:13.230875 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3435" for this suite. @ 09/09/25 21:11:13.245
• [1.045 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/09/25 21:11:13.262
  I0909 21:11:13.263334 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename endpointslice @ 09/09/25 21:11:13.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:11:13.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:11:13.302
  I0909 21:11:13.344423      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:11:13.385704      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:11:13.388426 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4270" for this suite. @ 09/09/25 21:11:13.393
• [0.141 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/09/25 21:11:13.42
  I0909 21:11:13.420760 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 21:11:13.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:11:13.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:11:13.44
  STEP: Setting up server cert @ 09/09/25 21:11:13.463
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 21:11:14.034
  STEP: Deploying the webhook pod @ 09/09/25 21:11:14.045
  STEP: Wait for the deployment to be ready @ 09/09/25 21:11:14.074
  I0909 21:11:14.092679 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/09/25 21:11:16.108
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 21:11:16.141
  I0909 21:11:17.143647 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/09/25 21:11:17.155
  STEP: verifying the mutating webhook match conditions @ 09/09/25 21:11:17.209
  STEP: updating the mutating webhook match conditions @ 09/09/25 21:11:17.216
  STEP: verifying the mutating webhook match conditions @ 09/09/25 21:11:17.244
  I0909 21:11:17.372191 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8218" for this suite. @ 09/09/25 21:11:17.396
  STEP: Destroying namespace "webhook-markers-263" for this suite. @ 09/09/25 21:11:17.413
• [4.010 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/09/25 21:11:17.43
  I0909 21:11:17.430378 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename var-expansion @ 09/09/25 21:11:17.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:11:17.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:11:17.467
  STEP: Creating a pod to test env composition @ 09/09/25 21:11:17.479
  STEP: Saw pod success @ 09/09/25 21:11:21.539
  I0909 21:11:21.544654 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod var-expansion-03e4fc04-2f2e-415c-ab91-8e249ddd2ad2 container dapi-container: <nil>
  STEP: delete the pod @ 09/09/25 21:11:21.561
  I0909 21:11:21.589525 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1045" for this suite. @ 09/09/25 21:11:21.596
• [4.173 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 09/09/25 21:11:21.603
  I0909 21:11:21.603814 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sched-pred @ 09/09/25 21:11:21.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:11:21.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:11:21.632
  I0909 21:11:21.636716 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0909 21:11:21.699345 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0909 21:11:21.702703 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-103 before test
  I0909 21:11:21.716642 22 predicates.go:958] helm-install-one-longhorn-476cj from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.717221 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:11:21.718162 22 predicates.go:958] helm-install-one-metallb-6gskx from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.718826 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:11:21.719487 22 predicates.go:958] helm-install-one-traefik-tfqs6 from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.720251 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:11:21.720690 22 predicates.go:958] helm-install-rke2-metrics-server-rrcmj from kube-system started at 2025-09-09 20:49:49 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.721484 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:11:21.722175 22 predicates.go:958] helm-install-rke2-runtimeclasses-jvflg from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.722880 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:11:21.723526 22 predicates.go:958] helm-install-rke2-snapshot-controller-9dhg9 from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.724157 22 predicates.go:960] 	Container helm ready: false, restart count 2
  I0909 21:11:21.724580 22 predicates.go:958] helm-install-rke2-snapshot-controller-crd-gqjzf from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.725280 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:11:21.727574 22 predicates.go:958] kube-proxy-oneke-ip-192-168-150-103 from kube-system started at 2025-09-09 20:49:22 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.728164 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0909 21:11:21.729111 22 predicates.go:958] rke2-canal-pwldb from kube-system started at 2025-09-09 20:49:22 +0000 UTC (2 container statuses recorded)
  I0909 21:11:21.729789 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0909 21:11:21.730563 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0909 21:11:21.731279 22 predicates.go:958] rke2-coredns-rke2-coredns-86c455b944-rbv9n from kube-system started at 2025-09-09 20:50:11 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.732021 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0909 21:11:21.732668 22 predicates.go:958] rke2-coredns-rke2-coredns-autoscaler-79677f89c4-szrjv from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733408 22 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0909 21:11:21.733426 22 predicates.go:958] rke2-metrics-server-69bdccfdd9-sk8pq from kube-system started at 2025-09-09 20:50:13 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733434 22 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0909 21:11:21.733493 22 predicates.go:958] rke2-multus-6kq6h from kube-system started at 2025-09-09 20:49:22 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733502 22 predicates.go:960] 	Container kube-rke2-multus ready: true, restart count 2
  I0909 21:11:21.733513 22 predicates.go:958] rke2-multus-rke2-whereabouts-8zl9g from kube-system started at 2025-09-09 20:49:22 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733520 22 predicates.go:960] 	Container rke2-whereabouts ready: true, restart count 1
  I0909 21:11:21.733528 22 predicates.go:958] rke2-snapshot-controller-696989ffdd-zc5kj from kube-system started at 2025-09-09 20:50:30 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733535 22 predicates.go:960] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0909 21:11:21.733542 22 predicates.go:958] csi-attacher-6d6c77b95b-t927f from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733549 22 predicates.go:960] 	Container csi-attacher ready: true, restart count 0
  I0909 21:11:21.733556 22 predicates.go:958] csi-provisioner-5584b8f578-4428r from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733562 22 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I0909 21:11:21.733570 22 predicates.go:958] csi-resizer-7d76b968d9-kz99t from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733576 22 predicates.go:960] 	Container csi-resizer ready: true, restart count 0
  I0909 21:11:21.733585 22 predicates.go:958] csi-resizer-7d76b968d9-ms7j4 from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733592 22 predicates.go:960] 	Container csi-resizer ready: true, restart count 0
  I0909 21:11:21.733600 22 predicates.go:958] csi-snapshotter-7f46d58c9f-4b462 from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733607 22 predicates.go:960] 	Container csi-snapshotter ready: true, restart count 0
  I0909 21:11:21.733614 22 predicates.go:958] csi-snapshotter-7f46d58c9f-7hh6b from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733620 22 predicates.go:960] 	Container csi-snapshotter ready: true, restart count 0
  I0909 21:11:21.733627 22 predicates.go:958] engine-image-ei-b4bcf0a5-vldxv from longhorn-system started at 2025-09-09 20:50:47 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733634 22 predicates.go:960] 	Container engine-image-ei-b4bcf0a5 ready: true, restart count 0
  I0909 21:11:21.733641 22 predicates.go:958] instance-manager-a66ef38aea842eb90d02b3a6a3136a1e from longhorn-system started at 2025-09-09 20:50:47 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733648 22 predicates.go:960] 	Container instance-manager ready: true, restart count 0
  I0909 21:11:21.733655 22 predicates.go:958] longhorn-csi-plugin-vpmsb from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (3 container statuses recorded)
  I0909 21:11:21.733661 22 predicates.go:960] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0909 21:11:21.733667 22 predicates.go:960] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0909 21:11:21.733674 22 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0909 21:11:21.733681 22 predicates.go:958] longhorn-manager-xh6dp from longhorn-system started at 2025-09-09 20:50:15 +0000 UTC (2 container statuses recorded)
  I0909 21:11:21.733687 22 predicates.go:960] 	Container longhorn-manager ready: true, restart count 0
  I0909 21:11:21.733697 22 predicates.go:960] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0909 21:11:21.733704 22 predicates.go:958] one-metallb-controller-8576445d78-bh5vd from metallb-system started at 2025-09-09 20:50:14 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733710 22 predicates.go:960] 	Container controller ready: true, restart count 0
  I0909 21:11:21.733718 22 predicates.go:958] one-metallb-speaker-kc9mm from metallb-system started at 2025-09-09 20:50:14 +0000 UTC (4 container statuses recorded)
  I0909 21:11:21.733724 22 predicates.go:960] 	Container frr ready: true, restart count 0
  I0909 21:11:21.733731 22 predicates.go:960] 	Container frr-metrics ready: true, restart count 0
  I0909 21:11:21.733737 22 predicates.go:960] 	Container reloader ready: true, restart count 0
  I0909 21:11:21.733744 22 predicates.go:960] 	Container speaker ready: true, restart count 0
  I0909 21:11:21.733751 22 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-09 21:03:43 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733758 22 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0909 21:11:21.733765 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-743f0bf30f3f4846-j94rb from sonobuoy started at 2025-09-09 21:03:49 +0000 UTC (2 container statuses recorded)
  I0909 21:11:21.733772 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0909 21:11:21.733778 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0909 21:11:21.733786 22 predicates.go:958] one-traefik-6b6df477ff-2gnbg from traefik-system started at 2025-09-09 20:50:16 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.733792 22 predicates.go:960] 	Container one-traefik ready: true, restart count 0
  I0909 21:11:21.733799 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-105 before test
  I0909 21:11:21.738853 22 predicates.go:958] kube-proxy-oneke-ip-192-168-150-105 from kube-system started at 2025-09-09 20:57:09 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.738891 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0909 21:11:21.738901 22 predicates.go:958] rke2-canal-2p6vz from kube-system started at 2025-09-09 20:57:10 +0000 UTC (2 container statuses recorded)
  I0909 21:11:21.738906 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0909 21:11:21.738957 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0909 21:11:21.738965 22 predicates.go:958] rke2-multus-lfldf from kube-system started at 2025-09-09 20:57:10 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.738970 22 predicates.go:960] 	Container kube-rke2-multus ready: true, restart count 1
  I0909 21:11:21.739106 22 predicates.go:958] rke2-multus-rke2-whereabouts-sdwcp from kube-system started at 2025-09-09 20:57:10 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.739112 22 predicates.go:960] 	Container rke2-whereabouts ready: true, restart count 1
  I0909 21:11:21.739120 22 predicates.go:958] engine-image-ei-b4bcf0a5-jjsbq from longhorn-system started at 2025-09-09 20:57:38 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.739172 22 predicates.go:960] 	Container engine-image-ei-b4bcf0a5 ready: true, restart count 0
  I0909 21:11:21.739360 22 predicates.go:958] instance-manager-4b2431e7d9277de65a4f9968308c14c0 from longhorn-system started at 2025-09-09 20:58:06 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.739368 22 predicates.go:960] 	Container instance-manager ready: true, restart count 0
  I0909 21:11:21.739576 22 predicates.go:958] longhorn-csi-plugin-mvjcx from longhorn-system started at 2025-09-09 20:57:38 +0000 UTC (3 container statuses recorded)
  I0909 21:11:21.739583 22 predicates.go:960] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0909 21:11:21.739588 22 predicates.go:960] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0909 21:11:21.739593 22 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0909 21:11:21.739599 22 predicates.go:958] longhorn-manager-bjsmm from longhorn-system started at 2025-09-09 20:57:38 +0000 UTC (2 container statuses recorded)
  I0909 21:11:21.739603 22 predicates.go:960] 	Container longhorn-manager ready: true, restart count 0
  I0909 21:11:21.739608 22 predicates.go:960] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0909 21:11:21.739613 22 predicates.go:958] one-metallb-speaker-w2s8k from metallb-system started at 2025-09-09 20:57:38 +0000 UTC (4 container statuses recorded)
  I0909 21:11:21.739618 22 predicates.go:960] 	Container frr ready: true, restart count 0
  I0909 21:11:21.739812 22 predicates.go:960] 	Container frr-metrics ready: true, restart count 0
  I0909 21:11:21.739822 22 predicates.go:960] 	Container reloader ready: true, restart count 0
  I0909 21:11:21.739826 22 predicates.go:960] 	Container speaker ready: true, restart count 0
  I0909 21:11:21.739833 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-743f0bf30f3f4846-hm229 from sonobuoy started at 2025-09-09 21:03:49 +0000 UTC (2 container statuses recorded)
  I0909 21:11:21.739938 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0909 21:11:21.739944 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0909 21:11:21.739950 22 predicates.go:958] one-traefik-6b6df477ff-vv6wk from traefik-system started at 2025-09-09 20:57:37 +0000 UTC (1 container statuses recorded)
  I0909 21:11:21.740053 22 predicates.go:960] 	Container one-traefik ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/09/25 21:11:21.74
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/09/25 21:11:25.783
  STEP: Trying to apply a random label on the found node. @ 09/09/25 21:11:25.812
  STEP: verifying the node has the label kubernetes.io/e2e-01787fb6-bf08-43c3-bf3a-5476151dcb1f 95 @ 09/09/25 21:11:25.878
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/09/25 21:11:25.918
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.150.103 on the node which pod4 resides and expect not scheduled @ 09/09/25 21:11:28.049
  STEP: removing the label kubernetes.io/e2e-01787fb6-bf08-43c3-bf3a-5476151dcb1f off the node oneke-ip-192-168-150-103 @ 09/09/25 21:16:28.063
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-01787fb6-bf08-43c3-bf3a-5476151dcb1f @ 09/09/25 21:16:28.107
  I0909 21:16:28.113607 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6813" for this suite. @ 09/09/25 21:16:28.123
• [306.528 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/09/25 21:16:28.138
  I0909 21:16:28.138898 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 21:16:28.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:16:28.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:16:28.17
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 21:16:28.177
  STEP: Saw pod success @ 09/09/25 21:16:32.208
  I0909 21:16:32.213733 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-79e82864-3f02-4964-9ad0-0d3a626b688a container client-container: <nil>
  STEP: delete the pod @ 09/09/25 21:16:32.248
  I0909 21:16:32.287913 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6959" for this suite. @ 09/09/25 21:16:32.301
• [4.173 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 09/09/25 21:16:32.311
  I0909 21:16:32.311864 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename namespaces @ 09/09/25 21:16:32.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:16:32.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:16:32.34
  STEP: Creating a test namespace @ 09/09/25 21:16:32.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:16:32.366
  STEP: Creating a service in the namespace @ 09/09/25 21:16:32.371
  STEP: Deleting the namespace @ 09/09/25 21:16:32.412
  STEP: Waiting for the namespace to be removed. @ 09/09/25 21:16:32.427
  STEP: Recreating the namespace @ 09/09/25 21:16:39.432
  STEP: Verifying there is no service in the namespace @ 09/09/25 21:16:39.467
  I0909 21:16:39.470160 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7218" for this suite. @ 09/09/25 21:16:39.476
  STEP: Destroying namespace "nsdeletetest-9482" for this suite. @ 09/09/25 21:16:39.485
  I0909 21:16:39.498855 22 framework.go:370] Namespace nsdeletetest-9482 was already deleted
  STEP: Destroying namespace "nsdeletetest-7464" for this suite. @ 09/09/25 21:16:39.498
• [7.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 09/09/25 21:16:39.508
  I0909 21:16:39.508864 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename dns @ 09/09/25 21:16:39.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:16:39.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:16:39.533
  STEP: Creating a test headless service @ 09/09/25 21:16:39.536
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3276.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-3276.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/09/25 21:16:39.545
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3276.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3276.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/09/25 21:16:39.545
  STEP: creating a pod to probe DNS @ 09/09/25 21:16:39.545
  STEP: submitting the pod to kubernetes @ 09/09/25 21:16:39.545
  STEP: retrieving the pod @ 09/09/25 21:16:51.63
  STEP: looking for the results for each expected name from probers @ 09/09/25 21:16:51.637
  I0909 21:16:51.665521 22 dns_common.go:546] DNS probes using dns-3276/dns-test-81175e0d-54d8-4791-b27b-31298d240b39 succeeded

  STEP: deleting the pod @ 09/09/25 21:16:51.665
  STEP: deleting the test headless service @ 09/09/25 21:16:51.703
  I0909 21:16:51.735884 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3276" for this suite. @ 09/09/25 21:16:51.75
• [12.257 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/09/25 21:16:51.766
  I0909 21:16:51.766326 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename field-validation @ 09/09/25 21:16:51.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:16:51.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:16:51.806
  I0909 21:16:51.809491 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  I0909 21:16:54.414130      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0909 21:16:54.414274      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0909 21:16:54.414334      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0909 21:16:54.414348      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0909 21:16:54.414362      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0909 21:16:55.000002 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8361" for this suite. @ 09/09/25 21:16:55.005
• [3.250 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/09/25 21:16:55.02
  I0909 21:16:55.020241 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 21:16:55.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:16:55.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:16:55.045
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 21:16:55.049
  STEP: Saw pod success @ 09/09/25 21:16:59.079
  I0909 21:16:59.086448 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-cf9ff340-3e4c-4027-9d2e-8a7a26bfa959 container client-container: <nil>
  STEP: delete the pod @ 09/09/25 21:16:59.101
  I0909 21:16:59.136421 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7309" for this suite. @ 09/09/25 21:16:59.151
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/09/25 21:16:59.171
  I0909 21:16:59.171855 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename disruption @ 09/09/25 21:16:59.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:16:59.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:16:59.197
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/09/25 21:16:59.2
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:16:59.206
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/09/25 21:17:01.226
  STEP: Waiting for all pods to be running @ 09/09/25 21:17:01.23
  I0909 21:17:01.280286 22 disruption.go:691] running pods: 0 < 3
  STEP: locating a running pod @ 09/09/25 21:17:03.237
  STEP: Updating the pdb to allow a pod to be evicted @ 09/09/25 21:17:03.258
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:17:03.279
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/09/25 21:17:05.284
  STEP: Waiting for all pods to be running @ 09/09/25 21:17:05.284
  STEP: Waiting for the pdb to observed all healthy pods @ 09/09/25 21:17:05.291
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/09/25 21:17:05.357
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:17:05.41
  STEP: Waiting for all pods to be running @ 09/09/25 21:17:05.434
  I0909 21:17:05.442119 22 disruption.go:691] running pods: 2 < 3
  STEP: locating a running pod @ 09/09/25 21:17:07.447
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/09/25 21:17:07.461
  STEP: Waiting for the pdb to be deleted @ 09/09/25 21:17:07.474
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/09/25 21:17:07.478
  STEP: Waiting for all pods to be running @ 09/09/25 21:17:07.478
  I0909 21:17:07.562736 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-931" for this suite. @ 09/09/25 21:17:07.601
• [8.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 09/09/25 21:17:07.612
  I0909 21:17:07.612132 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 21:17:07.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:17:07.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:17:07.644
  STEP: Discovering how many secrets are in namespace by default @ 09/09/25 21:17:07.649
  STEP: Counting existing ResourceQuota @ 09/09/25 21:17:12.679
  STEP: Creating a ResourceQuota @ 09/09/25 21:17:17.684
  STEP: Ensuring resource quota status is calculated @ 09/09/25 21:17:17.696
  STEP: Creating a Secret @ 09/09/25 21:17:19.703
  STEP: Ensuring resource quota status captures secret creation @ 09/09/25 21:17:19.741
  STEP: Deleting a secret @ 09/09/25 21:17:21.748
  STEP: Ensuring resource quota status released usage @ 09/09/25 21:17:21.764
  I0909 21:17:23.772014 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9091" for this suite. @ 09/09/25 21:17:23.783
• [16.184 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/09/25 21:17:23.804
  I0909 21:17:23.807779 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-watch @ 09/09/25 21:17:23.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:17:23.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:17:23.847
  I0909 21:17:23.852870 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Creating first CR  @ 09/09/25 21:17:26.432
  I0909 21:17:26.446116 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-09T21:17:26Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-09T21:17:26Z]] name:name1 resourceVersion:15452 uid:480c5b9d-ff05-4cb2-9edb-6aaed87baa9a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 09/09/25 21:17:36.449
  I0909 21:17:36.459335 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-09T21:17:36Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-09T21:17:36Z]] name:name2 resourceVersion:15500 uid:6b7d6be4-d1e7-48c8-85a3-0eb8817d28d3] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 09/09/25 21:17:46.46
  I0909 21:17:46.471974 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-09T21:17:26Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-09T21:17:46Z]] name:name1 resourceVersion:15542 uid:480c5b9d-ff05-4cb2-9edb-6aaed87baa9a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 09/09/25 21:17:56.472
  I0909 21:17:56.486928 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-09T21:17:36Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-09T21:17:56Z]] name:name2 resourceVersion:15584 uid:6b7d6be4-d1e7-48c8-85a3-0eb8817d28d3] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 09/09/25 21:18:06.489
  I0909 21:18:06.500404 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-09T21:17:26Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-09T21:17:46Z]] name:name1 resourceVersion:15642 uid:480c5b9d-ff05-4cb2-9edb-6aaed87baa9a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 09/09/25 21:18:16.501
  I0909 21:18:16.511281 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-09T21:17:36Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-09T21:17:56Z]] name:name2 resourceVersion:15690 uid:6b7d6be4-d1e7-48c8-85a3-0eb8817d28d3] num:map[num1:9223372036854775807 num2:1000000]]}
  I0909 21:18:27.047235 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7608" for this suite. @ 09/09/25 21:18:27.057
• [63.264 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 09/09/25 21:18:27.068
  I0909 21:18:27.068318 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename namespaces @ 09/09/25 21:18:27.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:18:27.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:18:27.111
  STEP: Creating a test namespace @ 09/09/25 21:18:27.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:18:27.13
  STEP: Creating a pod in the namespace @ 09/09/25 21:18:27.134
  STEP: Waiting for the pod to have running status @ 09/09/25 21:18:27.147
  STEP: Deleting the namespace @ 09/09/25 21:18:29.155
  STEP: Waiting for the namespace to be removed. @ 09/09/25 21:18:29.167
  STEP: Recreating the namespace @ 09/09/25 21:18:40.171
  STEP: Verifying there are no pods in the namespace @ 09/09/25 21:18:40.195
  I0909 21:18:40.199477 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2626" for this suite. @ 09/09/25 21:18:40.204
  STEP: Destroying namespace "nsdeletetest-5995" for this suite. @ 09/09/25 21:18:40.215
  I0909 21:18:40.219880 22 framework.go:370] Namespace nsdeletetest-5995 was already deleted
  STEP: Destroying namespace "nsdeletetest-7" for this suite. @ 09/09/25 21:18:40.221
• [13.167 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/09/25 21:18:40.245
  I0909 21:18:40.246001 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename ingress @ 09/09/25 21:18:40.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:18:40.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:18:40.273
  STEP: getting /apis @ 09/09/25 21:18:40.278
  STEP: getting /apis/networking.k8s.io @ 09/09/25 21:18:40.287
  STEP: getting /apis/networking.k8s.iov1 @ 09/09/25 21:18:40.288
  STEP: creating @ 09/09/25 21:18:40.29
  STEP: getting @ 09/09/25 21:18:40.332
  STEP: listing @ 09/09/25 21:18:40.34
  STEP: watching @ 09/09/25 21:18:40.344
  I0909 21:18:40.345004 22 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/09/25 21:18:40.347
  STEP: cluster-wide watching @ 09/09/25 21:18:40.349
  I0909 21:18:40.350179 22 ingress.go:198] starting watch
  STEP: patching @ 09/09/25 21:18:40.351
  STEP: updating @ 09/09/25 21:18:40.358
  I0909 21:18:40.366916 22 ingress.go:221] waiting for watch events with expected annotations
  I0909 21:18:40.368092 22 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/09/25 21:18:40.37
  STEP: updating /status @ 09/09/25 21:18:40.389
  STEP: get /status @ 09/09/25 21:18:40.403
  STEP: deleting @ 09/09/25 21:18:40.407
  STEP: deleting a collection @ 09/09/25 21:18:40.422
  I0909 21:18:40.436045 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-923" for this suite. @ 09/09/25 21:18:40.454
• [0.225 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/09/25 21:18:40.469
  I0909 21:18:40.469762 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename deployment @ 09/09/25 21:18:40.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:18:40.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:18:40.506
  I0909 21:18:40.508614 22 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0909 21:18:40.522947 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0909 21:18:45.596937 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/09/25 21:18:45.596
  I0909 21:18:45.597046 22 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0909 21:18:45.610574 22 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0909 21:18:45.618683 22 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0909 21:18:47.630258 22 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0909 21:18:47.633174 22 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0909 21:18:47.640674 22 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3428",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f6d04f8-6d0f-4232-b22f-e3d4b3c64c67",
      ResourceVersion: (string) (len=5) "15943",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0909 21:18:47.644231 22 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3428",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e4f3129-d2f7-4b09-a9cb-978c6cf3ceb3",
      ResourceVersion: (string) (len=5) "15931",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "1f6d04f8-6d0f-4232-b22f-e3d4b3c64c67",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 66 36 64 30 34  66 38 2d 36 64 30 66 2d  |\"1f6d04f8-6d0f-|
              00000120  34 32 33 32 2d 62 32 32  66 2d 65 33 64 34 62 33  |4232-b22f-e3d4b3|
              00000130  63 36 34 63 36 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c64c67\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 21:18:47.652868 22 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0909 21:18:47.654698 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3428",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a75089cd-9558-4f3b-ac87-ccd533bebe49",
      ResourceVersion: (string) (len=5) "15942",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "1f6d04f8-6d0f-4232-b22f-e3d4b3c64c67",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 66 36 64 30 34 66  |"uid\":\"1f6d04f|
              000000b0  38 2d 36 64 30 66 2d 34  32 33 32 2d 62 32 32 66  |8-6d0f-4232-b22f|
              000000c0  2d 65 33 64 34 62 33 63  36 34 63 36 37 5c 22 7d  |-e3d4b3c64c67\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 21:18:47.661436 22 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-qcqhm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-qcqhm",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-3428",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "861af343-d399-4f68-956b-ecce91bba198",
      ResourceVersion: (string) (len=5) "15930",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7164e388c70b15a814606f0e6cd779db7fc32b000ae0e9e06ceddb65892a0d21",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.84/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.84/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.84\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "7e4f3129-d2f7-4b09-a9cb-978c6cf3ceb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  34 66 33 31 32 39 2d 64  |d\":\"7e4f3129-d|
              00000090  32 66 37 2d 34 62 30 39  2d 61 39 63 62 2d 39 37  |2f7-4b09-a9cb-97|
              000000a0  38 63 36 63 66 33 63 65  62 33 5c 22 7d 22 3a 7b  |8c6cf3ceb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 38 34  5c 22 7d 22 3a 7b 22 2e  |.42.3.84\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hr74t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hr74t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=10) "10.42.3.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893049526,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://e35b8e23bd409b4258b0c21304ea63cccd172e669535aa2113e2731c55148821",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hr74t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:18:47.662391 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3428" for this suite. @ 09/09/25 21:18:47.665
• [7.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/09/25 21:18:47.684
  I0909 21:18:47.684861 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/09/25 21:18:47.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:18:47.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:18:47.703
  I0909 21:18:47.706899 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  I0909 21:18:54.392253 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1742" for this suite. @ 09/09/25 21:18:54.399
• [6.723 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/09/25 21:18:54.408
  I0909 21:18:54.408063 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 21:18:54.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:18:54.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:18:54.45
  STEP: Creating configMap with name configmap-projected-all-test-volume-dc49ea03-84fb-41ab-855d-07f5e8570f3c @ 09/09/25 21:18:54.46
  STEP: Creating secret with name secret-projected-all-test-volume-a55cf083-9e06-4860-a740-3f2ebce8cb0d @ 09/09/25 21:18:54.469
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/09/25 21:18:54.481
  I0909 21:18:54.507369      22 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  STEP: Saw pod success @ 09/09/25 21:18:58.532
  I0909 21:18:58.538642 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod projected-volume-0184009c-916f-438a-96e2-f30bafcb57a0 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 21:18:58.566
  I0909 21:18:58.601812 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4037" for this suite. @ 09/09/25 21:18:58.607
• [4.210 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/09/25 21:18:58.618
  I0909 21:18:58.618630 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename cronjob @ 09/09/25 21:18:58.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:18:58.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:18:58.652
  STEP: Creating a ForbidConcurrent cronjob @ 09/09/25 21:18:58.657
  STEP: Ensuring a job is scheduled @ 09/09/25 21:18:58.666
  STEP: Ensuring exactly one is scheduled @ 09/09/25 21:19:00.672
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/09/25 21:19:00.676
  STEP: Ensuring no more jobs are scheduled @ 09/09/25 21:19:00.682
  STEP: Removing cronjob @ 09/09/25 21:19:00.685
  I0909 21:19:00.692716 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6069" for this suite. @ 09/09/25 21:19:00.704
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 09/09/25 21:19:00.726
  I0909 21:19:00.726593 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 21:19:00.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:19:00.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:19:00.78
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/09/25 21:19:00.783
  STEP: Saw pod success @ 09/09/25 21:19:04.819
  I0909 21:19:04.827994 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-83095051-019e-4cb1-9f07-0c6cbf5b2cb1 container test-container: <nil>
  STEP: delete the pod @ 09/09/25 21:19:04.844
  I0909 21:19:04.887126 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9405" for this suite. @ 09/09/25 21:19:04.9
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/09/25 21:19:04.931
  I0909 21:19:04.931291 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename var-expansion @ 09/09/25 21:19:04.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:19:04.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:19:04.972
  I0909 21:19:07.005407 22 delete.go:62] Deleting pod "var-expansion-bf282c04-e904-47ad-8cfc-b14d1e15eb38" in namespace "var-expansion-3475"
  I0909 21:19:07.021854 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-bf282c04-e904-47ad-8cfc-b14d1e15eb38" to be fully deleted
  I0909 21:19:11.038572 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3475" for this suite. @ 09/09/25 21:19:11.051
• [6.140 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/09/25 21:19:11.068
  I0909 21:19:11.068980 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 21:19:11.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:19:11.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:19:11.11
  STEP: Creating the pod @ 09/09/25 21:19:11.114
  I0909 21:19:13.684985 22 pod_client.go:173] Successfully updated pod "labelsupdate59e84a61-4f18-4b9f-84d0-29c3f1bc7f42"
  I0909 21:19:17.721002 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3723" for this suite. @ 09/09/25 21:19:17.732
• [6.677 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 09/09/25 21:19:17.749
  I0909 21:19:17.749373 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replication-controller @ 09/09/25 21:19:17.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:19:17.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:19:17.783
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/09/25 21:19:17.792
  STEP: When a replication controller with a matching selector is created @ 09/09/25 21:19:19.851
  STEP: Then the orphan pod is adopted @ 09/09/25 21:19:19.881
  I0909 21:19:19.896165 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2532" for this suite. @ 09/09/25 21:19:19.911
• [2.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 09/09/25 21:19:19.932
  I0909 21:19:19.932340 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sched-preemption @ 09/09/25 21:19:19.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:19:19.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:19:19.975
  I0909 21:19:19.996567 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0909 21:20:20.006244 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/09/25 21:20:20.014
  STEP: Adding a custom resource @ 09/09/25 21:20:20.014
  I0909 21:20:20.069708 22 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0909 21:20:20.096546 22 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/09/25 21:20:20.097
  I0909 21:20:20.161400 22 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0909 21:20:20.195964 22 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/09/25 21:20:20.199
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/09/25 21:20:22.241
  STEP: Removing a custom resource @ 09/09/25 21:20:26.352
  STEP: Removing a custom resource @ 09/09/25 21:20:26.401
  I0909 21:20:26.425297 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8072" for this suite. @ 09/09/25 21:20:26.432
• [66.517 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 09/09/25 21:20:26.449
  I0909 21:20:26.449083 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename gc @ 09/09/25 21:20:26.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:20:26.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:20:26.475
  STEP: create the rc @ 09/09/25 21:20:26.482
  I0909 21:20:26.494374      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/09/25 21:20:30.513
  STEP: wait for the rc to be deleted @ 09/09/25 21:20:30.518
  I0909 21:20:31.584112 22 garbage_collector.go:678] 80 pods remaining
  I0909 21:20:31.584165 22 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0909 21:20:31.584173 22 garbage_collector.go:686] 
  I0909 21:20:32.550026 22 garbage_collector.go:678] 71 pods remaining
  I0909 21:20:32.550084 22 garbage_collector.go:685] 70 pods has nil DeletionTimestamp
  I0909 21:20:32.550095 22 garbage_collector.go:686] 
  I0909 21:20:33.553209 22 garbage_collector.go:678] 60 pods remaining
  I0909 21:20:33.553284 22 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0909 21:20:33.553296 22 garbage_collector.go:686] 
  I0909 21:20:34.537645 22 garbage_collector.go:678] 40 pods remaining
  I0909 21:20:34.537772 22 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0909 21:20:34.537783 22 garbage_collector.go:686] 
  I0909 21:20:35.550923 22 garbage_collector.go:678] 31 pods remaining
  I0909 21:20:35.552515 22 garbage_collector.go:685] 30 pods has nil DeletionTimestamp
  I0909 21:20:35.553357 22 garbage_collector.go:686] 
  I0909 21:20:36.549282 22 garbage_collector.go:678] 20 pods remaining
  I0909 21:20:36.550136 22 garbage_collector.go:685] 20 pods has nil DeletionTimestamp
  I0909 21:20:36.550707 22 garbage_collector.go:686] 
  STEP: Gathering metrics @ 09/09/25 21:20:37.544
  I0909 21:20:37.737417 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0909 21:20:37.737596 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-697" for this suite. @ 09/09/25 21:20:37.741
• [11.303 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 09/09/25 21:20:37.755
  I0909 21:20:37.755798 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 21:20:37.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:20:37.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:20:37.78
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/09/25 21:20:37.783
  STEP: Saw pod success @ 09/09/25 21:20:51.858
  I0909 21:20:51.863137 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-619c727e-96f5-4468-8617-5608005286ce container test-container: <nil>
  STEP: delete the pod @ 09/09/25 21:20:51.897
  I0909 21:20:51.920963 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9163" for this suite. @ 09/09/25 21:20:51.924
• [14.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/09/25 21:20:51.934
  I0909 21:20:51.934802 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename field-validation @ 09/09/25 21:20:51.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:20:51.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:20:51.974
  I0909 21:20:51.981236 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  I0909 21:20:54.568144      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0909 21:20:54.569132      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0909 21:20:54.570792      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0909 21:20:54.572051      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0909 21:20:54.573293      22 warnings.go:110] "Warning: unknown field \"gamma\""
  I0909 21:20:55.154274 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5839" for this suite. @ 09/09/25 21:20:55.159
• [3.234 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/09/25 21:20:55.18
  I0909 21:20:55.183420 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename subpath @ 09/09/25 21:20:55.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:20:55.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:20:55.217
  STEP: Setting up data @ 09/09/25 21:20:55.219
  STEP: Creating pod pod-subpath-test-downwardapi-rrx2 @ 09/09/25 21:20:55.232
  STEP: Creating a pod to test atomic-volume-subpath @ 09/09/25 21:20:55.232
  STEP: Saw pod success @ 09/09/25 21:21:19.315
  I0909 21:21:19.322146 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-subpath-test-downwardapi-rrx2 container test-container-subpath-downwardapi-rrx2: <nil>
  STEP: delete the pod @ 09/09/25 21:21:19.333
  STEP: Deleting pod pod-subpath-test-downwardapi-rrx2 @ 09/09/25 21:21:19.386
  I0909 21:21:19.387563 22 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-rrx2" in namespace "subpath-5718"
  I0909 21:21:19.390860 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5718" for this suite. @ 09/09/25 21:21:19.395
• [24.225 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/09/25 21:21:19.405
  I0909 21:21:19.405423 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 21:21:19.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:21:19.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:21:19.437
  STEP: Creating projection with secret that has name secret-emptykey-test-52196b4f-9484-4842-bbd7-89adb941d50c @ 09/09/25 21:21:19.445
  I0909 21:21:19.449354 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3270" for this suite. @ 09/09/25 21:21:19.498
• [0.103 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/09/25 21:21:19.509
  I0909 21:21:19.510200 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename chunking @ 09/09/25 21:21:19.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:21:19.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:21:19.546
  STEP: creating a large number of resources @ 09/09/25 21:21:19.55
  STEP: retrieving those results in paged fashion several times @ 09/09/25 21:21:37.225
  I0909 21:21:37.270365 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0909 21:21:37.319112 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0909 21:21:37.370158 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0909 21:21:37.423615 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0909 21:21:37.470729 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0909 21:21:37.517262 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0909 21:21:37.567872 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0909 21:21:37.616679 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0909 21:21:37.666845 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0909 21:21:37.717585 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0909 21:21:37.768437 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0909 21:21:37.819839 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0909 21:21:37.868447 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0909 21:21:37.919469 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0909 21:21:37.973027 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0909 21:21:38.016911 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0909 21:21:38.067762 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0909 21:21:38.116846 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0909 21:21:38.167042 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0909 21:21:38.220401 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0909 21:21:38.270183 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0909 21:21:38.322825 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0909 21:21:38.367561 22 chunking.go:98] Retrieved 17/17 results with rv 18847 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NDcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0909 21:21:38.424251 22 chunking.go:98] Retrieved 9/17 results with rv 18847 and continue 
  I0909 21:21:38.468471 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0909 21:21:38.517577 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0909 21:21:38.569807 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0909 21:21:38.617269 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0909 21:21:38.668305 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0909 21:21:38.718686 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0909 21:21:38.767551 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0909 21:21:38.817353 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0909 21:21:38.869330 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0909 21:21:38.916576 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0909 21:21:38.967329 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0909 21:21:39.020510 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0909 21:21:39.067485 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0909 21:21:39.118006 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0909 21:21:39.168473 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0909 21:21:39.218129 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0909 21:21:39.269034 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0909 21:21:39.319183 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0909 21:21:39.370014 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0909 21:21:39.419157 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0909 21:21:39.469287 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0909 21:21:39.517873 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0909 21:21:39.567860 22 chunking.go:98] Retrieved 17/17 results with rv 18854 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0909 21:21:39.619451 22 chunking.go:98] Retrieved 9/17 results with rv 18854 and continue 
  I0909 21:21:39.668258 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0909 21:21:39.716105 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0909 21:21:39.766953 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0909 21:21:39.822838 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0909 21:21:39.868568 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0909 21:21:39.921029 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0909 21:21:39.974096 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0909 21:21:40.020168 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0909 21:21:40.068208 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0909 21:21:40.119882 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0909 21:21:40.169571 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0909 21:21:40.226633 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0909 21:21:40.275500 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0909 21:21:40.319629 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0909 21:21:40.368062 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0909 21:21:40.430047 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0909 21:21:40.468152 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0909 21:21:40.520371 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0909 21:21:40.567528 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0909 21:21:40.618615 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0909 21:21:40.668405 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0909 21:21:40.720343 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0909 21:21:40.767713 22 chunking.go:98] Retrieved 17/17 results with rv 18855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0909 21:21:40.826469 22 chunking.go:98] Retrieved 9/17 results with rv 18855 and continue 
  STEP: retrieving those results all at once @ 09/09/25 21:21:40.826
  I0909 21:21:40.879502 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8107" for this suite. @ 09/09/25 21:21:40.92
• [21.467 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/09/25 21:21:40.991
  I0909 21:21:40.992223 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename csi-storageclass @ 09/09/25 21:21:40.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:21:41.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:21:41.067
  STEP: Creating a StorageClass @ 09/09/25 21:21:41.074
  STEP: Get StorageClass "e2e-jwgmz" @ 09/09/25 21:21:41.087
  STEP: Patching the StorageClass "e2e-jwgmz" @ 09/09/25 21:21:41.092
  STEP: Delete StorageClass "e2e-jwgmz" @ 09/09/25 21:21:41.102
  STEP: Confirm deletion of StorageClass "e2e-jwgmz" @ 09/09/25 21:21:41.112
  STEP: Create a replacement StorageClass @ 09/09/25 21:21:41.117
  STEP: Updating StorageClass "e2e-v2-696cz" @ 09/09/25 21:21:41.128
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-696cz=updated" @ 09/09/25 21:21:41.141
  STEP: Deleting StorageClass "e2e-v2-696cz" via DeleteCollection @ 09/09/25 21:21:41.146
  STEP: Confirm deletion of StorageClass "e2e-v2-696cz" @ 09/09/25 21:21:41.156
  I0909 21:21:41.164154 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8486" for this suite. @ 09/09/25 21:21:41.173
• [0.193 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/09/25 21:21:41.184
  I0909 21:21:41.184467 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 21:21:41.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:21:41.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:21:41.206
  STEP: Creating secret with name projected-secret-test-cfae1479-2a18-4c47-a9fd-ef67a7fc8dfb @ 09/09/25 21:21:41.209
  STEP: Creating a pod to test consume secrets @ 09/09/25 21:21:41.214
  STEP: Saw pod success @ 09/09/25 21:21:45.257
  I0909 21:21:45.272561 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-secrets-a2f38e6f-810e-4f39-9154-583ef37c1294 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 21:21:45.309
  I0909 21:21:45.337564 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9787" for this suite. @ 09/09/25 21:21:45.343
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/09/25 21:21:45.364
  I0909 21:21:45.365202 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl-logs @ 09/09/25 21:21:45.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:21:45.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:21:45.402
  STEP: creating a pod @ 09/09/25 21:21:45.408
  I0909 21:21:45.409052 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-logs-3802 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0909 21:21:45.535239 22 builder.go:146] stderr: ""
  I0909 21:21:45.535326 22 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/09/25 21:21:45.536
  I0909 21:21:45.536343 22 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0909 21:21:47.545217 22 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/09/25 21:21:47.545
  I0909 21:21:47.545303 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-logs-3802 logs logs-generator logs-generator'
  I0909 21:21:47.668686 22 builder.go:146] stderr: ""
  I0909 21:21:47.668759 22 builder.go:147] stdout: "I0909 21:21:46.577919       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/gvf 585\nI0909 21:21:46.778122       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/p9x 313\nI0909 21:21:46.978764       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/ww8 406\nI0909 21:21:47.178261       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/tvl 332\nI0909 21:21:47.378031       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/tzsh 213\nI0909 21:21:47.579171       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/qtp 314\n"
  STEP: limiting log lines @ 09/09/25 21:21:47.669
  I0909 21:21:47.670704 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-logs-3802 logs logs-generator logs-generator --tail=1'
  I0909 21:21:47.794716 22 builder.go:146] stderr: ""
  I0909 21:21:47.794756 22 builder.go:147] stdout: "I0909 21:21:47.579171       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/qtp 314\n"
  I0909 21:21:47.794766 22 logs.go:180] got output "I0909 21:21:47.579171       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/qtp 314\n"
  STEP: limiting log bytes @ 09/09/25 21:21:47.794
  I0909 21:21:47.794832 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-logs-3802 logs logs-generator logs-generator --limit-bytes=1'
  I0909 21:21:48.026029 22 builder.go:146] stderr: ""
  I0909 21:21:48.026097 22 builder.go:147] stdout: "I"
  I0909 21:21:48.026117 22 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/09/25 21:21:48.026
  I0909 21:21:48.026191 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-logs-3802 logs logs-generator logs-generator --tail=1 --timestamps'
  I0909 21:21:48.201857 22 builder.go:146] stderr: ""
  I0909 21:21:48.201922 22 builder.go:147] stdout: "2025-09-09T21:21:48.179169448Z I0909 21:21:48.179071       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/9sd 307\n"
  I0909 21:21:48.201943 22 logs.go:192] got output "2025-09-09T21:21:48.179169448Z I0909 21:21:48.179071       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/9sd 307\n"
  STEP: restricting to a time range @ 09/09/25 21:21:48.201
  I0909 21:21:50.703873 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-logs-3802 logs logs-generator logs-generator --since=1s'
  I0909 21:21:50.882772 22 builder.go:146] stderr: ""
  I0909 21:21:50.882877 22 builder.go:147] stdout: "I0909 21:21:49.978642       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/kv28 226\nI0909 21:21:50.178085       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/v5p 389\nI0909 21:21:50.378639       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/45w 486\nI0909 21:21:50.578267       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/87f 516\nI0909 21:21:50.779035       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/bwc 480\n"
  I0909 21:21:50.882944 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-logs-3802 logs logs-generator logs-generator --since=24h'
  I0909 21:21:51.016066 22 builder.go:146] stderr: ""
  I0909 21:21:51.016138 22 builder.go:147] stdout: "I0909 21:21:46.577919       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/gvf 585\nI0909 21:21:46.778122       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/p9x 313\nI0909 21:21:46.978764       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/ww8 406\nI0909 21:21:47.178261       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/tvl 332\nI0909 21:21:47.378031       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/tzsh 213\nI0909 21:21:47.579171       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/qtp 314\nI0909 21:21:47.778715       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/qk75 208\nI0909 21:21:47.978225       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/vktb 254\nI0909 21:21:48.179071       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/9sd 307\nI0909 21:21:48.378221       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/fm5w 511\nI0909 21:21:48.578929       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/ghfg 244\nI0909 21:21:48.778457       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/qkx9 453\nI0909 21:21:48.978692       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/fsr 385\nI0909 21:21:49.178720       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/75fb 457\nI0909 21:21:49.378526       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/75j 254\nI0909 21:21:49.578459       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/hwcv 248\nI0909 21:21:49.778984       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/4swz 271\nI0909 21:21:49.978642       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/kv28 226\nI0909 21:21:50.178085       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/v5p 389\nI0909 21:21:50.378639       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/45w 486\nI0909 21:21:50.578267       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/87f 516\nI0909 21:21:50.779035       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/bwc 480\nI0909 21:21:50.978423       1 logs_generator.go:76] 22 GET /api/v1/namespaces/kube-system/pods/2d7 527\n"
  I0909 21:21:51.016232 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-logs-3802 delete pod logs-generator'
  I0909 21:21:52.532611 22 builder.go:146] stderr: ""
  I0909 21:21:52.532700 22 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0909 21:21:52.533734 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3802" for this suite. @ 09/09/25 21:21:52.543
• [7.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/09/25 21:21:52.56
  I0909 21:21:52.560572 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename cronjob @ 09/09/25 21:21:52.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:21:52.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:21:52.584
  STEP: Creating a cronjob @ 09/09/25 21:21:52.589
  STEP: Ensuring more than one job is running at a time @ 09/09/25 21:21:52.601
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/09/25 21:23:00.605
  STEP: Removing cronjob @ 09/09/25 21:23:00.61
  I0909 21:23:00.619540 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8391" for this suite. @ 09/09/25 21:23:00.656
• [68.125 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 09/09/25 21:23:00.685
  I0909 21:23:00.685513 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename namespaces @ 09/09/25 21:23:00.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:00.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:00.751
  STEP: Creating namespace "e2e-ns-49b9r" @ 09/09/25 21:23:00.761
  I0909 21:23:00.788997 22 namespace.go:412] Namespace "e2e-ns-49b9r-622" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-49b9r-622" @ 09/09/25 21:23:00.789
  I0909 21:23:00.800584 22 namespace.go:435] Namespace "e2e-ns-49b9r-622" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-49b9r-622" @ 09/09/25 21:23:00.8
  I0909 21:23:00.809356 22 namespace.go:464] Namespace "e2e-ns-49b9r-622" has []v1.FinalizerName{"kubernetes"}
  I0909 21:23:00.810034 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5715" for this suite. @ 09/09/25 21:23:00.814
  STEP: Destroying namespace "e2e-ns-49b9r-622" for this suite. @ 09/09/25 21:23:00.821
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/09/25 21:23:00.844
  I0909 21:23:00.845401 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 21:23:00.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:00.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:00.87
  STEP: Creating configMap with name configmap-test-volume-a01358f5-d84e-4fcd-bc42-821d55aae14b @ 09/09/25 21:23:00.873
  STEP: Creating a pod to test consume configMaps @ 09/09/25 21:23:00.881
  STEP: Saw pod success @ 09/09/25 21:23:04.912
  I0909 21:23:04.917490 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-87082f56-8d41-46f1-87f5-bda2bbc5fa1d container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 21:23:04.926
  I0909 21:23:04.964666 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5302" for this suite. @ 09/09/25 21:23:04.975
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 09/09/25 21:23:05.012
  I0909 21:23:05.012887 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename security-context @ 09/09/25 21:23:05.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:05.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:05.048
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/09/25 21:23:05.051
  STEP: Saw pod success @ 09/09/25 21:23:09.088
  I0909 21:23:09.092598 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod security-context-f43ddd90-d030-402a-8b8a-f35870e92a49 container test-container: <nil>
  STEP: delete the pod @ 09/09/25 21:23:09.125
  I0909 21:23:09.161642 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1051" for this suite. @ 09/09/25 21:23:09.174
• [4.176 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/09/25 21:23:09.192
  I0909 21:23:09.192743 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 21:23:09.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:09.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:09.225
  STEP: Creating configMap with name configmap-test-upd-60b5fc32-e4b0-4f8c-a549-85c13b067433 @ 09/09/25 21:23:09.277
  STEP: Creating the pod @ 09/09/25 21:23:09.282
  STEP: Waiting for pod with text data @ 09/09/25 21:23:11.313
  STEP: Waiting for pod with binary data @ 09/09/25 21:23:11.324
  I0909 21:23:11.334975 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4351" for this suite. @ 09/09/25 21:23:11.342
• [2.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/09/25 21:23:11.377
  I0909 21:23:11.377242 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/09/25 21:23:11.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:11.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:11.412
  STEP: create the container to handle the HTTPGet hook request. @ 09/09/25 21:23:11.443
  STEP: create the pod with lifecycle hook @ 09/09/25 21:23:13.494
  STEP: delete the pod with lifecycle hook @ 09/09/25 21:23:15.533
  STEP: check prestop hook @ 09/09/25 21:23:19.569
  I0909 21:23:19.582573 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-175" for this suite. @ 09/09/25 21:23:19.592
• [8.225 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/09/25 21:23:19.603
  I0909 21:23:19.603326 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/09/25 21:23:19.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:19.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:19.637
  I0909 21:23:19.651227 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-123" for this suite. @ 09/09/25 21:23:19.689
• [0.096 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/09/25 21:23:19.711
  I0909 21:23:19.711868 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename deployment @ 09/09/25 21:23:19.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:19.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:19.737
  STEP: creating a Deployment @ 09/09/25 21:23:19.742
  STEP: waiting for Deployment to be created @ 09/09/25 21:23:19.752
  STEP: waiting for all Replicas to be Ready @ 09/09/25 21:23:19.754
  I0909 21:23:19.755835 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0909 21:23:19.756059 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0909 21:23:19.778975 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0909 21:23:19.781986 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0909 21:23:19.804094 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0909 21:23:19.804749 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0909 21:23:19.860682 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0909 21:23:19.860877 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0909 21:23:20.826536 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0909 21:23:20.826813 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0909 21:23:21.331420 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/09/25 21:23:21.331
  I0909 21:23:21.356935 22 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/09/25 21:23:21.358
  I0909 21:23:21.363077 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0
  I0909 21:23:21.363155 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0
  I0909 21:23:21.363176 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0
  I0909 21:23:21.363196 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0
  I0909 21:23:21.363493 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0
  I0909 21:23:21.363516 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0
  I0909 21:23:21.363530 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0
  I0909 21:23:21.363542 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 0
  I0909 21:23:21.363559 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  I0909 21:23:21.363580 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  I0909 21:23:21.363694 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:21.363710 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:21.363723 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:21.363735 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:21.389751 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:21.391001 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:21.437062 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:21.440143 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:21.452758 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  I0909 21:23:21.452983 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  I0909 21:23:21.459667 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  I0909 21:23:21.461084 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  I0909 21:23:23.385194 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:23.385253 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:23.421329 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  STEP: listing Deployments @ 09/09/25 21:23:23.421
  I0909 21:23:23.424001 22 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/09/25 21:23:23.424
  I0909 21:23:23.438060 22 deployment.go:360] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/09/25 21:23:23.438
  I0909 21:23:23.444887 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0909 21:23:23.477613 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0909 21:23:23.528450 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0909 21:23:23.571322 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0909 21:23:24.860138 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0909 21:23:24.929807 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0909 21:23:24.962740 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0909 21:23:24.997210 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0909 21:23:26.402623 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/09/25 21:23:26.452
  STEP: fetching the DeploymentStatus @ 09/09/25 21:23:26.472
  I0909 21:23:26.478228 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  I0909 21:23:26.478290 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  I0909 21:23:26.478655 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  I0909 21:23:26.478836 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 1
  I0909 21:23:26.478853 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:26.479453 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 3
  I0909 21:23:26.480025 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:26.480596 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 2
  I0909 21:23:26.481180 22 deployment.go:448] observed Deployment test-deployment in namespace deployment-3690 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/09/25 21:23:26.481
  I0909 21:23:26.492331 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.492766 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.495685 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.496039 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.498068 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.499813 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.502501 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.504521 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.504536 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.515169 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.515595 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.515819 22 deployment.go:474] observed event type MODIFIED
  I0909 21:23:26.533109 22 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0909 21:23:26.536970 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3690" for this suite. @ 09/09/25 21:23:26.545
• [6.854 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 09/09/25 21:23:26.561
  I0909 21:23:26.561311 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 21:23:26.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:26.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:26.579
  STEP: create deployment with httpd image @ 09/09/25 21:23:26.582
  I0909 21:23:26.582587 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-1713 create -f -'
  I0909 21:23:26.721033 22 builder.go:146] stderr: ""
  I0909 21:23:26.721104 22 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/09/25 21:23:26.721
  I0909 21:23:26.721187 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-1713 diff -f -'
  I0909 21:23:26.951929 22 builder.go:135] rc: 1
  I0909 21:23:26.952719 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-1713 delete -f -'
  I0909 21:23:27.048314 22 builder.go:146] stderr: ""
  I0909 21:23:27.048466 22 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0909 21:23:27.052396 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1713" for this suite. @ 09/09/25 21:23:27.056
• [0.505 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/09/25 21:23:27.065
  I0909 21:23:27.065933 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pod-network-test @ 09/09/25 21:23:27.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:27.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:27.086
  STEP: Performing setup for networking test in namespace pod-network-test-5807 @ 09/09/25 21:23:27.088
  STEP: creating a selector @ 09/09/25 21:23:27.088
  STEP: Creating the service pods in kubernetes @ 09/09/25 21:23:27.088
  I0909 21:23:27.088910 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/09/25 21:23:41.266
  I0909 21:23:43.319423 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0909 21:23:43.319507 22 utils.go:495] Going to poll 10.42.1.159 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0909 21:23:43.323580 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.159:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5807 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 21:23:43.323645 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 21:23:43.323784 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5807/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.159%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0909 21:23:43.460684 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 21:23:43.461449 22 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0909 21:23:43.462112 22 utils.go:495] Going to poll 10.42.3.134 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0909 21:23:43.467808 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.3.134:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5807 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 21:23:43.467848 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 21:23:43.467915 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5807/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.3.134%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0909 21:23:43.481254      22 websocket.go:297] Unknown stream id 1, discarding message
  I0909 21:23:43.593701 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 21:23:43.594256 22 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0909 21:23:43.595336 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5807" for this suite. @ 09/09/25 21:23:43.603
• [16.556 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/09/25 21:23:43.633
  I0909 21:23:43.633356 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 21:23:43.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:43.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:43.655
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 21:23:43.657
  STEP: Saw pod success @ 09/09/25 21:23:47.685
  I0909 21:23:47.692120 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-20f10a19-7c50-4e94-b6fd-484286522b6d container client-container: <nil>
  STEP: delete the pod @ 09/09/25 21:23:47.701
  I0909 21:23:47.737382 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9835" for this suite. @ 09/09/25 21:23:47.744
• [4.123 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/09/25 21:23:47.757
  I0909 21:23:47.757270 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename daemonsets @ 09/09/25 21:23:47.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:47.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:47.785
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/09/25 21:23:47.857
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/09/25 21:23:47.869
  I0909 21:23:47.965678 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:23:48.012744 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:23:48.028005 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 21:23:48.028062 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0909 21:23:48.873605 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:23:48.874090 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:23:48.876521 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 21:23:48.876916 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0909 21:23:49.878282 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:23:49.880381 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:23:49.888652 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 21:23:49.888740 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  I0909 21:23:50.877572 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:23:50.879061 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:23:50.897253 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0909 21:23:50.897344 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/09/25 21:23:50.902
  I0909 21:23:50.979196 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:23:50.981461 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:23:50.996335 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 21:23:50.997271 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  I0909 21:23:51.948219 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:23:51.949209 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:23:51.952932 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 21:23:51.952984 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  I0909 21:23:52.952058 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:23:52.952111 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:23:52.957973 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 21:23:52.958005 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  I0909 21:23:53.947448 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:23:53.952048 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:23:53.964172 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0909 21:23:53.964311 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/09/25 21:23:53.964
  STEP: Deleting DaemonSet "daemon-set" @ 09/09/25 21:23:53.973
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8130, will wait for the garbage collector to delete the pods @ 09/09/25 21:23:53.973
  I0909 21:23:54.037794 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.124976ms
  I0909 21:23:54.138345 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.546902ms
  I0909 21:23:56.142691 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 21:23:56.142777 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0909 21:23:56.148308 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20616"},"items":null}

  I0909 21:23:56.153193 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20616"},"items":null}

  I0909 21:23:56.175959 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8130" for this suite. @ 09/09/25 21:23:56.264
• [8.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 09/09/25 21:23:56.297
  I0909 21:23:56.297488 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename gc @ 09/09/25 21:23:56.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:23:56.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:23:56.321
  I0909 21:23:56.424230 22 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"52f4d5b0-1881-427b-b3db-e4f4a97c5df4", Controller:(*bool)(0xc003538e96), BlockOwnerDeletion:(*bool)(0xc003538e97)}}
  I0909 21:23:56.447644 22 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"e8cb1117-0ede-4ee8-8ff8-9d055e5c5efd", Controller:(*bool)(0xc0035390ce), BlockOwnerDeletion:(*bool)(0xc0035390cf)}}
  I0909 21:23:56.465131 22 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"02f3724f-43b8-48f2-9ca0-f183fd91e618", Controller:(*bool)(0xc00277514e), BlockOwnerDeletion:(*bool)(0xc00277514f)}}
  I0909 21:24:01.480637 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7716" for this suite. @ 09/09/25 21:24:01.497
• [5.224 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 09/09/25 21:24:01.523
  I0909 21:24:01.523769 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 21:24:01.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:01.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:01.56
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 09/09/25 21:24:01.569
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 09/09/25 21:24:01.59
  STEP: Verifying the Job status fields to ensure early termination of the job @ 09/09/25 21:24:05.621
  I0909 21:24:05.625170 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9302" for this suite. @ 09/09/25 21:24:05.631
• [4.116 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 09/09/25 21:24:05.646
  I0909 21:24:05.646103 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sched-pred @ 09/09/25 21:24:05.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:05.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:05.672
  I0909 21:24:05.674463 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0909 21:24:05.737328 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0909 21:24:05.743535 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-103 before test
  I0909 21:24:05.768628 22 predicates.go:958] helm-install-one-longhorn-476cj from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.768685 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:24:05.768698 22 predicates.go:958] helm-install-one-metallb-6gskx from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.768707 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:24:05.769337 22 predicates.go:958] helm-install-one-traefik-tfqs6 from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.769763 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:24:05.770094 22 predicates.go:958] helm-install-rke2-metrics-server-rrcmj from kube-system started at 2025-09-09 20:49:49 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.770508 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:24:05.770793 22 predicates.go:958] helm-install-rke2-runtimeclasses-jvflg from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.771069 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:24:05.771739 22 predicates.go:958] helm-install-rke2-snapshot-controller-9dhg9 from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.771943 22 predicates.go:960] 	Container helm ready: false, restart count 2
  I0909 21:24:05.772248 22 predicates.go:958] helm-install-rke2-snapshot-controller-crd-gqjzf from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.772693 22 predicates.go:960] 	Container helm ready: false, restart count 0
  I0909 21:24:05.773018 22 predicates.go:958] kube-proxy-oneke-ip-192-168-150-103 from kube-system started at 2025-09-09 20:49:22 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.773348 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0909 21:24:05.773823 22 predicates.go:958] rke2-canal-pwldb from kube-system started at 2025-09-09 20:49:22 +0000 UTC (2 container statuses recorded)
  I0909 21:24:05.774094 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0909 21:24:05.774427 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0909 21:24:05.774739 22 predicates.go:958] rke2-coredns-rke2-coredns-86c455b944-rbv9n from kube-system started at 2025-09-09 20:50:11 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.775115 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0909 21:24:05.775439 22 predicates.go:958] rke2-coredns-rke2-coredns-autoscaler-79677f89c4-szrjv from kube-system started at 2025-09-09 20:49:50 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.775774 22 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0909 21:24:05.776216 22 predicates.go:958] rke2-metrics-server-69bdccfdd9-sk8pq from kube-system started at 2025-09-09 20:50:13 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.776531 22 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0909 21:24:05.777042 22 predicates.go:958] rke2-multus-6kq6h from kube-system started at 2025-09-09 20:49:22 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.777633 22 predicates.go:960] 	Container kube-rke2-multus ready: true, restart count 2
  I0909 21:24:05.778138 22 predicates.go:958] rke2-multus-rke2-whereabouts-8zl9g from kube-system started at 2025-09-09 20:49:22 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.778444 22 predicates.go:960] 	Container rke2-whereabouts ready: true, restart count 1
  I0909 21:24:05.779049 22 predicates.go:958] rke2-snapshot-controller-696989ffdd-zc5kj from kube-system started at 2025-09-09 20:50:30 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.779379 22 predicates.go:960] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0909 21:24:05.779902 22 predicates.go:958] csi-attacher-6d6c77b95b-t927f from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.780277 22 predicates.go:960] 	Container csi-attacher ready: true, restart count 0
  I0909 21:24:05.780714 22 predicates.go:958] csi-provisioner-5584b8f578-4428r from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.780884 22 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I0909 21:24:05.781254 22 predicates.go:958] csi-resizer-7d76b968d9-kz99t from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.781565 22 predicates.go:960] 	Container csi-resizer ready: true, restart count 0
  I0909 21:24:05.781843 22 predicates.go:958] csi-resizer-7d76b968d9-ms7j4 from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.782290 22 predicates.go:960] 	Container csi-resizer ready: true, restart count 0
  I0909 21:24:05.782583 22 predicates.go:958] csi-snapshotter-7f46d58c9f-4b462 from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.782964 22 predicates.go:960] 	Container csi-snapshotter ready: true, restart count 0
  I0909 21:24:05.783446 22 predicates.go:958] csi-snapshotter-7f46d58c9f-7hh6b from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.783721 22 predicates.go:960] 	Container csi-snapshotter ready: true, restart count 0
  I0909 21:24:05.783878 22 predicates.go:958] engine-image-ei-b4bcf0a5-vldxv from longhorn-system started at 2025-09-09 20:50:47 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.784266 22 predicates.go:960] 	Container engine-image-ei-b4bcf0a5 ready: true, restart count 0
  I0909 21:24:05.784443 22 predicates.go:958] instance-manager-a66ef38aea842eb90d02b3a6a3136a1e from longhorn-system started at 2025-09-09 20:50:47 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.784456 22 predicates.go:960] 	Container instance-manager ready: true, restart count 0
  I0909 21:24:05.784464 22 predicates.go:958] longhorn-csi-plugin-vpmsb from longhorn-system started at 2025-09-09 20:52:31 +0000 UTC (3 container statuses recorded)
  I0909 21:24:05.784623 22 predicates.go:960] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0909 21:24:05.785192 22 predicates.go:960] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0909 21:24:05.785208 22 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0909 21:24:05.785220 22 predicates.go:958] longhorn-manager-xh6dp from longhorn-system started at 2025-09-09 20:50:15 +0000 UTC (2 container statuses recorded)
  I0909 21:24:05.785257 22 predicates.go:960] 	Container longhorn-manager ready: true, restart count 0
  I0909 21:24:05.785495 22 predicates.go:960] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0909 21:24:05.785773 22 predicates.go:958] one-metallb-controller-8576445d78-bh5vd from metallb-system started at 2025-09-09 20:50:14 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.785936 22 predicates.go:960] 	Container controller ready: true, restart count 0
  I0909 21:24:05.786201 22 predicates.go:958] one-metallb-speaker-kc9mm from metallb-system started at 2025-09-09 20:50:14 +0000 UTC (4 container statuses recorded)
  I0909 21:24:05.786209 22 predicates.go:960] 	Container frr ready: true, restart count 0
  I0909 21:24:05.786215 22 predicates.go:960] 	Container frr-metrics ready: true, restart count 0
  I0909 21:24:05.786222 22 predicates.go:960] 	Container reloader ready: true, restart count 0
  I0909 21:24:05.786477 22 predicates.go:960] 	Container speaker ready: true, restart count 0
  I0909 21:24:05.786927 22 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-09 21:03:43 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.787073 22 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0909 21:24:05.787086 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-743f0bf30f3f4846-j94rb from sonobuoy started at 2025-09-09 21:03:49 +0000 UTC (2 container statuses recorded)
  I0909 21:24:05.787093 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0909 21:24:05.787100 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0909 21:24:05.787483 22 predicates.go:958] one-traefik-6b6df477ff-2gnbg from traefik-system started at 2025-09-09 20:50:16 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.787744 22 predicates.go:960] 	Container one-traefik ready: true, restart count 0
  I0909 21:24:05.787757 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-105 before test
  I0909 21:24:05.794046 22 predicates.go:958] with-max-failed-indexes-0-m994s from job-9302 started at 2025-09-09 21:24:01 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.794063 22 predicates.go:960] 	Container c ready: false, restart count 0
  I0909 21:24:05.794069 22 predicates.go:958] kube-proxy-oneke-ip-192-168-150-105 from kube-system started at 2025-09-09 20:57:09 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.794075 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0909 21:24:05.794080 22 predicates.go:958] rke2-canal-2p6vz from kube-system started at 2025-09-09 20:57:10 +0000 UTC (2 container statuses recorded)
  I0909 21:24:05.794085 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0909 21:24:05.794091 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0909 21:24:05.794096 22 predicates.go:958] rke2-multus-lfldf from kube-system started at 2025-09-09 20:57:10 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.794101 22 predicates.go:960] 	Container kube-rke2-multus ready: true, restart count 1
  I0909 21:24:05.794107 22 predicates.go:958] rke2-multus-rke2-whereabouts-sdwcp from kube-system started at 2025-09-09 20:57:10 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.794112 22 predicates.go:960] 	Container rke2-whereabouts ready: true, restart count 1
  I0909 21:24:05.794117 22 predicates.go:958] engine-image-ei-b4bcf0a5-jjsbq from longhorn-system started at 2025-09-09 20:57:38 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.794122 22 predicates.go:960] 	Container engine-image-ei-b4bcf0a5 ready: true, restart count 0
  I0909 21:24:05.794127 22 predicates.go:958] instance-manager-4b2431e7d9277de65a4f9968308c14c0 from longhorn-system started at 2025-09-09 20:58:06 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.794132 22 predicates.go:960] 	Container instance-manager ready: true, restart count 0
  I0909 21:24:05.794137 22 predicates.go:958] longhorn-csi-plugin-mvjcx from longhorn-system started at 2025-09-09 20:57:38 +0000 UTC (3 container statuses recorded)
  I0909 21:24:05.794142 22 predicates.go:960] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0909 21:24:05.794146 22 predicates.go:960] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0909 21:24:05.794151 22 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0909 21:24:05.794156 22 predicates.go:958] longhorn-manager-bjsmm from longhorn-system started at 2025-09-09 20:57:38 +0000 UTC (2 container statuses recorded)
  I0909 21:24:05.794160 22 predicates.go:960] 	Container longhorn-manager ready: true, restart count 0
  I0909 21:24:05.794165 22 predicates.go:960] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0909 21:24:05.794171 22 predicates.go:958] one-metallb-speaker-w2s8k from metallb-system started at 2025-09-09 20:57:38 +0000 UTC (4 container statuses recorded)
  I0909 21:24:05.794175 22 predicates.go:960] 	Container frr ready: true, restart count 0
  I0909 21:24:05.794180 22 predicates.go:960] 	Container frr-metrics ready: true, restart count 0
  I0909 21:24:05.794185 22 predicates.go:960] 	Container reloader ready: true, restart count 0
  I0909 21:24:05.794189 22 predicates.go:960] 	Container speaker ready: true, restart count 0
  I0909 21:24:05.794194 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-743f0bf30f3f4846-hm229 from sonobuoy started at 2025-09-09 21:03:49 +0000 UTC (2 container statuses recorded)
  I0909 21:24:05.794199 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0909 21:24:05.794203 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0909 21:24:05.794208 22 predicates.go:958] one-traefik-6b6df477ff-vv6wk from traefik-system started at 2025-09-09 20:57:37 +0000 UTC (1 container statuses recorded)
  I0909 21:24:05.794213 22 predicates.go:960] 	Container one-traefik ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/09/25 21:24:05.794
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1863ba3bd9c769e8], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {CriticalAddonsOnly: true}, 1 node(s) had untolerated taint {node.longhorn.io/create-default-disk: true}, 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 09/09/25 21:24:05.837
  I0909 21:24:06.840760 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9573" for this suite. @ 09/09/25 21:24:06.853
• [1.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 09/09/25 21:24:06.872
  I0909 21:24:06.872251 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/09/25 21:24:06.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:06.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:06.901
  STEP: Cleaning up the secret @ 09/09/25 21:24:08.971
  STEP: Cleaning up the configmap @ 09/09/25 21:24:08.985
  STEP: Cleaning up the pod @ 09/09/25 21:24:08.994
  I0909 21:24:09.029253 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9863" for this suite. @ 09/09/25 21:24:09.041
• [2.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 09/09/25 21:24:09.053
  I0909 21:24:09.053852 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:24:09.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:09.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:09.072
  I0909 21:24:09.077435 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5566" for this suite. @ 09/09/25 21:24:09.14
• [0.105 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/09/25 21:24:09.163
  I0909 21:24:09.163348 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/09/25 21:24:09.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:09.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:09.194
  STEP: getting /apis @ 09/09/25 21:24:09.211
  STEP: getting /apis/admissionregistration.k8s.io @ 09/09/25 21:24:09.221
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/09/25 21:24:09.223
  STEP: creating @ 09/09/25 21:24:09.225
  STEP: getting @ 09/09/25 21:24:09.269
  STEP: listing @ 09/09/25 21:24:09.295
  STEP: watching @ 09/09/25 21:24:09.303
  I0909 21:24:09.303311 22 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/09/25 21:24:09.305
  STEP: updating @ 09/09/25 21:24:09.312
  I0909 21:24:09.318834 22 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 09/09/25 21:24:09.318
  STEP: patching /status @ 09/09/25 21:24:09.323
  STEP: updating /status @ 09/09/25 21:24:09.335
  STEP: deleting @ 09/09/25 21:24:09.354
  STEP: deleting a collection @ 09/09/25 21:24:09.368
  I0909 21:24:09.383219 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2263" for this suite. @ 09/09/25 21:24:09.389
• [0.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 09/09/25 21:24:09.423
  I0909 21:24:09.423657 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:24:09.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:09.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:09.458
  STEP: fetching services @ 09/09/25 21:24:09.461
  I0909 21:24:09.465185 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5202" for this suite. @ 09/09/25 21:24:09.49
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/09/25 21:24:09.501
  I0909 21:24:09.501901 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename events @ 09/09/25 21:24:09.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:09.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:09.53
  STEP: creating a test event @ 09/09/25 21:24:09.533
  STEP: listing all events in all namespaces @ 09/09/25 21:24:09.537
  STEP: patching the test event @ 09/09/25 21:24:09.555
  STEP: fetching the test event @ 09/09/25 21:24:09.56
  STEP: updating the test event @ 09/09/25 21:24:09.562
  STEP: getting the test event @ 09/09/25 21:24:09.569
  STEP: deleting the test event @ 09/09/25 21:24:09.572
  STEP: listing all events in all namespaces @ 09/09/25 21:24:09.579
  I0909 21:24:09.618065 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6963" for this suite. @ 09/09/25 21:24:09.665
• [0.191 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 09/09/25 21:24:09.698
  I0909 21:24:09.708678 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 21:24:09.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:09.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:09.805
  STEP: Creating a job @ 09/09/25 21:24:09.808
  STEP: Ensuring active pods == parallelism @ 09/09/25 21:24:09.814
  STEP: Orphaning one of the Job's Pods @ 09/09/25 21:24:11.821
  I0909 21:24:12.370127 22 pod_client.go:173] Successfully updated pod "adopt-release-4rfm5"
  STEP: Checking that the Job readopts the Pod @ 09/09/25 21:24:12.37
  STEP: Removing the labels from the Job's Pod @ 09/09/25 21:24:14.399
  I0909 21:24:14.939486 22 pod_client.go:173] Successfully updated pod "adopt-release-4rfm5"
  STEP: Checking that the Job releases the Pod @ 09/09/25 21:24:14.94
  I0909 21:24:16.954062 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9167" for this suite. @ 09/09/25 21:24:16.967
• [7.279 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 09/09/25 21:24:16.978
  I0909 21:24:16.979099 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 21:24:16.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:17.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:17.017
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/09/25 21:24:17.021
  STEP: Saw pod success @ 09/09/25 21:24:21.058
  I0909 21:24:21.063733 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-61472002-ef42-47e8-8474-3082fe31938d container test-container: <nil>
  STEP: delete the pod @ 09/09/25 21:24:21.073
  I0909 21:24:21.113729 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6426" for this suite. @ 09/09/25 21:24:21.12
• [4.154 seconds]
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 09/09/25 21:24:21.134
  I0909 21:24:21.134524 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename svcaccounts @ 09/09/25 21:24:21.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:21.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:21.167
  I0909 21:24:21.173693 22 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-9551"
  I0909 21:24:21.182963 22 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-9551"
  STEP: waiting for a new root ca configmap created @ 09/09/25 21:24:21.684
  I0909 21:24:21.690822 22 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-9551"
  I0909 21:24:21.702517 22 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-9551"
  STEP: waiting for the root ca configmap reconciled @ 09/09/25 21:24:22.203
  I0909 21:24:22.208677 22 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-9551"
  I0909 21:24:22.209582 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9551" for this suite. @ 09/09/25 21:24:22.214
• [1.090 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/09/25 21:24:22.227
  I0909 21:24:22.227775 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename deployment @ 09/09/25 21:24:22.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:22.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:22.254
  I0909 21:24:22.257872 22 deployment.go:1215] Creating deployment "webserver-deployment"
  I0909 21:24:22.267159 22 deployment.go:1219] Waiting for observed generation 1
  I0909 21:24:24.279179 22 deployment.go:1224] Waiting for all required pods to come up
  I0909 21:24:24.305310 22 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/09/25 21:24:24.306
  I0909 21:24:26.355863 22 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0909 21:24:26.425544 22 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0909 21:24:26.437025 22 deployment.go:314] Updating deployment webserver-deployment
  I0909 21:24:26.437531 22 deployment.go:1243] Waiting for observed generation 2
  I0909 21:24:28.452065 22 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0909 21:24:28.455787 22 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0909 21:24:28.461015 22 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0909 21:24:28.532447 22 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0909 21:24:28.532540 22 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0909 21:24:28.534495 22 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0909 21:24:28.538798 22 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0909 21:24:28.538831 22 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0909 21:24:28.554698 22 deployment.go:314] Updating deployment webserver-deployment
  I0909 21:24:28.554742 22 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0909 21:24:28.589208 22 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0909 21:24:30.598226 22 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0909 21:24:30.603259 22 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98e36af9-8c95-40f2-8a5f-da7940fb1c7c",
      ResourceVersion: (string) (len=5) "21415",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0909 21:24:30.610545 22 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
      ResourceVersion: (string) (len=5) "21409",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "98e36af9-8c95-40f2-8a5f-da7940fb1c7c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 38 65 33 36 61  66 39 2d 38 63 39 35 2d  |\"98e36af9-8c95-|
              00000120  34 30 66 32 2d 38 61 35  66 2d 64 61 37 39 34 30  |40f2-8a5f-da7940|
              00000130  66 62 31 63 37 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fb1c7c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 21:24:30.637129 22 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0909 21:24:30.637842 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
      ResourceVersion: (string) (len=5) "21384",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "98e36af9-8c95-40f2-8a5f-da7940fb1c7c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 38 65 33 36 61  66 39 2d 38 63 39 35 2d  |\"98e36af9-8c95-|
              00000120  34 30 66 32 2d 38 61 35  66 2d 64 61 37 39 34 30  |40f2-8a5f-da7940|
              00000130  66 62 31 63 37 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fb1c7c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 21:24:30.642976 22 deployment.go:68] Pod "webserver-deployment-685b768f58-22cv6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-22cv6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd97a52e-424f-4761-b301-95a6a378b545",
      ResourceVersion: (string) (len=5) "21516",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.157\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3f4ed731d4fd63f8d730cf9be4cb8ec3984cb5e48b6a7c1e3672c13f5e813a81",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.157/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.157/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s7v87",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s7v87",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s7v87",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.644062 22 deployment.go:68] Pod "webserver-deployment-685b768f58-28cgd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-28cgd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8223ee2b-d0de-44a8-8f62-00162dd003c5",
      ResourceVersion: (string) (len=5) "21191",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9945bab739e6d934825019eec474ea5f453e1406454c27b7285912c14e9a05fe",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.166/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.166/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.166\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 36  36 5c 22 7d 22 3a 7b 22  |.42.1.166\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r5hrd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r5hrd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=11) "10.42.1.166",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.166"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893049864,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d28f98c389bca8de184add08f321ae6e761126a024e4d5bca0da6c4e5cd3c46a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r5hrd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.660017 22 deployment.go:68] Pod "webserver-deployment-685b768f58-5ggpb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5ggpb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e98d07d8-5a77-4bac-9df1-e8f6e12e1324",
      ResourceVersion: (string) (len=5) "21178",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.142\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5ee4b47d7930376d97852d6da68501fba12dc983603cbb8b04401bbb444f0542",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.142/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.142/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 34  32 5c 22 7d 22 3a 7b 22  |.42.3.142\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-942xc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-942xc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=11) "10.42.3.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893049863,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2b2482a154adbbf0c9d5c9a897c4ff80dd838c733fbfeda4c00e354b5c4dd1ba",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-942xc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.671100 22 deployment.go:68] Pod "webserver-deployment-685b768f58-968jj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-968jj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eebf6d12-b0c0-4bc0-a612-3c0f5bdd3ac8",
      ResourceVersion: (string) (len=5) "21512",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.155/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.155\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "11db03db6a534fbdf38a8310c06f94a70d799684666b0a8e5753e1d2593989ac",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.155/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2tmd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2tmd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l2tmd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.673783 22 deployment.go:68] Pod "webserver-deployment-685b768f58-ds7k5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ds7k5",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e59fc41-8116-4ab5-87e6-2fb67a56f1b9",
      ResourceVersion: (string) (len=5) "21533",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8102fa10476867b5a6ff989590f79aa233e37049adc357c91f2c8fbd36d1ae73",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.179/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.179/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.179\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hkw7x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hkw7x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hkw7x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.682549 22 deployment.go:68] Pod "webserver-deployment-685b768f58-f4gj8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-f4gj8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b235f2c-faba-4d22-aea5-53ec710e4890",
      ResourceVersion: (string) (len=5) "21528",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5abf594a92bec6a969be371c8e9ce2af74f87e55117173d79eda3dd16aaa06a0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.156/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.156/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.156\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q4pv4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q4pv4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q4pv4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.690278 22 deployment.go:68] Pod "webserver-deployment-685b768f58-j4x4g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-j4x4g",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ddba9e2e-bfdd-431d-a481-3ba435e01b1a",
      ResourceVersion: (string) (len=5) "21166",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "29b2bba5df6f4bf64cb95494defaad1e935f50339da0384d13e7f8bb531e31c2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.143/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.143/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.143\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 34  33 5c 22 7d 22 3a 7b 22  |.42.3.143\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k2g6m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k2g6m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=11) "10.42.3.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893049864,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://87dd33af5666a78b4c4721c3baa1357bdd53827afc1cc88646d734b5ac493207",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k2g6m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.697522 22 deployment.go:68] Pod "webserver-deployment-685b768f58-k9vb9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-k9vb9",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "640701bc-48a7-45a2-8c1e-9997953057c0",
      ResourceVersion: (string) (len=5) "21487",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "47d6574c04f9c8f54470f99b6e02d5611a11f0fcfae13a668e8ef57d765395c8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.149/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.149/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.149\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s8jnd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s8jnd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s8jnd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.701423 22 deployment.go:68] Pod "webserver-deployment-685b768f58-mtlk9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-mtlk9",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7d4e870-9d16-4628-8f07-4c35f28348a7",
      ResourceVersion: (string) (len=5) "21194",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "dd93a179bf34b64aa93b97f69c5a215fde7032b464da4efbe7b3ae70014f6bf5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.168/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.168/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.168\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 36  38 5c 22 7d 22 3a 7b 22  |.42.1.168\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dc5d2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dc5d2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=11) "10.42.1.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893049864,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://93f7020d8d9fd215c2f095ac639f72067b8f41889992706472cae4918d92b0bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dc5d2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.705855 22 deployment.go:68] Pod "webserver-deployment-685b768f58-mzwkw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-mzwkw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa549d70-b17c-4374-a4be-fc6a8fd6b3ab",
      ResourceVersion: (string) (len=5) "21189",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.164\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "527c29df2642ce5741242c8d5a21d9d85dcb7461b3e6f6f2d162bbb5729b3663",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.164/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.164/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 36  34 5c 22 7d 22 3a 7b 22  |.42.1.164\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xmbvr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xmbvr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=11) "10.42.1.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893049864,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c740a1127c291c676b3a919015499535c1c5099dd5f695ee7c55d099193c9348",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xmbvr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.712310 22 deployment.go:68] Pod "webserver-deployment-685b768f58-ns9bl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ns9bl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64deed89-801e-4ec9-93b1-99ea265fcada",
      ResourceVersion: (string) (len=5) "21479",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "88b2d5f49fe33f277a84edc3385e351b2215dba0aeace0818d1fe9d378c4f513",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.173/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.173/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.173\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gm56l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gm56l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gm56l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.718594 22 deployment.go:68] Pod "webserver-deployment-685b768f58-rmvr8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rmvr8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2e9e71c-2fe7-4110-ac5e-22e0a2bad47b",
      ResourceVersion: (string) (len=5) "21526",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.177\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "05ab3e227f26d3551216e5d37165836be8648b15534a60b27f4c51f2f1c1a31e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.177/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.177/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lfjkg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lfjkg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lfjkg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.723641 22 deployment.go:68] Pod "webserver-deployment-685b768f58-sfs58" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sfs58",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ccd21340-b797-4bb9-b9f5-16d6002c081c",
      ResourceVersion: (string) (len=5) "21173",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.144/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.144/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.144\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ecebadc744eebff2b9630a989864e0f89d8ce07ae3a6b69a0e15b4783d541ff9"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 34  34 5c 22 7d 22 3a 7b 22  |.42.3.144\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2ng57",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2ng57",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=11) "10.42.3.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893049864,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://61bbf24f0187993fc1210f16f1d0519ed68165773e8025b50ee570b44ef6e9a6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2ng57",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.728614 22 deployment.go:68] Pod "webserver-deployment-685b768f58-sk6q8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sk6q8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "657560a1-5230-4b0a-810b-f0116caf7b7d",
      ResourceVersion: (string) (len=5) "21198",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.167\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cf82c6d8509ca0e133ed16de26578c245cc38575286ed814e5616b7a16e1938d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.167/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.167/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 36  37 5c 22 7d 22 3a 7b 22  |.42.1.167\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2xz4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2xz4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=11) "10.42.1.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893049864,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7c0d1e05bea5d37bead9f49529b7f66fa361de3fc5d6739c902cfc8749027e1a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l2xz4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.733551 22 deployment.go:68] Pod "webserver-deployment-685b768f58-w9jfh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-w9jfh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ef29060-d649-4dfb-8c99-06a68529c2b4",
      ResourceVersion: (string) (len=5) "21502",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "34ae64627137534b1bb6cd87a0480034966ff4523cf0526a0558343527efd421",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.150/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.150/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.150\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-48bq6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-48bq6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-48bq6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.741404 22 deployment.go:68] Pod "webserver-deployment-685b768f58-wn9sd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wn9sd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad5fcb06-9726-46b5-ab35-992de5f52e06",
      ResourceVersion: (string) (len=5) "21503",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9e61613463477fabfa59b48f7e2e99d95f148da68319cc84224e387791782426",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.153/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.153/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.153\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zmz76",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zmz76",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zmz76",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.747726 22 deployment.go:68] Pod "webserver-deployment-685b768f58-xsf4b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xsf4b",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1963aee6-e17a-416d-aa24-5a0ca7e200cc",
      ResourceVersion: (string) (len=5) "21474",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c6932abab90ec2a88e030dfb46a5643ddecd038cd350c76ae98533a52fb41e43",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.172/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.172/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.172\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5lkn6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5lkn6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5lkn6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.748869 22 deployment.go:68] Pod "webserver-deployment-685b768f58-z4gzb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-z4gzb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "143336b1-1b91-4863-8688-cba04a9780b9",
      ResourceVersion: (string) (len=5) "21501",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1962592ebdd4b7a86a7c36f5de0bc0eeb602e3ad75dda898cc9e98689b64d69d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.175/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.175/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.175\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5pfm8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5pfm8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5pfm8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.751365 22 deployment.go:68] Pod "webserver-deployment-685b768f58-z4zrr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-z4zrr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24b134e2-83ad-499d-83b0-7fc3320e0488",
      ResourceVersion: (string) (len=5) "21510",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fc29eddaec840c4b718c17c1644db115bc22b06e26efa1907b2261c2a3ab7181",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.174/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.174/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.174\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ks6rr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ks6rr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ks6rr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.753812 22 deployment.go:68] Pod "webserver-deployment-685b768f58-zvmr8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zvmr8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "543ed4cb-85df-45d4-8e04-dcbf5faafe13",
      ResourceVersion: (string) (len=5) "21170",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "74382410b6f1d817b004d87af0072138afc34da024d10db780c201a576b454ff",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.146/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.146/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.146\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "0d6fe758-9962-42c0-adfb-1f869d126fdf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  36 66 65 37 35 38 2d 39  |d\":\"0d6fe758-9|
              00000090  39 36 32 2d 34 32 63 30  2d 61 64 66 62 2d 31 66  |962-42c0-adfb-1f|
              000000a0  38 36 39 64 31 32 36 66  64 66 5c 22 7d 22 3a 7b  |869d126fdf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 34  36 5c 22 7d 22 3a 7b 22  |.42.3.146\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-825lg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-825lg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=11) "10.42.3.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893049864,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2795f87d970a326f81f6878bc0e8c6c803168f6a5502afdef81b2ce5dff02a5c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-825lg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.755154 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-2klq6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-2klq6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4aeb30e6-bd09-457a-909a-d1a821fd1de6",
      ResourceVersion: (string) (len=5) "21498",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.170\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6403d0cbc5d5db7a518ca524e8bb9936293a1967f009abc426a99c4b770dd227",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.170/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.170/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 37 30 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.170\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rlbm4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rlbm4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=11) "10.42.1.170",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.170"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=16) "ImagePullBackOff",
              Message: (string) (len=316) "Back-off pulling image \"webserver:404\": ErrImagePull: failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rlbm4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.757373 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bck52" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bck52",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92e1e1bd-7608-4d78-abdf-5e79304e0cff",
      ResourceVersion: (string) (len=5) "21469",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9f3b827a00adf61a54213eaeb459017aa99d7b45c581c359d4c9c5a618a78fab",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.148/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.148/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.148\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 33 2e 31 34 38 5c 22  7d 22 3a 7b 22 2e 22 3a  |.3.148\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vrjzw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vrjzw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=11) "10.42.3.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vrjzw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.758469 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-d784h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-d784h",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a4073e9-be50-4aa0-a9eb-5636f8cde5a0",
      ResourceVersion: (string) (len=5) "21537",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.180/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.180/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.180\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c88c890d2d3b9ca65d2e3e4e5a55d1593e986e9b55fad4ae9dade61b83f7c58c"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qpzcx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qpzcx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qpzcx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.760779 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-dvp9b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-dvp9b",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb70f29c-7132-48db-a9f0-376b2de6b971",
      ResourceVersion: (string) (len=5) "21484",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0ae152e436cf22c7a0cf6af5015bfb0a900f3fcda7ff170ea8a6d26de4beafd3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.171/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.171/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.171\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 37 31 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.171\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-znbw7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-znbw7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=11) "10.42.1.171",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.171"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=16) "ImagePullBackOff",
              Message: (string) (len=316) "Back-off pulling image \"webserver:404\": ErrImagePull: failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-znbw7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.762361 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fqsfd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fqsfd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9826c01-bc84-47f4-ad61-2af09ac5a218",
      ResourceVersion: (string) (len=5) "21508",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.152/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.152/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.152\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ec85cf14fd28e013f98197b70aa6ef753546f883a495356c75eccecceac8b431"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rl7fh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rl7fh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rl7fh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.768365 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-lt42v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-lt42v",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3fdb5e3d-bcbb-40ee-8848-581994db2a47",
      ResourceVersion: (string) (len=5) "21527",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "92c857ff6c1b923ddb37487cae95f09e01d73ec5214b7be23b36f2120926c247",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.176/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.176/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.176\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rr878",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rr878",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rr878",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.772362 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-m5jzp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-m5jzp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b15fa0d-3637-4f57-8399-864be1a202b1",
      ResourceVersion: (string) (len=5) "21524",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f6af801efcff608bad92999fac65e07b7218fca8cfcbd4b7285d9eb7758f1ecd",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.178/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.178/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.178\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cgfcb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cgfcb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cgfcb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.775370 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mnvwc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mnvwc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "812fd895-baec-4d68-a2d9-eff81293aa94",
      ResourceVersion: (string) (len=5) "21515",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b973b5b14d597b28db2d0a60fe37e6bc7c63f916ec29045f4203e9025dc7116d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.154/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.154/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.154\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-smktk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-smktk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-smktk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.784580 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-qbznx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-qbznx",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7c30460-2826-4512-8da0-5a3e7cf45526",
      ResourceVersion: (string) (len=5) "21493",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.151\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "26661126df2f96845cb2ca84437b977edf34239a9e0cfefb760ac5b772f20398",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.151/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.151/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p6q79",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p6q79",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p6q79",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.788284 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-qptk2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-qptk2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93e47d54-9ea3-466e-965e-5304f9a2c00f",
      ResourceVersion: (string) (len=5) "21449",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.169/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.169\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b4c4ebdd33ad49f16cacc091905d4188c01489208a8d08e71d50226f09044f53",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.169/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 36 39 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.169\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-774g2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-774g2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=11) "10.42.1.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-774g2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.792069 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rh6zs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rh6zs",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6faccd9-59f7-4881-bd80-e004bb19eac7",
      ResourceVersion: (string) (len=5) "21523",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1f15fa9ca782cd35c2c34acf7faf71a8596e397645c8432caaf97380e7aed040",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.158/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.158/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.158\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x9l5w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x9l5w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x9l5w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.793744 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wsc9x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wsc9x",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b6de7f5-3ce6-4179-9e16-a31ee87066fd",
      ResourceVersion: (string) (len=5) "21465",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e148211be38b2abd116cee565d8edf0987bc2aafd73805e4a075c51c958693ba",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.147/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.147/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.147\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 33 2e 31 34 37 5c 22  7d 22 3a 7b 22 2e 22 3a  |.3.147\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k5vp7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k5vp7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=11) "10.42.3.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k5vp7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.795419 22 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xmkjg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xmkjg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8288",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86af1a0b-d439-4b01-84da-8b58e3971ac2",
      ResourceVersion: (string) (len=5) "21534",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.181/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.181/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "98aefda0d196c7821fcb3fa2012cd4ad0c84ec7e68e94ee1decb81506088fb42"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "bad1747d-62df-4a66-8d0e-04387f81950b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  64 31 37 34 37 64 2d 36  |d\":\"bad1747d-6|
              00000090  32 64 66 2d 34 61 36 36  2d 38 64 30 65 2d 30 34  |2df-4a66-8d0e-04|
              000000a0  33 38 37 66 38 31 39 35  30 62 5c 22 7d 22 3a 7b  |387f81950b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dprgb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dprgb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dprgb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:24:30.796396 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8288" for this suite. @ 09/09/25 21:24:30.809
• [8.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 09/09/25 21:24:30.819
  I0909 21:24:30.819925 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 21:24:30.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:30.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:30.84
  STEP: Counting existing ResourceQuota @ 09/09/25 21:24:47.849
  STEP: Creating a ResourceQuota @ 09/09/25 21:24:52.863
  STEP: Ensuring resource quota status is calculated @ 09/09/25 21:24:52.884
  STEP: Creating a ConfigMap @ 09/09/25 21:24:54.895
  STEP: Ensuring resource quota status captures configMap creation @ 09/09/25 21:24:54.918
  STEP: Deleting a ConfigMap @ 09/09/25 21:24:56.926
  STEP: Ensuring resource quota status released usage @ 09/09/25 21:24:56.942
  I0909 21:24:58.947701 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7400" for this suite. @ 09/09/25 21:24:58.962
• [28.154 seconds]
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/09/25 21:24:58.977
  I0909 21:24:58.978009 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/09/25 21:24:58.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:59.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:59.014
  STEP: getting /apis @ 09/09/25 21:24:59.021
  STEP: getting /apis/storage.k8s.io @ 09/09/25 21:24:59.031
  STEP: getting /apis/storage.k8s.io/v1 @ 09/09/25 21:24:59.033
  STEP: creating @ 09/09/25 21:24:59.034
  STEP: watching @ 09/09/25 21:24:59.055
  I0909 21:24:59.055390 22 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/09/25 21:24:59.062
  STEP: listing in namespace @ 09/09/25 21:24:59.064
  STEP: listing across namespaces @ 09/09/25 21:24:59.069
  STEP: patching @ 09/09/25 21:24:59.073
  STEP: updating @ 09/09/25 21:24:59.082
  I0909 21:24:59.087094 22 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0909 21:24:59.088074 22 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/09/25 21:24:59.088
  STEP: deleting a collection @ 09/09/25 21:24:59.097
  I0909 21:24:59.107949 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9081" for this suite. @ 09/09/25 21:24:59.111
• [0.144 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 09/09/25 21:24:59.122
  I0909 21:24:59.122837 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 21:24:59.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:24:59.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:24:59.145
  STEP: Creating a job @ 09/09/25 21:24:59.148
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/09/25 21:24:59.154
  STEP: patching /status @ 09/09/25 21:25:01.168
  STEP: updating /status @ 09/09/25 21:25:01.184
  STEP: get /status @ 09/09/25 21:25:01.209
  I0909 21:25:01.213758 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-10" for this suite. @ 09/09/25 21:25:01.226
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/09/25 21:25:01.255
  I0909 21:25:01.255424 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 21:25:01.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:25:01.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:25:01.304
  STEP: Setting up server cert @ 09/09/25 21:25:01.352
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 21:25:02.234
  STEP: Deploying the webhook pod @ 09/09/25 21:25:02.242
  STEP: Wait for the deployment to be ready @ 09/09/25 21:25:02.266
  I0909 21:25:02.279370 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/09/25 21:25:04.334
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 21:25:04.414
  I0909 21:25:05.416986 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/09/25 21:25:05.437
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/09/25 21:25:05.498
  STEP: Creating a dummy validating-webhook-configuration object @ 09/09/25 21:25:05.537
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/09/25 21:25:05.562
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/09/25 21:25:05.571
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/09/25 21:25:05.582
  I0909 21:25:05.741494 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4720" for this suite. @ 09/09/25 21:25:05.746
  STEP: Destroying namespace "webhook-markers-4476" for this suite. @ 09/09/25 21:25:05.758
• [4.526 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/09/25 21:25:05.782
  I0909 21:25:05.782694 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 21:25:05.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:25:05.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:25:05.816
  STEP: Creating the pod @ 09/09/25 21:25:05.821
  I0909 21:25:08.405448 22 pod_client.go:173] Successfully updated pod "annotationupdatee9520c7b-cad2-4bc9-8d88-0aaf82a0dc93"
  I0909 21:25:10.435079 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1469" for this suite. @ 09/09/25 21:25:10.444
• [4.672 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 09/09/25 21:25:10.455
  I0909 21:25:10.455444 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename statefulset @ 09/09/25 21:25:10.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:25:10.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:25:10.502
  STEP: Creating service test in namespace statefulset-9936 @ 09/09/25 21:25:10.505
  I0909 21:25:10.561173 22 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0909 21:25:20.553670 22 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/09/25 21:25:20.572
  I0909 21:25:20.607386 22 wait.go:44] Found 1 stateful pods, waiting for 2
  I0909 21:25:30.601163 22 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0909 21:25:30.601270 22 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/09/25 21:25:30.607
  STEP: Delete all of the StatefulSets @ 09/09/25 21:25:30.611
  STEP: Verify that StatefulSets have been deleted @ 09/09/25 21:25:30.619
  I0909 21:25:30.625532 22 statefulset.go:138] Deleting all statefulset in ns statefulset-9936
  I0909 21:25:30.715265 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9936" for this suite. @ 09/09/25 21:25:30.719
• [20.272 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/09/25 21:25:30.731
  I0909 21:25:30.731996 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/09/25 21:25:30.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:25:30.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:25:30.748
  STEP: create the container to handle the HTTPGet hook request. @ 09/09/25 21:25:30.821
  STEP: create the pod with lifecycle hook @ 09/09/25 21:25:34.862
  STEP: check poststart hook @ 09/09/25 21:25:38.912
  STEP: delete the pod with lifecycle hook @ 09/09/25 21:25:38.922
  I0909 21:25:40.947994 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8028" for this suite. @ 09/09/25 21:25:40.953
• [10.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 09/09/25 21:25:40.98
  I0909 21:25:40.980773 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 21:25:40.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:25:41.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:25:41.008
  STEP: Creating an indexed job with successPolicy @ 09/09/25 21:25:41.014
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/09/25 21:25:41.03
  STEP: Ensure that the job reaches completions @ 09/09/25 21:25:47.056
  STEP: Verifying that the job status to ensure correct final state @ 09/09/25 21:25:47.074
  I0909 21:25:47.081122 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1368" for this suite. @ 09/09/25 21:25:47.093
• [6.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 09/09/25 21:25:47.111
  I0909 21:25:47.111914 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:25:47.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:25:47.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:25:47.136
  STEP: creating service in namespace services-1343 @ 09/09/25 21:25:47.141
  STEP: creating service affinity-clusterip-transition in namespace services-1343 @ 09/09/25 21:25:47.141
  I0909 21:25:47.227579 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0909 21:25:49.257622 22 resource.go:361] Creating new exec pod
  I0909 21:25:51.288930 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1343 exec execpod-affinityb8kt2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0909 21:25:51.676611 22 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition (10.43.85.215) 80 port [tcp/http] succeeded!\n"
  I0909 21:25:51.676678 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:25:51.676779 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1343 exec execpod-affinityb8kt2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.85.215 80'
  I0909 21:25:51.932757 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.85.215 80\nConnection to 10.43.85.215 80 port [tcp/http] succeeded!\n"
  I0909 21:25:51.932885 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:25:51.945744 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1343 exec execpod-affinityb8kt2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/ ; done'
  I0909 21:25:52.327130 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n"
  I0909 21:25:52.327198 22 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-5jx5j\naffinity-clusterip-transition-5cffb65545-5jx5j\naffinity-clusterip-transition-5cffb65545-5jx5j\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-5jx5j\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-5jx5j\naffinity-clusterip-transition-5cffb65545-2h5rj\naffinity-clusterip-transition-5cffb65545-2h5rj\naffinity-clusterip-transition-5cffb65545-2h5rj\naffinity-clusterip-transition-5cffb65545-5jx5j\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m"
  I0909 21:25:52.327216 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.327227 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5jx5j
  I0909 21:25:52.327237 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5jx5j
  I0909 21:25:52.327248 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5jx5j
  I0909 21:25:52.327257 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.327266 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.327275 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5jx5j
  I0909 21:25:52.327283 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.327293 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.327302 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5jx5j
  I0909 21:25:52.327310 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2h5rj
  I0909 21:25:52.327319 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2h5rj
  I0909 21:25:52.327327 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2h5rj
  I0909 21:25:52.327335 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-5jx5j
  I0909 21:25:52.327344 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.327352 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.343866 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-1343 exec execpod-affinityb8kt2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/ ; done'
  I0909 21:25:52.660119 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.85.215:80/\n"
  I0909 21:25:52.660177 22 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m\naffinity-clusterip-transition-5cffb65545-w262m"
  I0909 21:25:52.660194 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660204 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660214 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660222 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660230 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660238 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660247 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660255 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660265 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660273 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660281 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660289 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660297 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660305 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660312 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660320 22 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-w262m
  I0909 21:25:52.660381 22 service.go:4352] Cleaning up the exec pod
  I0909 21:25:52.765159 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1343" for this suite. @ 09/09/25 21:25:52.773
• [5.674 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/09/25 21:25:52.785
  I0909 21:25:52.785404 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 21:25:52.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:25:52.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:25:52.815
  STEP: Creating configMap configmap-5706/configmap-test-59e0b96c-47d9-4344-83b4-4f6a4024a1d9 @ 09/09/25 21:25:52.817
  STEP: Creating a pod to test consume configMaps @ 09/09/25 21:25:52.823
  STEP: Saw pod success @ 09/09/25 21:25:56.86
  I0909 21:25:56.863437 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-configmaps-6625241d-e000-49d9-b747-9fda2829282e container env-test: <nil>
  STEP: delete the pod @ 09/09/25 21:25:56.894
  I0909 21:25:56.918503 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5706" for this suite. @ 09/09/25 21:25:56.922
• [4.142 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/09/25 21:25:56.928
  I0909 21:25:56.928495 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 21:25:56.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:25:56.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:25:56.954
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 21:25:56.958
  STEP: Saw pod success @ 09/09/25 21:26:00.987
  I0909 21:26:00.990216 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-da2d1839-1cf3-4b6e-8464-75396c06d97b container client-container: <nil>
  STEP: delete the pod @ 09/09/25 21:26:00.996
  I0909 21:26:01.038735 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9945" for this suite. @ 09/09/25 21:26:01.046
• [4.131 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/09/25 21:26:01.062
  I0909 21:26:01.063009 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename deployment @ 09/09/25 21:26:01.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:26:01.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:26:01.093
  I0909 21:26:01.097705 22 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0909 21:26:01.115593 22 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0909 21:26:01.164327 22 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0909 21:26:03.173363 22 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0909 21:26:03.175274 22 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0909 21:26:03.183972 22 deployment.go:314] Updating deployment test-recreate-deployment
  I0909 21:26:03.184356 22 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0909 21:26:03.401491 22 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9509",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0afdad17-efd8-44a7-95be-e8b10138aa55",
      ResourceVersion: (string) (len=5) "22944",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0909 21:26:03.411606 22 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9509",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "503e4e1b-7b80-47d3-8e89-f8ea0b44a219",
      ResourceVersion: (string) (len=5) "22943",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0afdad17-efd8-44a7-95be-e8b10138aa55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 66 64 61 64  31 37 2d 65 66 64 38 2d  |\"0afdad17-efd8-|
              00000120  34 34 61 37 2d 39 35 62  65 2d 65 38 62 31 30 31  |44a7-95be-e8b101|
              00000130  33 38 61 61 35 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |38aa55\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 21:26:03.413279 22 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0909 21:26:03.413733 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9509",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "883136ad-3fa4-453b-9c4d-2d407027e9ad",
      ResourceVersion: (string) (len=5) "22933",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049961,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0afdad17-efd8-44a7-95be-e8b10138aa55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 66 64 61 64  31 37 2d 65 66 64 38 2d  |\"0afdad17-efd8-|
              00000120  34 34 61 37 2d 39 35 62  65 2d 65 38 62 31 30 31  |44a7-95be-e8b101|
              00000130  33 38 61 61 35 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |38aa55\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 21:26:03.420256 22 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-4dvjt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-4dvjt",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-9509",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e0221c3-0031-4dfd-8f7a-6fe0df5e5149",
      ResourceVersion: (string) (len=5) "22945",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "503e4e1b-7b80-47d3-8e89-f8ea0b44a219",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 30  33 65 34 65 31 62 2d 37  |d\":\"503e4e1b-7|
              00000090  62 38 30 2d 34 37 64 33  2d 38 65 38 39 2d 66 38  |b80-47d3-8e89-f8|
              000000a0  65 61 30 62 34 34 61 32  31 39 5c 22 7d 22 3a 7b  |ea0b44a219\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mhhgg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mhhgg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893049963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893049963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mhhgg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:26:03.424746 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9509" for this suite. @ 09/09/25 21:26:03.431
• [2.378 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/09/25 21:26:03.44
  I0909 21:26:03.440960 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/09/25 21:26:03.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:26:03.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:26:03.46
  STEP: Creating two CSIDrivers @ 09/09/25 21:26:03.463
  STEP: Getting "inline-driver-1851996e-1c46-4045-b315-f71989767036" & "inline-driver-205e4bf1-7fbf-4d9d-921b-93d6bea8a2d6" @ 09/09/25 21:26:03.49
  STEP: Patching the CSIDriver "inline-driver-205e4bf1-7fbf-4d9d-921b-93d6bea8a2d6" @ 09/09/25 21:26:03.496
  STEP: Updating the CSIDriver "inline-driver-205e4bf1-7fbf-4d9d-921b-93d6bea8a2d6" @ 09/09/25 21:26:03.509
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-65" @ 09/09/25 21:26:03.522
  STEP: Deleting CSIDriver "inline-driver-1851996e-1c46-4045-b315-f71989767036" @ 09/09/25 21:26:03.525
  STEP: Confirm deletion of CSIDriver "inline-driver-1851996e-1c46-4045-b315-f71989767036" @ 09/09/25 21:26:03.534
  STEP: Deleting CSIDriver "inline-driver-205e4bf1-7fbf-4d9d-921b-93d6bea8a2d6" via DeleteCollection @ 09/09/25 21:26:03.538
  STEP: Confirm deletion of CSIDriver "inline-driver-205e4bf1-7fbf-4d9d-921b-93d6bea8a2d6" @ 09/09/25 21:26:03.556
  I0909 21:26:03.562110 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-65" for this suite. @ 09/09/25 21:26:03.575
• [0.144 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/09/25 21:26:03.585
  I0909 21:26:03.585690 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename daemonsets @ 09/09/25 21:26:03.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:26:03.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:26:03.622
  I0909 21:26:03.681845 22 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/09/25 21:26:03.712
  I0909 21:26:03.774877 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:26:03.775707 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:26:03.794141 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 21:26:03.796451 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0909 21:26:04.723580 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:26:04.724136 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:26:04.728148 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 21:26:04.728468 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0909 21:26:05.732442 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:26:05.732920 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:26:05.738139 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0909 21:26:05.738251 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/09/25 21:26:05.838
  STEP: Check that daemon pods images are updated. @ 09/09/25 21:26:05.86
  I0909 21:26:05.882303 22 daemon_set.go:1193] Wrong image for pod: daemon-set-nz5ff. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0909 21:26:05.961079 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:26:05.961317 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:26:06.868035 22 daemon_set.go:1193] Wrong image for pod: daemon-set-nz5ff. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0909 21:26:06.871772 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:26:06.871819 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:26:07.873175 22 daemon_set.go:1198] Pod daemon-set-5j4zh is not available
  I0909 21:26:07.875861 22 daemon_set.go:1193] Wrong image for pod: daemon-set-nz5ff. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0909 21:26:07.889220 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:26:07.889692 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:26:08.879951 22 daemon_set.go:1198] Pod daemon-set-5j4zh is not available
  I0909 21:26:08.889479 22 daemon_set.go:1193] Wrong image for pod: daemon-set-nz5ff. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0909 21:26:08.894259 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:26:08.894780 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:26:09.867715 22 daemon_set.go:1198] Pod daemon-set-rdkgg is not available
  I0909 21:26:09.886092 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:26:09.886161 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/09/25 21:26:09.886
  I0909 21:26:09.892216 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:26:09.892262 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:26:09.897350 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 21:26:09.897619 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  I0909 21:26:10.896474 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:26:10.896539 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:26:10.902149 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 21:26:10.902214 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  I0909 21:26:11.894157 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:26:11.895815 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:26:11.902409 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0909 21:26:11.902503 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/09/25 21:26:11.923
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9633, will wait for the garbage collector to delete the pods @ 09/09/25 21:26:11.924
  I0909 21:26:12.001252 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 21.549366ms
  I0909 21:26:12.105639 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 104.381889ms
  I0909 21:26:14.208548 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 21:26:14.208607 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0909 21:26:14.212539 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23137"},"items":null}

  I0909 21:26:14.215655 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23137"},"items":null}

  I0909 21:26:14.229456 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9633" for this suite. @ 09/09/25 21:26:14.233
• [10.661 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 09/09/25 21:26:14.263
  I0909 21:26:14.263843 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 21:26:14.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:26:14.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:26:14.291
  STEP: Creating a pod to test downward api env vars @ 09/09/25 21:26:14.294
  STEP: Saw pod success @ 09/09/25 21:26:18.329
  I0909 21:26:18.333291 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod downward-api-7e97b899-d3de-47a0-a20a-8411fba3b705 container dapi-container: <nil>
  STEP: delete the pod @ 09/09/25 21:26:18.343
  I0909 21:26:18.381681 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7870" for this suite. @ 09/09/25 21:26:18.399
• [4.142 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 09/09/25 21:26:18.406
  I0909 21:26:18.406253 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 21:26:18.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:26:18.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:26:18.438
  STEP: creating Agnhost RC @ 09/09/25 21:26:18.444
  I0909 21:26:18.445039 22 kubectl.go:1540] namespace kubectl-9092
  I0909 21:26:18.445292 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-9092 create -f -'
  I0909 21:26:18.659958 22 builder.go:146] stderr: ""
  I0909 21:26:18.660122 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/09/25 21:26:18.66
  I0909 21:26:19.667688 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0909 21:26:19.667777 22 framework.go:733] Found 0 / 1
  I0909 21:26:20.665256 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0909 21:26:20.665338 22 framework.go:733] Found 1 / 1
  I0909 21:26:20.665368 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0909 21:26:20.669386 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0909 21:26:20.672886 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0909 21:26:20.673047 22 kubectl.go:1547] wait on agnhost-primary startup in kubectl-9092 
  I0909 21:26:20.673691 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-9092 logs agnhost-primary-qkm9w agnhost-primary'
  I0909 21:26:20.808207 22 builder.go:146] stderr: ""
  I0909 21:26:20.808320 22 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/09/25 21:26:20.808
  I0909 21:26:20.808769 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-9092 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0909 21:26:20.929157 22 builder.go:146] stderr: ""
  I0909 21:26:20.929211 22 builder.go:147] stdout: "service/rm2 exposed\n"
  I0909 21:26:20.936248 22 utils.go:1115] Service rm2 in namespace kubectl-9092 found.
  STEP: exposing service @ 09/09/25 21:26:22.941
  I0909 21:26:22.941975 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-9092 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0909 21:26:23.093641 22 builder.go:146] stderr: ""
  I0909 21:26:23.093684 22 builder.go:147] stdout: "service/rm3 exposed\n"
  I0909 21:26:23.095868 22 utils.go:1115] Service rm3 in namespace kubectl-9092 found.
  I0909 21:26:25.105941 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9092" for this suite. @ 09/09/25 21:26:25.112
• [6.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/09/25 21:26:25.127
  I0909 21:26:25.127669 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 21:26:25.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:26:25.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:26:25.16
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 21:26:25.165
  STEP: Saw pod success @ 09/09/25 21:26:29.204
  I0909 21:26:29.208506 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-8995bb55-386d-46e9-8fef-16f35eec451b container client-container: <nil>
  STEP: delete the pod @ 09/09/25 21:26:29.217
  I0909 21:26:29.257046 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3181" for this suite. @ 09/09/25 21:26:29.268
• [4.154 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/09/25 21:26:29.282
  I0909 21:26:29.282379 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/09/25 21:26:29.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:26:29.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:26:29.303
  STEP: creating @ 09/09/25 21:26:29.307
  STEP: getting @ 09/09/25 21:26:29.334
  STEP: listing in namespace @ 09/09/25 21:26:29.339
  STEP: patching @ 09/09/25 21:26:29.362
  STEP: deleting @ 09/09/25 21:26:29.396
  I0909 21:26:29.411001 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6762" for this suite. @ 09/09/25 21:26:29.414
• [0.138 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/09/25 21:26:29.421
  I0909 21:26:29.421057 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 21:26:29.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:26:29.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:26:29.444
  STEP: creating secret secrets-3840/secret-test-f4238b5c-05db-4183-a1c3-3786712628c0 @ 09/09/25 21:26:29.447
  STEP: Creating a pod to test consume secrets @ 09/09/25 21:26:29.453
  STEP: Saw pod success @ 09/09/25 21:26:33.494
  I0909 21:26:33.498709 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-configmaps-7e974482-4a61-47ce-8e48-cf6c7d92025e container env-test: <nil>
  STEP: delete the pod @ 09/09/25 21:26:33.509
  I0909 21:26:33.540382 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3840" for this suite. @ 09/09/25 21:26:33.546
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 09/09/25 21:26:33.562
  I0909 21:26:33.563040 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 21:26:33.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:26:33.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:26:33.586
  STEP: Creating Indexed job @ 09/09/25 21:26:33.588
  STEP: Ensuring job reaches completions @ 09/09/25 21:26:33.6
  STEP: Ensuring pods with index for job exist @ 09/09/25 21:26:43.658
  I0909 21:26:43.663688 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3115" for this suite. @ 09/09/25 21:26:43.67
• [10.123 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 09/09/25 21:26:43.686
  I0909 21:26:43.686094 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 21:26:43.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:26:43.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:26:43.712
  STEP: Creating a ResourceQuota with terminating scope @ 09/09/25 21:26:43.716
  STEP: Ensuring ResourceQuota status is calculated @ 09/09/25 21:26:43.724
  STEP: Creating a ResourceQuota with not terminating scope @ 09/09/25 21:26:45.729
  STEP: Ensuring ResourceQuota status is calculated @ 09/09/25 21:26:45.741
  STEP: Creating a long running pod @ 09/09/25 21:26:47.746
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/09/25 21:26:47.777
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/09/25 21:26:49.782
  STEP: Deleting the pod @ 09/09/25 21:26:51.785
  STEP: Ensuring resource quota status released the pod usage @ 09/09/25 21:26:51.813
  STEP: Creating a terminating pod @ 09/09/25 21:26:53.823
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/09/25 21:26:53.842
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/09/25 21:26:55.847
  STEP: Deleting the pod @ 09/09/25 21:26:57.852
  STEP: Ensuring resource quota status released the pod usage @ 09/09/25 21:26:57.88
  I0909 21:26:59.896267 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9432" for this suite. @ 09/09/25 21:26:59.904
• [16.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 09/09/25 21:26:59.93
  I0909 21:26:59.931619 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replication-controller @ 09/09/25 21:26:59.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:26:59.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:26:59.959
  STEP: creating a ReplicationController @ 09/09/25 21:26:59.968
  STEP: waiting for RC to be added @ 09/09/25 21:26:59.988
  STEP: waiting for available Replicas @ 09/09/25 21:26:59.988
  STEP: patching ReplicationController @ 09/09/25 21:27:01.582
  STEP: waiting for RC to be modified @ 09/09/25 21:27:01.677
  STEP: patching ReplicationController status @ 09/09/25 21:27:01.677
  STEP: waiting for RC to be modified @ 09/09/25 21:27:01.732
  STEP: waiting for available Replicas @ 09/09/25 21:27:01.733
  STEP: fetching ReplicationController status @ 09/09/25 21:27:01.765
  STEP: patching ReplicationController scale @ 09/09/25 21:27:01.781
  STEP: waiting for RC to be modified @ 09/09/25 21:27:01.793
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/09/25 21:27:01.801
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/09/25 21:27:03.357
  STEP: updating ReplicationController status @ 09/09/25 21:27:03.362
  STEP: waiting for RC to be modified @ 09/09/25 21:27:03.381
  STEP: listing all ReplicationControllers @ 09/09/25 21:27:03.381
  STEP: checking that ReplicationController has expected values @ 09/09/25 21:27:03.388
  STEP: deleting ReplicationControllers by collection @ 09/09/25 21:27:03.389
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/09/25 21:27:03.416
  I0909 21:27:03.496196 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0909 21:27:03.496997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2816" for this suite. @ 09/09/25 21:27:03.5
• [3.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/09/25 21:27:03.517
  I0909 21:27:03.517689 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubelet-test @ 09/09/25 21:27:03.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:27:03.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:27:03.553
  E0909 21:27:04.497755      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:05.498118      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:27:05.611599 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7886" for this suite. @ 09/09/25 21:27:05.618
• [2.116 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/09/25 21:27:05.633
  I0909 21:27:05.633356 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 21:27:05.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:27:05.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:27:05.693
  STEP: Creating configMap with name projected-configmap-test-volume-66bea0b0-2321-4d54-a026-e64e03ed2aa6 @ 09/09/25 21:27:05.715
  STEP: Creating a pod to test consume configMaps @ 09/09/25 21:27:05.733
  E0909 21:27:06.498003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:07.498718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:08.499319      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:09.499613      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:27:09.789
  I0909 21:27:09.795486 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-configmaps-c379cc0e-21e0-493a-b0b9-10b768170e3e container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 21:27:09.811
  I0909 21:27:09.843124 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3213" for this suite. @ 09/09/25 21:27:09.849
• [4.226 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/09/25 21:27:09.861
  I0909 21:27:09.862113 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename taint-single-pod @ 09/09/25 21:27:09.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:27:09.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:27:09.893
  I0909 21:27:09.896153 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0909 21:27:10.500649      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:11.501056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:12.501737      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:13.502610      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:14.502755      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:15.504338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:16.504493      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:17.506154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:18.507331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:19.507544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:20.508329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:21.509279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:22.509516      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:23.510249      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:24.510545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:25.511088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:26.511206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:27.511418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:28.511587      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:29.512339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:30.512491      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:31.513111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:32.514146      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:33.514258      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:34.514518      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:35.514733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:36.515866      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:37.516402      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:38.516570      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:39.517119      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:40.517265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:41.518215      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:42.518871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:43.519079      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:44.520029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:45.520405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:46.521619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:47.525163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:48.525051      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:49.525410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:50.525701      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:51.528031      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:52.528241      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:53.528564      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:54.529094      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:55.529200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:56.529212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:57.540979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:58.540989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:27:59.541175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:00.545039      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:01.545414      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:02.545490      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:03.546393      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:04.546775      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:05.547879      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:06.547806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:07.548008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:08.548232      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:09.548423      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:28:09.897060 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0909 21:28:09.907019 22 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/09/25 21:28:09.916
  I0909 21:28:10.143376 22 taints.go:294] Pod is running on oneke-ip-192-168-150-103. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/09/25 21:28:10.143
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/09/25 21:28:10.218
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/09/25 21:28:10.317
  I0909 21:28:10.317663 22 taints.go:313] Pod wasn't evicted. Proceeding
  I0909 21:28:10.317961 22 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/09/25 21:28:10.527
  E0909 21:28:10.557540      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting some time to make sure that toleration time passed. @ 09/09/25 21:28:10.597
  E0909 21:28:11.560986      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:12.561065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:13.561955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:14.562450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:15.562777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:16.562830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:17.564926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:18.565087      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:19.565334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:20.565503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:21.565711      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:22.566783      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:23.567209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:24.567458      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:25.567850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:26.567883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:27.568526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:28.568895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:29.569027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:30.569405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:31.569790      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:32.570641      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:33.571513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:34.571788      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:35.572714      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:36.573895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:37.574850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:38.575494      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:39.575758      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:40.576378      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:41.576569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:42.577098      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:43.578640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:44.578543      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:45.579806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:46.580230      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:47.580652      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:48.581010      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:49.581621      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:50.582426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:51.582763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:52.583402      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:53.583839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:54.584273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:55.584405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:56.584702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:57.584945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:58.585699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:28:59.586029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:00.586232      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:01.586339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:02.586606      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:03.587305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:04.587459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:05.587876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:06.588267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:07.588708      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:08.588955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:09.589206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:10.589524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:11.590031      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:12.590522      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:13.591227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:14.592101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:15.592668      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:16.593412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:17.593449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:18.594372      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:19.594509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:20.594731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:21.594957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:22.597049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:23.597208      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:24.598434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:25.598649      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:29:25.605157 22 taints.go:329] Pod wasn't evicted. Test successful
  I0909 21:29:25.605369 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2461" for this suite. @ 09/09/25 21:29:25.611
• [135.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 09/09/25 21:29:25.622
  I0909 21:29:25.622549 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 21:29:25.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:29:25.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:29:25.656
  STEP: Counting existing ResourceQuota @ 09/09/25 21:29:25.662
  E0909 21:29:26.599273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:27.600096      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:28.600949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:29.601228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:30.601596      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/09/25 21:29:30.681
  STEP: Ensuring resource quota status is calculated @ 09/09/25 21:29:30.698
  E0909 21:29:31.601812      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:32.602824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/09/25 21:29:32.705
  STEP: Ensuring resource quota status captures replication controller creation @ 09/09/25 21:29:32.742
  E0909 21:29:33.603461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:34.603813      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/09/25 21:29:34.747
  STEP: Ensuring resource quota status released usage @ 09/09/25 21:29:34.757
  E0909 21:29:35.604052      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:36.604390      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:29:36.766906 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9777" for this suite. @ 09/09/25 21:29:36.776
• [11.171 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/09/25 21:29:36.803
  I0909 21:29:36.804217 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename var-expansion @ 09/09/25 21:29:36.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:29:36.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:29:36.838
  STEP: Creating a pod to test substitution in container's args @ 09/09/25 21:29:36.843
  E0909 21:29:37.607962      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:38.606299      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:39.606536      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:40.607437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:29:40.894
  I0909 21:29:40.900896 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod var-expansion-79290ec8-44e9-491d-b936-be76bed58923 container dapi-container: <nil>
  STEP: delete the pod @ 09/09/25 21:29:40.928
  I0909 21:29:40.972147 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5745" for this suite. @ 09/09/25 21:29:40.983
• [4.189 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 09/09/25 21:29:40.997
  I0909 21:29:40.997916 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename gc @ 09/09/25 21:29:41.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:29:41.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:29:41.052
  STEP: create the deployment @ 09/09/25 21:29:41.054
  I0909 21:29:41.063619      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/09/25 21:29:41.064
  STEP: delete the deployment @ 09/09/25 21:29:41.068
  STEP: wait for all rs to be garbage collected @ 09/09/25 21:29:41.121
  STEP: expected 0 rs, got 1 rs @ 09/09/25 21:29:41.141
  STEP: expected 0 pods, got 1 pods @ 09/09/25 21:29:41.233
  E0909 21:29:41.607575      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/09/25 21:29:41.632
  I0909 21:29:41.745774 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0909 21:29:41.745953 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6699" for this suite. @ 09/09/25 21:29:41.753
• [0.766 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/09/25 21:29:41.776
  I0909 21:29:41.776717 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename disruption @ 09/09/25 21:29:41.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:29:41.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:29:41.824
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:29:41.845
  E0909 21:29:42.608991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:43.609501      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/09/25 21:29:43.852
  STEP: Waiting for all pods to be running @ 09/09/25 21:29:43.873
  I0909 21:29:43.886843 22 disruption.go:691] running pods: 0 < 1
  E0909 21:29:44.610154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:45.610991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/09/25 21:29:45.88
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:29:45.899
  STEP: Patching PodDisruptionBudget status @ 09/09/25 21:29:45.912
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:29:45.938
  I0909 21:29:45.945896 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6938" for this suite. @ 09/09/25 21:29:45.955
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/09/25 21:29:45.979
  I0909 21:29:45.979114 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-webhook @ 09/09/25 21:29:45.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:29:46.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:29:46.014
  STEP: Setting up server cert @ 09/09/25 21:29:46.046
  E0909 21:29:46.612643      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/09/25 21:29:46.688
  STEP: Deploying the custom resource conversion webhook pod @ 09/09/25 21:29:46.7
  STEP: Wait for the deployment to be ready @ 09/09/25 21:29:46.731
  I0909 21:29:46.751102 22 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0909 21:29:47.613302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:48.614505      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 21:29:48.777
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 21:29:48.822
  E0909 21:29:49.614896      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:29:49.822975 22 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0909 21:29:49.831617 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 21:29:50.614960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:51.615963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/09/25 21:29:52.523
  STEP: Create a v2 custom resource @ 09/09/25 21:29:52.559
  E0909 21:29:52.617176      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: List CRs in v1 @ 09/09/25 21:29:52.624
  STEP: List CRs in v2 @ 09/09/25 21:29:52.687
  I0909 21:29:53.357241 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6775" for this suite. @ 09/09/25 21:29:53.374
• [7.408 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/09/25 21:29:53.39
  I0909 21:29:53.390904 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/09/25 21:29:53.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:29:53.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:29:53.408
  STEP: creating a target pod @ 09/09/25 21:29:53.412
  E0909 21:29:53.617985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:54.619586      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/09/25 21:29:55.441
  E0909 21:29:55.618891      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:56.618966      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:57.619601      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:29:58.619916      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 09/09/25 21:29:59.498
  STEP: checking pod container endpoints @ 09/09/25 21:29:59.504
  I0909 21:29:59.505000 22 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3688 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 21:29:59.505897 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 21:29:59.507025 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-3688/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  E0909 21:29:59.620097      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:29:59.653742 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 21:29:59.654759 22 exec_util.go:112] Exec stderr: ""
  I0909 21:29:59.687618 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3688" for this suite. @ 09/09/25 21:29:59.697
• [6.322 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 09/09/25 21:29:59.713
  I0909 21:29:59.713126 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename security-context-test @ 09/09/25 21:29:59.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:29:59.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:29:59.739
  E0909 21:30:00.620421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:01.620628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:02.625124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:03.625938      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:04.625952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:05.626240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:30:05.808532 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4028" for this suite. @ 09/09/25 21:30:05.814
• [6.110 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/09/25 21:30:05.825
  I0909 21:30:05.825328 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/09/25 21:30:05.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:30:05.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:30:05.855
  STEP: getting /apis @ 09/09/25 21:30:05.872
  STEP: getting /apis/admissionregistration.k8s.io @ 09/09/25 21:30:05.881
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/09/25 21:30:05.882
  STEP: creating @ 09/09/25 21:30:05.883
  STEP: getting @ 09/09/25 21:30:05.903
  STEP: listing @ 09/09/25 21:30:05.905
  STEP: watching @ 09/09/25 21:30:05.908
  I0909 21:30:05.908706 22 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/09/25 21:30:05.911
  STEP: updating @ 09/09/25 21:30:05.918
  I0909 21:30:05.927660 22 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/09/25 21:30:05.928
  STEP: deleting a collection @ 09/09/25 21:30:05.946
  I0909 21:30:05.966390 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1718" for this suite. @ 09/09/25 21:30:05.971
• [0.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 09/09/25 21:30:05.993
  I0909 21:30:05.993893 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename dns @ 09/09/25 21:30:05.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:30:06.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:30:06.031
  STEP: Creating a test headless service @ 09/09/25 21:30:06.035
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2078.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-2078.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2078.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-2078.svc.cluster.local;sleep 1; done
   @ 09/09/25 21:30:06.048
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2078.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2078.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2078.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2078.svc.cluster.local;sleep 1; done
   @ 09/09/25 21:30:06.048
  STEP: creating a pod to probe DNS @ 09/09/25 21:30:06.049
  STEP: submitting the pod to kubernetes @ 09/09/25 21:30:06.049
  E0909 21:30:06.626573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:07.627010      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/09/25 21:30:08.19
  STEP: looking for the results for each expected name from probers @ 09/09/25 21:30:08.196
  I0909 21:30:08.221166 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:08.238854 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:08.252025 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:08.278807 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:08.284458 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:08.290939 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:08.296379 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:08.301608 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:08.302951 22 dns_common.go:506] Lookups using dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local agnhost_udp@dns-test-service-2.dns-2078.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-2078.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_udp@dns-test-service-2.dns-2078.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2078.svc.cluster.local]

  I0909 21:30:08.312193 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:30:08.319555 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:30:08.329613 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:30:08.627248      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:09.627420      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:10.628262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:11.627970      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:12.628699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:30:13.204390 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:13.211114 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:13.224770 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:13.230423 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:13.241235 22 dns_common.go:506] Lookups using dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local]

  I0909 21:30:13.250049 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:30:13.258347 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:30:13.266001 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:30:13.629403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:14.630531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:15.630720      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:16.631994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:17.632358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:30:18.207072 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:18.216196 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:18.234423 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:18.237982 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:18.256052 22 dns_common.go:506] Lookups using dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local]

  I0909 21:30:18.266053 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:30:18.274878 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:30:18.296086 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:30:18.633200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:19.637173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:20.638145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:21.638480      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:22.638924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:30:23.206536 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:23.211544 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:23.233228 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:23.241530 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:23.259673 22 dns_common.go:506] Lookups using dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local]

  I0909 21:30:23.269808 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:30:23.277580 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:30:23.288221 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:30:23.639984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:24.643391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:25.641358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:26.642531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:27.643222      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:30:28.205479 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:28.210910 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:28.223690 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:28.227480 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:28.235995 22 dns_common.go:506] Lookups using dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local]

  I0909 21:30:28.248515 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:30:28.258493 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:30:28.267441 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:30:28.643713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:29.644242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:30.645191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:31.645307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:32.646133      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:30:33.207609 22 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:33.213535 22 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:33.231902 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:33.237315 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:33.245406 22 dns_common.go:506] Lookups using dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local]

  I0909 21:30:33.254871 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:30:33.263132 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:30:33.277985 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:30:33.647073      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:34.647842      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:35.648358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:36.648790      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:37.649269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:30:38.227440 22 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:38.231289 22 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local from pod dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942: the server could not find the requested resource (get pods dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942)
  I0909 21:30:38.235611 22 dns_common.go:506] Lookups using dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942 failed for: [jessie_udp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2078.svc.cluster.local]

  I0909 21:30:38.242020 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:30:38.247537 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:30:38.253257 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:30:38.650001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:39.651509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:40.651484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:41.651685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:42.652220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:30:43.225839 22 dns_common.go:546] DNS probes using dns-2078/dns-test-74ff398c-f06f-46e5-92c3-6a0760e42942 succeeded

  STEP: deleting the pod @ 09/09/25 21:30:43.225
  STEP: deleting the test headless service @ 09/09/25 21:30:43.264
  I0909 21:30:43.284879 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2078" for this suite. @ 09/09/25 21:30:43.295
• [37.320 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 09/09/25 21:30:43.316
  I0909 21:30:43.316583 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/09/25 21:30:43.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:30:43.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:30:43.332
  STEP: set up a multi version CRD @ 09/09/25 21:30:43.335
  I0909 21:30:43.336500 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 21:30:43.653382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:44.664965      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:45.665277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:46.666360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:47.667926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/09/25 21:30:48.194
  STEP: check the unserved version gets removed @ 09/09/25 21:30:48.208
  E0909 21:30:48.668866      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/09/25 21:30:49.288
  E0909 21:30:49.668006      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:50.669242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:51.672670      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:52.673411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:30:52.848936 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-357" for this suite. @ 09/09/25 21:30:52.854
• [9.551 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/09/25 21:30:52.874
  I0909 21:30:52.874914 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename podtemplate @ 09/09/25 21:30:52.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:30:52.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:30:52.902
  STEP: Create set of pod templates @ 09/09/25 21:30:52.906
  I0909 21:30:52.910805 22 podtemplates.go:143] created test-podtemplate-1
  I0909 21:30:52.917741 22 podtemplates.go:143] created test-podtemplate-2
  I0909 21:30:52.922122 22 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/09/25 21:30:52.922
  STEP: delete collection of pod templates @ 09/09/25 21:30:52.924
  I0909 21:30:52.924532 22 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/09/25 21:30:52.95
  I0909 21:30:52.950299 22 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0909 21:30:52.952606 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5462" for this suite. @ 09/09/25 21:30:52.957
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/09/25 21:30:52.966
  I0909 21:30:52.966167 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename var-expansion @ 09/09/25 21:30:52.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:30:52.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:30:52.994
  STEP: Creating a pod to test substitution in volume subpath @ 09/09/25 21:30:52.997
  E0909 21:30:53.674427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:54.674606      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:55.675054      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:56.675002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:30:57.032
  I0909 21:30:57.036239 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod var-expansion-b33f682f-0272-415b-9210-c00b3a15a5d9 container dapi-container: <nil>
  STEP: delete the pod @ 09/09/25 21:30:57.047
  I0909 21:30:57.076219 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2573" for this suite. @ 09/09/25 21:30:57.083
• [4.129 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/09/25 21:30:57.102
  I0909 21:30:57.103304 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 21:30:57.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:30:57.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:30:57.127
  STEP: Setting up server cert @ 09/09/25 21:30:57.17
  E0909 21:30:57.675013      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 21:30:58.6
  STEP: Deploying the webhook pod @ 09/09/25 21:30:58.607
  STEP: Wait for the deployment to be ready @ 09/09/25 21:30:58.631
  I0909 21:30:58.646149 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 21:30:58.675682      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:30:59.676081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:31:00.670655 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 21, 30, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 30, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 30, 58, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 30, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 21:31:00.677266      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:01.677733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 21:31:02.674
  E0909 21:31:02.677487      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 21:31:02.715
  E0909 21:31:03.678704      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:31:03.719971 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0909 21:31:03.726429 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/09/25 21:31:04.263
  STEP: Creating a custom resource that should be denied by the webhook @ 09/09/25 21:31:04.311
  E0909 21:31:04.678755      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:05.679817      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/09/25 21:31:06.351
  STEP: Updating the custom resource with disallowed data should be denied @ 09/09/25 21:31:06.364
  STEP: Deleting the custom resource should be denied @ 09/09/25 21:31:06.38
  STEP: Remove the offending key and value from the custom resource data @ 09/09/25 21:31:06.389
  STEP: Deleting the updated custom resource should be successful @ 09/09/25 21:31:06.407
  E0909 21:31:06.685611      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:31:07.069692 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-935" for this suite. @ 09/09/25 21:31:07.079
  STEP: Destroying namespace "webhook-markers-8067" for this suite. @ 09/09/25 21:31:07.091
• [9.999 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/09/25 21:31:07.106
  I0909 21:31:07.106478 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename subpath @ 09/09/25 21:31:07.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:31:07.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:31:07.135
  STEP: Setting up data @ 09/09/25 21:31:07.139
  STEP: Creating pod pod-subpath-test-configmap-d82x @ 09/09/25 21:31:07.153
  STEP: Creating a pod to test atomic-volume-subpath @ 09/09/25 21:31:07.153
  E0909 21:31:07.685882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:08.686352      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:09.687142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:10.687552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:11.689250      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:12.693119      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:13.689992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:14.690214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:15.690809      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:16.691825      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:17.692433      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:18.693035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:19.693749      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:20.694898      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:21.695322      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:22.696061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:23.696159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:24.696386      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:25.696969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:26.697148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:27.697093      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:28.697356      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:29.697495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:30.697890      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:31:31.278
  I0909 21:31:31.281809 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-subpath-test-configmap-d82x container test-container-subpath-configmap-d82x: <nil>
  STEP: delete the pod @ 09/09/25 21:31:31.296
  STEP: Deleting pod pod-subpath-test-configmap-d82x @ 09/09/25 21:31:31.329
  I0909 21:31:31.329925 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-d82x" in namespace "subpath-3125"
  I0909 21:31:31.334183 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3125" for this suite. @ 09/09/25 21:31:31.338
• [24.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 09/09/25 21:31:31.348
  I0909 21:31:31.348646 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:31:31.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:31:31.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:31:31.374
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9849 @ 09/09/25 21:31:31.378
  STEP: changing the ExternalName service to type=ClusterIP @ 09/09/25 21:31:31.389
  I0909 21:31:31.469507 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 31, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 31, 31, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"externalname-service-78d4559c8f\""}}, CollisionCount:(*int32)(nil)}
  E0909 21:31:31.699219      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:32.698872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:31:33.474028 22 resource.go:361] Creating new exec pod
  E0909 21:31:33.698956      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:34.699154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:31:35.509458 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9849 exec execpodc2mnx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0909 21:31:35.699332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:31:35.800021 22 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.65.18) 80 port [tcp/http] succeeded!\n"
  I0909 21:31:35.800084 22 builder.go:147] stdout: "externalname-service-78d4559c8f-cw2gw"
  I0909 21:31:35.800171 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9849 exec execpodc2mnx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.65.18 80'
  I0909 21:31:36.028899 22 builder.go:146] stderr: "+ + nc -v -t -w 2 10.43.65.18 80\necho hostName\nConnection to 10.43.65.18 80 port [tcp/http] succeeded!\n"
  I0909 21:31:36.028984 22 builder.go:147] stdout: "externalname-service-78d4559c8f-cw2gw"
  I0909 21:31:36.029528 22 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0909 21:31:36.085837 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9849" for this suite. @ 09/09/25 21:31:36.096
• [4.762 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/09/25 21:31:36.109
  I0909 21:31:36.109331 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename volumeattachment @ 09/09/25 21:31:36.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:31:36.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:31:36.137
  STEP: Create VolumeAttachment "va-e2e-bc249" on node "oneke-ip-192-168-150-102" @ 09/09/25 21:31:36.191
  STEP: Patch VolumeAttachment "va-e2e-bc249" on node "oneke-ip-192-168-150-102" @ 09/09/25 21:31:36.202
  STEP: Reading "va-e2e-bc249" Status @ 09/09/25 21:31:36.218
  STEP: Patching "va-e2e-bc249" Status @ 09/09/25 21:31:36.224
  I0909 21:31:36.231206 22 volume_attachment.go:224] "va-e2e-bc249" Status.Attached: true
  STEP: Updating "va-e2e-bc249" Status @ 09/09/25 21:31:36.232
  I0909 21:31:36.250196 22 volume_attachment.go:240] "va-e2e-bc249" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-bc249" on node "oneke-ip-192-168-150-102" @ 09/09/25 21:31:36.252
  STEP: Confirm deletion of VolumeAttachment "va-e2e-bc249" on node "oneke-ip-192-168-150-102" @ 09/09/25 21:31:36.261
  I0909 21:31:36.266959 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-735" for this suite. @ 09/09/25 21:31:36.293
• [0.197 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/09/25 21:31:36.315
  I0909 21:31:36.315916 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename proxy @ 09/09/25 21:31:36.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:31:36.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:31:36.367
  STEP: starting an echo server on multiple ports @ 09/09/25 21:31:36.409
  I0909 21:31:36.452624 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0909 21:31:36.700184      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:37.700560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:31:38.474082      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:31:38.475714 22 proxy.go:273] setup took 2.095566839s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/09/25 21:31:38.477
  I0909 21:31:38.541056 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 62.898087ms)
  I0909 21:31:38.541524 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 61.670195ms)
  I0909 21:31:38.542293 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 54.907072ms)
  I0909 21:31:38.543652 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 65.096131ms)
  I0909 21:31:38.544342 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 66.267263ms)
  I0909 21:31:38.552952 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 69.068978ms)
  I0909 21:31:38.556608 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 68.621767ms)
  I0909 21:31:38.557042 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 69.401819ms)
  I0909 21:31:38.557078 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 72.422845ms)
  I0909 21:31:38.557102 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 72.577815ms)
  I0909 21:31:38.557125 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 78.695436ms)
  I0909 21:31:38.557155 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 73.186556ms)
  I0909 21:31:38.557184 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 69.443079ms)
  I0909 21:31:38.558110 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 74.352558ms)
  I0909 21:31:38.558320 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 70.404311ms)
  I0909 21:31:38.558351 22 proxy.go:601] (0) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 70.518511ms)
  I0909 21:31:38.580914 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 10.179399ms)
  I0909 21:31:38.580984 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 10.89736ms)
  I0909 21:31:38.581197 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 11.185991ms)
  I0909 21:31:38.581212 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 11.507061ms)
  I0909 21:31:38.581287 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 10.64312ms)
  I0909 21:31:38.581302 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 11.793882ms)
  I0909 21:31:38.581327 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 10.87225ms)
  I0909 21:31:38.581345 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 11.385351ms)
  I0909 21:31:38.581365 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 11.251901ms)
  I0909 21:31:38.581381 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 11.215611ms)
  I0909 21:31:38.581400 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 11.553081ms)
  I0909 21:31:38.581418 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 11.507901ms)
  I0909 21:31:38.581822 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 12.030212ms)
  I0909 21:31:38.581928 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 11.531641ms)
  I0909 21:31:38.582385 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 11.865732ms)
  I0909 21:31:38.584478 22 proxy.go:601] (1) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 15.057168ms)
  I0909 21:31:38.596194 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 11.463552ms)
  I0909 21:31:38.597044 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 12.001592ms)
  I0909 21:31:38.597061 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 12.073482ms)
  I0909 21:31:38.597080 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 12.422753ms)
  I0909 21:31:38.597093 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 11.655251ms)
  I0909 21:31:38.597116 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 12.335304ms)
  I0909 21:31:38.597133 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 11.797262ms)
  I0909 21:31:38.597145 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 11.954503ms)
  I0909 21:31:38.597166 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 12.074713ms)
  I0909 21:31:38.597182 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 11.796672ms)
  I0909 21:31:38.597197 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 11.713522ms)
  I0909 21:31:38.597210 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 11.969113ms)
  I0909 21:31:38.597237 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 12.727644ms)
  I0909 21:31:38.597251 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 12.316153ms)
  I0909 21:31:38.597275 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 11.985133ms)
  I0909 21:31:38.597296 22 proxy.go:601] (2) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 12.153203ms)
  I0909 21:31:38.606893 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 6.513713ms)
  I0909 21:31:38.607686 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 7.455034ms)
  I0909 21:31:38.611028 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 10.490719ms)
  I0909 21:31:38.616509 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 16.00645ms)
  I0909 21:31:38.619810 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 19.169505ms)
  I0909 21:31:38.621602 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 20.966309ms)
  I0909 21:31:38.621764 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 21.149959ms)
  I0909 21:31:38.621858 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 21.083229ms)
  I0909 21:31:38.621878 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 21.221919ms)
  I0909 21:31:38.621898 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 20.918119ms)
  I0909 21:31:38.621968 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 21.00984ms)
  I0909 21:31:38.621996 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 20.9873ms)
  I0909 21:31:38.622012 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 21.10945ms)
  I0909 21:31:38.622083 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 21.059889ms)
  I0909 21:31:38.622099 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 21.16687ms)
  I0909 21:31:38.622118 22 proxy.go:601] (3) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 21.066929ms)
  I0909 21:31:38.648215 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 20.784839ms)
  I0909 21:31:38.648323 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 20.816759ms)
  I0909 21:31:38.648344 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 20.780509ms)
  I0909 21:31:38.648547 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 20.776339ms)
  I0909 21:31:38.648568 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 20.823818ms)
  I0909 21:31:38.648644 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 20.502108ms)
  I0909 21:31:38.648664 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 20.528718ms)
  I0909 21:31:38.648682 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 21.44547ms)
  I0909 21:31:38.648695 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 20.502499ms)
  I0909 21:31:38.648753 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 20.947959ms)
  I0909 21:31:38.648766 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 20.799369ms)
  I0909 21:31:38.648867 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 21.703491ms)
  I0909 21:31:38.648882 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 21.022999ms)
  I0909 21:31:38.648898 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 20.983179ms)
  I0909 21:31:38.648975 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 21.34139ms)
  I0909 21:31:38.649177 22 proxy.go:601] (4) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 21.149139ms)
  I0909 21:31:38.665357 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 14.799137ms)
  I0909 21:31:38.666799 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 13.868576ms)
  I0909 21:31:38.673113 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 23.627013ms)
  I0909 21:31:38.673607 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 19.628257ms)
  I0909 21:31:38.673621 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 17.556913ms)
  I0909 21:31:38.673631 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 19.698587ms)
  I0909 21:31:38.673641 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 17.370302ms)
  I0909 21:31:38.673662 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 17.517983ms)
  I0909 21:31:38.673671 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 17.264252ms)
  I0909 21:31:38.673682 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 17.492933ms)
  I0909 21:31:38.673697 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 17.382762ms)
  I0909 21:31:38.673714 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 17.486943ms)
  I0909 21:31:38.673731 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 13.054514ms)
  I0909 21:31:38.673742 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 17.637563ms)
  I0909 21:31:38.673762 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 19.898587ms)
  I0909 21:31:38.673778 22 proxy.go:601] (5) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 17.765163ms)
  I0909 21:31:38.696679 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 10.222359ms)
  E0909 21:31:38.705570      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:31:38.707231 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 20.865249ms)
  I0909 21:31:38.707399 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 20.764488ms)
  I0909 21:31:38.707514 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 21.021159ms)
  I0909 21:31:38.707532 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 21.32629ms)
  I0909 21:31:38.707543 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 21.115459ms)
  I0909 21:31:38.707560 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 21.079789ms)
  I0909 21:31:38.707571 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 20.964199ms)
  I0909 21:31:38.707580 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 21.075609ms)
  I0909 21:31:38.707598 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 21.007089ms)
  I0909 21:31:38.707607 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 21.080479ms)
  I0909 21:31:38.707617 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 20.986409ms)
  I0909 21:31:38.707627 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 20.971289ms)
  I0909 21:31:38.709833 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 23.151643ms)
  I0909 21:31:38.709856 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 23.664394ms)
  I0909 21:31:38.710797 22 proxy.go:601] (6) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 24.090805ms)
  I0909 21:31:38.735183 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 17.224762ms)
  I0909 21:31:38.735287 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 16.965821ms)
  I0909 21:31:38.735660 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 17.259062ms)
  I0909 21:31:38.735692 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 17.492352ms)
  I0909 21:31:38.736109 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 18.031734ms)
  I0909 21:31:38.736137 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 18.158304ms)
  I0909 21:31:38.736207 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 17.613712ms)
  I0909 21:31:38.736364 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 18.272444ms)
  I0909 21:31:38.736384 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 15.887819ms)
  I0909 21:31:38.736475 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 16.13479ms)
  I0909 21:31:38.736629 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 17.978843ms)
  I0909 21:31:38.736653 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 18.195444ms)
  I0909 21:31:38.736684 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 16.1135ms)
  I0909 21:31:38.736848 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 17.767253ms)
  I0909 21:31:38.736972 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 18.898845ms)
  I0909 21:31:38.736988 22 proxy.go:601] (7) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 16.578601ms)
  I0909 21:31:38.743933 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 5.03355ms)
  I0909 21:31:38.743968 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 6.828473ms)
  I0909 21:31:38.743942 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 6.065702ms)
  I0909 21:31:38.752439 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 10.072708ms)
  I0909 21:31:38.752616 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 10.327039ms)
  I0909 21:31:38.753721 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 11.386941ms)
  I0909 21:31:38.753755 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 11.565112ms)
  I0909 21:31:38.754180 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 15.127057ms)
  I0909 21:31:38.754889 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 15.866249ms)
  I0909 21:31:38.755499 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 13.147734ms)
  I0909 21:31:38.756250 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 13.932425ms)
  I0909 21:31:38.761274 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 18.889895ms)
  I0909 21:31:38.761324 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 18.822975ms)
  I0909 21:31:38.761387 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 18.967465ms)
  I0909 21:31:38.761413 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 19.010945ms)
  I0909 21:31:38.761430 22 proxy.go:601] (8) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 18.953615ms)
  I0909 21:31:38.765553 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 4.059578ms)
  I0909 21:31:38.765695 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 3.077476ms)
  I0909 21:31:38.778169 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 13.301485ms)
  I0909 21:31:38.784371 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 19.002846ms)
  I0909 21:31:38.785091 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 20.006107ms)
  I0909 21:31:38.785654 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 20.482808ms)
  I0909 21:31:38.786418 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 21.20402ms)
  I0909 21:31:38.787686 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 23.545894ms)
  I0909 21:31:38.788248 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 23.267183ms)
  I0909 21:31:38.789072 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 24.031135ms)
  I0909 21:31:38.789115 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 23.778845ms)
  I0909 21:31:38.789137 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 23.682684ms)
  I0909 21:31:38.789154 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 23.737145ms)
  I0909 21:31:38.789175 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 23.924035ms)
  I0909 21:31:38.789199 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 24.073245ms)
  I0909 21:31:38.791009 22 proxy.go:601] (9) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 25.633508ms)
  I0909 21:31:38.803291 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 8.344786ms)
  I0909 21:31:38.803981 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 7.940085ms)
  I0909 21:31:38.811111 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 14.954178ms)
  I0909 21:31:38.812628 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 17.771883ms)
  I0909 21:31:38.814565 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 14.507637ms)
  I0909 21:31:38.814606 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 12.506683ms)
  I0909 21:31:38.814625 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 12.632443ms)
  I0909 21:31:38.814646 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 12.982074ms)
  I0909 21:31:38.814651 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 12.756704ms)
  I0909 21:31:38.814670 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 12.623013ms)
  I0909 21:31:38.814695 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 12.918774ms)
  I0909 21:31:38.814701 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 12.867874ms)
  I0909 21:31:38.814712 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 13.127374ms)
  I0909 21:31:38.814720 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 12.776663ms)
  I0909 21:31:38.814729 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 13.007154ms)
  I0909 21:31:38.818525 22 proxy.go:601] (10) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 23.820124ms)
  I0909 21:31:38.842378 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 22.501662ms)
  I0909 21:31:38.844471 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 25.375707ms)
  I0909 21:31:38.844557 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 24.512536ms)
  I0909 21:31:38.844581 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 24.498386ms)
  I0909 21:31:38.844603 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 25.440887ms)
  I0909 21:31:38.845196 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 25.359657ms)
  I0909 21:31:38.845795 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 25.839458ms)
  I0909 21:31:38.845827 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 25.706348ms)
  I0909 21:31:38.845842 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 26.319009ms)
  I0909 21:31:38.845859 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 26.203869ms)
  I0909 21:31:38.845951 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 26.155578ms)
  I0909 21:31:38.845980 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 26.067078ms)
  I0909 21:31:38.846056 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 26.346758ms)
  I0909 21:31:38.846069 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 26.318128ms)
  I0909 21:31:38.846090 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 26.094648ms)
  I0909 21:31:38.846106 22 proxy.go:601] (11) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 26.65436ms)
  I0909 21:31:38.871232 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 15.828459ms)
  I0909 21:31:38.871307 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 13.979797ms)
  I0909 21:31:38.871327 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 13.961306ms)
  I0909 21:31:38.871357 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 18.884615ms)
  I0909 21:31:38.871453 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 18.732885ms)
  I0909 21:31:38.871535 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 18.854465ms)
  I0909 21:31:38.871563 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 18.941145ms)
  I0909 21:31:38.871578 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 18.818525ms)
  I0909 21:31:38.871864 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 14.116017ms)
  I0909 21:31:38.871924 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 16.630281ms)
  I0909 21:31:38.871941 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 14.931768ms)
  I0909 21:31:38.872031 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 14.197087ms)
  I0909 21:31:38.872326 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 14.637218ms)
  I0909 21:31:38.872376 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 15.105709ms)
  I0909 21:31:38.872460 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 14.672578ms)
  I0909 21:31:38.872628 22 proxy.go:601] (12) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 20.242968ms)
  I0909 21:31:38.882908 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 8.785006ms)
  I0909 21:31:38.882933 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 8.477246ms)
  I0909 21:31:38.884727 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 9.930188ms)
  I0909 21:31:38.885852 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 12.706153ms)
  I0909 21:31:38.885874 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 12.072382ms)
  I0909 21:31:38.885891 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 11.984322ms)
  I0909 21:31:38.885902 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 11.329441ms)
  I0909 21:31:38.890370 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 16.803811ms)
  I0909 21:31:38.890379 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 16.36274ms)
  I0909 21:31:38.890502 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 17.389342ms)
  I0909 21:31:38.890587 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 16.891261ms)
  I0909 21:31:38.890614 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 16.386281ms)
  I0909 21:31:38.890713 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 16.02749ms)
  I0909 21:31:38.890731 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 17.390143ms)
  I0909 21:31:38.890744 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 17.515483ms)
  I0909 21:31:38.890854 22 proxy.go:601] (13) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 16.04811ms)
  I0909 21:31:38.902355 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 11.466491ms)
  I0909 21:31:38.902957 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 11.0552ms)
  I0909 21:31:38.902935 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 10.81104ms)
  I0909 21:31:38.903130 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 11.083271ms)
  I0909 21:31:38.903151 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 10.989051ms)
  I0909 21:31:38.903241 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 11.234571ms)
  I0909 21:31:38.903269 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 11.02383ms)
  I0909 21:31:38.903232 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 10.75833ms)
  I0909 21:31:38.903331 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 10.73388ms)
  I0909 21:31:38.903339 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 11.252831ms)
  I0909 21:31:38.903344 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 11.06171ms)
  I0909 21:31:38.903357 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 11.15214ms)
  I0909 21:31:38.903701 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 11.187941ms)
  I0909 21:31:38.903724 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 11.252721ms)
  I0909 21:31:38.903738 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 12.555533ms)
  I0909 21:31:38.903874 22 proxy.go:601] (14) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 11.230381ms)
  I0909 21:31:38.916730 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 8.184925ms)
  I0909 21:31:38.916767 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 7.818914ms)
  I0909 21:31:38.916781 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 8.490556ms)
  I0909 21:31:38.916849 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 7.863604ms)
  I0909 21:31:38.916866 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 8.423135ms)
  I0909 21:31:38.916878 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 8.137525ms)
  I0909 21:31:38.918837 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 9.923359ms)
  I0909 21:31:38.925279 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 16.616981ms)
  I0909 21:31:38.925359 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 16.775301ms)
  I0909 21:31:38.925380 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 16.685651ms)
  I0909 21:31:38.925391 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 16.33179ms)
  I0909 21:31:38.925401 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 16.624561ms)
  I0909 21:31:38.928484 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 19.977967ms)
  I0909 21:31:38.929134 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 20.513218ms)
  I0909 21:31:38.929512 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 20.488578ms)
  I0909 21:31:38.929972 22 proxy.go:601] (15) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 20.177578ms)
  I0909 21:31:38.939295 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 9.000927ms)
  I0909 21:31:38.939199 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 8.689756ms)
  I0909 21:31:38.944303 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 13.942446ms)
  I0909 21:31:38.944318 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 12.634533ms)
  I0909 21:31:38.947226 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 15.084508ms)
  I0909 21:31:38.947240 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 15.312019ms)
  I0909 21:31:38.948186 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 16.138679ms)
  I0909 21:31:38.948324 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 16.370641ms)
  I0909 21:31:38.948429 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 16.36607ms)
  I0909 21:31:38.948439 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 16.41215ms)
  I0909 21:31:38.948453 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 16.614681ms)
  I0909 21:31:38.953197 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 20.961619ms)
  I0909 21:31:38.953580 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 21.421ms)
  I0909 21:31:38.957386 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 25.129657ms)
  I0909 21:31:38.957413 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 24.049815ms)
  I0909 21:31:38.958568 22 proxy.go:601] (16) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 26.85952ms)
  I0909 21:31:38.977781 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 16.21768ms)
  I0909 21:31:38.977940 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 18.745305ms)
  I0909 21:31:38.977956 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 18.952835ms)
  I0909 21:31:38.978025 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 18.694765ms)
  I0909 21:31:38.978041 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 17.861343ms)
  I0909 21:31:38.978056 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 16.882791ms)
  I0909 21:31:38.978070 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 19.061095ms)
  I0909 21:31:38.978223 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 16.888251ms)
  I0909 21:31:38.978329 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 16.871622ms)
  I0909 21:31:38.978345 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 16.831102ms)
  I0909 21:31:38.978358 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 16.985062ms)
  I0909 21:31:38.978370 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 17.079862ms)
  I0909 21:31:38.978451 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 16.854952ms)
  I0909 21:31:38.978466 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 17.222752ms)
  I0909 21:31:38.986137 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 22.913003ms)
  I0909 21:31:38.986944 22 proxy.go:601] (17) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 27.811701ms)
  I0909 21:31:38.997686 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 9.831468ms)
  I0909 21:31:38.999706 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 11.809362ms)
  I0909 21:31:39.000529 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 12.995234ms)
  I0909 21:31:39.000548 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 13.261385ms)
  I0909 21:31:39.000612 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 12.635964ms)
  I0909 21:31:39.000630 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 13.045534ms)
  I0909 21:31:39.000746 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 13.331005ms)
  I0909 21:31:39.000755 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 13.019454ms)
  I0909 21:31:39.000771 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 12.834144ms)
  I0909 21:31:39.000768 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 12.993834ms)
  I0909 21:31:39.000842 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 13.407486ms)
  I0909 21:31:39.000844 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 12.826884ms)
  I0909 21:31:39.000856 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 13.463926ms)
  I0909 21:31:39.000866 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 13.175725ms)
  I0909 21:31:39.000868 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 13.580296ms)
  I0909 21:31:39.000880 22 proxy.go:601] (18) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 13.065745ms)
  I0909 21:31:39.020377 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 14.365577ms)
  I0909 21:31:39.020663 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:160/proxy/: foo (200; 14.472996ms)
  I0909 21:31:39.020872 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:462/proxy/: tls qux (200; 14.291446ms)
  I0909 21:31:39.020891 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 14.540937ms)
  I0909 21:31:39.021441 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:443/proxy/... (200; 15.394899ms)
  I0909 21:31:39.021468 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/... (200; 15.496089ms)
  I0909 21:31:39.021595 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs:1080/proxy/rewri... (200; 15.747389ms)
  I0909 21:31:39.021606 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/pods/http:proxy-service-kxpv5-7f9f86fc67-jwjgs:162/proxy/: bar (200; 15.300768ms)
  I0909 21:31:39.021798 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/pods/https:proxy-service-kxpv5-7f9f86fc67-jwjgs:460/proxy/: tls baz (200; 15.485458ms)
  I0909 21:31:39.021830 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname2/proxy/: bar (200; 16.06743ms)
  I0909 21:31:39.021844 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname2/proxy/: bar (200; 15.76459ms)
  I0909 21:31:39.021932 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/services/http:proxy-service-kxpv5:portname1/proxy/: foo (200; 16.04192ms)
  I0909 21:31:39.021947 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/services/proxy-service-kxpv5:portname1/proxy/: foo (200; 15.83192ms)
  I0909 21:31:39.022052 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname1/proxy/: tls baz (200; 16.11796ms)
  I0909 21:31:39.022064 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/: <a href="/api/v1/namespaces/proxy-2211/pods/proxy-service-kxpv5-7f9f86fc67-jwjgs/proxy/rewriteme"... (200; 15.9107ms)
  I0909 21:31:39.022139 22 proxy.go:601] (19) /api/v1/namespaces/proxy-2211/services/https:proxy-service-kxpv5:tlsportname2/proxy/: tls qux (200; 16.38971ms)
  I0909 21:31:39.029425 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2211" for this suite. @ 09/09/25 21:31:39.035
• [2.728 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 09/09/25 21:31:39.042
  I0909 21:31:39.042749 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename gc @ 09/09/25 21:31:39.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:31:39.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:31:39.111
  STEP: create the rc1 @ 09/09/25 21:31:39.139
  STEP: create the rc2 @ 09/09/25 21:31:39.146
  E0909 21:31:39.708962      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:40.709160      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:41.709545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:42.709384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/09/25 21:31:43.169
  E0909 21:31:43.722904      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/09/25 21:31:44.077
  STEP: wait for the rc to be deleted @ 09/09/25 21:31:44.084
  E0909 21:31:44.723924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:45.724777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:46.728994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:47.729360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:48.730187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:31:49.108354 22 garbage_collector.go:770] 69 pods remaining
  I0909 21:31:49.109384 22 garbage_collector.go:777] 68 pods has nil DeletionTimestamp
  I0909 21:31:49.109910 22 garbage_collector.go:778] 
  E0909 21:31:49.731147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:50.731834      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:51.732019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:52.732354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:53.734631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/09/25 21:31:54.097
  I0909 21:31:54.264656 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0909 21:31:54.275652 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-254rf" in namespace "gc-4529"
  I0909 21:31:54.298674 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2j9xt" in namespace "gc-4529"
  I0909 21:31:54.320136 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-497fw" in namespace "gc-4529"
  I0909 21:31:54.340983 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4bghc" in namespace "gc-4529"
  I0909 21:31:54.362664 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4x6kf" in namespace "gc-4529"
  I0909 21:31:54.381965 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-567d8" in namespace "gc-4529"
  I0909 21:31:54.402680 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fxk7" in namespace "gc-4529"
  I0909 21:31:54.419609 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6bzgs" in namespace "gc-4529"
  I0909 21:31:54.447778 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6f2nr" in namespace "gc-4529"
  I0909 21:31:54.473617 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6hs8b" in namespace "gc-4529"
  I0909 21:31:54.499735 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6kzkr" in namespace "gc-4529"
  I0909 21:31:54.517407 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lzc5" in namespace "gc-4529"
  I0909 21:31:54.540369 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6pdrw" in namespace "gc-4529"
  I0909 21:31:54.555273 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7g6bd" in namespace "gc-4529"
  I0909 21:31:54.571385 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7gmvg" in namespace "gc-4529"
  I0909 21:31:54.596595 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7pqbp" in namespace "gc-4529"
  I0909 21:31:54.616709 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7vr9p" in namespace "gc-4529"
  I0909 21:31:54.633206 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7w5wk" in namespace "gc-4529"
  I0909 21:31:54.652992 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-87n47" in namespace "gc-4529"
  I0909 21:31:54.670811 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88drn" in namespace "gc-4529"
  I0909 21:31:54.691740 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8j468" in namespace "gc-4529"
  I0909 21:31:54.711581 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8n999" in namespace "gc-4529"
  E0909 21:31:54.734634      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:31:54.750362 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8xf9g" in namespace "gc-4529"
  I0909 21:31:54.776898 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-94wgz" in namespace "gc-4529"
  I0909 21:31:54.795482 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-95crd" in namespace "gc-4529"
  I0909 21:31:54.810926 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9dhxc" in namespace "gc-4529"
  I0909 21:31:54.826052 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9fshf" in namespace "gc-4529"
  I0909 21:31:54.851492 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9td85" in namespace "gc-4529"
  I0909 21:31:54.877297 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b74lq" in namespace "gc-4529"
  I0909 21:31:54.894111 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-br4m5" in namespace "gc-4529"
  I0909 21:31:54.911193 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c2ckr" in namespace "gc-4529"
  I0909 21:31:54.924114 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c9n7t" in namespace "gc-4529"
  I0909 21:31:54.941063 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cd8f5" in namespace "gc-4529"
  I0909 21:31:54.957570 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cpw44" in namespace "gc-4529"
  I0909 21:31:54.972659 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ctrtg" in namespace "gc-4529"
  I0909 21:31:54.986984 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dg4gx" in namespace "gc-4529"
  I0909 21:31:55.005584 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dn4b5" in namespace "gc-4529"
  I0909 21:31:55.036031 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fgsc7" in namespace "gc-4529"
  I0909 21:31:55.062725 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fpjnh" in namespace "gc-4529"
  I0909 21:31:55.089001 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fzxxg" in namespace "gc-4529"
  I0909 21:31:55.100975 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g5269" in namespace "gc-4529"
  I0909 21:31:55.116527 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gfzqg" in namespace "gc-4529"
  I0909 21:31:55.143948 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gxtfx" in namespace "gc-4529"
  I0909 21:31:55.158221 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gzlxg" in namespace "gc-4529"
  I0909 21:31:55.177025 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h5c45" in namespace "gc-4529"
  I0909 21:31:55.194247 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hcqkb" in namespace "gc-4529"
  I0909 21:31:55.207731 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hkt95" in namespace "gc-4529"
  I0909 21:31:55.229824 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hktpl" in namespace "gc-4529"
  I0909 21:31:55.250136 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-htd7h" in namespace "gc-4529"
  I0909 21:31:55.270821 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jbld5" in namespace "gc-4529"
  I0909 21:31:55.287518 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4529" for this suite. @ 09/09/25 21:31:55.307
• [16.271 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 09/09/25 21:31:55.317
  I0909 21:31:55.318115 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 21:31:55.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:31:55.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:31:55.339
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/09/25 21:31:55.341
  E0909 21:31:55.737769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:56.738181      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:57.738871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:58.739912      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:31:59.739819      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:00.743114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:01.742212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:02.743145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:03.745059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:04.745715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:05.746139      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:06.749059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:32:07.41
  I0909 21:32:07.412103 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-65587f33-f387-40fb-a08c-dce7af1a8b3c container test-container: <nil>
  STEP: delete the pod @ 09/09/25 21:32:07.425
  I0909 21:32:07.477293 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6786" for this suite. @ 09/09/25 21:32:07.49
• [12.178 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/09/25 21:32:07.496
  I0909 21:32:07.496157 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename apf @ 09/09/25 21:32:07.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:32:07.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:32:07.551
  STEP: getting /apis @ 09/09/25 21:32:07.555
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/09/25 21:32:07.564
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/09/25 21:32:07.566
  STEP: creating @ 09/09/25 21:32:07.567
  STEP: getting @ 09/09/25 21:32:07.589
  STEP: listing @ 09/09/25 21:32:07.591
  STEP: watching @ 09/09/25 21:32:07.596
  I0909 21:32:07.596600 22 flowcontrol.go:620] starting watch
  STEP: patching @ 09/09/25 21:32:07.597
  STEP: updating @ 09/09/25 21:32:07.604
  I0909 21:32:07.610769 22 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/09/25 21:32:07.611
  STEP: patching /status @ 09/09/25 21:32:07.613
  STEP: updating /status @ 09/09/25 21:32:07.618
  STEP: deleting @ 09/09/25 21:32:07.629
  STEP: deleting a collection @ 09/09/25 21:32:07.642
  I0909 21:32:07.653649 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9063" for this suite. @ 09/09/25 21:32:07.657
• [0.168 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 09/09/25 21:32:07.668
  I0909 21:32:07.668325 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/09/25 21:32:07.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:32:07.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:32:07.687
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/09/25 21:32:07.694
  I0909 21:32:07.695519 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 21:32:07.749860      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:08.758560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:32:09.513008 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 21:32:09.754775      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:10.754208      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:11.759656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:12.759947      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:13.759739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:14.759803      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:15.761008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:32:16.482750 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2031" for this suite. @ 09/09/25 21:32:16.493
• [8.835 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 09/09/25 21:32:16.527
  I0909 21:32:16.528245 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 21:32:16.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:32:16.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:32:16.563
  STEP: Creating a ResourceQuota with best effort scope @ 09/09/25 21:32:16.569
  STEP: Ensuring ResourceQuota status is calculated @ 09/09/25 21:32:16.584
  E0909 21:32:16.760845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:17.761130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/09/25 21:32:18.588
  STEP: Ensuring ResourceQuota status is calculated @ 09/09/25 21:32:18.599
  E0909 21:32:18.762773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:19.763023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/09/25 21:32:20.607
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/09/25 21:32:20.635
  E0909 21:32:20.763512      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:21.763818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/09/25 21:32:22.642
  E0909 21:32:22.766479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:23.767841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/09/25 21:32:24.647
  STEP: Ensuring resource quota status released the pod usage @ 09/09/25 21:32:24.68
  E0909 21:32:24.768105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:25.768537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/09/25 21:32:26.689
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/09/25 21:32:26.716
  E0909 21:32:26.769279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:27.769470      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/09/25 21:32:28.721
  E0909 21:32:28.770187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:29.770859      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/09/25 21:32:30.727
  STEP: Ensuring resource quota status released the pod usage @ 09/09/25 21:32:30.764
  E0909 21:32:30.772409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:31.773317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:32:32.768371 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0909 21:32:32.773554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "resourcequota-2953" for this suite. @ 09/09/25 21:32:32.774
• [16.254 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 09/09/25 21:32:32.781
  I0909 21:32:32.781604 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename svcaccounts @ 09/09/25 21:32:32.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:32:32.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:32:32.825
  STEP: Creating ServiceAccount "e2e-sa-n8pqs"  @ 09/09/25 21:32:32.826
  I0909 21:32:32.838005 22 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-n8pqs"  @ 09/09/25 21:32:32.838
  I0909 21:32:32.854995 22 service_accounts.go:867] AutomountServiceAccountToken: true
  I0909 21:32:32.856161 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1850" for this suite. @ 09/09/25 21:32:32.873
• [0.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 09/09/25 21:32:32.884
  I0909 21:32:32.884871 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename runtimeclass @ 09/09/25 21:32:32.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:32:32.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:32:32.908
  I0909 21:32:32.950719 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-292" for this suite. @ 09/09/25 21:32:32.977
• [0.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/09/25 21:32:32.995
  I0909 21:32:32.995650 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubelet-test @ 09/09/25 21:32:32.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:32:33.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:32:33.024
  E0909 21:32:33.774400      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:34.775402      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:32:35.076253 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-712" for this suite. @ 09/09/25 21:32:35.085
• [2.109 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/09/25 21:32:35.113
  I0909 21:32:35.115063 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename events @ 09/09/25 21:32:35.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:32:35.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:32:35.147
  STEP: creating a test event @ 09/09/25 21:32:35.156
  STEP: listing events in all namespaces @ 09/09/25 21:32:35.165
  STEP: listing events in test namespace @ 09/09/25 21:32:35.215
  STEP: listing events with field selection filtering on source @ 09/09/25 21:32:35.22
  STEP: listing events with field selection filtering on reportingController @ 09/09/25 21:32:35.228
  STEP: getting the test event @ 09/09/25 21:32:35.232
  STEP: patching the test event @ 09/09/25 21:32:35.236
  STEP: getting the test event @ 09/09/25 21:32:35.247
  STEP: updating the test event @ 09/09/25 21:32:35.252
  STEP: getting the test event @ 09/09/25 21:32:35.261
  STEP: deleting the test event @ 09/09/25 21:32:35.268
  STEP: listing events in all namespaces @ 09/09/25 21:32:35.279
  STEP: listing events in test namespace @ 09/09/25 21:32:35.323
  I0909 21:32:35.332110 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5891" for this suite. @ 09/09/25 21:32:35.34
• [0.247 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/09/25 21:32:35.367
  I0909 21:32:35.367652 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 21:32:35.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:32:35.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:32:35.399
  STEP: Creating configMap with name configmap-test-volume-map-6effc86d-2057-42ee-ac4c-a9499360a313 @ 09/09/25 21:32:35.401
  STEP: Creating a pod to test consume configMaps @ 09/09/25 21:32:35.41
  E0909 21:32:35.776388      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:36.777815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:37.778538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:38.779204      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:32:39.465
  I0909 21:32:39.471403 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-cb114964-1b8d-475c-b012-5606b8de70f4 container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 21:32:39.489
  I0909 21:32:39.527076 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2921" for this suite. @ 09/09/25 21:32:39.535
• [4.193 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/09/25 21:32:39.562
  I0909 21:32:39.562518 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename init-container @ 09/09/25 21:32:39.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:32:39.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:32:39.588
  STEP: creating the pod @ 09/09/25 21:32:39.592
  I0909 21:32:39.592714 22 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0909 21:32:39.779610      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:40.779903      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:41.782025      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:42.782688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:43.783710      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:44.784955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:45.785187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:46.786138      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:47.787075      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:48.787535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:49.787507      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:50.788077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:51.788274      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:52.789198      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:53.791225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:54.791296      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:55.790821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:56.791059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:57.792242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:58.792563      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:32:59.793146      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:00.794255      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:01.795284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:02.795005      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:03.796065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:04.796031      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:05.796108      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:06.796304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:07.799548      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:08.797708      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:09.797613      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:10.797857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:11.798065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:12.798733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:13.799664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:14.801200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:15.801186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:16.802298      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:17.804296      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:18.804467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:19.805874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:20.805951      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:21.806038      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:22.809121      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:23.809270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:24.810544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:25.810736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:33:25.962496 22 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-d4bd6f85-01e6-414a-b8af-c2eadbea60bb", GenerateName:"", Namespace:"init-container-8500", SelfLink:"", UID:"3cf18ea2-c963-4293-8d22-c13bc4386393", ResourceVersion:"28788", Generation:1, CreationTimestamp:time.Date(2025, time.September, 9, 21, 32, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"592702894"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"458681e06260dce0f145684c0fbe61a036460201c8accc0fabdc8f41b4ca3e2a", "cni.projectcalico.org/podIP":"10.42.3.231/32", "cni.projectcalico.org/podIPs":"10.42.3.231/32", "k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.231\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 21, 32, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005954198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 21, 32, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0059541e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"multus", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 21, 32, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005954210), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 21, 33, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005954258), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-xb7h5", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003000be0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xb7h5", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xb7h5", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xb7h5", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004570ed0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"oneke-ip-192-168-150-105", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00301a000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004570f50)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004570f70)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004570f78), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004570f7c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000c25180), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 9, 21, 32, 41, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 9, 21, 32, 39, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 9, 21, 32, 39, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 9, 21, 32, 39, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 9, 21, 32, 39, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.150.105", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.150.105"}}, PodIP:"10.42.3.231", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.3.231"}}, StartTime:time.Date(2025, time.September, 9, 21, 32, 39, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000358f50)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000358fc0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://710bb7b6073e112c9572403ed33daf929e0b1ce2c5c7b29df27f4c686a73d242", Started:(*bool)(0xc00457102a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc002782780), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-xb7h5", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000c251a0)}}, User:(*v1.ContainerUser)(0xc0000a57a0), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003000c40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc004571055), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-xb7h5", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000c251b0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003000c20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc004570fff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-xb7h5", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000c25190)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0909 21:33:25.965891 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8500" for this suite. @ 09/09/25 21:33:25.972
• [46.434 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 09/09/25 21:33:26
  I0909 21:33:26.001265 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pods @ 09/09/25 21:33:26.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:33:26.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:33:26.026
  STEP: Create a pod @ 09/09/25 21:33:26.027
  E0909 21:33:26.810889      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:27.811012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/09/25 21:33:28.058
  I0909 21:33:28.080648 22 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0909 21:33:28.085864 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-455" for this suite. @ 09/09/25 21:33:28.096
• [2.105 seconds]
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 09/09/25 21:33:28.112
  I0909 21:33:28.113264 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pods @ 09/09/25 21:33:28.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:33:28.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:33:28.142
  STEP: creating the pod @ 09/09/25 21:33:28.146
  STEP: submitting the pod to kubernetes @ 09/09/25 21:33:28.146
  STEP: verifying QOS class is set on the pod @ 09/09/25 21:33:28.161
  I0909 21:33:28.175348 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3606" for this suite. @ 09/09/25 21:33:28.205
• [0.117 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/09/25 21:33:28.242
  I0909 21:33:28.243817 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 21:33:28.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:33:28.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:33:28.275
  STEP: Setting up server cert @ 09/09/25 21:33:28.301
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 21:33:28.745
  STEP: Deploying the webhook pod @ 09/09/25 21:33:28.756
  STEP: Wait for the deployment to be ready @ 09/09/25 21:33:28.789
  E0909 21:33:28.813398      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:33:28.824198 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 21:33:29.813990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:30.814117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:33:30.835540 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 21, 33, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 33, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 33, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 33, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 21:33:31.814412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:32.815143      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 21:33:32.841
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 21:33:32.883
  E0909 21:33:33.815479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:33:33.897663 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/09/25 21:33:33.901
  STEP: create a pod that should be denied by the webhook @ 09/09/25 21:33:33.931
  STEP: create a pod that causes the webhook to hang @ 09/09/25 21:33:33.959
  E0909 21:33:34.815811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:35.816119      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:36.817171      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:37.819595      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:38.819785      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:39.820483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:40.821253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:41.821103      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:42.822247      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:43.822438      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/09/25 21:33:43.971
  STEP: create a configmap that should be admitted by the webhook @ 09/09/25 21:33:44.429
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/09/25 21:33:44.463
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/09/25 21:33:44.477
  STEP: create a namespace that bypass the webhook @ 09/09/25 21:33:44.489
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/09/25 21:33:44.522
  I0909 21:33:44.673285 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3499" for this suite. @ 09/09/25 21:33:44.682
  STEP: Destroying namespace "webhook-markers-9635" for this suite. @ 09/09/25 21:33:44.687
  STEP: Destroying namespace "exempted-namespace-8835" for this suite. @ 09/09/25 21:33:44.705
• [16.480 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/09/25 21:33:44.735
  I0909 21:33:44.735249 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pv @ 09/09/25 21:33:44.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:33:44.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:33:44.763
  STEP: Creating initial PV and PVC @ 09/09/25 21:33:44.769
  I0909 21:33:44.771280 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6374" @ 09/09/25 21:33:44.801
  STEP: Listing PVCs in namespace "pv-6374" @ 09/09/25 21:33:44.813
  STEP: Patching the PV "pv-6374-gff77" @ 09/09/25 21:33:44.818
  E0909 21:33:44.825060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching the PVC "pvc-g7l85" @ 09/09/25 21:33:44.837
  STEP: Getting PV "pv-6374-gff77" @ 09/09/25 21:33:44.866
  STEP: Getting PVC "pvc-g7l85" @ 09/09/25 21:33:44.872
  STEP: Deleting PVC "pvc-g7l85" @ 09/09/25 21:33:44.878
  STEP: Confirm deletion of PVC "pvc-g7l85" @ 09/09/25 21:33:44.896
  E0909 21:33:45.825153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:46.825583      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-6374-gff77" @ 09/09/25 21:33:46.908
  STEP: Confirm deletion of PV "pv-6374-gff77" @ 09/09/25 21:33:46.923
  E0909 21:33:47.827669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:48.829703      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 09/09/25 21:33:48.944
  I0909 21:33:48.944942 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6374-7mw9d" @ 09/09/25 21:33:48.97
  STEP: Updating the PVC "pvc-lkwcp" @ 09/09/25 21:33:48.997
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-lkwcp=updated" @ 09/09/25 21:33:49.015
  STEP: Deleting PVC "pvc-lkwcp" via DeleteCollection @ 09/09/25 21:33:49.033
  STEP: Confirm deletion of PVC "pvc-lkwcp" @ 09/09/25 21:33:49.059
  E0909 21:33:49.830274      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:50.833409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-6374-7mw9d" via DeleteCollection @ 09/09/25 21:33:51.081
  STEP: Confirm deletion of PV "pv-6374-7mw9d" @ 09/09/25 21:33:51.098
  I0909 21:33:51.120016 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0909 21:33:51.120208 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-lkwcp"
  I0909 21:33:51.130624 22 pv.go:193] Deleting PersistentVolume "pv-6374-7mw9d"
  I0909 21:33:51.139572 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6374" for this suite. @ 09/09/25 21:33:51.147
• [6.429 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/09/25 21:33:51.18
  I0909 21:33:51.180646 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubelet-test @ 09/09/25 21:33:51.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:33:51.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:33:51.206
  E0909 21:33:51.833609      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:52.840983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:53.841953      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:54.842026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:33:55.235613 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4002" for this suite. @ 09/09/25 21:33:55.243
• [4.074 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 09/09/25 21:33:55.254
  I0909 21:33:55.254728 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename runtimeclass @ 09/09/25 21:33:55.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:33:55.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:33:55.288
  STEP: getting /apis @ 09/09/25 21:33:55.293
  STEP: getting /apis/node.k8s.io @ 09/09/25 21:33:55.301
  STEP: getting /apis/node.k8s.io/v1 @ 09/09/25 21:33:55.303
  STEP: creating @ 09/09/25 21:33:55.305
  STEP: watching @ 09/09/25 21:33:55.333
  I0909 21:33:55.334684 22 runtimeclass.go:278] starting watch
  STEP: getting @ 09/09/25 21:33:55.345
  STEP: listing @ 09/09/25 21:33:55.355
  STEP: patching @ 09/09/25 21:33:55.36
  STEP: updating @ 09/09/25 21:33:55.372
  I0909 21:33:55.379542 22 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 09/09/25 21:33:55.38
  STEP: deleting a collection @ 09/09/25 21:33:55.4
  I0909 21:33:55.415889 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2859" for this suite. @ 09/09/25 21:33:55.421
• [0.177 seconds]
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 09/09/25 21:33:55.433
  I0909 21:33:55.433566 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 21:33:55.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:33:55.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:33:55.453
  STEP: Looking for a node to schedule job pod @ 09/09/25 21:33:55.458
  STEP: Creating a job @ 09/09/25 21:33:55.524
  STEP: Ensuring job fails @ 09/09/25 21:33:55.541
  E0909 21:33:55.842299      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:56.843016      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:57.844007      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:58.845228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:33:59.848560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:00.848060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:34:01.565580 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2821" for this suite. @ 09/09/25 21:34:01.655
• [6.231 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 09/09/25 21:34:01.664
  I0909 21:34:01.665024 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 21:34:01.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:34:01.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:34:01.693
  STEP: Creating a job @ 09/09/25 21:34:01.696
  STEP: Ensuring active pods == parallelism @ 09/09/25 21:34:01.702
  E0909 21:34:01.849131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:02.849221      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/09/25 21:34:03.717
  STEP: deleting Job.batch foo in namespace job-5567, will wait for the garbage collector to delete the pods @ 09/09/25 21:34:03.717
  I0909 21:34:03.833074 22 resources.go:139] Deleting Job.batch foo took: 45.839227ms
  E0909 21:34:03.850957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:34:03.934000 22 resources.go:163] Terminating Job.batch foo pods took: 100.918692ms
  E0909 21:34:04.851682      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:05.852524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/09/25 21:34:06.836
  I0909 21:34:06.841585 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5567" for this suite. @ 09/09/25 21:34:06.849
  E0909 21:34:06.854067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
• [5.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 09/09/25 21:34:06.863
  I0909 21:34:06.863134 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 21:34:06.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:34:06.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:34:06.912
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/09/25 21:34:06.92
  E0909 21:34:07.860960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:08.861357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:09.861812      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:10.862773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:34:10.963
  I0909 21:34:10.967709 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-33b32725-88bd-49db-a4e9-bb5e276037a1 container test-container: <nil>
  STEP: delete the pod @ 09/09/25 21:34:10.997
  I0909 21:34:11.026628 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7163" for this suite. @ 09/09/25 21:34:11.034
• [4.184 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 09/09/25 21:34:11.047
  I0909 21:34:11.047606 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:34:11.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:34:11.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:34:11.088
  STEP: creating a Service @ 09/09/25 21:34:11.1
  STEP: watching for the Service to be added @ 09/09/25 21:34:11.145
  I0909 21:34:11.147261 22 service.go:3456] Found Service test-service-4xhh7 in namespace services-5927 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31383}]
  I0909 21:34:11.148034 22 service.go:3463] Service test-service-4xhh7 created
  STEP: Getting /status @ 09/09/25 21:34:11.148
  I0909 21:34:11.160595 22 service.go:3474] Service test-service-4xhh7 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/09/25 21:34:11.161
  STEP: watching for the Service to be patched @ 09/09/25 21:34:11.172
  I0909 21:34:11.178838 22 service.go:3497] observed Service test-service-4xhh7 in namespace services-5927 with annotations: map[] & LoadBalancer: {[]}
  I0909 21:34:11.179312 22 service.go:3500] Found Service test-service-4xhh7 in namespace services-5927 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000a7b0e0 []}]}
  I0909 21:34:11.179920 22 service.go:3507] Service test-service-4xhh7 has service status patched
  STEP: updating the ServiceStatus @ 09/09/25 21:34:11.18
  I0909 21:34:11.204309 22 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/09/25 21:34:11.204
  I0909 21:34:11.208871 22 service.go:3538] Observed Service test-service-4xhh7 in namespace services-5927 with annotations: map[] & Conditions: []
  I0909 21:34:11.209403 22 service.go:3549] Observed Service test-service-4xhh7 in namespace services-5927 with annotations: map[patchedstatus:true] & Conditions: []
  I0909 21:34:11.210454 22 service.go:3545] Found Service test-service-4xhh7 in namespace services-5927 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0909 21:34:11.210996 22 service.go:3556] Service test-service-4xhh7 has service status updated
  STEP: patching the service @ 09/09/25 21:34:11.211
  STEP: watching for the Service to be patched @ 09/09/25 21:34:11.23
  I0909 21:34:11.234190 22 service.go:3579] observed Service test-service-4xhh7 in namespace services-5927 with labels: map[test-service-static:true]
  I0909 21:34:11.234248 22 service.go:3579] observed Service test-service-4xhh7 in namespace services-5927 with labels: map[test-service-static:true]
  I0909 21:34:11.235448 22 service.go:3579] observed Service test-service-4xhh7 in namespace services-5927 with labels: map[test-service-static:true]
  I0909 21:34:11.235988 22 service.go:3582] Found Service test-service-4xhh7 in namespace services-5927 with labels: map[test-service:patched test-service-static:true]
  I0909 21:34:11.237635 22 service.go:3589] Service test-service-4xhh7 patched
  STEP: deleting the service @ 09/09/25 21:34:11.238
  STEP: watching for the Service to be deleted @ 09/09/25 21:34:11.266
  I0909 21:34:11.267923 22 service.go:3613] Observed event: ADDED
  I0909 21:34:11.267989 22 service.go:3613] Observed event: MODIFIED
  I0909 21:34:11.267999 22 service.go:3613] Observed event: MODIFIED
  I0909 21:34:11.268063 22 service.go:3613] Observed event: MODIFIED
  I0909 21:34:11.268079 22 service.go:3609] Found Service test-service-4xhh7 in namespace services-5927 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0909 21:34:11.268086 22 service.go:3618] Service test-service-4xhh7 deleted
  I0909 21:34:11.268384 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5927" for this suite. @ 09/09/25 21:34:11.271
• [0.233 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/09/25 21:34:11.28
  I0909 21:34:11.280967 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 21:34:11.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:34:11.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:34:11.3
  STEP: Creating configMap with name configmap-test-volume-06ee2e8a-3002-49d0-88e1-c12d9a6e9d86 @ 09/09/25 21:34:11.304
  STEP: Creating a pod to test consume configMaps @ 09/09/25 21:34:11.308
  E0909 21:34:11.864262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:12.871564      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:13.870163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:14.874197      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:34:15.337
  I0909 21:34:15.342544 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-75ccfc85-fe76-4829-aa65-5032ed6153dc container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 21:34:15.353
  I0909 21:34:15.377836 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5251" for this suite. @ 09/09/25 21:34:15.383
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 09/09/25 21:34:15.395
  I0909 21:34:15.395993 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 21:34:15.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:34:15.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:34:15.44
  STEP: creating a replication controller @ 09/09/25 21:34:15.447
  I0909 21:34:15.448566 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 create -f -'
  I0909 21:34:15.690405 22 builder.go:146] stderr: ""
  I0909 21:34:15.690728 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/09/25 21:34:15.691
  I0909 21:34:15.691826 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0909 21:34:15.822333 22 builder.go:146] stderr: ""
  I0909 21:34:15.822569 22 builder.go:147] stdout: "update-demo-nautilus-trd2d update-demo-nautilus-zpcth "
  I0909 21:34:15.822611 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 get pods update-demo-nautilus-trd2d -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0909 21:34:15.874202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:34:15.897356 22 builder.go:146] stderr: ""
  I0909 21:34:15.897405 22 builder.go:147] stdout: ""
  I0909 21:34:15.897415 22 kubectl.go:2505] update-demo-nautilus-trd2d is created but not running
  E0909 21:34:16.874516      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:17.877629      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:18.878340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:19.878561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:20.878670      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:34:20.897890 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0909 21:34:21.006059 22 builder.go:146] stderr: ""
  I0909 21:34:21.006123 22 builder.go:147] stdout: "update-demo-nautilus-trd2d update-demo-nautilus-zpcth "
  I0909 21:34:21.006202 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 get pods update-demo-nautilus-trd2d -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0909 21:34:21.097492 22 builder.go:146] stderr: ""
  I0909 21:34:21.097537 22 builder.go:147] stdout: ""
  I0909 21:34:21.097548 22 kubectl.go:2505] update-demo-nautilus-trd2d is created but not running
  E0909 21:34:21.880100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:22.880306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:23.880527      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:24.880964      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:25.881914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:34:26.098371 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0909 21:34:26.236554 22 builder.go:146] stderr: ""
  I0909 21:34:26.236639 22 builder.go:147] stdout: "update-demo-nautilus-trd2d update-demo-nautilus-zpcth "
  I0909 21:34:26.237209 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 get pods update-demo-nautilus-trd2d -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0909 21:34:26.327928 22 builder.go:146] stderr: ""
  I0909 21:34:26.327962 22 builder.go:147] stdout: "true"
  I0909 21:34:26.328002 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 get pods update-demo-nautilus-trd2d -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0909 21:34:26.407933 22 builder.go:146] stderr: ""
  I0909 21:34:26.407973 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0909 21:34:26.407983 22 kubectl.go:2396] validating pod update-demo-nautilus-trd2d
  I0909 21:34:26.417112 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0909 21:34:26.417551 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0909 21:34:26.417726 22 kubectl.go:2523] update-demo-nautilus-trd2d is verified up and running
  I0909 21:34:26.418006 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 get pods update-demo-nautilus-zpcth -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0909 21:34:26.488345 22 builder.go:146] stderr: ""
  I0909 21:34:26.488402 22 builder.go:147] stdout: "true"
  I0909 21:34:26.488713 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 get pods update-demo-nautilus-zpcth -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0909 21:34:26.558279 22 builder.go:146] stderr: ""
  I0909 21:34:26.558386 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0909 21:34:26.558402 22 kubectl.go:2396] validating pod update-demo-nautilus-zpcth
  I0909 21:34:26.565646 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0909 21:34:26.565692 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0909 21:34:26.565703 22 kubectl.go:2523] update-demo-nautilus-zpcth is verified up and running
  STEP: using delete to clean up resources @ 09/09/25 21:34:26.565
  I0909 21:34:26.565763 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 delete --grace-period=0 --force -f -'
  I0909 21:34:26.671606 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0909 21:34:26.671679 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0909 21:34:26.671761 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 get rc,svc -l name=update-demo --no-headers'
  I0909 21:34:26.792131 22 builder.go:146] stderr: "No resources found in kubectl-3454 namespace.\n"
  I0909 21:34:26.792179 22 builder.go:147] stdout: ""
  I0909 21:34:26.792238 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-3454 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0909 21:34:26.882357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:34:26.895668 22 builder.go:146] stderr: ""
  I0909 21:34:26.895716 22 builder.go:147] stdout: ""
  I0909 21:34:26.895827 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3454" for this suite. @ 09/09/25 21:34:26.899
• [11.530 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/09/25 21:34:26.926
  I0909 21:34:26.926493 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 21:34:26.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:34:27.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:34:27.048
  STEP: Creating secret with name secret-test-4b30e85d-7c60-45e4-a859-db1ab05ae68b @ 09/09/25 21:34:27.058
  STEP: Creating a pod to test consume secrets @ 09/09/25 21:34:27.082
  E0909 21:34:27.886694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:28.887189      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:29.887450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:30.887798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:34:31.155
  I0909 21:34:31.159311 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-secrets-100b72cc-4a34-433c-ad59-883850d375b7 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 21:34:31.189
  I0909 21:34:31.221912 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7861" for this suite. @ 09/09/25 21:34:31.23
• [4.312 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/09/25 21:34:31.24
  I0909 21:34:31.240744 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 21:34:31.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:34:31.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:34:31.274
  STEP: Creating configMap with name projected-configmap-test-volume-map-152884f2-894a-408d-8c1e-228d716cde20 @ 09/09/25 21:34:31.279
  STEP: Creating a pod to test consume configMaps @ 09/09/25 21:34:31.285
  E0909 21:34:31.888988      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:32.892099      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:33.892405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:34.893282      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:34:35.336
  I0909 21:34:35.341034 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-configmaps-e651ce2b-1da1-48da-9fd3-7e157f05b2a4 container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 21:34:35.355
  I0909 21:34:35.386469 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7912" for this suite. @ 09/09/25 21:34:35.391
• [4.167 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 09/09/25 21:34:35.407
  I0909 21:34:35.407031 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 21:34:35.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:34:35.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:34:35.429
  STEP: Creating a pod to test downward api env vars @ 09/09/25 21:34:35.434
  E0909 21:34:35.894297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:36.894340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:37.895218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:38.895494      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:34:39.467
  I0909 21:34:39.474024 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downward-api-6e1fea8f-938d-45ef-879e-97b419f8edd8 container dapi-container: <nil>
  STEP: delete the pod @ 09/09/25 21:34:39.492
  I0909 21:34:39.528532 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4642" for this suite. @ 09/09/25 21:34:39.538
• [4.146 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/09/25 21:34:39.554
  I0909 21:34:39.554272 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 21:34:39.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:34:39.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:34:39.593
  STEP: Creating secret with name secret-test-419add7e-4402-47f5-8298-bb489cd56f88 @ 09/09/25 21:34:39.596
  STEP: Creating a pod to test consume secrets @ 09/09/25 21:34:39.601
  E0909 21:34:39.897402      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:40.898282      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:41.899478      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:42.900462      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:34:43.635
  I0909 21:34:43.640600 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-secrets-d171728b-44e2-436c-b114-44668f783a0c container secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 21:34:43.653
  I0909 21:34:43.686665 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5816" for this suite. @ 09/09/25 21:34:43.693
• [4.152 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/09/25 21:34:43.708
  I0909 21:34:43.709052 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 21:34:43.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:34:43.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:34:43.74
  STEP: Setting up server cert @ 09/09/25 21:34:43.772
  E0909 21:34:43.900872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 21:34:44.691
  STEP: Deploying the webhook pod @ 09/09/25 21:34:44.7
  STEP: Wait for the deployment to be ready @ 09/09/25 21:34:44.72
  I0909 21:34:44.730538 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 21:34:44.913361      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:45.902445      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:34:46.746465 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 21, 34, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 34, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 34, 44, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 34, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 21:34:46.907560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:47.909004      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 21:34:48.758
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 21:34:48.798
  E0909 21:34:48.910085      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:34:49.799566 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/09/25 21:34:49.806
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/09/25 21:34:49.806
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/09/25 21:34:49.85
  E0909 21:34:49.911504      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/09/25 21:34:50.869
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/09/25 21:34:50.87
  E0909 21:34:50.911982      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:51.911603      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/09/25 21:34:51.926
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/09/25 21:34:51.927
  E0909 21:34:52.913288      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:53.914013      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:54.913992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:55.914691      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:56.915517      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/09/25 21:34:56.992
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/09/25 21:34:56.993
  E0909 21:34:57.915925      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:58.917037      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:34:59.917033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:00.917395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:01.917484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:35:02.132459 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2119" for this suite. @ 09/09/25 21:35:02.135
  STEP: Destroying namespace "webhook-markers-5122" for this suite. @ 09/09/25 21:35:02.151
• [18.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/09/25 21:35:02.162
  I0909 21:35:02.162421 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 21:35:02.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:35:02.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:35:02.188
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 21:35:02.193
  E0909 21:35:02.920021      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:03.918496      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:04.920434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:05.920673      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:35:06.218
  I0909 21:35:06.222913 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-5368893f-9e7f-411e-afe4-9408ecac3e8e container client-container: <nil>
  STEP: delete the pod @ 09/09/25 21:35:06.235
  I0909 21:35:06.276348 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7514" for this suite. @ 09/09/25 21:35:06.285
• [4.136 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/09/25 21:35:06.302
  I0909 21:35:06.302918 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 21:35:06.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:35:06.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:35:06.348
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 21:35:06.352
  E0909 21:35:06.921917      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:07.921871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:08.925415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:09.924325      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:35:10.396
  I0909 21:35:10.402447 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-90527f3a-5d28-4d90-a09f-95ca4d4482d6 container client-container: <nil>
  STEP: delete the pod @ 09/09/25 21:35:10.414
  I0909 21:35:10.448232 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8247" for this suite. @ 09/09/25 21:35:10.454
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/09/25 21:35:10.472
  I0909 21:35:10.472241 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 21:35:10.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:35:10.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:35:10.568
  STEP: Creating the pod @ 09/09/25 21:35:10.573
  E0909 21:35:10.924117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:11.924312      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:12.925139      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:35:13.177245 22 pod_client.go:173] Successfully updated pod "annotationupdatee187c919-19fe-4303-96c3-a26bb8c69a57"
  E0909 21:35:13.926600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:14.928314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:15.928068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:16.929380      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:35:17.227148 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9870" for this suite. @ 09/09/25 21:35:17.235
• [6.772 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 09/09/25 21:35:17.264
  I0909 21:35:17.265120 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 21:35:17.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:35:17.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:35:17.308
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/09/25 21:35:17.312
  E0909 21:35:17.929351      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:18.929813      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:19.930854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:20.931083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:35:21.356
  I0909 21:35:21.360312 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-b05ee07c-4d15-4dae-b0af-1e87e68bd261 container test-container: <nil>
  STEP: delete the pod @ 09/09/25 21:35:21.373
  I0909 21:35:21.408133 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8647" for this suite. @ 09/09/25 21:35:21.412
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/09/25 21:35:21.42
  I0909 21:35:21.420667 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 21:35:21.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:35:21.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:35:21.452
  STEP: creating a secret @ 09/09/25 21:35:21.456
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/09/25 21:35:21.466
  STEP: patching the secret @ 09/09/25 21:35:21.47
  STEP: deleting the secret using a LabelSelector @ 09/09/25 21:35:21.483
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/09/25 21:35:21.492
  I0909 21:35:21.495046 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8973" for this suite. @ 09/09/25 21:35:21.513
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 09/09/25 21:35:21.523
  I0909 21:35:21.523960 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/09/25 21:35:21.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:35:21.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:35:21.552
  I0909 21:35:21.554384 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 21:35:21.931889      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:22.953583      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/09/25 21:35:23.547
  I0909 21:35:23.547826 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-3011 --namespace=crd-publish-openapi-3011 create -f -'
  I0909 21:35:23.667095 22 builder.go:146] stderr: ""
  I0909 21:35:23.667139 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4602-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0909 21:35:23.667176 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-3011 --namespace=crd-publish-openapi-3011 delete e2e-test-crd-publish-openapi-4602-crds test-cr'
  I0909 21:35:23.747945 22 builder.go:146] stderr: ""
  I0909 21:35:23.747994 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4602-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0909 21:35:23.748032 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-3011 --namespace=crd-publish-openapi-3011 apply -f -'
  I0909 21:35:23.838647 22 builder.go:146] stderr: ""
  I0909 21:35:23.838690 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4602-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0909 21:35:23.838732 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-3011 --namespace=crd-publish-openapi-3011 delete e2e-test-crd-publish-openapi-4602-crds test-cr'
  I0909 21:35:23.922246 22 builder.go:146] stderr: ""
  I0909 21:35:23.922292 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4602-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/09/25 21:35:23.922
  I0909 21:35:23.922383 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-3011 explain e2e-test-crd-publish-openapi-4602-crds'
  E0909 21:35:23.933868      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:35:23.992972 22 builder.go:146] stderr: ""
  I0909 21:35:23.993025 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4602-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0909 21:35:24.935089      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:35:25.705811 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3011" for this suite. @ 09/09/25 21:35:25.713
• [4.205 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/09/25 21:35:25.733
  I0909 21:35:25.734139 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 21:35:25.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:35:25.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:35:25.761
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 21:35:25.766
  E0909 21:35:25.935854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:26.936501      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:27.943637      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:28.942882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:35:29.805
  I0909 21:35:29.813117 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-6f4e7b69-3d6e-43b9-8037-a967ad926dd1 container client-container: <nil>
  STEP: delete the pod @ 09/09/25 21:35:29.831
  I0909 21:35:29.877901 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6912" for this suite. @ 09/09/25 21:35:29.889
• [4.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 09/09/25 21:35:29.906
  I0909 21:35:29.906747 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sched-preemption @ 09/09/25 21:35:29.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:35:29.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:35:29.946
  E0909 21:35:29.950738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:35:29.973674 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0909 21:35:30.943628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:31.943845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:32.944401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:33.945606      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:34.958405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:35.947066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:36.948435      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:37.947285      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:38.948387      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:39.948933      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:40.949152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:41.949284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:42.951721      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:43.953020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:44.953117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:45.953444      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:46.954233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:47.954485      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:48.955623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:49.955833      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:50.956180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:51.956258      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:52.957312      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:53.957366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:54.957573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:55.958839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:56.959377      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:57.959620      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:58.960271      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:35:59.960702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:00.961039      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:01.961259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:02.965246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:03.964468      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:04.965732      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:05.965889      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:06.966212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:07.967011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:08.968080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:09.968411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:10.968671      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:11.969124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:12.968960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:13.969103      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:14.969749      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:15.969923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:16.970895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:17.971010      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:18.971490      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:19.971720      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:20.971932      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:21.972093      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:22.972638      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:23.973025      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:24.973073      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:25.973315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:26.974519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:27.974926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:28.975759      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:29.976831      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:36:29.979071 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/09/25 21:36:29.982
  STEP: Adding a custom resource @ 09/09/25 21:36:29.983
  I0909 21:36:30.023505 22 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0909 21:36:30.040617 22 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/09/25 21:36:30.043
  I0909 21:36:30.125124 22 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0909 21:36:30.141436 22 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/09/25 21:36:30.141
  E0909 21:36:30.975982      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:31.976262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/09/25 21:36:32.178
  E0909 21:36:32.976437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:33.977500      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:34.977675      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:35.978856      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/09/25 21:36:36.26
  STEP: Removing a custom resource @ 09/09/25 21:36:36.316
  I0909 21:36:36.362267 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8284" for this suite. @ 09/09/25 21:36:36.367
• [66.469 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/09/25 21:36:36.375
  I0909 21:36:36.375883 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 21:36:36.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:36:36.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:36:36.422
  STEP: Creating the pod @ 09/09/25 21:36:36.426
  E0909 21:36:36.979654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:37.979875      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:38.980522      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:36:38.994210 22 pod_client.go:173] Successfully updated pod "labelsupdateaef8a2a6-acd7-4830-9f6d-704d7bed8d0a"
  E0909 21:36:39.980778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:40.981158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:41.982137      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:42.983496      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:36:43.031201 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7679" for this suite. @ 09/09/25 21:36:43.046
• [6.682 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 09/09/25 21:36:43.058
  I0909 21:36:43.058434 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename security-context-test @ 09/09/25 21:36:43.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:36:43.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:36:43.096
  E0909 21:36:43.983555      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:44.984189      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:45.984750      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:46.985740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:36:47.139193 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4640" for this suite. @ 09/09/25 21:36:47.15
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/09/25 21:36:47.166
  I0909 21:36:47.166949 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename limitrange @ 09/09/25 21:36:47.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:36:47.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:36:47.201
  STEP: Creating a LimitRange @ 09/09/25 21:36:47.204
  STEP: Setting up watch @ 09/09/25 21:36:47.204
  STEP: Submitting a LimitRange @ 09/09/25 21:36:47.311
  STEP: Verifying LimitRange creation was observed @ 09/09/25 21:36:47.461
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/09/25 21:36:47.476
  I0909 21:36:47.535363 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0909 21:36:47.535418 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/09/25 21:36:47.535
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/09/25 21:36:47.557
  I0909 21:36:47.573610 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0909 21:36:47.573644 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/09/25 21:36:47.573
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/09/25 21:36:47.64
  I0909 21:36:47.655774 22 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0909 21:36:47.655823 22 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/09/25 21:36:47.655
  STEP: Failing to create a Pod with more than max resources @ 09/09/25 21:36:47.657
  STEP: Updating a LimitRange @ 09/09/25 21:36:47.661
  STEP: Verifying LimitRange updating is effective @ 09/09/25 21:36:47.667
  E0909 21:36:47.986630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:48.987563      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/09/25 21:36:49.673
  STEP: Failing to create a Pod with more than max resources @ 09/09/25 21:36:49.696
  STEP: Deleting a LimitRange @ 09/09/25 21:36:49.699
  STEP: Verifying the LimitRange was deleted @ 09/09/25 21:36:49.717
  E0909 21:36:49.988275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:50.989305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:51.989272      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:52.990127      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:53.990322      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:36:54.725259 22 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/09/25 21:36:54.726
  I0909 21:36:54.748077 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4028" for this suite. @ 09/09/25 21:36:54.763
• [7.611 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 09/09/25 21:36:54.784
  I0909 21:36:54.784074 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 21:36:54.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:36:54.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:36:54.819
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/09/25 21:36:54.824
  I0909 21:36:54.830619 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-1083 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0909 21:36:54.946165 22 builder.go:146] stderr: ""
  I0909 21:36:54.946259 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/09/25 21:36:54.946
  I0909 21:36:54.947672 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-1083 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  E0909 21:36:54.990542      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:36:55.076118 22 builder.go:146] stderr: ""
  I0909 21:36:55.076186 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/09/25 21:36:55.076
  I0909 21:36:55.079128 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-1083 delete pods e2e-test-httpd-pod'
  E0909 21:36:55.991617      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:36:56.613531 22 builder.go:146] stderr: ""
  I0909 21:36:56.613573 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0909 21:36:56.613696 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1083" for this suite. @ 09/09/25 21:36:56.617
• [1.841 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/09/25 21:36:56.626
  I0909 21:36:56.626087 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replicaset @ 09/09/25 21:36:56.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:36:56.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:36:56.651
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/09/25 21:36:56.655
  E0909 21:36:56.992265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:36:57.992381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/09/25 21:36:58.688
  STEP: Then the orphan pod is adopted @ 09/09/25 21:36:58.705
  E0909 21:36:58.993656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/09/25 21:36:59.716
  I0909 21:36:59.720138 22 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/09/25 21:36:59.739
  E0909 21:36:59.994602      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:37:00.760698 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3974" for this suite. @ 09/09/25 21:37:00.764
• [4.144 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 09/09/25 21:37:00.77
  I0909 21:37:00.770120 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 21:37:00.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:37:00.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:37:00.791
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/09/25 21:37:00.794
  E0909 21:37:00.995755      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:01.997609      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:02.998473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:03.999091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:37:04.825
  I0909 21:37:04.830312 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-15a4ad11-1fa1-4804-bab9-9262f5ed7af4 container test-container: <nil>
  STEP: delete the pod @ 09/09/25 21:37:04.853
  I0909 21:37:04.886770 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3448" for this suite. @ 09/09/25 21:37:04.894
• [4.135 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/09/25 21:37:04.907
  I0909 21:37:04.908445 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename security-context-test @ 09/09/25 21:37:04.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:37:04.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:37:04.944
  E0909 21:37:04.999141      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:05.999249      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:07.002584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:08.002878      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:37:08.989019 22 security_context.go:619] Got logs for pod "busybox-privileged-false-9c7c5ba1-ae44-4d8c-9344-68c477b2a463": "ip: RTNETLINK answers: Operation not permitted\n"
  I0909 21:37:08.989239 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8936" for this suite. @ 09/09/25 21:37:08.997
  E0909 21:37:09.003618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/09/25 21:37:09.021
  I0909 21:37:09.021559 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 21:37:09.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:37:09.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:37:09.058
  I0909 21:37:09.124296 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9683" for this suite. @ 09/09/25 21:37:09.13
• [0.116 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/09/25 21:37:09.137
  I0909 21:37:09.137289 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pv @ 09/09/25 21:37:09.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:37:09.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:37:09.167
  STEP: Creating initial PV and PVC @ 09/09/25 21:37:09.17
  I0909 21:37:09.170992 22 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7604" @ 09/09/25 21:37:09.195
  STEP: Listing PVCs in namespace "pv-7604" @ 09/09/25 21:37:09.209
  STEP: Reading "pvc-8fgrm" Status @ 09/09/25 21:37:09.228
  STEP: Reading "pv-7604-5kqhs" Status @ 09/09/25 21:37:09.243
  STEP: Patching "pvc-8fgrm" Status @ 09/09/25 21:37:09.251
  STEP: Patching "pv-7604-5kqhs" Status @ 09/09/25 21:37:09.267
  STEP: Updating "pvc-8fgrm" Status @ 09/09/25 21:37:09.275
  STEP: Updating "pv-7604-5kqhs" Status @ 09/09/25 21:37:09.285
  I0909 21:37:09.295876 22 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0909 21:37:09.296002 22 pv.go:205] Deleting PersistentVolumeClaim "pvc-8fgrm"
  I0909 21:37:09.302023 22 pv.go:193] Deleting PersistentVolume "pv-7604-5kqhs"
  I0909 21:37:09.314376 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7604" for this suite. @ 09/09/25 21:37:09.334
• [0.209 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/09/25 21:37:09.347
  I0909 21:37:09.347384 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 21:37:09.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:37:09.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:37:09.375
  STEP: Creating configMap with name configmap-test-volume-map-6acfd3b0-3a64-45a8-8f60-146c18e43999 @ 09/09/25 21:37:09.379
  STEP: Creating a pod to test consume configMaps @ 09/09/25 21:37:09.385
  E0909 21:37:10.003376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:11.003690      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:12.004694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:13.005029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:37:13.419
  I0909 21:37:13.426445 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-ff15210c-4403-4363-b816-61ef48f4ddba container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 21:37:13.437
  I0909 21:37:13.482080 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4916" for this suite. @ 09/09/25 21:37:13.497
• [4.166 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 09/09/25 21:37:13.514
  I0909 21:37:13.514041 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sched-preemption @ 09/09/25 21:37:13.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:37:13.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:37:13.538
  I0909 21:37:13.559156 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0909 21:37:14.005092      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:15.012979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:16.011773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:17.013317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:18.013033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:19.013777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:20.014040      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:21.015131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:22.015323      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:23.015454      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:24.015639      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:25.015959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:26.016366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:27.021122      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:28.021426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:29.022066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:30.022349      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:31.023533      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:32.023748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:33.026359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:34.026312      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:35.027057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:36.027079      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:37.027568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:38.027444      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:39.027926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:40.027892      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:41.028064      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:42.028358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:43.029225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:44.030219      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:45.030416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:46.030653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:47.030734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:48.030853      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:49.031084      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:50.032074      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:51.032272      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:52.032906      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:53.033155      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:54.034250      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:55.035073      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:56.035815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:57.036042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:58.037262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:37:59.037400      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:00.038296      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:01.039806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:02.040308      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:03.041029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:04.041926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:05.042369      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:06.042508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:07.042768      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:08.043834      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:09.044660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:10.045371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:11.046220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:12.046188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:13.046336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:38:13.565095 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/09/25 21:38:13.568
  STEP: Adding a custom resource @ 09/09/25 21:38:13.569
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/09/25 21:38:13.605
  I0909 21:38:13.623855 22 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/09/25 21:38:13.624
  E0909 21:38:14.047614      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:15.047771      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/09/25 21:38:15.644
  I0909 21:38:15.677483 22 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/09/25 21:38:15.679
  E0909 21:38:16.048447      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:17.049488      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 09/09/25 21:38:17.701
  I0909 21:38:17.707964 22 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0909 21:38:18.050376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:38:18.233205 22 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/09/25 21:38:18.263
  STEP: Removing a custom resource @ 09/09/25 21:38:18.287
  I0909 21:38:18.311356 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7115" for this suite. @ 09/09/25 21:38:18.318
• [64.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 09/09/25 21:38:18.329
  I0909 21:38:18.329672 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:38:18.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:38:18.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:38:18.355
  STEP: creating service in namespace services-2254 @ 09/09/25 21:38:18.359
  STEP: creating service affinity-nodeport in namespace services-2254 @ 09/09/25 21:38:18.359
  I0909 21:38:18.440424 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0909 21:38:19.051387      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:20.051545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:38:20.445223 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:2, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 21, 38, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 38, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 38, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 38, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-85dffb5fc7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 21:38:21.051798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:22.052166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:38:22.470109 22 resource.go:361] Creating new exec pod
  E0909 21:38:23.054088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:24.053717      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:38:24.552589 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2254 exec execpod-affinityc9ln4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0909 21:38:24.880753 22 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.43.102.3) 80 port [tcp/http] succeeded!\n"
  I0909 21:38:24.880869 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:38:24.880958 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2254 exec execpod-affinityc9ln4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.102.3 80'
  E0909 21:38:25.054429      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:38:25.144267 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.102.3 80\n+ echo hostName\nConnection to 10.43.102.3 80 port [tcp/http] succeeded!\n"
  I0909 21:38:25.144369 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:38:25.145393 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2254 exec execpod-affinityc9ln4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 31801'
  I0909 21:38:25.339121 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.103 31801\nConnection to 192.168.150.103 31801 port [tcp/*] succeeded!\n"
  I0909 21:38:25.339210 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:38:25.339326 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2254 exec execpod-affinityc9ln4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.105 31801'
  I0909 21:38:25.614437 22 builder.go:146] stderr: "+ + nc -v -t -w 2 192.168.150.105 31801\necho hostName\nConnection to 192.168.150.105 31801 port [tcp/*] succeeded!\n"
  I0909 21:38:25.614505 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:38:25.614580 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2254 exec execpod-affinityc9ln4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/ ; done'
  E0909 21:38:26.061027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:38:26.213495 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:31801/\n"
  I0909 21:38:26.213585 22 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6\naffinity-nodeport-85dffb5fc7-482t6"
  I0909 21:38:26.213599 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213608 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213614 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213620 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213628 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213633 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213639 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213645 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213653 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213660 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213666 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213672 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213677 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213683 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213689 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213696 22 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-482t6
  I0909 21:38:26.213748 22 service.go:4352] Cleaning up the exec pod
  I0909 21:38:26.375260 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2254" for this suite. @ 09/09/25 21:38:26.383
• [8.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 09/09/25 21:38:26.392
  I0909 21:38:26.392367 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:38:26.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:38:26.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:38:26.424
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-32 @ 09/09/25 21:38:26.427
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/09/25 21:38:26.447
  STEP: creating service externalsvc in namespace services-32 @ 09/09/25 21:38:26.448
  I0909 21:38:26.500694 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0909 21:38:27.061695      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:28.062035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 09/09/25 21:38:28.516
  I0909 21:38:28.550064 22 resource.go:361] Creating new exec pod
  E0909 21:38:29.063665      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:30.064048      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:38:30.572336 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-32 exec execpodg2bl4 -- /bin/sh -x -c nslookup clusterip-service.services-32.svc.cluster.local'
  I0909 21:38:30.913659 22 builder.go:146] stderr: "+ nslookup clusterip-service.services-32.svc.cluster.local\n"
  I0909 21:38:30.913707 22 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-32.svc.cluster.local\tcanonical name = externalsvc.services-32.svc.cluster.local.\nName:\texternalsvc.services-32.svc.cluster.local\nAddress: 10.43.163.88\n\n"
  I0909 21:38:30.993472 22 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0909 21:38:31.024976 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-32" for this suite. @ 09/09/25 21:38:31.037
• [4.651 seconds]
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 09/09/25 21:38:31.043
  I0909 21:38:31.043530 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:38:31.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:38:31.062
  E0909 21:38:31.064034      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:38:31.064
  STEP: creating service endpoint-test2 in namespace services-9609 @ 09/09/25 21:38:31.066
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9609 to expose endpoints map[] @ 09/09/25 21:38:31.085
  I0909 21:38:31.090310      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:38:31.090436 22 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0909 21:38:32.065205      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:38:32.100757      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:38:32.109724 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9609 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9609 @ 09/09/25 21:38:32.111
  E0909 21:38:33.066014      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:34.067628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9609 to expose endpoints map[pod1:[80]] @ 09/09/25 21:38:34.142
  I0909 21:38:34.155960      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:38:34.182607 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9609 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/09/25 21:38:34.183
  I0909 21:38:34.183538 22 resource.go:361] Creating new exec pod
  E0909 21:38:35.068630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:36.068361      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:38:36.234887 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9609 exec execpodwdc82 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0909 21:38:36.504193 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.46.211) 80 port [tcp/http] succeeded!\n"
  I0909 21:38:36.504294 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:38:36.504607 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9609 exec execpodwdc82 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.46.211 80'
  I0909 21:38:36.830270 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.46.211 80\nConnection to 10.43.46.211 80 port [tcp/http] succeeded!\n"
  I0909 21:38:36.830334 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9609 @ 09/09/25 21:38:36.83
  E0909 21:38:37.068513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:38.069007      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9609 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/09/25 21:38:38.858
  I0909 21:38:38.883791      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:38:38.896993 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9609 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/09/25 21:38:38.897
  I0909 21:38:38.901066 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9609 exec execpodwdc82 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0909 21:38:39.070604      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:38:39.133767 22 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.43.46.211) 80 port [tcp/http] succeeded!\n"
  I0909 21:38:39.133819 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:38:39.134504 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9609 exec execpodwdc82 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.46.211 80'
  I0909 21:38:39.323941 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.46.211 80\n+ echo hostName\nConnection to 10.43.46.211 80 port [tcp/http] succeeded!\n"
  I0909 21:38:39.324032 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9609 @ 09/09/25 21:38:39.324
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9609 to expose endpoints map[pod2:[80]] @ 09/09/25 21:38:39.359
  I0909 21:38:39.375706      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:38:39.385405 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9609 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/09/25 21:38:39.385
  I0909 21:38:39.388687 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9609 exec execpodwdc82 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0909 21:38:39.640540 22 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.46.211) 80 port [tcp/http] succeeded!\n"
  I0909 21:38:39.640602 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:38:39.640708 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9609 exec execpodwdc82 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.46.211 80'
  I0909 21:38:39.904522 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.46.211 80\nConnection to 10.43.46.211 80 port [tcp/http] succeeded!\n"
  I0909 21:38:39.904613 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9609 @ 09/09/25 21:38:39.905
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9609 to expose endpoints map[] @ 09/09/25 21:38:39.952
  I0909 21:38:39.955904      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:38:39.965128 22 service.go:4645] successfully validated that service endpoint-test2 in namespace services-9609 exposes endpoints map[]
  I0909 21:38:40.017254 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9609" for this suite. @ 09/09/25 21:38:40.03
• [9.002 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/09/25 21:38:40.045
  I0909 21:38:40.045626 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename watch @ 09/09/25 21:38:40.046
  E0909 21:38:40.070144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:38:40.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:38:40.077
  STEP: creating a watch on configmaps with label A @ 09/09/25 21:38:40.079
  STEP: creating a watch on configmaps with label B @ 09/09/25 21:38:40.082
  STEP: creating a watch on configmaps with label A or B @ 09/09/25 21:38:40.083
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/09/25 21:38:40.085
  I0909 21:38:40.094135 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1909  c37a5640-0144-4acb-8217-cf4eb795fcdb 31838 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:38:40.095286 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1909  c37a5640-0144-4acb-8217-cf4eb795fcdb 31838 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/09/25 21:38:40.096
  I0909 21:38:40.107597 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1909  c37a5640-0144-4acb-8217-cf4eb795fcdb 31839 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:38:40.108878 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1909  c37a5640-0144-4acb-8217-cf4eb795fcdb 31839 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/09/25 21:38:40.109
  I0909 21:38:40.121526 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1909  c37a5640-0144-4acb-8217-cf4eb795fcdb 31840 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:38:40.122124 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1909  c37a5640-0144-4acb-8217-cf4eb795fcdb 31840 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/09/25 21:38:40.122
  I0909 21:38:40.136932 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1909  c37a5640-0144-4acb-8217-cf4eb795fcdb 31841 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:38:40.137936 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1909  c37a5640-0144-4acb-8217-cf4eb795fcdb 31841 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/09/25 21:38:40.138
  I0909 21:38:40.150650 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1909  17247807-d904-4903-a234-510db58ba67c 31842 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:38:40.150899 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1909  17247807-d904-4903-a234-510db58ba67c 31842 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0909 21:38:41.070969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:42.071200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:43.071827      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:44.072460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:45.073539      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:46.073173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:47.073989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:48.074167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:49.074231      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:50.075228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/09/25 21:38:50.151
  I0909 21:38:50.166128 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1909  17247807-d904-4903-a234-510db58ba67c 31907 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 21:38:50.166952 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1909  17247807-d904-4903-a234-510db58ba67c 31907 0 2025-09-09 21:38:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-09 21:38:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0909 21:38:51.081955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:52.082611      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:53.083670      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:54.084581      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:55.085150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:56.085453      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:57.085671      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:58.085938      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:38:59.086267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:00.086472      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:39:00.168265 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1909" for this suite. @ 09/09/25 21:39:00.179
• [20.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 09/09/25 21:39:00.194
  I0909 21:39:00.194554 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 21:39:00.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:39:00.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:39:00.24
  STEP: Counting existing ResourceQuota @ 09/09/25 21:39:00.246
  E0909 21:39:01.092987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:02.093091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:03.093557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:04.093737      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:05.094844      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/09/25 21:39:05.251
  STEP: Ensuring resource quota status is calculated @ 09/09/25 21:39:05.26
  E0909 21:39:06.095536      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:07.096199      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 09/09/25 21:39:07.265
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/09/25 21:39:07.319
  E0909 21:39:08.096986      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:09.097283      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/09/25 21:39:09.325
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/09/25 21:39:09.331
  STEP: Ensuring a pod cannot update its resource requirements @ 09/09/25 21:39:09.335
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/09/25 21:39:09.343
  E0909 21:39:10.101553      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:11.097902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/09/25 21:39:11.354
  STEP: Ensuring resource quota status released the pod usage @ 09/09/25 21:39:11.384
  E0909 21:39:12.098348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:13.098677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:39:13.388647 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3168" for this suite. @ 09/09/25 21:39:13.396
• [13.220 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 09/09/25 21:39:13.418
  I0909 21:39:13.419550 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename svcaccounts @ 09/09/25 21:39:13.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:39:13.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:39:13.448
  STEP: creating a ServiceAccount @ 09/09/25 21:39:13.453
  STEP: watching for the ServiceAccount to be added @ 09/09/25 21:39:13.461
  STEP: patching the ServiceAccount @ 09/09/25 21:39:13.463
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/09/25 21:39:13.472
  STEP: deleting the ServiceAccount @ 09/09/25 21:39:13.475
  I0909 21:39:13.494950 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1778" for this suite. @ 09/09/25 21:39:13.499
• [0.088 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 09/09/25 21:39:13.507
  I0909 21:39:13.507536 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename svcaccounts @ 09/09/25 21:39:13.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:39:13.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:39:13.531
  STEP: Creating a pod to test service account token:  @ 09/09/25 21:39:13.535
  E0909 21:39:14.099757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:15.100703      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:16.101553      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:17.102095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:39:17.563
  I0909 21:39:17.566575 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod test-pod-228e04c4-7c50-4289-88d4-26648c7d1630 container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 21:39:17.583
  I0909 21:39:17.613761 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3477" for this suite. @ 09/09/25 21:39:17.624
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/09/25 21:39:17.651
  I0909 21:39:17.651752 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pods @ 09/09/25 21:39:17.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:39:17.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:39:17.672
  I0909 21:39:17.676164 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: creating the pod @ 09/09/25 21:39:17.677
  STEP: submitting the pod to kubernetes @ 09/09/25 21:39:17.678
  E0909 21:39:18.102485      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:19.103984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:39:19.894438 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2650" for this suite. @ 09/09/25 21:39:19.904
• [2.266 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/09/25 21:39:19.917
  I0909 21:39:19.917630 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/09/25 21:39:19.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:39:19.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:39:19.957
  I0909 21:39:19.960643 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 21:39:20.104043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:21.104874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:22.105085      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:23.105808      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:39:23.124512 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4808" for this suite. @ 09/09/25 21:39:23.13
• [3.223 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 09/09/25 21:39:23.14
  I0909 21:39:23.140366 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 21:39:23.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:39:23.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:39:23.161
  STEP: Counting existing ResourceQuota @ 09/09/25 21:39:23.165
  E0909 21:39:24.106130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:25.106490      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:26.107408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:27.106899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:28.106959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/09/25 21:39:28.185
  STEP: Ensuring resource quota status is calculated @ 09/09/25 21:39:28.201
  E0909 21:39:29.107933      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:30.108630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:39:30.207017 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-838" for this suite. @ 09/09/25 21:39:30.214
• [7.087 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/09/25 21:39:30.227
  I0909 21:39:30.227703 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename var-expansion @ 09/09/25 21:39:30.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:39:30.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:39:30.277
  STEP: creating the pod @ 09/09/25 21:39:30.281
  STEP: waiting for pod running @ 09/09/25 21:39:30.299
  E0909 21:39:31.109236      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:32.109656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/09/25 21:39:32.315
  I0909 21:39:32.317330 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5999 PodName:var-expansion-c750db18-f98f-4c34-9899-1f1b1fc1d5a1 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 21:39:32.317380 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 21:39:32.317671 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/var-expansion-5999/pods/var-expansion-c750db18-f98f-4c34-9899-1f1b1fc1d5a1/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0909 21:39:32.454237 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 09/09/25 21:39:32.454
  I0909 21:39:32.463703 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5999 PodName:var-expansion-c750db18-f98f-4c34-9899-1f1b1fc1d5a1 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 21:39:32.463766 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 21:39:32.463862 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/var-expansion-5999/pods/var-expansion-c750db18-f98f-4c34-9899-1f1b1fc1d5a1/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0909 21:39:32.614688 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 09/09/25 21:39:32.614
  E0909 21:39:33.110667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:39:33.144984 22 pod_client.go:173] Successfully updated pod "var-expansion-c750db18-f98f-4c34-9899-1f1b1fc1d5a1"
  STEP: waiting for annotated pod running @ 09/09/25 21:39:33.145
  STEP: deleting the pod gracefully @ 09/09/25 21:39:33.152
  I0909 21:39:33.152525 22 delete.go:62] Deleting pod "var-expansion-c750db18-f98f-4c34-9899-1f1b1fc1d5a1" in namespace "var-expansion-5999"
  I0909 21:39:33.170438 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-c750db18-f98f-4c34-9899-1f1b1fc1d5a1" to be fully deleted
  E0909 21:39:34.112528      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:35.113083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:36.113077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:37.114336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:38.114653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:39.114992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:40.115256      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:41.115551      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:42.116096      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:43.116246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:44.116686      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:45.117035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:46.118012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:47.118057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:48.118343      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:49.118786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:50.118981      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:51.119327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:52.120523      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:53.120495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:54.121429      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:55.121688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:56.121953      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:57.122747      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:58.122736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:39:59.122985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:00.125534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:01.125623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:02.129363      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:03.130225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:04.130472      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:05.130747      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:06.131154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:07.132020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:40:07.307642 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5999" for this suite. @ 09/09/25 21:40:07.335
• [37.124 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 09/09/25 21:40:07.355
  I0909 21:40:07.355231 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 21:40:07.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:40:07.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:40:07.394
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/09/25 21:40:07.397
  I0909 21:40:07.398262 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-9412 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0909 21:40:07.528947 22 builder.go:146] stderr: ""
  I0909 21:40:07.528988 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/09/25 21:40:07.529
  E0909 21:40:08.132427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:09.133588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:10.133575      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:11.133802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:12.134374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/09/25 21:40:12.582
  I0909 21:40:12.582526 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-9412 get pod e2e-test-httpd-pod -o json'
  I0909 21:40:12.744233 22 builder.go:146] stderr: ""
  I0909 21:40:12.744351 22 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"64507cc66edd5717bb4a2d42a6d3d2d1514f86d0b6203f1d9f1159151433e222\",\n            \"cni.projectcalico.org/podIP\": \"10.42.3.250/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.3.250/32\",\n            \"k8s.v1.cni.cncf.io/network-status\": \"[{\\n    \\\"name\\\": \\\"k8s-pod-network\\\",\\n    \\\"ips\\\": [\\n        \\\"10.42.3.250\\\"\\n    ],\\n    \\\"default\\\": true,\\n    \\\"dns\\\": {}\\n}]\"\n        },\n        \"creationTimestamp\": \"2025-09-09T21:40:07Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9412\",\n        \"resourceVersion\": \"32424\",\n        \"uid\": \"e2ee2a47-6c74-4370-86df-e3d8880ffc01\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-pjk2f\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"oneke-ip-192-168-150-105\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-pjk2f\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-09T21:40:09Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-09T21:40:07Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-09T21:40:09Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-09T21:40:09Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-09T21:40:07Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://6d18d1b870fa63041bccec20c3daa9e9d9f103fc0f52f5dc6a9351b7dd36d19f\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-09T21:40:08Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-pjk2f\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.150.105\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.150.105\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.3.250\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.3.250\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-09T21:40:07Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/09/25 21:40:12.744
  I0909 21:40:12.744442 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-9412 replace -f -'
  I0909 21:40:13.098971 22 builder.go:146] stderr: ""
  I0909 21:40:13.099083 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/09/25 21:40:13.099
  I0909 21:40:13.104351 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-9412 delete pods e2e-test-httpd-pod'
  E0909 21:40:13.134125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:14.134597      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:15.143357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:40:15.150785 22 builder.go:146] stderr: ""
  I0909 21:40:15.150838 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0909 21:40:15.151358 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9412" for this suite. @ 09/09/25 21:40:15.161
• [7.817 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 09/09/25 21:40:15.172
  I0909 21:40:15.172107 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/09/25 21:40:15.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:40:15.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:40:15.211
  I0909 21:40:15.215927 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 21:40:16.143618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/09/25 21:40:16.928
  I0909 21:40:16.928362 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 --namespace=crd-publish-openapi-173 create -f -'
  I0909 21:40:17.049441 22 builder.go:146] stderr: ""
  I0909 21:40:17.049497 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1177-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0909 21:40:17.049566 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 --namespace=crd-publish-openapi-173 delete e2e-test-crd-publish-openapi-1177-crds test-foo'
  E0909 21:40:17.143714      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:40:17.181437 22 builder.go:146] stderr: ""
  I0909 21:40:17.181484 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1177-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0909 21:40:17.181530 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 --namespace=crd-publish-openapi-173 apply -f -'
  I0909 21:40:17.291308 22 builder.go:146] stderr: ""
  I0909 21:40:17.291348 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1177-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0909 21:40:17.291389 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 --namespace=crd-publish-openapi-173 delete e2e-test-crd-publish-openapi-1177-crds test-foo'
  I0909 21:40:17.430516 22 builder.go:146] stderr: ""
  I0909 21:40:17.430563 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1177-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/09/25 21:40:17.43
  I0909 21:40:17.430628 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 --namespace=crd-publish-openapi-173 create -f -'
  I0909 21:40:17.540651 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/09/25 21:40:17.54
  I0909 21:40:17.541163 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 --namespace=crd-publish-openapi-173 create -f -'
  I0909 21:40:17.631258 22 builder.go:135] rc: 1
  I0909 21:40:17.631362 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 --namespace=crd-publish-openapi-173 apply -f -'
  I0909 21:40:17.714041 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/09/25 21:40:17.714
  I0909 21:40:17.714165 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 --namespace=crd-publish-openapi-173 create -f -'
  I0909 21:40:17.789898 22 builder.go:135] rc: 1
  I0909 21:40:17.789990 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 --namespace=crd-publish-openapi-173 apply -f -'
  I0909 21:40:17.931557 22 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/09/25 21:40:17.931
  I0909 21:40:17.931689 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 explain e2e-test-crd-publish-openapi-1177-crds'
  I0909 21:40:18.023425 22 builder.go:146] stderr: ""
  I0909 21:40:18.023492 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1177-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/09/25 21:40:18.023
  I0909 21:40:18.023938 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 explain e2e-test-crd-publish-openapi-1177-crds.metadata'
  I0909 21:40:18.113668 22 builder.go:146] stderr: ""
  I0909 21:40:18.113813 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1177-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0909 21:40:18.114214 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 explain e2e-test-crd-publish-openapi-1177-crds.spec'
  E0909 21:40:18.144631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:40:18.223791 22 builder.go:146] stderr: ""
  I0909 21:40:18.223845 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1177-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0909 21:40:18.223971 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 explain e2e-test-crd-publish-openapi-1177-crds.spec.bars'
  I0909 21:40:18.312141 22 builder.go:146] stderr: ""
  I0909 21:40:18.312200 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1177-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/09/25 21:40:18.312
  I0909 21:40:18.312363 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-173 explain e2e-test-crd-publish-openapi-1177-crds.spec.bars2'
  I0909 21:40:18.402032 22 builder.go:135] rc: 1
  E0909 21:40:19.145850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:20.146754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:40:20.171814 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-173" for this suite. @ 09/09/25 21:40:20.186
• [5.030 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/09/25 21:40:20.232
  I0909 21:40:20.233356 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename discovery @ 09/09/25 21:40:20.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:40:20.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:40:20.264
  STEP: Setting up server cert @ 09/09/25 21:40:20.27
  I0909 21:40:20.828884 22 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0909 21:40:20.829558 22 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0909 21:40:20.829577 22 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0909 21:40:20.829583 22 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0909 21:40:20.829589 22 discovery.go:139] Checking APIGroup: apps
  I0909 21:40:20.831122 22 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0909 21:40:20.831153 22 discovery.go:148] Versions found [{apps/v1 v1}]
  I0909 21:40:20.831160 22 discovery.go:154] apps/v1 matches apps/v1
  I0909 21:40:20.831166 22 discovery.go:139] Checking APIGroup: events.k8s.io
  I0909 21:40:20.833015 22 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0909 21:40:20.833251 22 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0909 21:40:20.833261 22 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0909 21:40:20.833267 22 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0909 21:40:20.834647 22 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0909 21:40:20.834676 22 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0909 21:40:20.834684 22 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0909 21:40:20.834690 22 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0909 21:40:20.836395 22 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0909 21:40:20.836658 22 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0909 21:40:20.836707 22 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0909 21:40:20.836714 22 discovery.go:139] Checking APIGroup: autoscaling
  I0909 21:40:20.837465 22 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0909 21:40:20.837480 22 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0909 21:40:20.837488 22 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0909 21:40:20.837494 22 discovery.go:139] Checking APIGroup: batch
  I0909 21:40:20.837939 22 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0909 21:40:20.837952 22 discovery.go:148] Versions found [{batch/v1 v1}]
  I0909 21:40:20.837957 22 discovery.go:154] batch/v1 matches batch/v1
  I0909 21:40:20.837963 22 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0909 21:40:20.838832 22 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0909 21:40:20.838860 22 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0909 21:40:20.838868 22 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0909 21:40:20.838904 22 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0909 21:40:20.839718 22 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0909 21:40:20.839745 22 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0909 21:40:20.839752 22 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0909 21:40:20.839758 22 discovery.go:139] Checking APIGroup: policy
  I0909 21:40:20.840425 22 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0909 21:40:20.840497 22 discovery.go:148] Versions found [{policy/v1 v1}]
  I0909 21:40:20.840505 22 discovery.go:154] policy/v1 matches policy/v1
  I0909 21:40:20.840551 22 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0909 21:40:20.842187 22 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0909 21:40:20.845998 22 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0909 21:40:20.846100 22 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0909 21:40:20.846108 22 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0909 21:40:20.849540 22 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0909 21:40:20.849568 22 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0909 21:40:20.849576 22 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0909 21:40:20.849623 22 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0909 21:40:20.850647 22 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0909 21:40:20.850679 22 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0909 21:40:20.850687 22 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0909 21:40:20.850693 22 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0909 21:40:20.851692 22 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0909 21:40:20.851723 22 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0909 21:40:20.851732 22 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0909 21:40:20.851738 22 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0909 21:40:20.853089 22 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0909 21:40:20.853240 22 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0909 21:40:20.853327 22 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0909 21:40:20.853392 22 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0909 21:40:20.855089 22 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0909 21:40:20.855319 22 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0909 21:40:20.855406 22 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0909 21:40:20.855493 22 discovery.go:139] Checking APIGroup: node.k8s.io
  I0909 21:40:20.858568 22 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0909 21:40:20.858691 22 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0909 21:40:20.858780 22 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0909 21:40:20.858916 22 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0909 21:40:20.861846 22 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0909 21:40:20.861935 22 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0909 21:40:20.861942 22 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0909 21:40:20.861949 22 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0909 21:40:20.863654 22 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0909 21:40:20.863684 22 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0909 21:40:20.863691 22 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0909 21:40:20.863696 22 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0909 21:40:20.865228 22 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0909 21:40:20.865487 22 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0909 21:40:20.865657 22 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0909 21:40:20.865751 22 discovery.go:139] Checking APIGroup: gateway.networking.k8s.io
  I0909 21:40:20.866581 22 discovery.go:147] PreferredVersion.GroupVersion: gateway.networking.k8s.io/v1
  I0909 21:40:20.867621 22 discovery.go:148] Versions found [{gateway.networking.k8s.io/v1 v1} {gateway.networking.k8s.io/v1beta1 v1beta1}]
  I0909 21:40:20.867708 22 discovery.go:154] gateway.networking.k8s.io/v1 matches gateway.networking.k8s.io/v1
  I0909 21:40:20.867814 22 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0909 21:40:20.870414 22 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0909 21:40:20.871687 22 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0909 21:40:20.871695 22 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0909 21:40:20.871749 22 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0909 21:40:20.873811 22 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0909 21:40:20.873826 22 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0909 21:40:20.873832 22 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0909 21:40:20.873838 22 discovery.go:139] Checking APIGroup: k8s.cni.cncf.io
  I0909 21:40:20.875693 22 discovery.go:147] PreferredVersion.GroupVersion: k8s.cni.cncf.io/v1
  I0909 21:40:20.875723 22 discovery.go:148] Versions found [{k8s.cni.cncf.io/v1 v1}]
  I0909 21:40:20.875730 22 discovery.go:154] k8s.cni.cncf.io/v1 matches k8s.cni.cncf.io/v1
  I0909 21:40:20.875737 22 discovery.go:139] Checking APIGroup: snapshot.storage.k8s.io
  I0909 21:40:20.876390 22 discovery.go:147] PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  I0909 21:40:20.876402 22 discovery.go:148] Versions found [{snapshot.storage.k8s.io/v1 v1}]
  I0909 21:40:20.876409 22 discovery.go:154] snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  I0909 21:40:20.876415 22 discovery.go:139] Checking APIGroup: hub.traefik.io
  I0909 21:40:20.878870 22 discovery.go:147] PreferredVersion.GroupVersion: hub.traefik.io/v1alpha1
  I0909 21:40:20.878886 22 discovery.go:148] Versions found [{hub.traefik.io/v1alpha1 v1alpha1}]
  I0909 21:40:20.878914 22 discovery.go:154] hub.traefik.io/v1alpha1 matches hub.traefik.io/v1alpha1
  I0909 21:40:20.878921 22 discovery.go:139] Checking APIGroup: policy.networking.k8s.io
  I0909 21:40:20.881555 22 discovery.go:147] PreferredVersion.GroupVersion: policy.networking.k8s.io/v1alpha1
  I0909 21:40:20.883206 22 discovery.go:148] Versions found [{policy.networking.k8s.io/v1alpha1 v1alpha1}]
  I0909 21:40:20.883213 22 discovery.go:154] policy.networking.k8s.io/v1alpha1 matches policy.networking.k8s.io/v1alpha1
  I0909 21:40:20.883219 22 discovery.go:139] Checking APIGroup: traefik.io
  I0909 21:40:20.886908 22 discovery.go:147] PreferredVersion.GroupVersion: traefik.io/v1alpha1
  I0909 21:40:20.886945 22 discovery.go:148] Versions found [{traefik.io/v1alpha1 v1alpha1}]
  I0909 21:40:20.886953 22 discovery.go:154] traefik.io/v1alpha1 matches traefik.io/v1alpha1
  I0909 21:40:20.886960 22 discovery.go:139] Checking APIGroup: whereabouts.cni.cncf.io
  I0909 21:40:20.888119 22 discovery.go:147] PreferredVersion.GroupVersion: whereabouts.cni.cncf.io/v1alpha1
  I0909 21:40:20.888147 22 discovery.go:148] Versions found [{whereabouts.cni.cncf.io/v1alpha1 v1alpha1}]
  I0909 21:40:20.888155 22 discovery.go:154] whereabouts.cni.cncf.io/v1alpha1 matches whereabouts.cni.cncf.io/v1alpha1
  I0909 21:40:20.888161 22 discovery.go:139] Checking APIGroup: groupsnapshot.storage.k8s.io
  I0909 21:40:20.888638 22 discovery.go:147] PreferredVersion.GroupVersion: groupsnapshot.storage.k8s.io/v1beta1
  I0909 21:40:20.888651 22 discovery.go:148] Versions found [{groupsnapshot.storage.k8s.io/v1beta1 v1beta1}]
  I0909 21:40:20.888658 22 discovery.go:154] groupsnapshot.storage.k8s.io/v1beta1 matches groupsnapshot.storage.k8s.io/v1beta1
  I0909 21:40:20.888663 22 discovery.go:139] Checking APIGroup: metallb.io
  I0909 21:40:20.891006 22 discovery.go:147] PreferredVersion.GroupVersion: metallb.io/v1beta2
  I0909 21:40:20.891024 22 discovery.go:148] Versions found [{metallb.io/v1beta2 v1beta2} {metallb.io/v1beta1 v1beta1}]
  I0909 21:40:20.891030 22 discovery.go:154] metallb.io/v1beta2 matches metallb.io/v1beta2
  I0909 21:40:20.891060 22 discovery.go:139] Checking APIGroup: longhorn.io
  I0909 21:40:20.891648 22 discovery.go:147] PreferredVersion.GroupVersion: longhorn.io/v1beta2
  I0909 21:40:20.891769 22 discovery.go:148] Versions found [{longhorn.io/v1beta2 v1beta2}]
  I0909 21:40:20.892009 22 discovery.go:154] longhorn.io/v1beta2 matches longhorn.io/v1beta2
  I0909 21:40:20.892180 22 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0909 21:40:20.893548 22 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0909 21:40:20.893753 22 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0909 21:40:20.893933 22 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0909 21:40:20.894319 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7868" for this suite. @ 09/09/25 21:40:20.898
• [0.675 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/09/25 21:40:20.909
  I0909 21:40:20.910106 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 21:40:20.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:40:20.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:40:20.941
  STEP: Creating secret with name secret-test-map-80326455-a5eb-4ea0-a6a0-6924bce2189a @ 09/09/25 21:40:20.944
  STEP: Creating a pod to test consume secrets @ 09/09/25 21:40:20.952
  E0909 21:40:21.147318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:22.151659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:23.153254      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:24.154875      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:40:24.987
  I0909 21:40:24.994100 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-secrets-7a9c8775-c17b-4365-b40c-1849a112aaca container secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 21:40:25.025
  I0909 21:40:25.060708 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9427" for this suite. @ 09/09/25 21:40:25.071
• [4.176 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/09/25 21:40:25.092
  I0909 21:40:25.093506 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 21:40:25.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:40:25.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:40:25.132
  STEP: Creating configMap with name configmap-test-volume-bcb33f03-cc54-4b41-8327-ad4bcd3804a3 @ 09/09/25 21:40:25.136
  STEP: Creating a pod to test consume configMaps @ 09/09/25 21:40:25.143
  E0909 21:40:25.154792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:26.154964      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:27.155577      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:28.156234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:29.156782      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:40:29.189
  I0909 21:40:29.194181 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-configmaps-5a60af1b-a2b5-42bd-8346-fe2814a93eed container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 21:40:29.208
  I0909 21:40:29.243271 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8192" for this suite. @ 09/09/25 21:40:29.252
• [4.169 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 09/09/25 21:40:29.264
  I0909 21:40:29.264702 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 21:40:29.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:40:29.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:40:29.305
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/09/25 21:40:29.31
  E0909 21:40:30.157177      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:31.157522      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:32.158496      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:33.158924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:40:33.376
  I0909 21:40:33.382643 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-ccf4f41c-e1d5-4c77-8d72-0dfa1ad5cfd0 container test-container: <nil>
  STEP: delete the pod @ 09/09/25 21:40:33.393
  I0909 21:40:33.433780 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6531" for this suite. @ 09/09/25 21:40:33.44
• [4.187 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/09/25 21:40:33.453
  I0909 21:40:33.453255 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 21:40:33.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:40:33.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:40:33.48
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 21:40:33.484
  E0909 21:40:34.158794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:35.159334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:36.161460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:37.160911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:40:37.529
  I0909 21:40:37.532440 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-da877c52-8b0d-46f1-a0f1-d33059bf0c0e container client-container: <nil>
  STEP: delete the pod @ 09/09/25 21:40:37.539
  I0909 21:40:37.560695 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-500" for this suite. @ 09/09/25 21:40:37.566
• [4.122 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 09/09/25 21:40:37.578
  I0909 21:40:37.579041 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename dns @ 09/09/25 21:40:37.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:40:37.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:40:37.599
  STEP: Creating a test headless service @ 09/09/25 21:40:37.603
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2733.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2733.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2733.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2733.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2733.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2733.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-2733.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2733.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-2733.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 217.186.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.186.217_udp@PTR;check="$$(dig +tcp +noall +answer +search 217.186.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.186.217_tcp@PTR;sleep 1; done
   @ 09/09/25 21:40:37.652
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2733.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2733.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2733.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2733.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2733.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2733.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2733.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2733.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2733.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2733.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 217.186.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.186.217_udp@PTR;check="$$(dig +tcp +noall +answer +search 217.186.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.186.217_tcp@PTR;sleep 1; done
   @ 09/09/25 21:40:37.661
  STEP: creating a pod to probe DNS @ 09/09/25 21:40:37.661
  STEP: submitting the pod to kubernetes @ 09/09/25 21:40:37.662
  E0909 21:40:38.160939      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:39.161080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/09/25 21:40:39.708
  STEP: looking for the results for each expected name from probers @ 09/09/25 21:40:39.713
  I0909 21:40:39.724178 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:39.729233 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:39.733961 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:39.749129 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:39.770741 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:39.775384 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:39.779873 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:39.784024 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:39.801364 22 dns_common.go:506] Lookups using dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b failed for: [agnhost_udp@dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_udp@dns-test-service.dns-2733.svc.cluster.local jessie_tcp@dns-test-service.dns-2733.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local]

  I0909 21:40:39.811607 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:40:39.820891 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:40:39.827883 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:40:40.161489      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:41.161839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:42.162585      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:43.162739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:44.169520      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:40:44.720971 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:44.726723 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:44.738944 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:44.751048 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:44.780444 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:44.785689 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:44.791081 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:44.798339 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:44.820174 22 dns_common.go:506] Lookups using dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b failed for: [agnhost_udp@dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_udp@dns-test-service.dns-2733.svc.cluster.local jessie_tcp@dns-test-service.dns-2733.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local]

  I0909 21:40:44.833302 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:40:44.843660 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:40:44.854654 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:40:45.170276      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:46.172642      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:47.171857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:48.173139      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:49.172658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:40:49.719868 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:49.726273 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:49.732625 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:49.737297 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:49.760624 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:49.765484 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:49.769880 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:49.774058 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:49.792698 22 dns_common.go:506] Lookups using dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b failed for: [agnhost_udp@dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_udp@dns-test-service.dns-2733.svc.cluster.local jessie_tcp@dns-test-service.dns-2733.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local]

  I0909 21:40:49.803759 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:40:49.816241 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:40:49.824408 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:40:50.173387      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:51.173227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:52.173874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:53.175212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:54.175302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:40:54.721299 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:54.728396 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:54.733106 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:54.737186 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:54.759123 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:54.763821 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:54.768733 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:54.773742 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:54.792438 22 dns_common.go:506] Lookups using dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b failed for: [agnhost_udp@dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_udp@dns-test-service.dns-2733.svc.cluster.local jessie_tcp@dns-test-service.dns-2733.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local]

  I0909 21:40:54.805161 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:40:54.814372 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:40:54.834015 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:40:55.175618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:56.175988      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:57.176394      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:58.176936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:40:59.177394      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:40:59.719256 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:59.726013 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:59.731802 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:59.737539 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:59.769208 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:59.773076 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:59.778014 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:59.782608 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:40:59.793210 22 dns_common.go:506] Lookups using dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b failed for: [agnhost_udp@dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_udp@dns-test-service.dns-2733.svc.cluster.local jessie_tcp@dns-test-service.dns-2733.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local]

  I0909 21:40:59.807953 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:40:59.824570 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:40:59.833931 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:41:00.177760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:01.177858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:02.178618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:03.178359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:04.178703      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:04.719276 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:41:04.724943 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:41:04.732357 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:41:04.749631 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:41:04.780931 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:41:04.786731 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:41:04.793826 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:41:04.800322 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local from pod dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b: the server could not find the requested resource (get pods dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b)
  I0909 21:41:04.820549 22 dns_common.go:506] Lookups using dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b failed for: [agnhost_udp@dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@dns-test-service.dns-2733.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_udp@dns-test-service.dns-2733.svc.cluster.local jessie_tcp@dns-test-service.dns-2733.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2733.svc.cluster.local]

  I0909 21:41:04.831393 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:41:04.840676 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:41:04.854125 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:41:05.178899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:06.180155      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:07.179955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:08.181228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:09.182014      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:09.783898 22 dns_common.go:546] DNS probes using dns-2733/dns-test-d295a7f2-1909-4f13-9d85-c29758090e1b succeeded

  STEP: deleting the pod @ 09/09/25 21:41:09.784
  STEP: deleting the test service @ 09/09/25 21:41:09.829
  STEP: deleting the test headless service @ 09/09/25 21:41:09.903
  I0909 21:41:09.934327 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2733" for this suite. @ 09/09/25 21:41:09.941
• [32.374 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/09/25 21:41:09.955
  I0909 21:41:09.956087 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/09/25 21:41:09.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:41:09.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:41:09.994
  STEP: creating the policy @ 09/09/25 21:41:10.013
  STEP: waiting until the marker is denied @ 09/09/25 21:41:10.041
  E0909 21:41:10.183568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 09/09/25 21:41:10.373
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/09/25 21:41:10.415
  I0909 21:41:10.507053 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8518" for this suite. @ 09/09/25 21:41:10.524
• [0.589 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/09/25 21:41:10.545
  I0909 21:41:10.545630 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pod-network-test @ 09/09/25 21:41:10.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:41:10.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:41:10.57
  STEP: Performing setup for networking test in namespace pod-network-test-5354 @ 09/09/25 21:41:10.572
  STEP: creating a selector @ 09/09/25 21:41:10.572
  STEP: Creating the service pods in kubernetes @ 09/09/25 21:41:10.572
  I0909 21:41:10.572413 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0909 21:41:11.188055      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:12.185965      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:13.186663      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:14.186991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:15.187130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:16.187412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:17.187729      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:18.187819      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:19.188654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:20.189038      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:21.189373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:22.189538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:23.189746      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:24.190365      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/09/25 21:41:24.737
  E0909 21:41:25.190579      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:26.191441      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:26.765693 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0909 21:41:26.767366 22 networking.go:42] Breadth first check of 10.42.1.40 on host 192.168.150.103...
  I0909 21:41:26.771864 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.41:9080/dial?request=hostname&protocol=udp&host=10.42.1.40&port=8081&tries=1'] Namespace:pod-network-test-5354 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 21:41:26.773684 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 21:41:26.775033 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5354/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.41%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.40%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0909 21:41:26.916626 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 21:41:26.917814 22 utils.go:355] Waiting for responses: map[]
  I0909 21:41:26.918546 22 utils.go:359] reached 10.42.1.40 after 0/1 tries
  I0909 21:41:26.919382 22 networking.go:42] Breadth first check of 10.42.3.253 on host 192.168.150.105...
  I0909 21:41:26.923832 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.41:9080/dial?request=hostname&protocol=udp&host=10.42.3.253&port=8081&tries=1'] Namespace:pod-network-test-5354 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 21:41:26.925128 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 21:41:26.926046 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5354/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.41%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.3.253%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0909 21:41:27.029745 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 21:41:27.030703 22 utils.go:355] Waiting for responses: map[]
  I0909 21:41:27.031537 22 utils.go:359] reached 10.42.3.253 after 0/1 tries
  I0909 21:41:27.032714 22 networking.go:53] Going to retry 0 out of 2 pods....
  I0909 21:41:27.034638 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5354" for this suite. @ 09/09/25 21:41:27.051
• [16.518 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/09/25 21:41:27.064
  I0909 21:41:27.064370 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename server-version @ 09/09/25 21:41:27.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:41:27.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:41:27.107
  STEP: Request ServerVersion @ 09/09/25 21:41:27.116
  STEP: Confirm major version @ 09/09/25 21:41:27.118
  I0909 21:41:27.118390 22 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/09/25 21:41:27.118
  I0909 21:41:27.118425 22 server_version.go:58] cleanMinorVersion: 33
  I0909 21:41:27.118437 22 server_version.go:62] Minor version: 33
  I0909 21:41:27.118579 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-2401" for this suite. @ 09/09/25 21:41:27.142
• [0.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 09/09/25 21:41:27.152
  I0909 21:41:27.153021 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:41:27.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:41:27.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:41:27.184
  I0909 21:41:27.191759      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0909 21:41:27.192247      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating an Endpoint @ 09/09/25 21:41:27.193
  I0909 21:41:27.209368      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 09/09/25 21:41:27.209
  I0909 21:41:27.212776      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 09/09/25 21:41:27.213
  I0909 21:41:27.217828      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 09/09/25 21:41:27.217
  I0909 21:41:27.225137      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:41:27.227707      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/09/25 21:41:27.228
  I0909 21:41:27.233089      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 09/09/25 21:41:27.233
  I0909 21:41:27.245512      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:41:27.247466      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/09/25 21:41:27.247
  I0909 21:41:27.250494      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 09/09/25 21:41:27.251
  I0909 21:41:27.258865      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 09/09/25 21:41:27.259
  I0909 21:41:27.262130      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/09/25 21:41:27.262
  I0909 21:41:27.266039      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 21:41:27.267211 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2374" for this suite. @ 09/09/25 21:41:27.276
• [0.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/09/25 21:41:27.298
  I0909 21:41:27.298146 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 21:41:27.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:41:27.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:41:27.332
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 21:41:27.339
  E0909 21:41:28.192223      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:29.193048      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:30.193802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:31.194581      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:41:31.398
  I0909 21:41:31.401001 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-1cae6424-1e12-4188-b602-ef52bc4281ee container client-container: <nil>
  STEP: delete the pod @ 09/09/25 21:41:31.408
  I0909 21:41:31.430601 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3293" for this suite. @ 09/09/25 21:41:31.437
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 09/09/25 21:41:31.458
  I0909 21:41:31.458788 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:41:31.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:41:31.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:41:31.485
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9045 @ 09/09/25 21:41:31.488
  STEP: changing the ExternalName service to type=NodePort @ 09/09/25 21:41:31.498
  I0909 21:41:31.588550 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0909 21:41:32.201230      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:33.196315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:33.597211 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 21, 41, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 41, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 41, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 41, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-778cc655bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 21:41:34.198710      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:35.198099      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:35.604177 22 resource.go:361] Creating new exec pod
  E0909 21:41:36.204708      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:37.210883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:37.646357 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9045 exec execpodfj8sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0909 21:41:38.029447 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.249.147) 80 port [tcp/http] succeeded!\n"
  I0909 21:41:38.029498 22 builder.go:147] stdout: "externalname-service-778cc655bc-67wcm"
  I0909 21:41:38.029777 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9045 exec execpodfj8sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.249.147 80'
  E0909 21:41:38.209336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:38.225799 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.249.147 80\nConnection to 10.43.249.147 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0909 21:41:38.225844 22 builder.go:147] stdout: "externalname-service-778cc655bc-sph9v"
  I0909 21:41:38.225908 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9045 exec execpodfj8sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 30192'
  I0909 21:41:38.452619 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.103 30192\nConnection to 192.168.150.103 30192 port [tcp/*] succeeded!\n"
  I0909 21:41:38.452677 22 builder.go:147] stdout: "externalname-service-778cc655bc-67wcm"
  I0909 21:41:38.452745 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-9045 exec execpodfj8sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.105 30192'
  I0909 21:41:38.682334 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.105 30192\nConnection to 192.168.150.105 30192 port [tcp/*] succeeded!\n"
  I0909 21:41:38.682426 22 builder.go:147] stdout: "externalname-service-778cc655bc-67wcm"
  I0909 21:41:38.682690 22 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0909 21:41:38.731009 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9045" for this suite. @ 09/09/25 21:41:38.737
• [7.288 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 09/09/25 21:41:38.747
  I0909 21:41:38.747576 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 21:41:38.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:41:38.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:41:38.78
  STEP: Counting existing ResourceQuota @ 09/09/25 21:41:38.783
  E0909 21:41:39.209608      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:40.209756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:41.209813      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:42.210068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:43.211368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/09/25 21:41:43.806
  STEP: Ensuring resource quota status is calculated @ 09/09/25 21:41:43.828
  E0909 21:41:44.212018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:45.217560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/09/25 21:41:45.834
  STEP: Ensuring resource quota status captures replicaset creation @ 09/09/25 21:41:45.876
  E0909 21:41:46.217585      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:47.218244      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/09/25 21:41:47.883
  STEP: Ensuring resource quota status released usage @ 09/09/25 21:41:47.896
  E0909 21:41:48.219080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:49.219456      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:49.901620 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1268" for this suite. @ 09/09/25 21:41:49.913
• [11.192 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 09/09/25 21:41:49.95
  I0909 21:41:49.951618 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 21:41:49.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:41:49.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:41:49.975
  STEP: creating service in namespace services-8615 @ 09/09/25 21:41:49.977
  STEP: creating service affinity-nodeport-transition in namespace services-8615 @ 09/09/25 21:41:49.977
  I0909 21:41:50.063837 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 41, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 41, 50, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"affinity-nodeport-transition-7d57658b6c\""}}, CollisionCount:(*int32)(nil)}
  E0909 21:41:50.220505      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:51.220391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:52.098786 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:3, UpdatedReplicas:3, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 21, 41, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 41, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 41, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 41, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"affinity-nodeport-transition-7d57658b6c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 21:41:52.221338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:53.221385      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:54.094654 22 resource.go:361] Creating new exec pod
  E0909 21:41:54.222341      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:55.229407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:56.139608 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-8615 exec execpod-affinitytglgx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0909 21:41:56.225310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:56.400494 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.43.74.193) 80 port [tcp/http] succeeded!\n"
  I0909 21:41:56.400610 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:41:56.401040 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-8615 exec execpod-affinitytglgx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.74.193 80'
  I0909 21:41:56.583578 22 builder.go:146] stderr: "+ + nc -v -t -w 2 10.43.74.193 80\necho hostNameConnection to 10.43.74.193 80 port [tcp/http] succeeded!\n\n"
  I0909 21:41:56.583685 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:41:56.586247 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-8615 exec execpod-affinitytglgx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 32647'
  I0909 21:41:56.836671 22 builder.go:146] stderr: "+ nc+  -vecho hostName\n -t -w 2 192.168.150.103 32647\nConnection to 192.168.150.103 32647 port [tcp/*] succeeded!\n"
  I0909 21:41:56.836778 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:41:56.838645 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-8615 exec execpod-affinitytglgx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.105 32647'
  I0909 21:41:57.067351 22 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.150.105 32647\n+ echo hostName\nConnection to 192.168.150.105 32647 port [tcp/*] succeeded!\n"
  I0909 21:41:57.067421 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 21:41:57.082410 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-8615 exec execpod-affinitytglgx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/ ; done'
  E0909 21:41:57.226153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:57.441136 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n"
  I0909 21:41:57.441214 22 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-h2srl\naffinity-nodeport-transition-7d57658b6c-zc9m2\naffinity-nodeport-transition-7d57658b6c-h2srl\naffinity-nodeport-transition-7d57658b6c-h2srl\naffinity-nodeport-transition-7d57658b6c-h2srl\naffinity-nodeport-transition-7d57658b6c-zc9m2\naffinity-nodeport-transition-7d57658b6c-h2srl\naffinity-nodeport-transition-7d57658b6c-zc9m2\naffinity-nodeport-transition-7d57658b6c-h2srl\naffinity-nodeport-transition-7d57658b6c-zc9m2\naffinity-nodeport-transition-7d57658b6c-h2srl\naffinity-nodeport-transition-7d57658b6c-h2srl\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-h2srl\naffinity-nodeport-transition-7d57658b6c-zc9m2"
  I0909 21:41:57.441234 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h2srl
  I0909 21:41:57.441246 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zc9m2
  I0909 21:41:57.441255 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h2srl
  I0909 21:41:57.441265 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h2srl
  I0909 21:41:57.441274 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h2srl
  I0909 21:41:57.441282 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zc9m2
  I0909 21:41:57.441290 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h2srl
  I0909 21:41:57.441298 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zc9m2
  I0909 21:41:57.441306 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h2srl
  I0909 21:41:57.441315 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zc9m2
  I0909 21:41:57.441323 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h2srl
  I0909 21:41:57.441331 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h2srl
  I0909 21:41:57.441340 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.441348 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.441356 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-h2srl
  I0909 21:41:57.441364 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-zc9m2
  I0909 21:41:57.462062 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-8615 exec execpod-affinitytglgx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/ ; done'
  I0909 21:41:57.938828 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.150.103:32647/\n"
  I0909 21:41:57.938897 22 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4\naffinity-nodeport-transition-7d57658b6c-95jj4"
  I0909 21:41:57.938918 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.938934 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.938947 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.938957 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.938969 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.938979 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.938992 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.939003 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.939014 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.939024 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.939033 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.939043 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.939051 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.939059 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.939599 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.939784 22 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-95jj4
  I0909 21:41:57.940318 22 service.go:4352] Cleaning up the exec pod
  I0909 21:41:58.086969 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8615" for this suite. @ 09/09/25 21:41:58.094
• [8.154 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 09/09/25 21:41:58.104
  I0909 21:41:58.104899 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/09/25 21:41:58.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:41:58.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:41:58.12
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/09/25 21:41:58.122
  I0909 21:41:58.123645 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 21:41:58.248882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:41:59.229338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:41:59.786207 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 21:42:00.232249      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:01.241052      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:02.242932      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:03.251365      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:04.252129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:05.252772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:06.254702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:06.910142 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6252" for this suite. @ 09/09/25 21:42:06.918
• [8.824 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/09/25 21:42:06.929
  I0909 21:42:06.929123 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 21:42:06.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:42:06.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:42:07
  STEP: Creating configMap with name configmap-test-upd-2a564af0-3ee6-430f-943e-f61b87808525 @ 09/09/25 21:42:07.02
  STEP: Creating the pod @ 09/09/25 21:42:07.026
  E0909 21:42:07.254700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:08.254860      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-2a564af0-3ee6-430f-943e-f61b87808525 @ 09/09/25 21:42:09.07
  STEP: waiting to observe update in volume @ 09/09/25 21:42:09.089
  E0909 21:42:09.255907      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:10.256513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:11.115015 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7124" for this suite. @ 09/09/25 21:42:11.121
• [4.206 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 09/09/25 21:42:11.14
  I0909 21:42:11.141832 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-probe @ 09/09/25 21:42:11.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:42:11.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:42:11.174
  STEP: Creating pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495 @ 09/09/25 21:42:11.178
  E0909 21:42:11.257220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:12.257497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/09/25 21:42:13.209
  I0909 21:42:13.214144 22 container_probe.go:1748] Initial restart count of pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd is 0
  I0909 21:42:13.217721 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:13.257937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:14.258530      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:15.223524 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:15.259248      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:16.261545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:17.228504 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:17.259967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:18.260263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:19.232544 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:19.260548      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:20.261362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:21.238590 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:21.261764      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:22.262587      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:23.245151 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:23.262716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:24.262859      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:25.250781 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:25.262933      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:26.263026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:27.257271 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:27.264080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:28.265595      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:29.264978 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:29.266076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:30.267124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:31.267729      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:31.272610 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:32.268989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:33.270114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:33.276994 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:34.271283      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:35.271718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:35.283037 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:36.271941      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:37.272301      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:37.289517 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:38.272569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:39.273142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:39.295744 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:40.273841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:41.274753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:41.303682 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:42.275534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:43.275721      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:43.309872 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:44.275970      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:45.276212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:45.316078 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:46.276602      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:47.279868      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:47.324552 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:48.277540      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:49.277637      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:49.330671 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:50.277828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:51.278398      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:51.335943 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:52.279685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:53.279576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:53.340776 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:54.281087      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:55.280569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:55.346514 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:56.280782      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:57.281231      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:57.361568 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:42:58.281530      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:42:59.281696      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:42:59.370992 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:43:00.282319      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:01.282538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:43:01.378661 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  E0909 21:43:02.283622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:03.283823      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:43:03.383234 22 container_probe.go:1758] Get pod busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd in namespace container-probe-4495
  I0909 21:43:03.383289 22 container_probe.go:1762] Restart count of pod container-probe-4495/busybox-d0223b3e-fb46-42ab-b600-74f48575fbdd is now 1 (50.1687642s elapsed)
  STEP: deleting the pod @ 09/09/25 21:43:03.383
  I0909 21:43:03.407578 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4495" for this suite. @ 09/09/25 21:43:03.415
• [52.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 09/09/25 21:43:03.424
  I0909 21:43:03.424402 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename svcaccounts @ 09/09/25 21:43:03.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:43:03.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:43:03.443
  I0909 21:43:03.465853 22 service_accounts.go:646] created pod
  E0909 21:43:04.284157      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:05.285140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:06.285795      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:07.286232      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:43:07.498
  E0909 21:43:08.286269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:09.286950      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:10.287105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:11.287406      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:12.288348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:13.289736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:14.290751      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:15.291544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:16.292162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:17.292326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:18.292657      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:19.293092      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:20.293159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:21.294438      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:22.295653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:23.296549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:24.296753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:25.297128      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:26.297354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:27.297620      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:28.297825      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:29.298745      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:30.299382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:31.300719      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:32.301088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:33.301406      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:34.301442      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:35.301668      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:36.302443      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:37.301914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:43:37.498583 22 service_accounts.go:652] polling logs
  I0909 21:43:37.511221 22 service_accounts.go:662] Pod logs: 
  I0909 21:43:04.506254       1 log.go:245] OK: Got token
  I0909 21:43:04.506340       1 log.go:245] validating with in-cluster discovery
  I0909 21:43:04.506622       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0909 21:43:04.506674       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7037:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00040f330), NotBefore:(*jwt.NumericDate)(0xc00040f420), IssuedAt:(*jwt.NumericDate)(0xc00040f340), ID:"0def7f88-79ef-4efb-9203-68c0fc600599"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7037", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"02be66e9-9517-469f-b4d5-9589bfe8b37c"}}}
  I0909 21:43:04.527437       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0909 21:43:04.533256       1 log.go:245] OK: Validated signature on JWT
  I0909 21:43:04.533566       1 log.go:245] OK: Got valid claims from token!
  I0909 21:43:04.533700       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7037:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0004dcda8), NotBefore:(*jwt.NumericDate)(0xc0004dcdd0), IssuedAt:(*jwt.NumericDate)(0xc0004dcdb0), ID:"0def7f88-79ef-4efb-9203-68c0fc600599"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7037", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"02be66e9-9517-469f-b4d5-9589bfe8b37c"}}}

  I0909 21:43:37.518168 22 service_accounts.go:666] completed pod
  I0909 21:43:37.525884 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7037" for this suite. @ 09/09/25 21:43:37.531
• [34.119 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 09/09/25 21:43:37.546
  I0909 21:43:37.547190 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 21:43:37.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:43:37.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:43:37.573
  STEP: Creating Pod @ 09/09/25 21:43:37.577
  E0909 21:43:38.303136      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:39.303305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/09/25 21:43:39.617
  I0909 21:43:39.617900 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3430 PodName:pod-sharedvolume-d48b0c45-f1f6-48a2-8e50-8f16985aac69 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 21:43:39.617928 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 21:43:39.621976 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/emptydir-3430/pods/pod-sharedvolume-d48b0c45-f1f6-48a2-8e50-8f16985aac69/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0909 21:43:39.754096 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 21:43:39.754629 22 exec_util.go:112] Exec stderr: ""
  I0909 21:43:39.755634 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3430" for this suite. @ 09/09/25 21:43:39.766
• [2.230 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/09/25 21:43:39.78
  I0909 21:43:39.781024 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename daemonsets @ 09/09/25 21:43:39.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:43:39.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:43:39.825
  STEP: Creating simple DaemonSet "daemon-set" @ 09/09/25 21:43:39.873
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/09/25 21:43:39.889
  I0909 21:43:39.973980 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:43:39.975070 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:43:39.997595 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 21:43:39.997694 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 21:43:40.303562      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:43:40.898348 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:43:40.898473 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:43:40.902423 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 21:43:40.902658 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 21:43:41.303914      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:43:41.898270 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:43:41.898543 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:43:41.906893 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0909 21:43:41.907025 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/09/25 21:43:41.913
  I0909 21:43:42.000631 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:43:42.001805 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:43:42.007693 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 21:43:42.007755 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 21:43:42.304018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:43:42.954327 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:43:42.954369 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:43:42.958136 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 21:43:42.958176 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 21:43:43.304147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:43:43.948568 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:43:43.950268 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:43:43.955571 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 21:43:43.955639 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 21:43:44.305239      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:43:44.951677 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:43:44.953881 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:43:44.961024 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 21:43:44.961109 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 21:43:45.305781      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:43:45.951660 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:43:45.951736 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:43:45.956291 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 21:43:45.957441 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 21:43:46.306584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:43:46.957958 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:43:46.958079 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:43:46.962994 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0909 21:43:46.963062 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/09/25 21:43:46.967
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6149, will wait for the garbage collector to delete the pods @ 09/09/25 21:43:46.968
  I0909 21:43:47.049035 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 24.78238ms
  I0909 21:43:47.149751 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.70412ms
  E0909 21:43:47.306857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:48.308256      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:49.308332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:43:49.755929 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 21:43:49.756012 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0909 21:43:49.760075 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34308"},"items":null}

  I0909 21:43:49.765251 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34308"},"items":null}

  I0909 21:43:49.777321 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6149" for this suite. @ 09/09/25 21:43:49.784
• [10.017 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/09/25 21:43:49.799
  I0909 21:43:49.799276 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/09/25 21:43:49.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:43:49.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:43:49.82
  STEP: create the container to handle the HTTPGet hook request. @ 09/09/25 21:43:49.869
  E0909 21:43:50.309522      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:51.310442      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:52.311108      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:53.311637      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/09/25 21:43:53.903
  E0909 21:43:54.311991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:55.313271      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/09/25 21:43:55.944
  STEP: delete the pod with lifecycle hook @ 09/09/25 21:43:55.98
  E0909 21:43:56.313799      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:57.314756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:58.315592      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:43:59.316980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:00.017159 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5328" for this suite. @ 09/09/25 21:44:00.027
• [10.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/09/25 21:44:00.042
  I0909 21:44:00.042432 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename disruption @ 09/09/25 21:44:00.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:44:00.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:44:00.139
  STEP: Creating a kubernetes client @ 09/09/25 21:44:00.153
  I0909 21:44:00.153168 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename disruption-2 @ 09/09/25 21:44:00.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:44:00.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:44:00.196
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:44:00.203
  E0909 21:44:00.316947      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:01.317216      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:44:02.222
  STEP: Waiting for the pdb to be processed @ 09/09/25 21:44:02.25
  STEP: listing a collection of PDBs across all namespaces @ 09/09/25 21:44:02.256
  STEP: listing a collection of PDBs in namespace disruption-2982 @ 09/09/25 21:44:02.26
  STEP: deleting a collection of PDBs @ 09/09/25 21:44:02.262
  STEP: Waiting for the PDB collection to be deleted @ 09/09/25 21:44:02.279
  I0909 21:44:02.281698 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4355" for this suite. @ 09/09/25 21:44:02.285
  I0909 21:44:02.290466 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0909 21:44:02.318520      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "disruption-2982" for this suite. @ 09/09/25 21:44:02.385
• [2.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 09/09/25 21:44:02.409
  I0909 21:44:02.409806 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 21:44:02.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:44:02.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:44:02.495
  STEP: creating the pod @ 09/09/25 21:44:02.507
  I0909 21:44:02.508559 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-7935 create -f -'
  I0909 21:44:02.809027 22 builder.go:146] stderr: ""
  I0909 21:44:02.809735 22 builder.go:147] stdout: "pod/pause created\n"
  E0909 21:44:03.319247      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:04.319868      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/09/25 21:44:04.842
  I0909 21:44:04.842855 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-7935 label pods pause testing-label=testing-label-value'
  I0909 21:44:04.999051 22 builder.go:146] stderr: ""
  I0909 21:44:04.999103 22 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/09/25 21:44:04.999
  I0909 21:44:04.999183 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-7935 get pod pause -L testing-label'
  I0909 21:44:05.121139 22 builder.go:146] stderr: ""
  I0909 21:44:05.121223 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/09/25 21:44:05.121
  I0909 21:44:05.121299 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-7935 label pods pause testing-label-'
  I0909 21:44:05.212235 22 builder.go:146] stderr: ""
  I0909 21:44:05.212320 22 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/09/25 21:44:05.213
  I0909 21:44:05.221662 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-7935 get pod pause -L testing-label'
  E0909 21:44:05.322525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:05.430743 22 builder.go:146] stderr: ""
  I0909 21:44:05.431062 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 09/09/25 21:44:05.431
  I0909 21:44:05.431663 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-7935 delete --grace-period=0 --force -f -'
  I0909 21:44:05.515752 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0909 21:44:05.515839 22 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0909 21:44:05.515887 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-7935 get rc,svc -l name=pause --no-headers'
  I0909 21:44:05.679732 22 builder.go:146] stderr: "No resources found in kubectl-7935 namespace.\n"
  I0909 21:44:05.679793 22 builder.go:147] stdout: ""
  I0909 21:44:05.679845 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-7935 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0909 21:44:05.831641 22 builder.go:146] stderr: ""
  I0909 21:44:05.831756 22 builder.go:147] stdout: ""
  I0909 21:44:05.832643 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7935" for this suite. @ 09/09/25 21:44:05.838
• [3.441 seconds]
------------------------------
SS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/09/25 21:44:05.849
  I0909 21:44:05.849543 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename controllerrevisions @ 09/09/25 21:44:05.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:44:05.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:44:05.876
  STEP: Creating DaemonSet "e2e-crq9s-daemon-set" @ 09/09/25 21:44:05.943
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/09/25 21:44:05.957
  I0909 21:44:06.065740 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:44:06.065877 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:44:06.075984 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-crq9s-daemon-set: 0
  I0909 21:44:06.076034 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 21:44:06.322448      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:06.979409 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:44:06.980663 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:44:06.986952 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-crq9s-daemon-set: 0
  I0909 21:44:06.987956 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 21:44:07.325138      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:07.975825 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 21:44:07.975896 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 21:44:07.982677 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-crq9s-daemon-set: 2
  I0909 21:44:07.982981 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-crq9s-daemon-set
  STEP: Confirm DaemonSet "e2e-crq9s-daemon-set" successfully created with "daemonset-name=e2e-crq9s-daemon-set" label @ 09/09/25 21:44:07.985
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-crq9s-daemon-set" @ 09/09/25 21:44:07.99
  I0909 21:44:07.993741 22 controller_revision.go:162] Located ControllerRevision: "e2e-crq9s-daemon-set-79c7499644"
  STEP: Patching ControllerRevision "e2e-crq9s-daemon-set-79c7499644" @ 09/09/25 21:44:07.995
  I0909 21:44:08.006262 22 controller_revision.go:173] e2e-crq9s-daemon-set-79c7499644 has been patched
  STEP: Create a new ControllerRevision @ 09/09/25 21:44:08.006
  I0909 21:44:08.011716 22 controller_revision.go:191] Created ControllerRevision: e2e-crq9s-daemon-set-5549f46d4b
  STEP: Confirm that there are two ControllerRevisions @ 09/09/25 21:44:08.011
  I0909 21:44:08.011808 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0909 21:44:08.014213 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-crq9s-daemon-set-79c7499644" @ 09/09/25 21:44:08.014
  STEP: Confirm that there is only one ControllerRevision @ 09/09/25 21:44:08.018
  I0909 21:44:08.018547 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0909 21:44:08.020273 22 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-crq9s-daemon-set-5549f46d4b" @ 09/09/25 21:44:08.022
  I0909 21:44:08.031884 22 controller_revision.go:220] e2e-crq9s-daemon-set-5549f46d4b has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/09/25 21:44:08.031
  I0909 21:44:08.039933      22 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 09/09/25 21:44:08.04
  I0909 21:44:08.040689 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0909 21:44:08.070436 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-crq9s-daemon-set-5549f46d4b=updated" @ 09/09/25 21:44:08.07
  STEP: Confirm that there is only one ControllerRevision @ 09/09/25 21:44:08.104
  I0909 21:44:08.104733 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0909 21:44:08.111739 22 controller_revision.go:265] Found 1 ControllerRevisions
  I0909 21:44:08.120878 22 controller_revision.go:246] ControllerRevision "e2e-crq9s-daemon-set-557c95bc6c" has revision 3
  STEP: Deleting DaemonSet "e2e-crq9s-daemon-set" @ 09/09/25 21:44:08.137
  STEP: deleting DaemonSet.extensions e2e-crq9s-daemon-set in namespace controllerrevisions-9362, will wait for the garbage collector to delete the pods @ 09/09/25 21:44:08.137
  I0909 21:44:08.194802 22 resources.go:139] Deleting DaemonSet.extensions e2e-crq9s-daemon-set took: 5.267821ms
  I0909 21:44:08.296164 22 resources.go:163] Terminating DaemonSet.extensions e2e-crq9s-daemon-set pods took: 101.353792ms
  E0909 21:44:08.323538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:09.324407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:10.325434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:10.802619 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-crq9s-daemon-set: 0
  I0909 21:44:10.802917 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-crq9s-daemon-set
  I0909 21:44:10.807203 22 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34603"},"items":null}

  I0909 21:44:10.811003 22 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34603"},"items":null}

  I0909 21:44:10.825057 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-9362" for this suite. @ 09/09/25 21:44:10.829
• [4.990 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/09/25 21:44:10.844
  I0909 21:44:10.844266 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename tables @ 09/09/25 21:44:10.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:44:10.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:44:10.875
  I0909 21:44:10.883378 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7740" for this suite. @ 09/09/25 21:44:10.889
• [0.054 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/09/25 21:44:10.905
  I0909 21:44:10.906060 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename deployment @ 09/09/25 21:44:10.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:44:10.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:44:10.931
  I0909 21:44:10.973508 22 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  E0909 21:44:11.328569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:12.329125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:13.330408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:14.330480      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:15.331553      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:15.979571 22 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/09/25 21:44:15.98
  I0909 21:44:15.980278 22 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0909 21:44:16.335556      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:17.335886      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:17.985011 22 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0909 21:44:18.003612 22 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0909 21:44:18.336069      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:19.336286      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:20.009746 22 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0909 21:44:20.020371 22 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0909 21:44:20.033320 22 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0909 21:44:20.054753 22 deployment.go:314] Updating deployment test-rollover-deployment
  I0909 21:44:20.054857 22 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0909 21:44:20.337083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:21.337646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:22.066889 22 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0909 21:44:22.075468 22 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0909 21:44:22.085239 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0909 21:44:22.085358 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 44, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 21:44:22.338283      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:23.338511      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:24.097588 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0909 21:44:24.098830 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 44, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 21:44:24.338878      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:25.339120      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:26.096069 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0909 21:44:26.096207 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 44, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 21:44:26.340485      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:27.341555      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:28.105813 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0909 21:44:28.106035 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 44, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 21:44:28.342156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:29.342262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:30.095024 22 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0909 21:44:30.095942 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 21, 44, 21, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 21, 44, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 21:44:30.343317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:31.344268      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:32.092403 22 deployment.go:95] 
  I0909 21:44:32.092871 22 deployment.go:993] Ensure that both old replica sets have no replicas
  I0909 21:44:32.101337 22 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7034",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d85ae874-571c-488c-a7c6-46dc95c43740",
      ResourceVersion: (string) (len=5) "34815",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893051057,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0909 21:44:32.120781 22 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7034",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce93f504-ab65-4110-9079-623d5f2ac3fa",
      ResourceVersion: (string) (len=5) "34805",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893051060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d85ae874-571c-488c-a7c6-46dc95c43740",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 38 35 61 65 38  37 34 2d 35 37 31 63 2d  |\"d85ae874-571c-|
              00000120  34 38 38 63 2d 61 37 63  36 2d 34 36 64 63 39 35  |488c-a7c6-46dc95|
              00000130  63 34 33 37 34 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c43740\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 21:44:32.122446 22 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0909 21:44:32.123105 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7034",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d78c54e3-4196-478a-ac15-9d490159ac26",
      ResourceVersion: (string) (len=5) "34814",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893051050,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d85ae874-571c-488c-a7c6-46dc95c43740",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051050,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  64 38 35 61 65 38 37 34  2d 35 37 31 63 2d 34 38  |d85ae874-571c-48|
              000000c0  38 63 2d 61 37 63 36 2d  34 36 64 63 39 35 63 34  |8c-a7c6-46dc95c4|
              000000d0  33 37 34 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |3740\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051071,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 21:44:32.128540 22 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7034",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df9a8d4e-8b14-4425-9959-aaebe3d5dca3",
      ResourceVersion: (string) (len=5) "34742",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893051058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d85ae874-571c-488c-a7c6-46dc95c43740",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 38 35 61 65 38  37 34 2d 35 37 31 63 2d  |\"d85ae874-571c-|
              00000120  34 38 38 63 2d 61 37 63  36 2d 34 36 64 63 39 35  |488c-a7c6-46dc95|
              00000130  63 34 33 37 34 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c43740\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 21:44:32.134704 22 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-xnn8x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-xnn8x",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-7034",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbfac624-64ae-4aa8-9811-fc88db4d55b9",
      ResourceVersion: (string) (len=5) "34759",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893051060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "521f7a0d9c050faa139d9faa7714321a5c2aea251b5d84a9d2a8580ff15af89c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.15/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.15/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.15\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "ce93f504-ab65-4110-9079-623d5f2ac3fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 65  39 33 66 35 30 34 2d 61  |d\":\"ce93f504-a|
              00000090  62 36 35 2d 34 31 31 30  2d 39 30 37 39 2d 36 32  |b65-4110-9079-62|
              000000a0  33 64 35 66 32 61 63 33  66 61 5c 22 7d 22 3a 7b  |3d5f2ac3fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 35  5c 22 7d 22 3a 7b 22 2e  |.42.3.15\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-82ckv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-82ckv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893051060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=10) "10.42.3.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893051060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893051061,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://5062bcb591d5e43beb18771a46a1cd4e762c5f54d6e3da6a6c6b0ef215a10a89",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-82ckv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 21:44:32.153834 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7034" for this suite. @ 09/09/25 21:44:32.16
• [21.265 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/09/25 21:44:32.171
  I0909 21:44:32.171989 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 21:44:32.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:44:32.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:44:32.194
  STEP: Setting up server cert @ 09/09/25 21:44:32.272
  E0909 21:44:32.344421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 21:44:32.86
  STEP: Deploying the webhook pod @ 09/09/25 21:44:32.867
  STEP: Wait for the deployment to be ready @ 09/09/25 21:44:32.897
  I0909 21:44:32.927023 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 21:44:33.344715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:34.345124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 21:44:34.94
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 21:44:34.993
  E0909 21:44:35.345756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:35.995017 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/09/25 21:44:36
  STEP: create a pod @ 09/09/25 21:44:36.039
  E0909 21:44:36.346532      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:37.346740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/09/25 21:44:38.07
  I0909 21:44:38.070182 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=webhook-3865 attach --namespace=webhook-3865 to-be-attached-pod -i -c=container1'
  I0909 21:44:38.206932 22 builder.go:135] rc: 1
  I0909 21:44:38.302821 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3865" for this suite. @ 09/09/25 21:44:38.314
  STEP: Destroying namespace "webhook-markers-2148" for this suite. @ 09/09/25 21:44:38.325
• [6.159 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/09/25 21:44:38.331
  I0909 21:44:38.331614 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 21:44:38.333
  E0909 21:44:38.349380      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:44:38.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:44:38.355
  STEP: Creating configMap configmap-1411/configmap-test-02cd1bc2-079f-4480-b40c-cc14786a44e1 @ 09/09/25 21:44:38.357
  STEP: Creating a pod to test consume configMaps @ 09/09/25 21:44:38.361
  E0909 21:44:39.351341      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:40.351972      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:41.351651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:42.351993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:44:42.397
  I0909 21:44:42.401575 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-configmaps-620d5eb5-bf84-41e5-b28b-a97e8952bdc6 container env-test: <nil>
  STEP: delete the pod @ 09/09/25 21:44:42.412
  I0909 21:44:42.442020 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1411" for this suite. @ 09/09/25 21:44:42.451
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/09/25 21:44:42.468
  I0909 21:44:42.468380 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 21:44:42.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:44:42.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:44:42.506
  STEP: Creating configMap with name projected-configmap-test-volume-a3edb432-b7a5-469e-9943-e969263cccc1 @ 09/09/25 21:44:42.513
  STEP: Creating a pod to test consume configMaps @ 09/09/25 21:44:42.521
  E0909 21:44:43.351790      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:44.352732      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:45.353454      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:46.354203      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:44:46.566
  I0909 21:44:46.569109 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-projected-configmaps-6c080dfe-4f7f-4828-9552-b526c00210c4 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 21:44:46.577
  I0909 21:44:46.614604 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-407" for this suite. @ 09/09/25 21:44:46.629
• [4.192 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 09/09/25 21:44:46.665
  I0909 21:44:46.666387 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename proxy @ 09/09/25 21:44:46.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:44:46.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:44:46.692
  I0909 21:44:46.697301 22 proxy.go:336] Creating pod...
  E0909 21:44:47.376974      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:48.360450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:48.729384 22 proxy.go:360] Creating service...
  I0909 21:44:48.758593 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/pods/agnhost/proxy/some/path/with/DELETE
  I0909 21:44:48.797200 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0909 21:44:48.797292 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/pods/agnhost/proxy/some/path/with/GET
  I0909 21:44:48.806468 22 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0909 21:44:48.806545 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/pods/agnhost/proxy/some/path/with/HEAD
  I0909 21:44:48.810287 22 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0909 21:44:48.810356 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/pods/agnhost/proxy/some/path/with/OPTIONS
  I0909 21:44:48.820962 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0909 21:44:48.821044 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/pods/agnhost/proxy/some/path/with/PATCH
  I0909 21:44:48.833218 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0909 21:44:48.833356 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/pods/agnhost/proxy/some/path/with/POST
  I0909 21:44:48.837623 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0909 21:44:48.837723 22 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/pods/agnhost/proxy/some/path/with/PUT
  I0909 21:44:48.844536 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0909 21:44:48.844761 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/services/test-service/proxy/some/path/with/DELETE
  I0909 21:44:48.859181 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0909 21:44:48.859300 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/services/test-service/proxy/some/path/with/GET
  I0909 21:44:48.867760 22 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0909 21:44:48.867998 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/services/test-service/proxy/some/path/with/HEAD
  I0909 21:44:48.875076 22 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0909 21:44:48.875435 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/services/test-service/proxy/some/path/with/OPTIONS
  I0909 21:44:48.880087 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0909 21:44:48.880158 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/services/test-service/proxy/some/path/with/PATCH
  I0909 21:44:48.885036 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0909 21:44:48.885143 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/services/test-service/proxy/some/path/with/POST
  I0909 21:44:48.889974 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0909 21:44:48.894452 22 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1924/services/test-service/proxy/some/path/with/PUT
  I0909 21:44:48.897975 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0909 21:44:48.898151 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1924" for this suite. @ 09/09/25 21:44:48.904
• [2.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 09/09/25 21:44:48.914
  I0909 21:44:48.914821 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-probe @ 09/09/25 21:44:48.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:44:48.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:44:48.949
  STEP: Creating pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375 @ 09/09/25 21:44:48.951
  E0909 21:44:49.361665      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:50.362050      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/09/25 21:44:50.99
  I0909 21:44:50.993912 22 container_probe.go:1748] Initial restart count of pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 is 0
  I0909 21:44:50.997877 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:44:51.362415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:52.363449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:53.000654 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:44:53.364156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:54.364563      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:55.004218 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:44:55.364926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:56.365109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:57.009015 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:44:57.365352      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:44:58.365681      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:44:59.013537 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:44:59.369249      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:00.369422      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:01.018529 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:01.370278      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:02.370993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:03.024662 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:03.371180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:04.371814      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:05.028409 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:05.371881      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:06.372095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:07.032749 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:07.373077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:08.373304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:09.038035 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:09.373532      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:10.374513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:11.043785 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  I0909 21:45:11.044233 22 container_probe.go:1762] Restart count of pod container-probe-5375/liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 is now 1 (20.050151132s elapsed)
  E0909 21:45:11.375160      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:12.375359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:13.049812 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:13.376985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:14.378032      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:15.054332 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:15.379166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:16.379434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:17.060095 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:17.382122      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:18.382597      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:19.065457 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:19.383048      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:20.383049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:21.069929 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:21.383439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:22.384003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:23.075700 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:23.384535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:24.385042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:25.080599 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:25.385238      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:26.385421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:27.084337 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:27.388990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:28.389457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:29.088895 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:29.390215      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:30.390770      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:31.094750 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  I0909 21:45:31.096233 22 container_probe.go:1762] Restart count of pod container-probe-5375/liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 is now 2 (40.102058887s elapsed)
  E0909 21:45:31.391291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:32.392074      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:33.103877 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:33.393349      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:34.393405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:35.111738 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:35.394883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:36.394712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:37.117493 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:37.395374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:38.396069      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:39.127351 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:39.396905      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:40.397105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:41.135700 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:41.398187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:42.398902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:43.146512 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:43.399566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:44.400605      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:45.153401 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:45.400876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:46.401220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:47.160106 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:47.401998      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:48.402639      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:49.165102 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:49.404197      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:50.405380      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:51.183308 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  I0909 21:45:51.187802 22 container_probe.go:1762] Restart count of pod container-probe-5375/liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 is now 3 (1m0.193714425s elapsed)
  E0909 21:45:51.405589      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:52.406270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:53.193402 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:53.409427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:54.409652      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:55.198389 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:55.410544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:56.411620      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:57.204359 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:57.411595      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:45:58.412228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:45:59.209450 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:45:59.413120      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:00.413112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:01.214680 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:01.415529      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:02.417018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:03.220305 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:03.417161      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:04.417360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:05.226075 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:05.418298      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:06.418890      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:07.231840 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:07.421068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:08.421960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:09.236097 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:09.423092      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:10.423032      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:11.241110 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  I0909 21:46:11.241208 22 container_probe.go:1762] Restart count of pod container-probe-5375/liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 is now 4 (1m20.247125589s elapsed)
  E0909 21:46:11.423630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:12.423900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:13.246749 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:13.425071      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:14.425273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:15.254502 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:15.425351      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:16.425588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:17.260635 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:17.429252      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:18.429612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:19.267124 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:19.430323      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:20.430831      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:21.273065 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:21.431811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:22.432161      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:23.277950 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:23.433172      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:24.433403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:25.282700 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:25.434357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:26.434527      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:27.288055 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:27.439282      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:28.439478      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:29.291776 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:29.439866      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:30.440668      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:31.296906 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:31.441409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:32.441645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:33.301926 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:33.442296      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:34.442895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:35.307066 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:35.443009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:36.445243      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:37.312997 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:37.453001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:38.454400      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:39.318388 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:39.455395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:40.455617      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:41.323054 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:41.457010      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:42.456490      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:43.328400 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:43.456619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:44.456940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:45.333938 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:45.457164      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:46.457212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:47.340277 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:47.459235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:48.462598      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:49.346551 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:49.459757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:50.460005      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:51.356895 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:51.460930      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:52.461061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:53.363461 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:53.461798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:54.461818      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:55.370700 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:55.462464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:56.462694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:57.378240 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:57.464700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:46:58.465029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:46:59.382385 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:46:59.467269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:00.466293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:47:01.386534 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:47:01.466545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:02.466782      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:47:03.391401 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:47:03.467637      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:04.469450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:47:05.395830 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:47:05.469980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:06.470285      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:47:07.402253 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:47:07.471638      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:08.471901      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:47:09.407424 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:47:09.472871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:10.473033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:47:11.411434 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  E0909 21:47:11.473641      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:12.474315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:47:13.429546 22 container_probe.go:1758] Get pod liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 in namespace container-probe-5375
  I0909 21:47:13.429942 22 container_probe.go:1762] Restart count of pod container-probe-5375/liveness-89ae38f6-90e7-4396-9ee8-3d2140acba63 is now 5 (2m22.435861463s elapsed)
  STEP: deleting the pod @ 09/09/25 21:47:13.43
  I0909 21:47:13.472981 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0909 21:47:13.479297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-5375" for this suite. @ 09/09/25 21:47:13.498
• [144.614 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 09/09/25 21:47:13.528
  I0909 21:47:13.528633 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 21:47:13.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:47:13.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:47:13.574
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/09/25 21:47:13.577
  I0909 21:47:13.577643 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-2291 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0909 21:47:13.779580 22 builder.go:146] stderr: ""
  I0909 21:47:13.779634 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/09/25 21:47:13.779
  I0909 21:47:13.789323 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-2291 delete pods e2e-test-httpd-pod'
  E0909 21:47:14.475967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:15.476111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:47:15.574340 22 builder.go:146] stderr: ""
  I0909 21:47:15.574426 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0909 21:47:15.574902 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2291" for this suite. @ 09/09/25 21:47:15.582
• [2.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/09/25 21:47:15.594
  I0909 21:47:15.594478 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename chunking @ 09/09/25 21:47:15.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:47:15.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:47:15.626
  STEP: creating a large number of resources @ 09/09/25 21:47:15.63
  E0909 21:47:16.477296      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:17.479391      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:18.480208      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:19.480878      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:20.481200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:21.481948      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:22.490635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:23.491471      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:24.492139      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:25.493029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:26.493834      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:27.493916      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:28.494386      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:29.495554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:30.496595      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:31.497403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:32.498026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:47:32.865696      22 request.go:752] "Waited before sending request" delay="1.006050216s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.43.0.1:443/api/v1/namespaces/chunking-8157/podtemplates"
  STEP: retrieving the first page @ 09/09/25 21:47:33.313
  I0909 21:47:33.357592 22 chunking.go:163] Retrieved 40/40 results with rv 36308 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/09/25 21:47:33.357
  E0909 21:47:33.499683      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:34.499439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:35.499836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:36.500134      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:37.500646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:38.501023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:39.501135      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:40.502303      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:41.503466      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:42.504254      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:43.504296      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:44.505364      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:45.504880      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:46.505077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:47.505173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:48.505522      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:49.505789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:50.506035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:51.506218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:52.506544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:47:53.368028 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:47:53.506575      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:54.507432      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:55.507720      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:56.509178      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:57.509026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:58.509360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:47:59.509500      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:00.512435      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:01.513667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:02.513666      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:03.514537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:04.514668      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:05.515227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:06.515647      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:07.515846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:08.516125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:09.516175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:10.516788      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:11.517922      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:12.518400      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:48:13.362525 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:48:13.519321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:14.520432      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:15.521267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:16.521053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:17.521122      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:18.521976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:19.522676      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:20.522913      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:21.523268      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:22.524171      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:23.524949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:24.525087      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:25.525758      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:26.526475      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:27.527177      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:28.527615      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:29.529217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:30.529739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:31.529845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:32.530737      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:48:33.378124 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:48:33.531113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:34.533750      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:35.533103      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:36.533183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:37.533418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:38.534449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:39.534351      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:40.534629      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:41.535631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:42.535824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:43.535879      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:44.536102      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:45.536331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:46.537116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:47.537238      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:48.537832      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:49.538070      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:50.538206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:51.538456      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:52.538654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:48:53.365060 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:48:53.538808      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:54.540930      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:55.540265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:56.542919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:57.541967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:58.542909      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:48:59.543560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:00.544202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:01.544459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:02.544686      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:03.545274      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:04.545924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:05.546544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:06.547166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:07.547426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:08.549019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:09.548614      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:10.549764      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:11.550530      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:12.551105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:49:13.365535 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:49:13.552296      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:14.552444      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:15.553090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:16.553136      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:17.557058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:18.557249      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:19.557784      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:20.557987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:21.558375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:22.559430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:23.560070      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:24.560410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:25.560479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:26.561314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:27.562242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:28.562508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:29.563222      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:30.563427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:31.563619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:32.563824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:49:33.363197 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:49:33.564692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:34.565340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:35.567452      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:36.567639      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:37.567976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:38.568969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:39.569551      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:40.569761      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:41.570555      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:42.570799      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:43.572023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:44.572296      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:45.573289      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:46.573520      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:47.574740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:48.574641      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:49.574895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:50.575551      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:51.576573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:52.577865      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:49:53.366017 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:49:53.578767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:54.579060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:55.579385      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:56.579823      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:57.580290      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:58.581130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:49:59.582187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:00.585032      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:01.585648      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:02.588311      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:03.587779      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:04.588968      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:05.589224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:06.589361      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:07.589807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:08.590557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:09.590866      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:10.591520      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:11.591990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:12.597107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:50:13.363519 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:50:13.597932      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:14.597795      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:15.598273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:16.599126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:17.599541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:18.600559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:19.600989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:20.601243      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:21.602150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:22.605059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:23.605612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:24.606002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:25.606235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:26.606381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:27.606658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:28.607379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:29.607579      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:30.607792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:31.608003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:32.608112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:50:33.366428 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:50:33.609259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:34.609469      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:35.610051      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:36.610293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:37.611040      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:38.611259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:39.612338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:40.613194      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:41.613767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:42.614069      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:43.614699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:44.614900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:45.615095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:46.615398      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:47.616284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:48.616915      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:49.617626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:50.618685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:51.619578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:52.621030      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:50:53.364671 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:50:53.621992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:54.622348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:55.622707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:56.623633      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:57.624234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:58.625152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:50:59.625530      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:00.625895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:01.626107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:02.631086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:03.632318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:04.633119      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:05.633814      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:06.634024      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:07.634230      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:08.634584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:09.634700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:10.635521      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:11.636249      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:12.636995      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:51:13.376960 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:51:13.637374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:14.637988      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:15.638153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:16.638094      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:17.638766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:18.640380      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:19.639919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:20.640706      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:21.641027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:22.641086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:23.641565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:24.641777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:25.642658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:26.643870      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:27.644147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:28.644581      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:29.645194      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:30.645373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:31.645591      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:32.645883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:51:33.366396 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:51:33.646423      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:34.646739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:35.646973      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:36.647259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:37.647460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:38.647548      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:39.647622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:40.647870      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:41.648067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:42.652959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:43.653635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:44.653834      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:45.654053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:46.654201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:47.654310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:48.655123      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:49.655313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:50.655484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:51.655753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:52.657173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:51:53.369202 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:51:53.658789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:54.659378      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:55.659528      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:56.659778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:57.660082      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:58.660883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:51:59.661134      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:00.661985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:01.662153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:02.665141      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:03.665383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:04.665678      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:05.666080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:06.666310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:07.670662      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:08.668578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:09.668891      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:10.669088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:11.669287      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:12.669595      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:52:13.365848 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:52:13.669772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:14.671752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:15.671992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:16.672572      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:17.672905      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:18.675828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:19.674038      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:20.673840      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:21.674806      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:22.674950      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:23.675963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:24.676999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:25.677640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:26.685063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:27.687687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:28.688206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:29.688900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:30.689207      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:31.690062      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:32.690172      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:52:33.364611 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:52:33.690840      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:34.691191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:35.691424      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:36.691633      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:37.691953      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:38.692162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:39.692423      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:40.692660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:41.693077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:42.693116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:43.693280      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:44.693541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:45.693832      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:46.694061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:47.694409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:48.694912      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:49.696096      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:50.696386      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:51.697235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:52.697322      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:52:53.365362 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:52:53.698194      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:54.698300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:55.698528      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:56.698748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:57.698962      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:58.699160      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:52:59.699442      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:00.699626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:01.700265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:02.700395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:03.700752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:04.702348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:05.702481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:06.703050      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:07.703353      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:08.703961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:09.704557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:10.705313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:11.705540      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:12.710252      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:53:13.367114 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzYzMDgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0909 21:53:13.707144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:14.707411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:15.708306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:16.709055      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:17.709460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:18.710015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:19.710405      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:20.711513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:21.712324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:22.712612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:23.713993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:24.714231      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:25.714449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:26.714620      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:27.715011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:28.716979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:29.717064      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:30.718269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:31.718410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:32.718672      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:53:33.363739 22 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0909 21:53:33.363776 22 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/09/25 21:53:33.363
  STEP: retrieving all remaining pages @ 09/09/25 21:53:33.371
  I0909 21:53:33.376616 22 chunking.go:221] Retrieved 40/40 results with rv 37869 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NjksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0909 21:53:33.385233 22 chunking.go:221] Retrieved 40/40 results with rv 37869 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NjksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0909 21:53:33.389323 22 chunking.go:221] Retrieved 40/40 results with rv 37869 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NjksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0909 21:53:33.396370 22 chunking.go:221] Retrieved 40/40 results with rv 37869 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NjksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0909 21:53:33.399827 22 chunking.go:221] Retrieved 40/40 results with rv 37869 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NjksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0909 21:53:33.404590 22 chunking.go:221] Retrieved 40/40 results with rv 37869 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NjksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0909 21:53:33.408319 22 chunking.go:221] Retrieved 40/40 results with rv 37869 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc4NjksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0909 21:53:33.412870 22 chunking.go:221] Retrieved 40/40 results with rv 37869 and continue 
  I0909 21:53:33.413746 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8157" for this suite. @ 09/09/25 21:53:33.419
• [377.833 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/09/25 21:53:33.434
  I0909 21:53:33.434385 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 21:53:33.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:53:33.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:53:33.465
  STEP: Setting up server cert @ 09/09/25 21:53:33.546
  E0909 21:53:33.718743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 21:53:33.788
  STEP: Deploying the webhook pod @ 09/09/25 21:53:33.797
  STEP: Wait for the deployment to be ready @ 09/09/25 21:53:33.816
  I0909 21:53:33.829746 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 21:53:34.720710      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:35.720277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 21:53:35.846
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 21:53:35.887
  E0909 21:53:36.720662      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:53:36.888322 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/09/25 21:53:36.896
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/09/25 21:53:36.944
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/09/25 21:53:36.97
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/09/25 21:53:36.989
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/09/25 21:53:37.016
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/09/25 21:53:37.032
  I0909 21:53:37.118937 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1954" for this suite. @ 09/09/25 21:53:37.132
  STEP: Destroying namespace "webhook-markers-6625" for this suite. @ 09/09/25 21:53:37.142
• [3.720 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/09/25 21:53:37.157
  I0909 21:53:37.157514 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename watch @ 09/09/25 21:53:37.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:53:37.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:53:37.182
  STEP: getting a starting resourceVersion @ 09/09/25 21:53:37.185
  STEP: starting a background goroutine to produce watch events @ 09/09/25 21:53:37.191
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/09/25 21:53:37.191
  E0909 21:53:37.721395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:38.741378      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:39.740526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:53:39.967533 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6948" for this suite. @ 09/09/25 21:53:40.02
• [2.916 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 09/09/25 21:53:40.083
  I0909 21:53:40.084012 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename namespaces @ 09/09/25 21:53:40.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:53:40.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:53:40.112
  STEP: creating a Namespace @ 09/09/25 21:53:40.119
  STEP: patching the Namespace @ 09/09/25 21:53:40.141
  STEP: get the Namespace and ensuring it has the label @ 09/09/25 21:53:40.153
  I0909 21:53:40.157249 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-876" for this suite. @ 09/09/25 21:53:40.161
  STEP: Destroying namespace "nspatchtest-9a84602b-5aec-486f-a37c-c9812047343b-4472" for this suite. @ 09/09/25 21:53:40.174
• [0.104 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 09/09/25 21:53:40.187
  I0909 21:53:40.187770 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename svcaccounts @ 09/09/25 21:53:40.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:53:40.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:53:40.218
  E0909 21:53:40.741580      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:41.741817      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/09/25 21:53:42.26
  I0909 21:53:42.260474 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6928 pod-service-account-39edc0e0-6100-4214-bfda-d874e42b4a07 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/09/25 21:53:42.585
  I0909 21:53:42.585420 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6928 pod-service-account-39edc0e0-6100-4214-bfda-d874e42b4a07 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0909 21:53:42.744984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/09/25 21:53:42.952
  I0909 21:53:42.953000 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6928 pod-service-account-39edc0e0-6100-4214-bfda-d874e42b4a07 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0909 21:53:43.313341 22 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-6928"
  I0909 21:53:43.316456 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6928" for this suite. @ 09/09/25 21:53:43.322
• [3.145 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 09/09/25 21:53:43.336
  I0909 21:53:43.336189 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename gc @ 09/09/25 21:53:43.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:53:43.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:53:43.362
  STEP: create the deployment @ 09/09/25 21:53:43.365
  I0909 21:53:43.377633      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/09/25 21:53:43.377
  STEP: delete the deployment @ 09/09/25 21:53:43.502
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/09/25 21:53:43.516
  E0909 21:53:43.745920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/09/25 21:53:44.127
  I0909 21:53:44.272954 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0909 21:53:44.273124 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-961" for this suite. @ 09/09/25 21:53:44.279
• [0.954 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 09/09/25 21:53:44.29
  I0909 21:53:44.290309 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename statefulset @ 09/09/25 21:53:44.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:53:44.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:53:44.326
  STEP: Creating service test in namespace statefulset-4735 @ 09/09/25 21:53:44.329
  STEP: Creating stateful set ss in namespace statefulset-4735 @ 09/09/25 21:53:44.34
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4735 @ 09/09/25 21:53:44.358
  I0909 21:53:44.366350 22 wait.go:44] Found 0 stateful pods, waiting for 1
  E0909 21:53:44.747117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:45.747551      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:46.748631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:47.749713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:48.750432      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:49.750616      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:50.750706      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:51.751843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:52.754529      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:53.754864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:53:54.366370 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/09/25 21:53:54.367
  I0909 21:53:54.372029 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-4735 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0909 21:53:54.636510 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0909 21:53:54.636560 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0909 21:53:54.636581 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0909 21:53:54.640177 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0909 21:53:54.755027      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:55.756024      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:56.756510      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:57.756158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:58.756324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:53:59.756600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:00.756705      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:01.757048      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:02.766438      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:03.759051      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:04.644049 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0909 21:54:04.644140 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0909 21:54:04.680350 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.99999948s
  E0909 21:54:04.761076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:05.685440 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.986190052s
  E0909 21:54:05.762546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:06.706402 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.980747923s
  E0909 21:54:06.762593      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:07.712098 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.960028222s
  E0909 21:54:07.763534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:08.720240 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.953491699s
  E0909 21:54:08.764305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:09.739774 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.941773848s
  E0909 21:54:09.764592      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:10.754970 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.920295775s
  E0909 21:54:10.764379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:11.765294 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.911125696s
  E0909 21:54:11.766370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:12.766535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:12.768928 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.900682016s
  E0909 21:54:13.767166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:13.775529 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 897.368171ms
  E0909 21:54:14.767663      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4735 @ 09/09/25 21:54:14.776
  I0909 21:54:14.784636 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-4735 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0909 21:54:15.050292 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0909 21:54:15.050355 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0909 21:54:15.051133 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0909 21:54:15.051307 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-4735 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0909 21:54:15.321213 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0909 21:54:15.321274 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0909 21:54:15.321294 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0909 21:54:15.321362 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-4735 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0909 21:54:15.549503 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0909 21:54:15.549592 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0909 21:54:15.549618 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0909 21:54:15.555372 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0909 21:54:15.555393 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0909 21:54:15.555400 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/09/25 21:54:15.555
  I0909 21:54:15.558664 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-4735 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0909 21:54:15.768442      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:15.792049 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0909 21:54:15.792113 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0909 21:54:15.792134 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0909 21:54:15.792212 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-4735 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0909 21:54:16.069309 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0909 21:54:16.069456 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0909 21:54:16.069514 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0909 21:54:16.069586 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-4735 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0909 21:54:16.350583 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0909 21:54:16.350674 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0909 21:54:16.350699 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0909 21:54:16.350719 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0909 21:54:16.355520 22 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 1
  E0909 21:54:16.769455      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:17.770291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:18.771242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:19.771677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:20.772195      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:21.772246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:22.772437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:23.772928      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:24.773120      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:25.773315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:26.362724 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0909 21:54:26.363057 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0909 21:54:26.363079 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0909 21:54:26.406663 22 resource.go:168] POD   NODE                      PHASE    GRACE  CONDITIONS
  I0909 21:54:26.406804 22 resource.go:175] ss-0  oneke-ip-192-168-150-105  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:53:46 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:53:44 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:53:44 +0000 UTC  }]
  I0909 21:54:26.406848 22 resource.go:175] ss-1  oneke-ip-192-168-150-103  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:06 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:04 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:04 +0000 UTC  }]
  I0909 21:54:26.406887 22 resource.go:175] ss-2  oneke-ip-192-168-150-103  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:06 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:04 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 21:54:04 +0000 UTC  }]
  I0909 21:54:26.406899 22 resource.go:178] 
  I0909 21:54:26.406914 22 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E0909 21:54:26.774034      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:27.414000 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 8.974346869s
  E0909 21:54:27.774907      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:28.418566 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.967109225s
  E0909 21:54:28.775486      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:29.426640 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.960821012s
  E0909 21:54:29.776780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:30.433291 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.954006789s
  E0909 21:54:30.777706      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:31.439565 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.946797265s
  E0909 21:54:31.778076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:32.458555 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.940360522s
  E0909 21:54:32.778709      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:33.463503 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.922567537s
  E0909 21:54:33.779160      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:34.468245 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.917155507s
  E0909 21:54:34.780139      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:35.471275 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 912.804599ms
  E0909 21:54:35.781375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4735 @ 09/09/25 21:54:36.472
  I0909 21:54:36.478784 22 rest.go:153] Scaling statefulset ss to 0
  I0909 21:54:36.493092 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0909 21:54:36.497495 22 statefulset.go:138] Deleting all statefulset in ns statefulset-4735
  I0909 21:54:36.501048 22 rest.go:153] Scaling statefulset ss to 0
  I0909 21:54:36.578285 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0909 21:54:36.580167 22 rest.go:91] Deleting statefulset ss
  I0909 21:54:36.596265 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4735" for this suite. @ 09/09/25 21:54:36.602
• [52.321 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/09/25 21:54:36.611
  I0909 21:54:36.611894 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename init-container @ 09/09/25 21:54:36.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:54:36.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:54:36.641
  STEP: creating the pod @ 09/09/25 21:54:36.643
  I0909 21:54:36.643860 22 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0909 21:54:36.782483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:37.783560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:38.784594      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:39.785194      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:40.753888 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2483" for this suite. @ 09/09/25 21:54:40.765
• [4.168 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 09/09/25 21:54:40.781
  I0909 21:54:40.781359 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename gc @ 09/09/25 21:54:40.784
  E0909 21:54:40.788091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:54:40.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:54:40.81
  STEP: create the rc @ 09/09/25 21:54:40.815
  I0909 21:54:40.824136      22 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0909 21:54:41.788045      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:42.789175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:43.789883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:44.791018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:45.790533      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/09/25 21:54:45.828
  STEP: wait for all pods to be garbage collected @ 09/09/25 21:54:45.834
  E0909 21:54:46.790982      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:47.791231      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:48.791701      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:49.792118      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:50.792314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/09/25 21:54:50.843
  I0909 21:54:50.988548 22 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0909 21:54:50.988702 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4027" for this suite. @ 09/09/25 21:54:50.991
• [10.220 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 09/09/25 21:54:51.006
  I0909 21:54:51.006324 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename servicecidr @ 09/09/25 21:54:51.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:54:51.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:54:51.038
  STEP: getting @ 09/09/25 21:54:51.046
  STEP: patching @ 09/09/25 21:54:51.05
  STEP: updating @ 09/09/25 21:54:51.058
  STEP: listing @ 09/09/25 21:54:51.095
  STEP: watching @ 09/09/25 21:54:51.101
  I0909 21:54:51.103726 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-6174" for this suite. @ 09/09/25 21:54:51.106
• [0.111 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/09/25 21:54:51.117
  I0909 21:54:51.118103 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 21:54:51.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:54:51.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:54:51.139
  STEP: Creating secret with name secret-test-9847b7da-3aff-449b-a311-ef3b54be2ed5 @ 09/09/25 21:54:51.144
  STEP: Creating a pod to test consume secrets @ 09/09/25 21:54:51.151
  E0909 21:54:51.792603      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:52.793014      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:53.794203      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:54.795055      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:54:55.187
  I0909 21:54:55.190851 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-secrets-4d8454a1-1a70-4441-b564-1c7e484b98be container secret-env-test: <nil>
  STEP: delete the pod @ 09/09/25 21:54:55.24
  I0909 21:54:55.287805 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2918" for this suite. @ 09/09/25 21:54:55.294
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/09/25 21:54:55.318
  I0909 21:54:55.319183 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename containers @ 09/09/25 21:54:55.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:54:55.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:54:55.339
  E0909 21:54:55.795233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:56.797213      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:57.803084      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:54:58.796183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:54:59.455241 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-864" for this suite. @ 09/09/25 21:54:59.473
• [4.164 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 09/09/25 21:54:59.482
  I0909 21:54:59.482808 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-probe @ 09/09/25 21:54:59.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:54:59.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:54:59.514
  STEP: Creating pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793 @ 09/09/25 21:54:59.517
  E0909 21:54:59.797406      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:00.797026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/09/25 21:55:01.536
  I0909 21:55:01.540482 22 container_probe.go:1748] Initial restart count of pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f is 0
  I0909 21:55:01.542511 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:01.798032      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:02.798561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:03.547956 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:03.799612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:04.801240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:05.554159 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:05.800552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:06.801549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:07.558916 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:07.802628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:08.803261      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:09.563731 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:09.804238      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:10.806280      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:11.571004 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:11.805835      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:12.806731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:13.577087 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:13.807959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:14.808301      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:15.583814 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:15.808963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:16.809292      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:17.590805 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:17.813351      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:18.812596      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:19.600420 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:19.813201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:20.814693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:21.605515 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:21.815721      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:22.817009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:23.613451 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:23.818220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:24.818664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:25.618132 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:25.819535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:26.820387      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:27.624207 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:27.821348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:28.822318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:29.630049 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:29.823748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:30.824166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:31.634148 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:31.824682      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:32.825066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:33.639257 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:33.825172      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:34.825482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:35.645103 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:35.826105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:36.826752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:37.650698 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:37.827247      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:38.828446      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:39.656557 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:39.829003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:40.829729      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:41.662587 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:41.830218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:42.833055      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:43.666805 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:43.833179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:44.834193      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:45.673684 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:45.835117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:46.835756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:47.680161 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:47.836346      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:48.836368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:49.686184 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:49.836473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:50.836680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:51.692239 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:51.836760      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:52.837042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:53.696529 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:53.837161      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:54.837279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:55.701316 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:55.837936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:56.838073      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:57.706825 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:57.839166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:55:58.839701      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:55:59.711251 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:55:59.840210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:00.840170      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:01.715978 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:01.840324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:02.841870      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:03.722224 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:03.843499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:04.843053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:05.728051 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:05.843377      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:06.843685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:07.734303 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:07.844428      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:08.845905      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:09.738085 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:09.846540      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:10.846943      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:11.746498 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:11.847504      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:12.847906      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:13.750693 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:13.849066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:14.850796      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:15.755579 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:15.850240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:16.850957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:17.759503 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:17.850968      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:18.852188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:19.765050 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:19.852476      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:20.853033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:21.772141 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:21.853483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:22.853867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:23.782212 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:23.855114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:24.855669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:25.788788 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:25.855615      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:26.855540      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:27.797980 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:27.858542      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:28.860428      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:29.803790 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:29.861111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:30.861759      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:31.810180 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:31.862096      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:32.867278      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:33.819030 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:33.867952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:34.868473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:35.834032 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:35.870030      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:36.869945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:37.848642 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:37.872974      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:38.873191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:39.861888 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:39.878565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:40.879186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:41.869682 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:41.879451      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:42.881103      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:43.882644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:43.883742 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:44.883100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:45.885566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:45.888895 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:46.885434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:47.886369      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:47.895222 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:48.887559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:49.887722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:49.908353 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:50.888531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:51.889200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:51.918937 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:52.889218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:53.889941      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:53.928161 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:54.890248      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:55.891063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:55.934595 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:56.891092      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:57.891439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:57.939961 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:56:58.892534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:56:59.892989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:56:59.946023 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:00.893210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:01.893426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:01.952724 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:02.894290      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:03.894552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:03.958622 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:04.894728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:05.894824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:05.967061 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:06.895178      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:07.895828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:07.985778 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:08.896688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:09.897143      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:09.991786 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:10.898190      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:11.897938      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:11.997040 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:12.899499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:13.900636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:14.001769 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:14.900893      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:15.901918      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:16.007234 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:16.902745      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:17.902877      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:18.014459 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:18.904759      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:19.903882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:20.021662 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:20.904678      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:21.904834      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:22.026954 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:22.909020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:23.909408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:24.033852 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:24.911213      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:25.911983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:26.040186 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:26.912297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:27.913414      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:28.043718 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:28.913568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:29.914408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:30.057093 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:30.915280      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:31.916268      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:32.062410 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:32.920851      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:33.918430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:34.065378 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:34.918652      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:35.919752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:36.069687 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:36.920130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:37.920092      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:38.077417 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:38.920707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:39.921159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:40.083112 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:40.921452      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:41.921650      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:42.087794 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:42.922111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:43.922358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:44.091929 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:44.923126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:45.923277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:46.097687 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:46.923652      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:47.925012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:48.104715 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:48.925888      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:49.926273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:50.109790 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:50.926463      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:51.926597      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:52.115372 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:52.927639      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:53.927857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:54.121961 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:54.928526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:55.929267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:56.126900 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:56.929662      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:57.934766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:57:58.131940 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:57:58.935265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:57:59.935395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:00.148152 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:00.936449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:01.937222      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:02.152398 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:02.937568      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:03.937454      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:04.158207 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:04.937604      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:05.937903      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:06.165691 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:06.938473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:07.938815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:08.173139 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:08.939841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:09.940108      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:10.177832 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:10.941101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:11.941251      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:12.183595 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:12.944622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:13.945347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:14.189998 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:14.946216      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:15.946738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:16.196351 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:16.947898      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:17.949068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:18.202342 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:18.950206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:19.950535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:20.207989 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:20.950845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:21.951064      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:22.213415 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:22.958716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:23.955645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:24.220752 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:24.956201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:25.956003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:26.288400 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:26.956578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:27.957298      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:28.296705 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:28.958256      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:29.958433      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:30.306621 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:30.958967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:31.960198      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:32.313382 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:32.960357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:33.963000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:34.317590 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:34.963237      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:35.963338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:36.324020 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:36.964441      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:37.965282      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:38.329575 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:38.965801      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:39.966073      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:40.333820 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:40.966383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:41.966734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:42.339191 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:42.967029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:43.967038      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:44.344457 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:44.967310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:45.968159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:46.350540 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:46.969297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:47.969433      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:48.355911 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:48.970408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:49.970559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:50.361975 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:50.970862      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:51.971172      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:52.368321 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:52.971319      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:53.971795      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:54.374072 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:54.972728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:55.973552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:56.378484 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:56.974484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:57.974608      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:58:58.383387 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:58:58.974831      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:58:59.975819      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:00.388617 22 container_probe.go:1758] Get pod liveness-46d39443-0d27-4834-80e4-a6ed28a26b9f in namespace container-probe-7793
  E0909 21:59:00.977632      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:01.977471      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/09/25 21:59:02.389
  I0909 21:59:02.417054 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7793" for this suite. @ 09/09/25 21:59:02.434
• [242.969 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/09/25 21:59:02.452
  I0909 21:59:02.452496 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename subpath @ 09/09/25 21:59:02.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:59:02.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:59:02.491
  STEP: Setting up data @ 09/09/25 21:59:02.494
  STEP: Creating pod pod-subpath-test-secret-8pn5 @ 09/09/25 21:59:02.509
  STEP: Creating a pod to test atomic-volume-subpath @ 09/09/25 21:59:02.509
  E0909 21:59:02.977612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:03.978689      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:04.979077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:05.979430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:06.980704      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:07.981020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:08.981263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:09.981330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:10.981628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:11.983707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:12.984579      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:13.985202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:14.985352      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:15.985650      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:16.986771      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:17.987273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:18.988022      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:19.988270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:20.988306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:21.988454      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:22.989450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:23.989736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:24.989910      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:25.990384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 21:59:26.607
  I0909 21:59:26.612189 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-subpath-test-secret-8pn5 container test-container-subpath-secret-8pn5: <nil>
  STEP: delete the pod @ 09/09/25 21:59:26.644
  STEP: Deleting pod pod-subpath-test-secret-8pn5 @ 09/09/25 21:59:26.678
  I0909 21:59:26.679686 22 delete.go:62] Deleting pod "pod-subpath-test-secret-8pn5" in namespace "subpath-3195"
  I0909 21:59:26.687857 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3195" for this suite. @ 09/09/25 21:59:26.696
• [24.256 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 09/09/25 21:59:26.712
  I0909 21:59:26.712256 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename dns @ 09/09/25 21:59:26.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 21:59:26.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 21:59:26.737
  STEP: Creating a test headless service @ 09/09/25 21:59:26.741
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3824 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3824;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3824 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3824;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3824.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3824.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3824.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3824.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3824.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3824.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3824.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-3824.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3824.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-3824.svc;check="$$(dig +notcp +noall +answer +search 77.107.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.107.77_udp@PTR;check="$$(dig +tcp +noall +answer +search 77.107.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.107.77_tcp@PTR;sleep 1; done
   @ 09/09/25 21:59:26.81
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3824 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3824;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3824 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3824;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3824.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3824.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3824.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3824.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3824.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3824.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3824.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3824.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3824.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3824.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3824.svc;check="$$(dig +notcp +noall +answer +search 77.107.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.107.77_udp@PTR;check="$$(dig +tcp +noall +answer +search 77.107.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.107.77_tcp@PTR;sleep 1; done
   @ 09/09/25 21:59:26.81
  STEP: creating a pod to probe DNS @ 09/09/25 21:59:26.811
  STEP: submitting the pod to kubernetes @ 09/09/25 21:59:26.811
  E0909 21:59:26.992038      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:27.991972      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/09/25 21:59:28.873
  STEP: looking for the results for each expected name from probers @ 09/09/25 21:59:28.878
  I0909 21:59:28.891637 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.896494 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.901368 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.906214 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.909411 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.914507 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.920560 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.931012 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.953975 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.958207 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.964023 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.968030 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.972654 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.976465 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.980366 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:28.983588 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  E0909 21:59:28.992061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:28.998439 22 dns_common.go:506] Lookups using dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3824 agnhost_tcp@dns-test-service.dns-3824 agnhost_udp@dns-test-service.dns-3824.svc agnhost_tcp@dns-test-service.dns-3824.svc agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3824 jessie_tcp@dns-test-service.dns-3824 jessie_udp@dns-test-service.dns-3824.svc jessie_tcp@dns-test-service.dns-3824.svc jessie_udp@_http._tcp.dns-test-service.dns-3824.svc jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc]

  I0909 21:59:29.014118 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:59:29.022601 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:59:29.029977 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:59:29.992196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:30.992548      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:31.993262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:32.993143      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:33.885266 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:33.890511 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:33.896673 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:33.901740 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:33.907241 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:33.919852 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:33.933700 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:33.945853 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:33.980611 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:33.984583 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:33.988650 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  E0909 21:59:33.993416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:33.994529 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:33.999653 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:34.007149 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:34.011699 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:34.016355 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:34.036108 22 dns_common.go:506] Lookups using dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3824 agnhost_tcp@dns-test-service.dns-3824 agnhost_udp@dns-test-service.dns-3824.svc agnhost_tcp@dns-test-service.dns-3824.svc agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3824 jessie_tcp@dns-test-service.dns-3824 jessie_udp@dns-test-service.dns-3824.svc jessie_tcp@dns-test-service.dns-3824.svc jessie_udp@_http._tcp.dns-test-service.dns-3824.svc jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc]

  I0909 21:59:34.044006 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:59:34.050309 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:59:34.060859 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:59:34.994148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:35.994846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:36.995751      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:37.996022      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:38.885781 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.890863 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.897397 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.904742 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.908166 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.912655 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.918527 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.923795 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.955414 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.961730 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.966457 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.970561 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.975743 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.979352 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.984146 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:38.987949 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  E0909 21:59:38.997745      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:39.007954 22 dns_common.go:506] Lookups using dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3824 agnhost_tcp@dns-test-service.dns-3824 agnhost_udp@dns-test-service.dns-3824.svc agnhost_tcp@dns-test-service.dns-3824.svc agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3824 jessie_tcp@dns-test-service.dns-3824 jessie_udp@dns-test-service.dns-3824.svc jessie_tcp@dns-test-service.dns-3824.svc jessie_udp@_http._tcp.dns-test-service.dns-3824.svc jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc]

  I0909 21:59:39.015324 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:59:39.023586 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:59:39.030698 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:59:40.000075      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:40.998379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:41.998718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:42.998854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:43.883768 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.888397 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.893043 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.897922 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.902818 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.907131 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.911960 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.918034 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.937777 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.943109 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.947732 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.951484 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.954201 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.957226 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.960338 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.963522 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:43.974950 22 dns_common.go:506] Lookups using dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3824 agnhost_tcp@dns-test-service.dns-3824 agnhost_udp@dns-test-service.dns-3824.svc agnhost_tcp@dns-test-service.dns-3824.svc agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3824 jessie_tcp@dns-test-service.dns-3824 jessie_udp@dns-test-service.dns-3824.svc jessie_tcp@dns-test-service.dns-3824.svc jessie_udp@_http._tcp.dns-test-service.dns-3824.svc jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc]

  I0909 21:59:43.981310 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:59:43.987072 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:59:43.994070 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:59:43.999825      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:45.001185      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:46.001315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:47.002206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:48.002000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:48.884379 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.891195 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.895580 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.899219 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.903866 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.908421 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.912603 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.917378 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.938268 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.941753 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.950725 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.956190 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.959877 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.963380 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.965898 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.970205 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:48.984545 22 dns_common.go:506] Lookups using dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3824 agnhost_tcp@dns-test-service.dns-3824 agnhost_udp@dns-test-service.dns-3824.svc agnhost_tcp@dns-test-service.dns-3824.svc agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3824 jessie_tcp@dns-test-service.dns-3824 jessie_udp@dns-test-service.dns-3824.svc jessie_tcp@dns-test-service.dns-3824.svc jessie_udp@_http._tcp.dns-test-service.dns-3824.svc jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc]

  I0909 21:59:48.991903 22 dns_common.go:514] Pod client logs for webserver: 
  E0909 21:59:49.002679      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:49.004003 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:59:49.015198 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:59:50.003460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:51.003656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:52.003874      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:53.004952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:53.885887 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.891215 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.896636 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.902005 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.908275 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.913072 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.917700 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.922476 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.945488 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.951576 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.956910 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.960490 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.965750 22 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.971498 22 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.975004 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:53.980560 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  E0909 21:59:54.005989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:54.010043 22 dns_common.go:506] Lookups using dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3824 agnhost_tcp@dns-test-service.dns-3824 agnhost_udp@dns-test-service.dns-3824.svc agnhost_tcp@dns-test-service.dns-3824.svc agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3824 jessie_tcp@dns-test-service.dns-3824 jessie_udp@dns-test-service.dns-3824.svc jessie_tcp@dns-test-service.dns-3824.svc jessie_udp@_http._tcp.dns-test-service.dns-3824.svc jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc]

  I0909 21:59:54.024402 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:59:54.034688 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:59:54.044074 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 21:59:55.005536      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:56.008315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:57.007347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 21:59:58.008101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:58.886161 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:58.892994 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:58.898783 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:58.903922 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824 from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:58.909508 22 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:58.915571 22 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:58.920194 22 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:58.924276 22 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:58.990816 22 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  I0909 21:59:58.997778 22 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc from pod dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959: the server could not find the requested resource (get pods dns-test-9450f862-940a-4179-8445-ea1d5b747959)
  E0909 21:59:59.010166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 21:59:59.031283 22 dns_common.go:506] Lookups using dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3824 agnhost_tcp@dns-test-service.dns-3824 agnhost_udp@dns-test-service.dns-3824.svc agnhost_tcp@dns-test-service.dns-3824.svc agnhost_udp@_http._tcp.dns-test-service.dns-3824.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3824.svc jessie_udp@_http._tcp.dns-test-service.dns-3824.svc jessie_tcp@_http._tcp.dns-test-service.dns-3824.svc]

  I0909 21:59:59.045543 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 21:59:59.053299 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 21:59:59.060159 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 22:00:00.009518      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:01.010328      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:02.010330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:03.011209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:00:03.988684 22 dns_common.go:546] DNS probes using dns-3824/dns-test-9450f862-940a-4179-8445-ea1d5b747959 succeeded

  STEP: deleting the pod @ 09/09/25 22:00:03.989
  E0909 22:00:04.015334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the test service @ 09/09/25 22:00:04.038
  STEP: deleting the test headless service @ 09/09/25 22:00:04.082
  I0909 22:00:04.110642 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3824" for this suite. @ 09/09/25 22:00:04.116
• [37.414 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/09/25 22:00:04.126
  I0909 22:00:04.126331 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubelet-test @ 09/09/25 22:00:04.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:00:04.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:00:04.149
  STEP: Waiting for pod completion @ 09/09/25 22:00:04.182
  E0909 22:00:05.017723      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:06.018656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:07.019019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:08.018886      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:00:08.205688 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5205" for this suite. @ 09/09/25 22:00:08.213
• [4.100 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/09/25 22:00:08.234
  I0909 22:00:08.234917 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename daemonsets @ 09/09/25 22:00:08.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:00:08.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:00:08.264
  I0909 22:00:08.320753 22 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0909 22:00:08.330383 22 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0909 22:00:08.411613 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:00:08.411682 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 22:00:08.414200 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:00:08.414230 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 22:00:09.019864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:00:09.350171 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:00:09.351027 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 22:00:09.364302 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:00:09.365464 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 22:00:10.020952      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:00:10.338346 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:00:10.339147 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 22:00:10.346917 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0909 22:00:10.348224 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0909 22:00:10.348259 22 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0909 22:00:10.371876 22 daemon_set.go:102] Updating DaemonSet daemon-set
  E0909 22:00:11.021736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:12.021600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:13.025017      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:00:13.384145 22 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0909 22:00:13.399565 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I0909 22:00:13.406881 22 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0909 22:00:13.487909 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:00:13.488356 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0909 22:00:14.025518      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:00:14.421498 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:00:14.422676 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0909 22:00:15.026194      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:00:15.414054 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:00:15.414137 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0909 22:00:16.026525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:00:16.439859 22 daemon_set.go:1198] Pod daemon-set-98swl is not available
  I0909 22:00:16.445820 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:00:16.445876 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 09/09/25 22:00:16.453
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9871, will wait for the garbage collector to delete the pods @ 09/09/25 22:00:16.453
  I0909 22:00:16.513016 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.092788ms
  I0909 22:00:16.617013 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 103.992824ms
  E0909 22:00:17.032959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:18.033327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:00:18.922149 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:00:18.922211 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0909 22:00:18.925734 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40970"},"items":null}

  I0909 22:00:18.928140 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40970"},"items":null}

  I0909 22:00:18.941259 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9871" for this suite. @ 09/09/25 22:00:18.945
• [10.721 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 09/09/25 22:00:18.952
  I0909 22:00:18.953074 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename statefulset @ 09/09/25 22:00:18.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:00:18.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:00:18.975
  STEP: Creating service test in namespace statefulset-9859 @ 09/09/25 22:00:18.977
  STEP: Creating a new StatefulSet @ 09/09/25 22:00:18.984
  I0909 22:00:19.000861 22 wait.go:44] Found 0 stateful pods, waiting for 3
  E0909 22:00:19.034366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:20.035341      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:21.035487      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:22.035432      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:23.036162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:24.039881      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:25.040173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:26.040267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:27.040461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:28.040733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:00:29.002514 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0909 22:00:29.004364 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0909 22:00:29.004943 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/09/25 22:00:29.019
  I0909 22:00:29.041062 22 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 09/09/25 22:00:29.041
  E0909 22:00:29.042362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:30.042992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:31.043642      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:32.044712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:33.044987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:34.045247      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:35.045785      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:36.046392      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:37.046558      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:38.047627      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:39.049536      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/09/25 22:00:39.052
  STEP: Performing a canary update @ 09/09/25 22:00:39.052
  I0909 22:00:39.069747 22 statefulset.go:2542] Updating stateful set ss2
  I0909 22:00:39.097757 22 wait.go:74] Waiting for Pod statefulset-9859/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0909 22:00:40.050393      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:41.051173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:42.061656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:43.061273      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:44.061799      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:45.061802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:46.062109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:47.062318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:48.062517      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:49.063302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/09/25 22:00:49.08
  I0909 22:00:49.191948 22 wait.go:44] Found 2 stateful pods, waiting for 3
  E0909 22:00:50.064524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:51.065739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:52.066432      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:53.066590      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:54.066793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:55.067858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:56.067695      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:57.067986      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:58.068200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:00:59.068373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:00:59.165911 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0909 22:00:59.166001 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0909 22:00:59.166093 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/09/25 22:00:59.176
  I0909 22:00:59.195353 22 statefulset.go:2542] Updating stateful set ss2
  I0909 22:00:59.248352 22 wait.go:74] Waiting for Pod statefulset-9859/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0909 22:01:00.068605      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:01.069034      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:02.069431      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:03.069583      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:04.069724      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:05.070787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:06.071022      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:07.072252      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:08.073765      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:09.076746      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:01:09.229762 22 statefulset.go:2542] Updating stateful set ss2
  I0909 22:01:09.249677 22 wait.go:56] Waiting for StatefulSet statefulset-9859/ss2 to complete update
  I0909 22:01:09.249753 22 wait.go:63] Waiting for Pod statefulset-9859/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0909 22:01:10.077495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:11.079738      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:12.081107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:13.080999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:14.082281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:15.083608      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:16.084259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:17.084596      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:18.085411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:19.086646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:01:19.242755 22 statefulset.go:138] Deleting all statefulset in ns statefulset-9859
  I0909 22:01:19.246876 22 rest.go:153] Scaling statefulset ss2 to 0
  E0909 22:01:20.087163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:21.088148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:22.088936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:23.089164      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:24.089387      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:25.089768      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:26.090297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:27.090390      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:28.090868      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:29.091647      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:01:29.274480 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0909 22:01:29.281891 22 rest.go:91] Deleting statefulset ss2
  I0909 22:01:29.321000 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9859" for this suite. @ 09/09/25 22:01:29.328
• [70.384 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/09/25 22:01:29.337
  I0909 22:01:29.337150 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename apf @ 09/09/25 22:01:29.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:01:29.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:01:29.377
  STEP: getting /apis @ 09/09/25 22:01:29.382
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/09/25 22:01:29.391
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/09/25 22:01:29.393
  STEP: creating @ 09/09/25 22:01:29.395
  STEP: getting @ 09/09/25 22:01:29.42
  STEP: listing @ 09/09/25 22:01:29.429
  STEP: watching @ 09/09/25 22:01:29.438
  I0909 22:01:29.439016 22 flowcontrol.go:394] starting watch
  STEP: patching @ 09/09/25 22:01:29.44
  STEP: updating @ 09/09/25 22:01:29.452
  I0909 22:01:29.461605 22 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 09/09/25 22:01:29.462
  STEP: patching /status @ 09/09/25 22:01:29.465
  STEP: updating /status @ 09/09/25 22:01:29.475
  STEP: deleting @ 09/09/25 22:01:29.495
  STEP: deleting a collection @ 09/09/25 22:01:29.505
  I0909 22:01:29.517314 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5262" for this suite. @ 09/09/25 22:01:29.522
• [0.191 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/09/25 22:01:29.533
  I0909 22:01:29.534218 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename lease-test @ 09/09/25 22:01:29.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:01:29.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:01:29.556
  I0909 22:01:29.612491 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1918" for this suite. @ 09/09/25 22:01:29.625
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/09/25 22:01:29.632
  I0909 22:01:29.632634 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 22:01:29.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:01:29.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:01:29.655
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 22:01:29.659
  E0909 22:01:30.092042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:31.092159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:32.092362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:33.092969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:01:33.69
  I0909 22:01:33.696997 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-e6f45fe3-4210-4a3c-a488-884d2ba3abb9 container client-container: <nil>
  STEP: delete the pod @ 09/09/25 22:01:33.709
  I0909 22:01:33.742157 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8267" for this suite. @ 09/09/25 22:01:33.755
• [4.137 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/09/25 22:01:33.772
  I0909 22:01:33.773216 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 22:01:33.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:01:33.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:01:33.806
  STEP: Creating secret with name secret-test-5326c1c9-02f6-4652-8647-794b5c72ac33 @ 09/09/25 22:01:33.837
  STEP: Creating a pod to test consume secrets @ 09/09/25 22:01:33.848
  E0909 22:01:34.093354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:35.094680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:36.095470      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:37.096469      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:01:37.89
  I0909 22:01:37.897505 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-secrets-8dfa5585-23e3-4bc3-a1a6-b7d10fd3e9b4 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 22:01:37.915
  I0909 22:01:37.976223 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3557" for this suite. @ 09/09/25 22:01:37.998
  STEP: Destroying namespace "secret-namespace-5887" for this suite. @ 09/09/25 22:01:38.013
• [4.255 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 09/09/25 22:01:38.029
  I0909 22:01:38.029361 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:01:38.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:01:38.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:01:38.051
  STEP: Setting up server cert @ 09/09/25 22:01:38.077
  E0909 22:01:38.096407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:01:38.526
  STEP: Deploying the webhook pod @ 09/09/25 22:01:38.537
  STEP: Wait for the deployment to be ready @ 09/09/25 22:01:38.558
  I0909 22:01:38.573398 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:01:39.096981      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:40.097300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:01:40.597
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:01:40.647
  E0909 22:01:41.097630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:01:41.648462 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/09/25 22:01:41.655
  I0909 22:01:41.790622 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4273" for this suite. @ 09/09/25 22:01:41.795
  STEP: Destroying namespace "webhook-markers-8048" for this suite. @ 09/09/25 22:01:41.804
• [3.791 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 09/09/25 22:01:41.831
  I0909 22:01:41.832276 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replication-controller @ 09/09/25 22:01:41.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:01:41.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:01:41.857
  STEP: Creating replication controller my-hostname-basic-a520fa9a-6ed8-4b2e-94a2-fddb92c9ced0 @ 09/09/25 22:01:41.86
  I0909 22:01:41.876992 22 resource.go:81] Pod name my-hostname-basic-a520fa9a-6ed8-4b2e-94a2-fddb92c9ced0: Found 0 pods out of 1
  E0909 22:01:42.100384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:43.100744      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:44.101151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:45.102249      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:46.102588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:01:46.886700 22 resource.go:81] Pod name my-hostname-basic-a520fa9a-6ed8-4b2e-94a2-fddb92c9ced0: Found 1 pods out of 1
  I0909 22:01:46.887933 22 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-a520fa9a-6ed8-4b2e-94a2-fddb92c9ced0" are running
  I0909 22:01:46.899593 22 rc.go:525] Pod "my-hostname-basic-a520fa9a-6ed8-4b2e-94a2-fddb92c9ced0-d6476" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-09 22:01:43 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-09 22:01:41 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-09 22:01:43 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-09 22:01:43 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-09 22:01:41 +0000 UTC Reason: Message:}])
  I0909 22:01:46.899952 22 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/09/25 22:01:46.9
  I0909 22:01:46.943958 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7186" for this suite. @ 09/09/25 22:01:46.953
• [5.129 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/09/25 22:01:46.964
  I0909 22:01:46.964732 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename subpath @ 09/09/25 22:01:46.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:01:47.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:01:47.067
  STEP: Setting up data @ 09/09/25 22:01:47.073
  STEP: Creating pod pod-subpath-test-configmap-gl8d @ 09/09/25 22:01:47.083
  STEP: Creating a pod to test atomic-volume-subpath @ 09/09/25 22:01:47.084
  E0909 22:01:47.104939      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:48.105100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:49.106057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:50.106276      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:51.106624      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:52.107224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:53.108053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:54.108667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:55.109030      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:56.109931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:57.110189      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:58.111368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:01:59.111420      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:00.111676      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:01.112492      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:02.113461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:03.113537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:04.114297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:05.114816      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:06.115257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:07.115480      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:08.115724      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:09.115988      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:10.117012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:11.117344      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:02:11.193
  I0909 22:02:11.196985 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-subpath-test-configmap-gl8d container test-container-subpath-configmap-gl8d: <nil>
  STEP: delete the pod @ 09/09/25 22:02:11.224
  STEP: Deleting pod pod-subpath-test-configmap-gl8d @ 09/09/25 22:02:11.261
  I0909 22:02:11.262189 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-gl8d" in namespace "subpath-4005"
  I0909 22:02:11.268153 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4005" for this suite. @ 09/09/25 22:02:11.284
• [24.332 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 09/09/25 22:02:11.304
  I0909 22:02:11.304630 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename dns @ 09/09/25 22:02:11.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:02:11.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:02:11.339
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/09/25 22:02:11.344
  I0909 22:02:11.364029 22 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6777  6ea50b58-fb23-423b-9e2b-0ab004e4805b 42061 1 2025-09-09 22:02:11 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-09 22:02:11 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5jfct,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5jfct,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  E0909 22:02:12.117628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:13.118435      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/09/25 22:02:13.375
  I0909 22:02:13.375075 22 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6777 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:02:13.375100 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:02:13.375993 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/dns-6777/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0909 22:02:13.540191 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 09/09/25 22:02:13.54
  I0909 22:02:13.540768 22 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6777 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:02:13.541139 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:02:13.541471 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/dns-6777/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0909 22:02:13.700317 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:02:13.701536 22 dns.go:451] Deleting pod test-dns-nameservers...
  I0909 22:02:13.728494 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6777" for this suite. @ 09/09/25 22:02:13.735
• [2.441 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 09/09/25 22:02:13.752
  I0909 22:02:13.753041 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 22:02:13.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:02:13.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:02:13.772
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/09/25 22:02:13.778
  E0909 22:02:14.118208      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:15.118454      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:16.119413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:17.119835      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:02:17.816
  I0909 22:02:17.839577 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-1b29e727-bf68-4ea6-b6b7-b2465275d93e container test-container: <nil>
  STEP: delete the pod @ 09/09/25 22:02:17.85
  I0909 22:02:17.896947 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5678" for this suite. @ 09/09/25 22:02:17.9
• [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/09/25 22:02:17.91
  I0909 22:02:17.910711 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:02:17.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:02:17.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:02:17.935
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 22:02:17.941
  E0909 22:02:18.120416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:19.120647      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:20.120889      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:21.121152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:02:21.971
  I0909 22:02:21.976660 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-6e99602a-969f-460d-8f3a-af5d334ca083 container client-container: <nil>
  STEP: delete the pod @ 09/09/25 22:02:21.986
  I0909 22:02:22.050138 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1983" for this suite. @ 09/09/25 22:02:22.055
• [4.158 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 09/09/25 22:02:22.07
  I0909 22:02:22.070663 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 22:02:22.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:02:22.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:02:22.092
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 09/09/25 22:02:22.095
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 09/09/25 22:02:22.106
  E0909 22:02:22.123113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:23.123484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:24.124373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:25.126061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 09/09/25 22:02:26.121
  E0909 22:02:26.128399      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that the job status to ensure correct final state @ 09/09/25 22:02:26.132
  I0909 22:02:26.135899 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8868" for this suite. @ 09/09/25 22:02:26.146
• [4.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 09/09/25 22:02:26.172
  I0909 22:02:26.172743 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pods @ 09/09/25 22:02:26.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:02:26.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:02:26.205
  STEP: Create set of pods @ 09/09/25 22:02:26.21
  I0909 22:02:26.221991 22 pods.go:874] created test-pod-1
  I0909 22:02:26.240461 22 pods.go:874] created test-pod-2
  I0909 22:02:26.262905 22 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/09/25 22:02:26.263
  E0909 22:02:27.129228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:28.129726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:29.129594      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:30.131459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/09/25 22:02:30.45
  I0909 22:02:30.463900 22 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0909 22:02:31.133192      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:02:31.464391 22 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0909 22:02:32.132081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:02:32.459211 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2343" for this suite. @ 09/09/25 22:02:32.467
• [6.311 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/09/25 22:02:32.483
  I0909 22:02:32.483574 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:02:32.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:02:32.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:02:32.521
  STEP: Setting up server cert @ 09/09/25 22:02:32.555
  E0909 22:02:33.133061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:02:33.279
  STEP: Deploying the webhook pod @ 09/09/25 22:02:33.29
  STEP: Wait for the deployment to be ready @ 09/09/25 22:02:33.312
  I0909 22:02:33.322754 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:02:34.133233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:35.134118      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:02:35.336
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:02:35.375
  E0909 22:02:36.135513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:02:36.377481 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/09/25 22:02:36.385
  STEP: create a pod that should be updated by the webhook @ 09/09/25 22:02:36.432
  I0909 22:02:36.604953 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4771" for this suite. @ 09/09/25 22:02:36.615
  STEP: Destroying namespace "webhook-markers-7586" for this suite. @ 09/09/25 22:02:36.624
• [4.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 09/09/25 22:02:36.638
  I0909 22:02:36.638867 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 22:02:36.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:02:36.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:02:36.661
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 09/09/25 22:02:36.665
  STEP: Awaiting for the job to fail as all indexes are failed @ 09/09/25 22:02:36.679
  E0909 22:02:37.135714      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:38.136156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:39.136248      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:40.136464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:41.137530      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:42.138145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 09/09/25 22:02:42.71
  I0909 22:02:42.713574 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3761" for this suite. @ 09/09/25 22:02:42.718
• [6.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/09/25 22:02:42.735
  I0909 22:02:42.735242 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:02:42.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:02:42.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:02:42.778
  STEP: Creating projection with secret that has name projected-secret-test-d0e27581-054e-483a-9ddf-31fccf8ed257 @ 09/09/25 22:02:42.783
  STEP: Creating a pod to test consume secrets @ 09/09/25 22:02:42.792
  E0909 22:02:43.139789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:44.139794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:45.140598      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:46.140313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:02:46.83
  I0909 22:02:46.835094 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-projected-secrets-d7de2ae1-b93d-4a2f-82ee-4b1e4d5d361a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 22:02:46.845
  I0909 22:02:46.875467 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4302" for this suite. @ 09/09/25 22:02:46.88
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 09/09/25 22:02:46.896
  I0909 22:02:46.896351 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename aggregator @ 09/09/25 22:02:46.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:02:46.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:02:46.928
  I0909 22:02:46.930524 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Registering the sample API server. @ 09/09/25 22:02:46.931
  E0909 22:02:47.141382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:02:48.052034 22 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0909 22:02:48.083385 22 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0909 22:02:48.142521      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:49.142900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:50.159097      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:02:50.209371 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:02:51.159002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:52.160924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:02:52.213389 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:02:53.160987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:54.162304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:02:54.217509 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:02:55.162127      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:56.161957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:02:56.216495 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:02:57.162334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:02:58.162604      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:02:58.215882 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:02:59.162718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:00.162971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:00.216125 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:03:01.163221      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:02.163359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:02.214366 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:03:03.164589      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:04.166295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:04.215478 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:03:05.166579      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:06.166756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:06.219330 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:03:07.166996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:08.167165      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:08.223693 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:03:09.169740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:10.169892      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:10.215791 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:03:11.170973      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:12.171961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:12.214282 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 2, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:03:13.173326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:14.173411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:14.362509 22 aggregator.go:756] Waited 135.640759ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/09/25 22:03:14.46
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/09/25 22:03:14.464
  STEP: List APIServices @ 09/09/25 22:03:14.478
  I0909 22:03:14.489066 22 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/09/25 22:03:14.489
  I0909 22:03:14.514108 22 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/09/25 22:03:14.514
  I0909 22:03:14.527747 22 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 9, 22, 3, 14, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/09/25 22:03:14.528
  I0909 22:03:14.534766 22 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-09 22:03:14 +0000 UTC Passed all checks passed}
  I0909 22:03:14.534852 22 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0909 22:03:14.534877 22 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/09/25 22:03:14.534
  I0909 22:03:14.546924 22 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-89010936" @ 09/09/25 22:03:14.549
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/09/25 22:03:14.574
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/09/25 22:03:14.585
  STEP: Patch APIService Status @ 09/09/25 22:03:14.59
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/09/25 22:03:14.601
  I0909 22:03:14.605223 22 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-09 22:03:14 +0000 UTC Passed all checks passed}
  I0909 22:03:14.605251 22 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0909 22:03:14.605263 22 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0909 22:03:14.605273 22 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/09/25 22:03:14.605
  STEP: Confirm that the generated APIService has been deleted @ 09/09/25 22:03:14.613
  I0909 22:03:14.613934 22 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0909 22:03:14.621259 22 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0909 22:03:14.621946 22 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0909 22:03:14.806100 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5548" for this suite. @ 09/09/25 22:03:14.81
• [27.919 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/09/25 22:03:14.815
  I0909 22:03:14.815071 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:03:14.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:03:14.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:03:14.838
  STEP: Setting up server cert @ 09/09/25 22:03:14.883
  E0909 22:03:15.174200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:03:15.359
  STEP: Deploying the webhook pod @ 09/09/25 22:03:15.369
  STEP: Wait for the deployment to be ready @ 09/09/25 22:03:15.394
  I0909 22:03:15.429062 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:03:16.175407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:17.177131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:03:17.456
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:03:17.513
  E0909 22:03:18.178085      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:18.516856 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0909 22:03:18.528434 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4302-crds.webhook.example.com via the AdmissionRegistration API @ 09/09/25 22:03:19.068
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/09/25 22:03:19.114
  E0909 22:03:19.179314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:20.179109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:21.189145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:21.813341 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8327" for this suite. @ 09/09/25 22:03:21.834
  STEP: Destroying namespace "webhook-markers-6773" for this suite. @ 09/09/25 22:03:21.842
• [7.046 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 09/09/25 22:03:21.862
  I0909 22:03:21.862954 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-runtime @ 09/09/25 22:03:21.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:03:21.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:03:21.894
  STEP: create the container @ 09/09/25 22:03:21.899
  I0909 22:03:21.921502      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 09/09/25 22:03:21.922
  E0909 22:03:22.191257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:23.191068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:24.191849      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:25.192713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/09/25 22:03:25.962
  STEP: the container should be terminated @ 09/09/25 22:03:25.969
  STEP: the termination message should be set @ 09/09/25 22:03:25.97
  I0909 22:03:25.970731 22 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/09/25 22:03:25.97
  I0909 22:03:26.001968 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-511" for this suite. @ 09/09/25 22:03:26.019
• [4.169 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 09/09/25 22:03:26.04
  I0909 22:03:26.041053 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 22:03:26.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:03:26.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:03:26.073
  STEP: creating service multi-endpoint-test in namespace services-2339 @ 09/09/25 22:03:26.076
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2339 to expose endpoints map[] @ 09/09/25 22:03:26.11
  I0909 22:03:26.123721      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 22:03:26.142214 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2339 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2339 @ 09/09/25 22:03:26.142
  E0909 22:03:26.193989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:27.195109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2339 to expose endpoints map[pod1:[100]] @ 09/09/25 22:03:28.181
  I0909 22:03:28.188100      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 22:03:28.200975 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2339 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2339 @ 09/09/25 22:03:28.201
  E0909 22:03:28.201699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:29.202110      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:30.202336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2339 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/09/25 22:03:30.239
  I0909 22:03:30.255817      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 22:03:30.263934 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2339 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/09/25 22:03:30.264
  I0909 22:03:30.265253 22 resource.go:361] Creating new exec pod
  E0909 22:03:31.202684      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:32.203767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:32.311143 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2339 exec execpod7zwnj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0909 22:03:32.604995 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.43.15.89) 80 port [tcp/http] succeeded!\n"
  I0909 22:03:32.605062 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 22:03:32.605157 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2339 exec execpod7zwnj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.15.89 80'
  I0909 22:03:32.876829 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.15.89 80\nConnection to 10.43.15.89 80 port [tcp/http] succeeded!\n"
  I0909 22:03:32.876874 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 22:03:32.876943 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2339 exec execpod7zwnj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  E0909 22:03:33.204397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:33.346886 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.43.15.89) 81 port [tcp/*] succeeded!\n"
  I0909 22:03:33.346925 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 22:03:33.346995 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2339 exec execpod7zwnj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.15.89 81'
  I0909 22:03:33.537203 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.15.89 81\n+ echo hostName\nConnection to 10.43.15.89 81 port [tcp/*] succeeded!\n"
  I0909 22:03:33.537256 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2339 @ 09/09/25 22:03:33.537
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2339 to expose endpoints map[pod2:[101]] @ 09/09/25 22:03:33.585
  I0909 22:03:33.602073      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 22:03:33.607049 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2339 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2339 @ 09/09/25 22:03:33.607
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2339 to expose endpoints map[] @ 09/09/25 22:03:33.649
  I0909 22:03:33.664534      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0909 22:03:34.204972      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:34.674959      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 22:03:34.690042 22 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-2339 exposes endpoints map[]
  I0909 22:03:34.735903 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2339" for this suite. @ 09/09/25 22:03:34.749
• [8.716 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/09/25 22:03:34.756
  I0909 22:03:34.756122 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename containers @ 09/09/25 22:03:34.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:03:34.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:03:34.788
  STEP: Creating a pod to test override all @ 09/09/25 22:03:34.795
  E0909 22:03:35.205024      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:36.206279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:37.209122      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:38.209208      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:03:38.823
  I0909 22:03:38.828519 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod client-containers-c21df8fd-5b0d-4780-893f-094e45984e10 container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 22:03:38.841
  I0909 22:03:38.878163 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-662" for this suite. @ 09/09/25 22:03:38.888
• [4.145 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/09/25 22:03:38.901
  I0909 22:03:38.901928 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 22:03:38.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:03:38.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:03:38.95
  STEP: Creating a pod to test downward api env vars @ 09/09/25 22:03:38.954
  E0909 22:03:39.210326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:40.209850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:41.210058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:42.210503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:03:42.995
  I0909 22:03:42.998655 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downward-api-84e14862-25a2-4de6-ae41-1956fad9ad94 container dapi-container: <nil>
  STEP: delete the pod @ 09/09/25 22:03:43.013
  I0909 22:03:43.045007 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7432" for this suite. @ 09/09/25 22:03:43.054
• [4.173 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 09/09/25 22:03:43.075
  I0909 22:03:43.075466 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 22:03:43.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:03:43.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:03:43.098
  STEP: Creating a job @ 09/09/25 22:03:43.102
  STEP: Ensuring job reaches completions @ 09/09/25 22:03:43.124
  E0909 22:03:43.210961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:44.211574      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:45.212470      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:46.213871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:47.214687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:48.216023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:49.215968      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:50.216368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:51.216707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:52.217565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:03:53.158035 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9176" for this suite. @ 09/09/25 22:03:53.167
• [10.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 09/09/25 22:03:53.191
  I0909 22:03:53.191127 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/09/25 22:03:53.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:03:53.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:03:53.214
  E0909 22:03:53.217463      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set up a multi version CRD @ 09/09/25 22:03:53.218
  I0909 22:03:53.218948 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:03:54.217807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:55.218036      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:56.219790      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:03:57.219253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/09/25 22:03:57.632
  STEP: check the new version name is served @ 09/09/25 22:03:57.649
  E0909 22:03:58.219723      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/09/25 22:03:58.961
  E0909 22:03:59.220454      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/09/25 22:03:59.804
  E0909 22:04:00.220628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:01.222344      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:02.227824      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:03.228195      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:03.401089 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5138" for this suite. @ 09/09/25 22:04:03.406
• [10.222 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 09/09/25 22:04:03.413
  I0909 22:04:03.413779 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 22:04:03.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:04:03.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:04:03.44
  I0909 22:04:03.442796 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-4071 create -f -'
  I0909 22:04:03.614736 22 builder.go:146] stderr: ""
  I0909 22:04:03.614827 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0909 22:04:03.614941 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-4071 create -f -'
  I0909 22:04:03.860759 22 builder.go:146] stderr: ""
  I0909 22:04:03.860877 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/09/25 22:04:03.86
  E0909 22:04:04.228576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:04.865004 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0909 22:04:04.865095 22 framework.go:733] Found 0 / 1
  E0909 22:04:05.230239      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:05.868250 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0909 22:04:05.868306 22 framework.go:733] Found 1 / 1
  I0909 22:04:05.869608 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0909 22:04:05.874228 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0909 22:04:05.874335 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0909 22:04:05.874397 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-4071 describe pod agnhost-primary-grrw7'
  I0909 22:04:06.001301 22 builder.go:146] stderr: ""
  I0909 22:04:06.002437 22 builder.go:147] stdout: "Name:             agnhost-primary-grrw7\nNamespace:        kubectl-4071\nPriority:         0\nService Account:  default\nNode:             oneke-ip-192-168-150-105/192.168.150.105\nStart Time:       Tue, 09 Sep 2025 22:04:03 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 36ac0191ded20ee8f38fff3cb2ae398b14c71f28823f5026cf010c961163f78c\n                  cni.projectcalico.org/podIP: 10.42.3.38/32\n                  cni.projectcalico.org/podIPs: 10.42.3.38/32\n                  k8s.v1.cni.cncf.io/network-status:\n                    [{\n                        \"name\": \"k8s-pod-network\",\n                        \"ips\": [\n                            \"10.42.3.38\"\n                        ],\n                        \"default\": true,\n                        \"dns\": {}\n                    }]\nStatus:           Running\nIP:               10.42.3.38\nIPs:\n  IP:           10.42.3.38\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://7b8ce582a0b92c57f86c343475aaaaca3b41b51dbe2598586543b72ae87c1a7c\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 09 Sep 2025 22:04:04 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-jmn75 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-jmn75:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason          Age   From               Message\n  ----    ------          ----  ----               -------\n  Normal  Scheduled       2s    default-scheduler  Successfully assigned kubectl-4071/agnhost-primary-grrw7 to oneke-ip-192-168-150-105\n  Normal  AddedInterface  1s    multus             Add eth0 [10.42.3.38/32] from k8s-pod-network\n  Normal  Pulled          1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created         1s    kubelet            Created container: agnhost-primary\n  Normal  Started         1s    kubelet            Started container agnhost-primary\n"
  I0909 22:04:06.003530 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-4071 describe rc agnhost-primary'
  I0909 22:04:06.124049 22 builder.go:146] stderr: ""
  I0909 22:04:06.124138 22 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4071\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-grrw7\n"
  I0909 22:04:06.124217 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-4071 describe service agnhost-primary'
  I0909 22:04:06.217026 22 builder.go:146] stderr: ""
  I0909 22:04:06.217084 22 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-4071\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.118.251\nIPs:                      10.43.118.251\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.3.38:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0909 22:04:06.220469 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-4071 describe node oneke-ip-192-168-150-102'
  E0909 22:04:06.230446      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:06.334504 22 builder.go:146] stderr: ""
  I0909 22:04:06.335100 22 builder.go:147] stdout: "Name:               oneke-ip-192-168-150-102\nRoles:              control-plane,etcd,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=rke2\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=oneke-ip-192-168-150-102\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/master=true\n                    node.kubernetes.io/instance-type=rke2\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 192.168.150.102\n                    etcd.rke2.cattle.io/local-snapshots-timestamp: 2025-09-09T22:01:03Z\n                    etcd.rke2.cattle.io/node-address: 192.168.150.102\n                    etcd.rke2.cattle.io/node-name: oneke-ip-192-168-150-102-3161249d\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"b6:12:13:41:78:83\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.150.102\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke2.io/encryption-config-hash: start-f61b24ebf7b2dad50e0985457275f6653e18baca2a0b111c0e8bd575f77c036e\n                    rke2.io/hostname: oneke-ip-192-168-150-102\n                    rke2.io/internal-ip: 192.168.150.102\n                    rke2.io/node-args:\n                      [\"server\",\"--node-name\",\"oneke-ip-192-168-150-102\",\"--token\",\"********\",\"--tls-san\",\"localhost\",\"--tls-san\",\"127.0.0.1\",\"--tls-san\",\"ep0.e...\n                    rke2.io/node-config-hash: 2MXUGWN3M4Q6F7STG4XE5SQQKOAZGQQQL7S4EQCNKZXNIB77SRIQ====\n                    rke2.io/node-env: {}\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 09 Sep 2025 20:48:27 +0000\nTaints:             CriticalAddonsOnly=true:NoExecute\nUnschedulable:      false\nLease:\n  HolderIdentity:  oneke-ip-192-168-150-102\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 09 Sep 2025 22:03:58 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 09 Sep 2025 20:49:12 +0000   Tue, 09 Sep 2025 20:49:12 +0000   FlannelIsUp                  Flannel is running on this node\n  EtcdIsVoter          True    Tue, 09 Sep 2025 22:03:37 +0000   Tue, 09 Sep 2025 20:48:37 +0000   MemberNotLearner             Node is a voting member of the etcd cluster\n  MemoryPressure       False   Tue, 09 Sep 2025 22:00:16 +0000   Tue, 09 Sep 2025 20:48:27 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 09 Sep 2025 22:00:16 +0000   Tue, 09 Sep 2025 20:48:27 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 09 Sep 2025 22:00:16 +0000   Tue, 09 Sep 2025 20:48:27 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 09 Sep 2025 22:00:16 +0000   Tue, 09 Sep 2025 20:49:05 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.150.102\n  Hostname:    oneke-ip-192-168-150-102\nCapacity:\n  cpu:                2\n  ephemeral-storage:  25215872Ki\n  hugepages-2Mi:      0\n  memory:             3039920Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  24530000263\n  hugepages-2Mi:      0\n  memory:             3039920Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 1da16e5042fd4180b89b56a962d15ae6\n  System UUID:                1da16e50-42fd-4180-b89b-56a962d15ae6\n  Boot ID:                    8d75e890-90cb-456a-b728-c16b11267c42\n  Kernel Version:             5.15.0-126-generic\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.0.5-k3s2\n  Kubelet Version:            v1.33.4+rke2r1\n  Kube-Proxy Version:         \nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nProviderID:                   rke2://oneke-ip-192-168-150-102\nNon-terminated Pods:          (12 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cloud-controller-manager-oneke-ip-192-168-150-102          100m (5%)     0 (0%)      128Mi (4%)       0 (0%)         75m\n  kube-system                 etcd-oneke-ip-192-168-150-102                              200m (10%)    0 (0%)      512Mi (17%)      0 (0%)         75m\n  kube-system                 kube-apiserver-oneke-ip-192-168-150-102                    250m (12%)    0 (0%)      1Gi (34%)        0 (0%)         75m\n  kube-system                 kube-controller-manager-oneke-ip-192-168-150-102           200m (10%)    0 (0%)      256Mi (8%)       0 (0%)         75m\n  kube-system                 kube-proxy-oneke-ip-192-168-150-102                        250m (12%)    0 (0%)      128Mi (4%)       0 (0%)         75m\n  kube-system                 kube-scheduler-oneke-ip-192-168-150-102                    100m (5%)     0 (0%)      128Mi (4%)       0 (0%)         75m\n  kube-system                 one-cleaner-29290924-qp659                                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         6s\n  kube-system                 rke2-canal-55gf9                                           250m (12%)    0 (0%)      0 (0%)           0 (0%)         75m\n  kube-system                 rke2-coredns-rke2-coredns-86c455b944-2d4ws                 100m (5%)     100m (5%)   128Mi (4%)       128Mi (4%)     75m\n  kube-system                 rke2-multus-ltjnk                                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         75m\n  sonobuoy                    sonobuoy-e2e-job-d098206070344d92                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         60m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-743f0bf30f3f4846-5vdnn    0 (0%)        0 (0%)      0 (0%)           0 (0%)         60m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests      Limits\n  --------           --------      ------\n  cpu                1450m (72%)   100m (5%)\n  memory             2304Mi (77%)  128Mi (4%)\n  ephemeral-storage  0 (0%)        0 (0%)\n  hugepages-2Mi      0 (0%)        0 (0%)\nEvents:              <none>\n"
  I0909 22:04:06.335212 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-4071 describe namespace kubectl-4071'
  I0909 22:04:06.477943 22 builder.go:146] stderr: ""
  I0909 22:04:06.478012 22 builder.go:147] stdout: "Name:         kubectl-4071\nLabels:       e2e-framework=kubectl\n              e2e-run=57eba362-f52f-4455-b471-d00e2be59338\n              kubernetes.io/metadata.name=kubectl-4071\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0909 22:04:06.478179 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4071" for this suite. @ 09/09/25 22:04:06.488
• [3.082 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/09/25 22:04:06.495
  I0909 22:04:06.495766 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename runtimeclass @ 09/09/25 22:04:06.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:04:06.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:04:06.522
  I0909 22:04:06.580965 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7729" for this suite. @ 09/09/25 22:04:06.587
• [0.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 09/09/25 22:04:06.602
  I0909 22:04:06.602476 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 22:04:06.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:04:06.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:04:06.643
  STEP: creating service in namespace services-2812 @ 09/09/25 22:04:06.651
  STEP: creating service affinity-clusterip in namespace services-2812 @ 09/09/25 22:04:06.652
  I0909 22:04:06.717092 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0909 22:04:07.234028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:08.234000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:08.737819 22 resource.go:361] Creating new exec pod
  E0909 22:04:09.234274      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:10.234667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:10.773201 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2812 exec execpod-affinity789gj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0909 22:04:11.053022 22 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip (10.43.207.14) 80 port [tcp/http] succeeded!\n"
  I0909 22:04:11.053093 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 22:04:11.053178 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2812 exec execpod-affinity789gj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.207.14 80'
  E0909 22:04:11.235295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:11.294454 22 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.43.207.14 80\nConnection to 10.43.207.14 80 port [tcp/http] succeeded!\n"
  I0909 22:04:11.294529 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0909 22:04:11.295241 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2812 exec execpod-affinity789gj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/ ; done'
  I0909 22:04:11.765166 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.207.14:80/\n"
  I0909 22:04:11.765227 22 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v\naffinity-clusterip-6dd57cf8dc-qb92v"
  I0909 22:04:11.765244 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.765253 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.765259 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.765266 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.765274 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.765280 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.765833 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.765848 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.765855 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.765861 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.766811 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.766822 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.766828 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.766834 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.766840 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.766846 22 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-qb92v
  I0909 22:04:11.766916 22 service.go:4352] Cleaning up the exec pod
  I0909 22:04:11.826336 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2812" for this suite. @ 09/09/25 22:04:11.856
• [5.266 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/09/25 22:04:11.867
  I0909 22:04:11.867599 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename field-validation @ 09/09/25 22:04:11.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:04:11.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:04:11.916
  I0909 22:04:11.918872 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:04:12.235534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:13.236396      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:14.236549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:15.055362 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3757" for this suite. @ 09/09/25 22:04:15.063
• [3.211 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 09/09/25 22:04:15.083
  I0909 22:04:15.084274 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename statefulset @ 09/09/25 22:04:15.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:04:15.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:04:15.111
  STEP: Creating service test in namespace statefulset-5920 @ 09/09/25 22:04:15.116
  STEP: Looking for a node to schedule stateful set and pod @ 09/09/25 22:04:15.129
  STEP: Creating pod with conflicting port in namespace statefulset-5920 @ 09/09/25 22:04:15.168
  STEP: Waiting until pod test-pod will start running in namespace statefulset-5920 @ 09/09/25 22:04:15.186
  E0909 22:04:15.237130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:16.237459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-5920 @ 09/09/25 22:04:17.201
  E0909 22:04:17.244402      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-5920 @ 09/09/25 22:04:17.232
  I0909 22:04:17.259938 22 statefulset.go:860] Observed stateful pod in namespace: statefulset-5920, name: ss-0, uid: dccd40c8-1a44-437d-b16d-0d245846acde, status phase: Pending. Waiting for statefulset controller to delete.
  I0909 22:04:17.278476 22 statefulset.go:884] Observed stateful pod in namespace: statefulset-5920, name: ss-0, uid: dccd40c8-1a44-437d-b16d-0d245846acde, status phase: Failed. Waiting for statefulset controller to delete.
  I0909 22:04:17.326526 22 statefulset.go:884] Observed stateful pod in namespace: statefulset-5920, name: ss-0, uid: dccd40c8-1a44-437d-b16d-0d245846acde, status phase: Failed. Waiting for statefulset controller to delete.
  I0909 22:04:17.338969 22 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-5920
  STEP: Removing pod with conflicting port in namespace statefulset-5920 @ 09/09/25 22:04:17.339
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-5920 and will be in running state @ 09/09/25 22:04:17.389
  E0909 22:04:18.245209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:19.245234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:19.427062 22 statefulset.go:138] Deleting all statefulset in ns statefulset-5920
  I0909 22:04:19.439269 22 rest.go:153] Scaling statefulset ss to 0
  E0909 22:04:20.246358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:21.246426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:22.254086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:23.249579      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:24.250574      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:25.251609      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:26.251877      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:27.252107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:28.253214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:29.253388      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:29.463324 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0909 22:04:29.466815 22 rest.go:91] Deleting statefulset ss
  I0909 22:04:29.498648 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5920" for this suite. @ 09/09/25 22:04:29.508
• [14.433 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/09/25 22:04:29.516
  I0909 22:04:29.516030 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:04:29.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:04:29.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:04:29.55
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-5f35f8d2-b8b3-441c-bfed-1623f7c99e70 @ 09/09/25 22:04:29.61
  STEP: Creating the pod @ 09/09/25 22:04:29.618
  E0909 22:04:30.254650      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:31.256694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-5f35f8d2-b8b3-441c-bfed-1623f7c99e70 @ 09/09/25 22:04:31.658
  STEP: waiting to observe update in volume @ 09/09/25 22:04:31.673
  E0909 22:04:32.257634      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:33.258225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:33.695335 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7112" for this suite. @ 09/09/25 22:04:33.705
• [4.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/09/25 22:04:33.737
  I0909 22:04:33.737296 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename endpointslice @ 09/09/25 22:04:33.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:04:33.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:04:33.765
  E0909 22:04:34.259685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:35.269099      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/09/25 22:04:35.955
  I0909 22:04:35.964963      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 09/09/25 22:04:35.965
  I0909 22:04:35.976255      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/09/25 22:04:35.976
  I0909 22:04:35.984627      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 09/09/25 22:04:35.984
  I0909 22:04:36.020281 22 endpointslice.go:938] EndpointSlice for Service endpointslice-13/example-named-port not found
  E0909 22:04:36.269947      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:37.270654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:38.022200      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 22:04:38.022342 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-13" for this suite. @ 09/09/25 22:04:38.025
• [4.296 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/09/25 22:04:38.032
  I0909 22:04:38.032881 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename field-validation @ 09/09/25 22:04:38.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:04:38.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:04:38.056
  STEP: apply creating a deployment @ 09/09/25 22:04:38.06
  I0909 22:04:38.072758 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8634" for this suite. @ 09/09/25 22:04:38.078
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 09/09/25 22:04:38.089
  I0909 22:04:38.089966 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-probe @ 09/09/25 22:04:38.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:04:38.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:04:38.123
  STEP: Creating pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787 @ 09/09/25 22:04:38.126
  E0909 22:04:38.270745      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:39.271003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/09/25 22:04:40.153
  I0909 22:04:40.158504 22 container_probe.go:1748] Initial restart count of pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 is 0
  I0909 22:04:40.163348 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:04:40.271854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:41.272095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:42.168399 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:04:42.272933      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:43.273041      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:44.178939 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:04:44.273567      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:45.274261      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:46.186505 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:04:46.275176      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:47.275574      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:48.194423 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:04:48.276366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:49.277693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:50.201124 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:04:50.278499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:51.278681      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:52.207875 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:04:52.279815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:53.280201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:54.212564 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:04:54.280473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:55.280733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:56.217821 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:04:56.281675      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:57.282516      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:04:58.223124 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:04:58.283291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:04:59.283468      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:00.228291 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:00.284637      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:01.285236      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:02.234210 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:02.285336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:03.285705      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:04.240769 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:04.286086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:05.286233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:06.246010 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:06.286388      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:07.287546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:08.252421 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:08.287836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:09.288922      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:10.263020 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:10.289791      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:11.290066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:12.268403 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:12.290684      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:13.290814      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:14.274957 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:14.291142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:15.291740      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:16.282287 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:16.292668      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:17.293541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:18.287924 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:18.293742      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:19.294065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:20.293048 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:20.294913      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:21.296774      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:22.296763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:22.310974 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:23.297058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:24.298151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:24.317231 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:25.299166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:26.299383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:26.322209 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:27.300481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:28.301100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:28.328128 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:29.301293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:30.301408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:30.333631 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:31.301660      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:32.301821      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:32.338295 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:33.302026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:34.302258      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:34.344437 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:35.302666      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:36.302712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:36.351087 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:37.305214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:38.308145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:38.353743 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:39.308307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:40.308525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:40.357699 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:41.308743      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:42.309199      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:42.363006 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:43.309373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:44.309707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:44.369201 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:45.309751      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:46.310182      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:46.373815 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:47.311317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:48.312238      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:48.382309 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:49.312019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:50.312264      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:50.387579 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:51.312937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:52.313165      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:52.393307 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:53.313373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:54.314410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:54.400166 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:55.315276      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:56.315163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:56.404588 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:57.315518      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:05:58.315979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:05:58.409393 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:05:59.316692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:00.317845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:00.415153 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:01.318419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:02.319214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:02.421171 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:03.319376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:04.319796      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:04.426677 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:05.319765      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:06.320649      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:06.429880 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:07.321150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:08.321319      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:08.433746 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:09.321850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:10.322070      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:10.438937 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:11.322781      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:12.323024      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:12.443898 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:13.323313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:14.323791      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:14.451137 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:15.324168      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:16.325003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:16.458671 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:17.325147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:18.325358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:18.463478 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:19.325605      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:20.325940      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:20.469756 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:21.326302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:22.326659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:22.474389 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:23.327830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:24.329005      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:24.478675 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:25.329272      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:26.329503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:26.486335 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:27.329634      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:28.329767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:28.498321 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:29.330409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:30.330616      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:30.502901 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:31.330805      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:32.330980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:32.508399 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:33.331060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:34.331210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:34.514456 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:35.332560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:36.333251      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:36.520926 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:37.333452      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:38.333724      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:38.537477 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:39.333899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:40.334240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:40.545310 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:41.335201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:42.336042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:42.551855 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:43.336214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:44.337050      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:44.557248 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:45.337776      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:46.338423      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:46.563961 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:47.339484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:48.339802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:48.570388 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:49.340118      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:50.340703      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:50.576044 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:51.341870      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:52.343179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:52.584490 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:53.343801      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:54.345569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:54.591185 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:55.347591      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:56.348465      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:56.598390 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:57.354769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:06:58.354846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:06:58.602514 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:06:59.355045      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:00.355527      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:00.609030 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:01.355450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:02.355698      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:02.618201 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:03.356061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:04.356606      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:04.622586 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:05.357107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:06.357089      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:06.629153 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:07.357304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:08.357503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:08.636890 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:09.358061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:10.358423      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:10.642775 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:11.358819      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:12.359060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:12.652550 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:13.362332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:14.362534      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:14.657642 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:15.362957      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:16.363415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:16.663786 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:17.363645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:18.364223      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:18.673212 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:19.364701      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:20.365335      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:20.681016 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:21.365109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:22.366300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:22.689915 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:23.367540      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:24.368147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:24.692925 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:25.368322      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:26.370243      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:26.698034 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:27.370868      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:28.372007      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:28.703986 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:29.373319      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:30.372922      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:30.708335 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:31.373113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:32.373736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:32.722995 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:33.374794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:34.374967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:34.733390 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:35.375238      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:36.376113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:36.738555 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:37.376608      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:38.377604      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:38.750510 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:39.377872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:40.378513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:40.757829 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:41.378979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:42.379797      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:42.761757 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:43.380636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:44.381032      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:44.767805 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:45.381588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:46.381888      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:46.777856 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:47.383026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:48.383607      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:48.783637 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:49.384223      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:50.384506      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:50.797641 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:51.385341      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:52.386448      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:52.820188 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:53.386549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:54.386726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:54.828990 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:55.387762      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:56.387993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:56.840989 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:57.388711      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:07:58.389068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:07:58.850452 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:07:59.389465      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:00.392057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:00.863658 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:01.392541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:02.392769      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:02.873114 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:03.393008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:04.393152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:04.883021 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:05.394271      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:06.394661      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:06.897762 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:07.395562      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:08.397099      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:08.907499 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:09.396931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:10.397042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:10.913367 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:11.397254      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:12.397523      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:12.920764 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:13.397632      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:14.397750      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:14.926224 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:15.397905      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:16.398636      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:16.932250 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:17.399750      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:18.401080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:18.937501 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:19.402210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:20.402404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:20.943668 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:21.403730      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:22.404382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:22.948723 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:23.405507      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:24.405942      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:24.955384 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:25.406961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:26.407623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:26.961406 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:27.408979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:28.409307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:28.966874 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:29.410411      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:30.410565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:30.972330 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:31.410871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:32.411056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:32.976231 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:33.411799      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:34.412156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:34.982301 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:35.412934      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:36.413567      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:36.989056 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:37.414119      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:38.414829      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:38.996002 22 container_probe.go:1758] Get pod test-grpc-b4eef2b1-692a-46c5-9315-7bd4c316e277 in namespace container-probe-4787
  E0909 22:08:39.415447      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:40.415603      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/09/25 22:08:40.996
  I0909 22:08:41.030440 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4787" for this suite. @ 09/09/25 22:08:41.04
• [242.966 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/09/25 22:08:41.061
  I0909 22:08:41.061227 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename podtemplate @ 09/09/25 22:08:41.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:08:41.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:08:41.082
  STEP: Create a pod template @ 09/09/25 22:08:41.085
  STEP: Replace a pod template @ 09/09/25 22:08:41.092
  I0909 22:08:41.098286 22 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0909 22:08:41.098752 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9772" for this suite. @ 09/09/25 22:08:41.139
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 09/09/25 22:08:41.156
  I0909 22:08:41.156620 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename security-context-test @ 09/09/25 22:08:41.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:08:41.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:08:41.187
  E0909 22:08:41.416645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:42.417151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:43.418029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:44.418389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:45.218889 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9055" for this suite. @ 09/09/25 22:08:45.231
• [4.091 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 09/09/25 22:08:45.25
  I0909 22:08:45.250252 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename dns @ 09/09/25 22:08:45.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:08:45.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:08:45.283
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6226.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-6226.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/09/25 22:08:45.285
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6226.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6226.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/09/25 22:08:45.285
  STEP: creating a pod to probe /etc/hosts @ 09/09/25 22:08:45.285
  STEP: submitting the pod to kubernetes @ 09/09/25 22:08:45.285
  E0909 22:08:45.418518      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:46.418592      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:47.419419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:48.419994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/09/25 22:08:49.32
  STEP: looking for the results for each expected name from probers @ 09/09/25 22:08:49.325
  I0909 22:08:49.363543 22 dns_common.go:546] DNS probes using dns-6226/dns-test-5a048949-01bd-4473-ab1d-65c9bc2abd17 succeeded

  STEP: deleting the pod @ 09/09/25 22:08:49.364
  I0909 22:08:49.400265 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6226" for this suite. @ 09/09/25 22:08:49.405
• [4.171 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/09/25 22:08:49.421
  E0909 22:08:49.421693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:08:49.421263 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/09/25 22:08:49.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:08:49.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:08:49.449
  STEP: mirroring a new custom Endpoint @ 09/09/25 22:08:49.487
  I0909 22:08:49.495943      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 22:08:49.509206 22 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0909 22:08:50.422088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:51.422324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/09/25 22:08:51.516
  I0909 22:08:51.525250      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 09/09/25 22:08:51.541
  I0909 22:08:51.555000      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 22:08:51.573343 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6051" for this suite. @ 09/09/25 22:08:51.584
• [2.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/09/25 22:08:51.606
  I0909 22:08:51.606549 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:08:51.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:08:51.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:08:51.636
  STEP: Creating projection with secret that has name projected-secret-test-d91537de-1d3f-43da-aad8-c10f3e398fce @ 09/09/25 22:08:51.638
  STEP: Creating a pod to test consume secrets @ 09/09/25 22:08:51.645
  E0909 22:08:52.422565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:53.423049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:54.423955      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:55.425057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:08:55.673
  I0909 22:08:55.678069 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-secrets-2924d2cd-e253-4fd1-940f-a266ba6e8592 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 22:08:55.706
  I0909 22:08:55.744495 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4919" for this suite. @ 09/09/25 22:08:55.753
• [4.161 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/09/25 22:08:55.767
  I0909 22:08:55.767507 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 22:08:55.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:08:55.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:08:55.808
  STEP: Creating configMap with name cm-test-opt-del-ad667669-da24-4293-8f3d-3c8c6bd6c8d6 @ 09/09/25 22:08:55.852
  STEP: Creating configMap with name cm-test-opt-upd-e0be5e0c-b2b4-4b57-adf0-812bf8148d56 @ 09/09/25 22:08:55.859
  STEP: Creating the pod @ 09/09/25 22:08:55.874
  E0909 22:08:56.425477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:57.428061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-ad667669-da24-4293-8f3d-3c8c6bd6c8d6 @ 09/09/25 22:08:57.979
  STEP: Updating configmap cm-test-opt-upd-e0be5e0c-b2b4-4b57-adf0-812bf8148d56 @ 09/09/25 22:08:57.986
  STEP: Creating configMap with name cm-test-opt-create-a776e8cb-f65f-4169-88ea-8eb13c2eb6da @ 09/09/25 22:08:57.993
  STEP: waiting to observe update in volume @ 09/09/25 22:08:57.998
  E0909 22:08:58.428383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:08:59.429472      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:09:00.040787 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4264" for this suite. @ 09/09/25 22:09:00.047
• [4.294 seconds]
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 09/09/25 22:09:00.066
  I0909 22:09:00.066080 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 22:09:00.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:09:00.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:09:00.105
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 09/09/25 22:09:00.113
  STEP: Awaiting for the job to fail as there are failed indexes @ 09/09/25 22:09:00.133
  E0909 22:09:00.430165      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:01.430704      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:02.430858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:03.431829      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:04.432980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:05.436042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:06.436646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:07.437234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:08.437447      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:09.437607      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:10.468964      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:11.469741      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:12.469404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:13.469733      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:14.470147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:15.470577      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:16.471185      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:17.472759      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:18.473726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:19.476419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:20.477206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:21.477408      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:22.477771      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:23.478192      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 09/09/25 22:09:24.206
  I0909 22:09:24.210077 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2938" for this suite. @ 09/09/25 22:09:24.219
• [24.167 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/09/25 22:09:24.233
  I0909 22:09:24.233379 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/09/25 22:09:24.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:09:24.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:09:24.273
  I0909 22:09:24.277128 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:09:24.479308      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:09:24.878636 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5836" for this suite. @ 09/09/25 22:09:24.886
• [0.668 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 09/09/25 22:09:24.901
  I0909 22:09:24.901365 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sched-preemption @ 09/09/25 22:09:24.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:09:24.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:09:24.937
  I0909 22:09:24.956415 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0909 22:09:25.479640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:26.479906      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:27.480303      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:28.480389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:29.480727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:30.480976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:31.481097      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:32.482266      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:33.483659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:34.485174      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:35.489172      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:36.490524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:37.491911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:38.490734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:39.494382      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:40.493409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:41.494401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:42.494752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:43.495903      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:44.497378      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:45.497440      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:46.497472      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:47.505019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:48.501385      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:49.501773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:50.502388      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:51.502882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:52.503490      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:53.504456      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:54.504688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:55.504887      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:56.505069      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:57.505976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:58.506082      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:09:59.507223      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:00.507518      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:01.507755      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:02.508187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:03.508172      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:04.508951      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:05.509203      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:06.510320      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:07.510932      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:08.511779      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:09.512043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:10.512491      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:11.513433      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:12.514329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:13.515931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:14.515651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:15.515879      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:16.516169      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:17.516452      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:18.517240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:19.517469      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:20.517853      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:21.518467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:22.518848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:23.519448      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:24.519291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:10:24.964497 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/09/25 22:10:24.973
  I0909 22:10:24.974564 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/09/25 22:10:24.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:10:25.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:10:25.02
  I0909 22:10:25.045946 22 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0909 22:10:25.049787 22 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/09/25 22:10:25.125
  STEP: Removing a custom resource @ 09/09/25 22:10:25.148
  I0909 22:10:25.167453 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3860" for this suite. @ 09/09/25 22:10:25.178
  I0909 22:10:25.192118 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3134" for this suite. @ 09/09/25 22:10:25.276
• [60.390 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/09/25 22:10:25.295
  I0909 22:10:25.295213 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:10:25.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:10:25.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:10:25.329
  STEP: Creating configMap with name projected-configmap-test-volume-ad98b1fe-c14e-47d4-a220-c6fe98d8ca76 @ 09/09/25 22:10:25.334
  STEP: Creating a pod to test consume configMaps @ 09/09/25 22:10:25.343
  E0909 22:10:25.520331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:26.520439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:27.521162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:28.521599      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:10:29.387
  I0909 22:10:29.394275 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-projected-configmaps-5af2d949-0d85-4456-ae5e-0a6d1132af28 container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 22:10:29.403
  I0909 22:10:29.439429 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-438" for this suite. @ 09/09/25 22:10:29.451
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/09/25 22:10:29.466
  I0909 22:10:29.466097 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename cronjob @ 09/09/25 22:10:29.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:10:29.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:10:29.504
  STEP: Creating a ReplaceConcurrent cronjob @ 09/09/25 22:10:29.511
  STEP: Ensuring a job is scheduled @ 09/09/25 22:10:29.521
  E0909 22:10:29.522102      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:30.522340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:31.524175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:32.524430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:33.531154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:34.531458      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:35.532040      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:36.532370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:37.533370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:38.533656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:39.534763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:40.534904      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:41.535277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:42.536968      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:43.537130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:44.537872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:45.538653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:46.539310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:47.539981      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:48.541869      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:49.541730      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:50.543028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:51.543673      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:52.544087      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:53.544065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:54.544407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:55.546089      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:56.545509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:57.545838      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:58.549484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:10:59.550057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:00.550520      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/09/25 22:11:01.527
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/09/25 22:11:01.535
  STEP: Ensuring the job is replaced with a new one @ 09/09/25 22:11:01.538
  E0909 22:11:01.550951      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:02.551786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:03.552292      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:04.553138      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:05.554233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:06.554251      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:07.554537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:08.556015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:09.559470      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:10.557202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:11.557665      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:12.557891      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:13.558792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:14.558942      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:15.559429      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:16.561614      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:17.561862      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:18.562361      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:19.562998      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:20.563379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:21.566500      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:22.566076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:23.566274      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:24.566528      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:25.567289      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:26.567831      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:27.568156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:28.569368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:29.568783      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:30.569739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:31.570277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:32.570430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:33.571060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:34.572376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:35.573474      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:36.573815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:37.574023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:38.574300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:39.575333      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:40.575780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:41.576519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:42.577366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:43.577616      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:44.578461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:45.579106      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:46.580313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:47.580715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:48.581167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:49.581805      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:50.582070      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:51.582506      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:52.582778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:53.582990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:54.583437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:55.584437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:56.584724      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:57.585397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:58.586086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:11:59.586919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:00.587290      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/09/25 22:12:01.543
  I0909 22:12:01.553884 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-558" for this suite. @ 09/09/25 22:12:01.563
  E0909 22:12:01.587778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
• [92.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 09/09/25 22:12:01.603
  I0909 22:12:01.603604 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replication-controller @ 09/09/25 22:12:01.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:01.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:01.625
  STEP: Given a ReplicationController is created @ 09/09/25 22:12:01.627
  STEP: When the matched label of one of its pods change @ 09/09/25 22:12:01.639
  I0909 22:12:01.645435 22 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  E0909 22:12:02.590502      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:03.598718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:04.599805      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:05.599547      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:06.601535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:06.714368 22 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/09/25 22:12:06.753
  I0909 22:12:06.774084 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1604" for this suite. @ 09/09/25 22:12:06.815
• [5.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/09/25 22:12:06.845
  I0909 22:12:06.845813 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:12:06.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:06.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:06.871
  STEP: Setting up server cert @ 09/09/25 22:12:06.893
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:12:07.17
  STEP: Deploying the webhook pod @ 09/09/25 22:12:07.184
  STEP: Wait for the deployment to be ready @ 09/09/25 22:12:07.211
  I0909 22:12:07.224138 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:12:07.604359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:08.605078      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:09.273856 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 12, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 12, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 12, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:12:09.605493      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:10.606521      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:12:11.28
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:12:11.326
  E0909 22:12:11.606324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:12.326752 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/09/25 22:12:12.335
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/09/25 22:12:12.373
  I0909 22:12:12.373755 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  I0909 22:12:12.458174 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9055" for this suite. @ 09/09/25 22:12:12.474
  STEP: Destroying namespace "webhook-markers-367" for this suite. @ 09/09/25 22:12:12.489
• [5.650 seconds]
------------------------------
S
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/09/25 22:12:12.495
  I0909 22:12:12.495832 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename ingressclass @ 09/09/25 22:12:12.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:12.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:12.517
  STEP: getting /apis @ 09/09/25 22:12:12.52
  STEP: getting /apis/networking.k8s.io @ 09/09/25 22:12:12.524
  STEP: getting /apis/networking.k8s.iov1 @ 09/09/25 22:12:12.526
  STEP: creating @ 09/09/25 22:12:12.527
  STEP: getting @ 09/09/25 22:12:12.537
  STEP: listing @ 09/09/25 22:12:12.541
  STEP: watching @ 09/09/25 22:12:12.542
  I0909 22:12:12.542977 22 ingressclass.go:348] starting watch
  STEP: patching @ 09/09/25 22:12:12.544
  STEP: updating @ 09/09/25 22:12:12.549
  I0909 22:12:12.557242 22 ingressclass.go:364] waiting for watch events with expected annotations
  I0909 22:12:12.558002 22 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/09/25 22:12:12.558
  STEP: deleting a collection @ 09/09/25 22:12:12.564
  I0909 22:12:12.578210 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8756" for this suite. @ 09/09/25 22:12:12.582
• [0.104 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/09/25 22:12:12.602
  I0909 22:12:12.602055 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename daemonsets @ 09/09/25 22:12:12.603
  E0909 22:12:12.606688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:12.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:12.632
  STEP: Creating simple DaemonSet "daemon-set" @ 09/09/25 22:12:12.723
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/09/25 22:12:12.734
  I0909 22:12:12.789968 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:12:12.790386 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 22:12:12.794547 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:12:12.794636 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 22:12:13.606797      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:13.749396 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:12:13.749474 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 22:12:13.756375 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:12:13.757474 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 22:12:14.607731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:14.752659 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:12:14.754676 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 22:12:14.759968 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0909 22:12:14.760134 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 09/09/25 22:12:14.764
  I0909 22:12:14.768350 22 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/09/25 22:12:14.768
  I0909 22:12:14.784249 22 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/09/25 22:12:14.784
  I0909 22:12:14.789174 22 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0909 22:12:14.790130 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0909 22:12:14.791168 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0909 22:12:14.791556 22 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0909 22:12:14.791586 22 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-1589 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0909 22:12:14.791599 22 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/09/25 22:12:14.791
  STEP: watching for the daemon set status to be patched @ 09/09/25 22:12:14.805
  I0909 22:12:14.809656 22 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0909 22:12:14.809761 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0909 22:12:14.812327 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0909 22:12:14.812421 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0909 22:12:14.812444 22 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-1589 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0909 22:12:14.812538 22 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0909 22:12:14.813016 22 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-1589 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0909 22:12:14.813044 22 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/09/25 22:12:14.816
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1589, will wait for the garbage collector to delete the pods @ 09/09/25 22:12:14.816
  I0909 22:12:14.875588 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.196529ms
  I0909 22:12:14.978663 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 102.998229ms
  E0909 22:12:15.608656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:16.609169      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:17.583664 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:12:17.583708 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0909 22:12:17.588347 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46670"},"items":null}

  I0909 22:12:17.607945 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46670"},"items":null}

  E0909 22:12:17.621119      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:17.651619 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1589" for this suite. @ 09/09/25 22:12:17.657
• [5.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/09/25 22:12:17.677
  I0909 22:12:17.677603 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 22:12:17.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:17.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:17.703
  STEP: Creating secret with name secret-test-7fce8cf8-fa79-4a18-9a94-71d6e46bf83a @ 09/09/25 22:12:17.71
  STEP: Creating a pod to test consume secrets @ 09/09/25 22:12:17.724
  E0909 22:12:18.621284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:19.621494      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:20.621018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:21.621865      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:12:21.765
  I0909 22:12:21.767527 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-secrets-81ba9b63-e15e-4c1d-9d31-5674002e2ded container secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 22:12:21.79
  I0909 22:12:21.825695 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9909" for this suite. @ 09/09/25 22:12:21.83
• [4.173 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/09/25 22:12:21.85
  I0909 22:12:21.850612 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:12:21.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:21.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:21.884
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 22:12:21.89
  E0909 22:12:22.627548      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:23.624294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:24.625343      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:25.625688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:12:25.94
  I0909 22:12:25.948510 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-72560d91-146b-4a77-b052-1cd6ea5bf62d container client-container: <nil>
  STEP: delete the pod @ 09/09/25 22:12:25.956
  I0909 22:12:25.991062 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6260" for this suite. @ 09/09/25 22:12:25.998
• [4.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 09/09/25 22:12:26.03
  I0909 22:12:26.030249 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:12:26.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:26.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:26.084
  STEP: Setting up server cert @ 09/09/25 22:12:26.119
  E0909 22:12:26.626129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:12:26.873
  STEP: Deploying the webhook pod @ 09/09/25 22:12:26.886
  STEP: Wait for the deployment to be ready @ 09/09/25 22:12:26.907
  I0909 22:12:26.949185 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:12:27.626381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:28.626635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:12:28.961
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:12:29.023
  E0909 22:12:29.626786      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:30.024633 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/09/25 22:12:30.031
  STEP: verifying the validating webhook match conditions @ 09/09/25 22:12:30.048
  STEP: updating the validating webhook match conditions @ 09/09/25 22:12:30.053
  STEP: verifying the validating webhook match conditions @ 09/09/25 22:12:30.085
  I0909 22:12:30.193454 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4649" for this suite. @ 09/09/25 22:12:30.199
  STEP: Destroying namespace "webhook-markers-8435" for this suite. @ 09/09/25 22:12:30.223
• [4.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 09/09/25 22:12:30.239
  I0909 22:12:30.240078 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 22:12:30.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:30.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:30.27
  STEP: validating api versions @ 09/09/25 22:12:30.275
  I0909 22:12:30.275911 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-1813 api-versions'
  I0909 22:12:30.375025 22 builder.go:146] stderr: ""
  I0909 22:12:30.375163 22 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\ngateway.networking.k8s.io/v1\ngateway.networking.k8s.io/v1beta1\ngroupsnapshot.storage.k8s.io/v1beta1\nhelm.cattle.io/v1\nhub.traefik.io/v1alpha1\nk3s.cattle.io/v1\nk8s.cni.cncf.io/v1\nlonghorn.io/v1beta2\nmetallb.io/v1beta1\nmetallb.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy.networking.k8s.io/v1alpha1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.io/v1alpha1\nv1\nwhereabouts.cni.cncf.io/v1alpha1\n"
  I0909 22:12:30.376020 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1813" for this suite. @ 09/09/25 22:12:30.385
• [0.160 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 09/09/25 22:12:30.399
  I0909 22:12:30.399576 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:12:30.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:30.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:30.433
  STEP: Setting up server cert @ 09/09/25 22:12:30.465
  E0909 22:12:30.627672      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:12:31.057
  STEP: Deploying the webhook pod @ 09/09/25 22:12:31.064
  STEP: Wait for the deployment to be ready @ 09/09/25 22:12:31.083
  I0909 22:12:31.111413 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:12:31.627987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:32.628561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:12:33.123
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:12:33.158
  E0909 22:12:33.628327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:34.158951 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/09/25 22:12:34.172
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/09/25 22:12:34.21
  STEP: Creating a configMap that should not be mutated @ 09/09/25 22:12:34.225
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/09/25 22:12:34.242
  STEP: Creating a configMap that should be mutated @ 09/09/25 22:12:34.256
  I0909 22:12:34.435233 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1436" for this suite. @ 09/09/25 22:12:34.443
  STEP: Destroying namespace "webhook-markers-6725" for this suite. @ 09/09/25 22:12:34.45
• [4.062 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/09/25 22:12:34.462
  I0909 22:12:34.462119 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replicaset @ 09/09/25 22:12:34.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:34.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:34.499
  I0909 22:12:34.517883 22 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0909 22:12:34.628846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:35.631071      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:36.632064      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:37.632649      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:38.633306      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:39.529474 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/09/25 22:12:39.534
  STEP: Scaling up "test-rs" replicaset @ 09/09/25 22:12:39.537
  I0909 22:12:39.567623 22 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/09/25 22:12:39.569
  I0909 22:12:39.591329 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-3489 with ReadyReplicas 1, AvailableReplicas 1
  I0909 22:12:39.612701 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-3489 with ReadyReplicas 1, AvailableReplicas 1
  E0909 22:12:39.638602      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:39.657305 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-3489 with ReadyReplicas 1, AvailableReplicas 1
  I0909 22:12:39.669066 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-3489 with ReadyReplicas 1, AvailableReplicas 1
  E0909 22:12:40.648132      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:41.447311 22 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-3489 with ReadyReplicas 2, AvailableReplicas 2
  I0909 22:12:41.484042 22 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-3489 with ReadyReplicas 3 found true
  I0909 22:12:41.486891 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3489" for this suite. @ 09/09/25 22:12:41.497
• [7.045 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/09/25 22:12:41.509
  I0909 22:12:41.509835 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:12:41.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:41.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:41.541
  STEP: Creating projection with secret that has name projected-secret-test-map-dc7476e8-7a78-4073-ad4f-327d785c10d2 @ 09/09/25 22:12:41.544
  STEP: Creating a pod to test consume secrets @ 09/09/25 22:12:41.553
  E0909 22:12:41.642928      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:42.643693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:43.644991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:44.645052      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:12:45.586
  I0909 22:12:45.591936 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-secrets-543bbe13-d2bc-4420-9ace-bf8187875290 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 22:12:45.618
  E0909 22:12:45.645154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:45.654698 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6355" for this suite. @ 09/09/25 22:12:45.659
• [4.157 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/09/25 22:12:45.668
  I0909 22:12:45.668421 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:12:45.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:45.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:45.689
  STEP: Setting up server cert @ 09/09/25 22:12:45.714
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:12:46.229
  STEP: Deploying the webhook pod @ 09/09/25 22:12:46.238
  STEP: Wait for the deployment to be ready @ 09/09/25 22:12:46.263
  I0909 22:12:46.289775 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:12:46.646713      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:47.646872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:12:48.311
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:12:48.364
  E0909 22:12:48.647671      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:49.365640 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0909 22:12:49.372358 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:12:49.649309      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9735-crds.webhook.example.com via the AdmissionRegistration API @ 09/09/25 22:12:49.907
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/09/25 22:12:49.939
  E0909 22:12:50.649807      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:51.650859      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:52.647284 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0909 22:12:52.658450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-7218" for this suite. @ 09/09/25 22:12:52.661
  STEP: Destroying namespace "webhook-markers-5000" for this suite. @ 09/09/25 22:12:52.675
• [7.034 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/09/25 22:12:52.703
  I0909 22:12:52.703206 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:12:52.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:52.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:52.725
  STEP: Setting up server cert @ 09/09/25 22:12:52.761
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:12:53.083
  STEP: Deploying the webhook pod @ 09/09/25 22:12:53.097
  STEP: Wait for the deployment to be ready @ 09/09/25 22:12:53.124
  I0909 22:12:53.136703 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:12:53.660226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:54.660421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:12:55.167
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:12:55.206
  E0909 22:12:55.661188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:56.208425 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/09/25 22:12:56.213
  STEP: create a namespace for the webhook @ 09/09/25 22:12:56.247
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/09/25 22:12:56.274
  I0909 22:12:56.557072 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2333" for this suite. @ 09/09/25 22:12:56.573
  STEP: Destroying namespace "webhook-markers-7771" for this suite. @ 09/09/25 22:12:56.595
  STEP: Destroying namespace "fail-closed-namespace-2257" for this suite. @ 09/09/25 22:12:56.606
• [3.922 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 09/09/25 22:12:56.626
  I0909 22:12:56.626635 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 22:12:56.631
  E0909 22:12:56.661461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:56.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:56.711
  STEP: creating a collection of services @ 09/09/25 22:12:56.717
  I0909 22:12:56.717714 22 service.go:3666] Creating e2e-svc-a-mf26b
  I0909 22:12:56.747431 22 service.go:3666] Creating e2e-svc-b-9zv5b
  I0909 22:12:56.788693 22 service.go:3666] Creating e2e-svc-c-ftxnn
  STEP: deleting service collection @ 09/09/25 22:12:56.817
  I0909 22:12:56.878357 22 service.go:3701] Collection of services has been deleted
  I0909 22:12:56.878490 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5643" for this suite. @ 09/09/25 22:12:56.887
• [0.271 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 09/09/25 22:12:56.897
  I0909 22:12:56.897905 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename proxy @ 09/09/25 22:12:56.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:56.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:56.922
  I0909 22:12:56.925417 22 proxy.go:430] Creating pod...
  E0909 22:12:57.661543      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:12:58.663435      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:12:58.940138 22 proxy.go:454] Creating service...
  I0909 22:12:58.970835 22 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/pods/agnhost/proxy?method=DELETE
  I0909 22:12:59.005154 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0909 22:12:59.005194 22 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/pods/agnhost/proxy?method=OPTIONS
  I0909 22:12:59.011261 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0909 22:12:59.011332 22 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/pods/agnhost/proxy?method=PATCH
  I0909 22:12:59.015638 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0909 22:12:59.016655 22 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/pods/agnhost/proxy?method=POST
  I0909 22:12:59.020160 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0909 22:12:59.020207 22 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/pods/agnhost/proxy?method=PUT
  I0909 22:12:59.023683 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0909 22:12:59.024305 22 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/services/e2e-proxy-test-service/proxy?method=DELETE
  I0909 22:12:59.030288 22 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0909 22:12:59.030380 22 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0909 22:12:59.035173 22 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0909 22:12:59.036196 22 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/services/e2e-proxy-test-service/proxy?method=PATCH
  I0909 22:12:59.042955 22 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0909 22:12:59.043044 22 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/services/e2e-proxy-test-service/proxy?method=POST
  I0909 22:12:59.048159 22 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0909 22:12:59.048255 22 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/services/e2e-proxy-test-service/proxy?method=PUT
  I0909 22:12:59.053658 22 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0909 22:12:59.054202 22 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/pods/agnhost/proxy?method=GET
  I0909 22:12:59.057535 22 proxy.go:530] http.Client request:GET StatusCode:301
  I0909 22:12:59.057608 22 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/services/e2e-proxy-test-service/proxy?method=GET
  I0909 22:12:59.061457 22 proxy.go:530] http.Client request:GET StatusCode:301
  I0909 22:12:59.061860 22 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/pods/agnhost/proxy?method=HEAD
  I0909 22:12:59.064278 22 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0909 22:12:59.064376 22 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1316/services/e2e-proxy-test-service/proxy?method=HEAD
  I0909 22:12:59.070455 22 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0909 22:12:59.070893 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1316" for this suite. @ 09/09/25 22:12:59.075
• [2.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/09/25 22:12:59.087
  I0909 22:12:59.087400 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 22:12:59.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:12:59.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:12:59.123
  STEP: Creating configMap with name configmap-test-volume-map-80a8ca02-5d33-4080-a221-c9c6c6e53340 @ 09/09/25 22:12:59.133
  STEP: Creating a pod to test consume configMaps @ 09/09/25 22:12:59.142
  E0909 22:12:59.664754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:00.664153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:01.664748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:02.666598      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:13:03.191
  I0909 22:13:03.198174 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-8935c0a3-680a-4a38-86d9-ec1f5d7452f7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 22:13:03.207
  I0909 22:13:03.249759 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9774" for this suite. @ 09/09/25 22:13:03.254
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 09/09/25 22:13:03.264
  I0909 22:13:03.264994 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename services @ 09/09/25 22:13:03.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:13:03.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:13:03.289
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6549 @ 09/09/25 22:13:03.298
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/09/25 22:13:03.33
  STEP: creating service externalsvc in namespace services-6549 @ 09/09/25 22:13:03.33
  I0909 22:13:03.379829 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0909 22:13:03.668373      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:04.668459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the NodePort service to type=ExternalName @ 09/09/25 22:13:05.395
  I0909 22:13:05.454250 22 resource.go:361] Creating new exec pod
  E0909 22:13:05.669125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:06.670295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:13:07.486988 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-6549 exec execpod28p2d -- /bin/sh -x -c nslookup nodeport-service.services-6549.svc.cluster.local'
  E0909 22:13:07.669658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:13:07.856944 22 builder.go:146] stderr: "+ nslookup nodeport-service.services-6549.svc.cluster.local\n"
  I0909 22:13:07.856988 22 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-6549.svc.cluster.local\tcanonical name = externalsvc.services-6549.svc.cluster.local.\nName:\texternalsvc.services-6549.svc.cluster.local\nAddress: 10.43.187.41\n\n"
  I0909 22:13:07.957159 22 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0909 22:13:07.981371 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6549" for this suite. @ 09/09/25 22:13:07.99
• [4.734 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 09/09/25 22:13:07.998
  I0909 22:13:07.998907 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename dns @ 09/09/25 22:13:07.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:13:08.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:13:08.034
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/09/25 22:13:08.038
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/09/25 22:13:08.038
  STEP: creating a pod to probe DNS @ 09/09/25 22:13:08.038
  STEP: submitting the pod to kubernetes @ 09/09/25 22:13:08.039
  E0909 22:13:08.669969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:09.670415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/09/25 22:13:10.075
  STEP: looking for the results for each expected name from probers @ 09/09/25 22:13:10.079
  I0909 22:13:10.099158 22 dns_common.go:546] DNS probes using dns-4012/dns-test-a2b9ce21-4197-40e0-a585-1dadd5a34f46 succeeded

  STEP: deleting the pod @ 09/09/25 22:13:10.1
  I0909 22:13:10.133583 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4012" for this suite. @ 09/09/25 22:13:10.139
• [2.155 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 09/09/25 22:13:10.16
  I0909 22:13:10.161063 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-runtime @ 09/09/25 22:13:10.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:13:10.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:13:10.197
  STEP: create the container @ 09/09/25 22:13:10.202
  I0909 22:13:10.215464      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/09/25 22:13:10.216
  E0909 22:13:10.671195      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:11.672213      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:12.676349      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/09/25 22:13:13.24
  STEP: the container should be terminated @ 09/09/25 22:13:13.242
  STEP: the termination message should be set @ 09/09/25 22:13:13.242
  I0909 22:13:13.242041 22 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/09/25 22:13:13.242
  I0909 22:13:13.260004 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6883" for this suite. @ 09/09/25 22:13:13.264
• [3.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 09/09/25 22:13:13.272
  I0909 22:13:13.272572 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 22:13:13.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:13:13.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:13:13.291
  STEP: Creating a ResourceQuota @ 09/09/25 22:13:13.295
  STEP: Getting a ResourceQuota @ 09/09/25 22:13:13.302
  STEP: Updating a ResourceQuota @ 09/09/25 22:13:13.307
  STEP: Verifying a ResourceQuota was modified @ 09/09/25 22:13:13.315
  STEP: Deleting a ResourceQuota @ 09/09/25 22:13:13.319
  STEP: Verifying the deleted ResourceQuota @ 09/09/25 22:13:13.326
  I0909 22:13:13.328081 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3424" for this suite. @ 09/09/25 22:13:13.367
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 09/09/25 22:13:13.378
  I0909 22:13:13.378868 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 22:13:13.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:13:13.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:13:13.415
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/09/25 22:13:13.429
  E0909 22:13:13.673865      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:14.674144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:15.676081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:16.676218      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:13:17.465
  I0909 22:13:17.469170 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-8308dd3d-65fc-4072-9b06-c5bc95a4a58b container test-container: <nil>
  STEP: delete the pod @ 09/09/25 22:13:17.48
  I0909 22:13:17.508369 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5399" for this suite. @ 09/09/25 22:13:17.516
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 09/09/25 22:13:17.529
  I0909 22:13:17.529332 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 22:13:17.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:13:17.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:13:17.561
  STEP: Creating resourceQuota "e2e-rq-status-6m7hp" @ 09/09/25 22:13:17.569
  I0909 22:13:17.576765 22 resource_quota.go:1106] Resource quota "e2e-rq-status-6m7hp" reports spec: hard cpu limit of 500m
  I0909 22:13:17.577311 22 resource_quota.go:1108] Resource quota "e2e-rq-status-6m7hp" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-6m7hp" /status @ 09/09/25 22:13:17.577
  STEP: Confirm /status for "e2e-rq-status-6m7hp" resourceQuota via watch @ 09/09/25 22:13:17.596
  I0909 22:13:17.597711 22 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-6m7hp" in namespace "resourcequota-1580" with hard status: v1.ResourceList(nil)
  I0909 22:13:17.597781 22 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-6m7hp" in namespace "resourcequota-1580" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0909 22:13:17.597914 22 resource_quota.go:1145] ResourceQuota "e2e-rq-status-6m7hp" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/09/25 22:13:17.599
  I0909 22:13:17.605623 22 resource_quota.go:1156] Resource quota "e2e-rq-status-6m7hp" reports spec: hard cpu limit of 1
  I0909 22:13:17.605658 22 resource_quota.go:1157] Resource quota "e2e-rq-status-6m7hp" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-6m7hp" /status @ 09/09/25 22:13:17.605
  STEP: Confirm /status for "e2e-rq-status-6m7hp" resourceQuota via watch @ 09/09/25 22:13:17.613
  I0909 22:13:17.615061 22 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-6m7hp" in namespace "resourcequota-1580" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0909 22:13:17.615334 22 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-6m7hp" in namespace "resourcequota-1580" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0909 22:13:17.615610 22 resource_quota.go:1189] ResourceQuota "e2e-rq-status-6m7hp" /status was patched
  STEP: Get "e2e-rq-status-6m7hp" /status @ 09/09/25 22:13:17.616
  I0909 22:13:17.618694 22 resource_quota.go:1200] Resourcequota "e2e-rq-status-6m7hp" reports status: hard cpu of 1
  I0909 22:13:17.618734 22 resource_quota.go:1202] Resourcequota "e2e-rq-status-6m7hp" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-6m7hp" /status before checking Spec is unchanged @ 09/09/25 22:13:17.62
  I0909 22:13:17.631743 22 resource_quota.go:1222] Resourcequota "e2e-rq-status-6m7hp" reports status: hard cpu of 2
  I0909 22:13:17.632180 22 resource_quota.go:1224] Resourcequota "e2e-rq-status-6m7hp" reports status: hard memory of 2Gi
  I0909 22:13:17.633669 22 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-6m7hp" in namespace "resourcequota-1580" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0909 22:13:17.635902 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6m7hp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6m7hp", GenerateName:"", Namespace:"resourcequota-1580", SelfLink:"", UID:"ab6f1587-8c73-4529-9977-8b4f37261162", ResourceVersion:"47786", Generation:0, CreationTimestamp:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6m7hp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00494af60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00494af90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00494afc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0909 22:13:17.676376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:18.677726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:19.678113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:20.679101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:21.679287      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:13:22.642080 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6m7hp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6m7hp", GenerateName:"", Namespace:"resourcequota-1580", SelfLink:"", UID:"ab6f1587-8c73-4529-9977-8b4f37261162", ResourceVersion:"47786", Generation:0, CreationTimestamp:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6m7hp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00494b140), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00494b170), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00494b1a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0909 22:13:22.679947      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:23.681032      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:24.681275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:25.681728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:26.682376      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:13:27.637858 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6m7hp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6m7hp", GenerateName:"", Namespace:"resourcequota-1580", SelfLink:"", UID:"ab6f1587-8c73-4529-9977-8b4f37261162", ResourceVersion:"47786", Generation:0, CreationTimestamp:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6m7hp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049b8ae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049b8b10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049b8b40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0909 22:13:27.683478      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:28.684416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:29.684661      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:30.684970      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:31.685379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:13:32.638015 22 resource_quota.go:1267] ResourceQuota "e2e-rq-status-6m7hp" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-6m7hp", GenerateName:"", Namespace:"resourcequota-1580", SelfLink:"", UID:"ab6f1587-8c73-4529-9977-8b4f37261162", ResourceVersion:"47786", Generation:0, CreationTimestamp:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-6m7hp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049b8ca8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049b8cd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 9, 22, 13, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049b8d08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0909 22:13:32.685953      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:33.686514      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:34.687042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:35.687241      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:36.688006      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:13:37.638510 22 resource_quota.go:1264] ResourceQuota "e2e-rq-status-6m7hp" Spec was unchanged and /status reset
  I0909 22:13:37.638799 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1580" for this suite. @ 09/09/25 22:13:37.645
• [20.133 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/09/25 22:13:37.662
  I0909 22:13:37.662995 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename init-container @ 09/09/25 22:13:37.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:13:37.684
  E0909 22:13:37.688229      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:13:37.695
  STEP: creating the pod @ 09/09/25 22:13:37.699
  I0909 22:13:37.699839 22 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0909 22:13:38.689095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:39.689666      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:40.690414      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:41.691256      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:42.701515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:13:43.240322 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5253" for this suite. @ 09/09/25 22:13:43.246
• [5.591 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 09/09/25 22:13:43.253
  I0909 22:13:43.253670 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename svcaccounts @ 09/09/25 22:13:43.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:13:43.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:13:43.274
  I0909 22:13:43.302178 22 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0909 22:13:43.302690 22 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0909 22:13:43.315032 22 service_accounts.go:281] created pod pod-service-account-mountsa
  I0909 22:13:43.315079 22 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0909 22:13:43.329084 22 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0909 22:13:43.329125 22 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0909 22:13:43.352271 22 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0909 22:13:43.362002 22 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0909 22:13:43.374795 22 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0909 22:13:43.374840 22 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0909 22:13:43.389198 22 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0909 22:13:43.394813 22 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0909 22:13:43.410450 22 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0909 22:13:43.410542 22 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0909 22:13:43.425109 22 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0909 22:13:43.425153 22 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0909 22:13:43.437400 22 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0909 22:13:43.437442 22 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0909 22:13:43.437542 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5731" for this suite. @ 09/09/25 22:13:43.443
• [0.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/09/25 22:13:43.471
  I0909 22:13:43.472037 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/09/25 22:13:43.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:13:43.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:13:43.507
  I0909 22:13:43.521915 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8004" for this suite. @ 09/09/25 22:13:43.548
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 09/09/25 22:13:43.567
  I0909 22:13:43.567934 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 22:13:43.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:13:43.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:13:43.646
  STEP: starting the proxy server @ 09/09/25 22:13:43.676
  I0909 22:13:43.687787 22 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-4166 proxy -p 0 --disable-filter'
  E0909 22:13:43.708980      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: curling proxy /api/ output @ 09/09/25 22:13:43.919
  I0909 22:13:43.946635 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4166" for this suite. @ 09/09/25 22:13:43.95
• [0.389 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/09/25 22:13:43.957
  I0909 22:13:43.957481 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/09/25 22:13:43.958
  I0909 22:13:43.962689 22 kubectl.go:2232] kubectl proxy stderr: W0909 22:13:43.919252     765 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0909 22:13:43.962738 22 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:40747

  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:13:43.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:13:43.98
  I0909 22:13:43.982403 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0909 22:13:44.709338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:45.709665      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:46.710655      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:47.711811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:48.711895      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:49.712304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:50.714626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:51.714773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:52.714961      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:53.715128      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:54.715379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:55.715616      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:56.715746      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:57.716111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:58.717272      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:13:59.717407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:00.718319      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:01.718334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:02.718725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:03.719302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:04.719904      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:05.720226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:06.720438      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:07.721253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:08.721209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:09.721461      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:10.722130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:11.723059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:12.722685      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:13.723772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:14.724677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:15.725170      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:16.725130      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:17.725275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:18.726219      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:19.726459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:20.726889      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:21.727140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:22.732618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:23.733599      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:24.734233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:25.734475      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:26.734731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:27.735338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:28.736330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:29.736523      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:30.737647      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:31.739336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:32.742118      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:33.740726      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:34.740900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:35.741318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:36.742600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:37.743220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:38.744724      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:39.745235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:40.745739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:41.745915      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:42.746403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:43.747140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:14:43.983787 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0909 22:14:43.988922 22 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/09/25 22:14:43.989
  I0909 22:14:44.227565 22 taints.go:463] Pod1 is running on oneke-ip-192-168-150-105. Tainting Node
  E0909 22:14:44.747817      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:45.752699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:14:46.465065 22 taints.go:471] Pod2 is running on oneke-ip-192-168-150-105. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/09/25 22:14:46.465
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/09/25 22:14:46.511
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/09/25 22:14:46.525
  E0909 22:14:46.773582      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:47.754221      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:48.755215      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:49.763371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:50.766269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:51.769186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:14:52.572928 22 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0909 22:14:52.769722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:53.770630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:54.770798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:55.771794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:56.772884      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:57.773098      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:58.773279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:14:59.773468      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:00.773664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:01.773939      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:02.774077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:03.774604      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:04.774920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:05.775056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:06.775314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:07.775529      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:08.776682      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:09.777059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:10.778246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:11.779412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:12.666351 22 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/09/25 22:15:12.704
  I0909 22:15:12.719457 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-3574" for this suite. @ 09/09/25 22:15:12.749
  E0909 22:15:12.814068      22 retrywatcher.go:169] "Watch failed" err="context canceled"
• [88.884 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 09/09/25 22:15:12.862
  I0909 22:15:12.862872 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-probe @ 09/09/25 22:15:12.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:15:12.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:15:12.936
  STEP: Creating pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874 @ 09/09/25 22:15:12.949
  E0909 22:15:13.798504      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:14.799917      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/09/25 22:15:14.972
  I0909 22:15:14.976070 22 container_probe.go:1748] Initial restart count of pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 is 0
  I0909 22:15:14.980379 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:15.799183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:16.800193      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:16.985237 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:17.808836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:18.808859      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:19.010574 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:19.809697      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:20.810144      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:21.013617 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:21.810355      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:22.810303      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:23.018401 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:23.811105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:24.812051      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:25.022994 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:25.812046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:26.813054      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:27.026081 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:27.813362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:28.814133      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:29.034703 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:29.814454      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:30.814577      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:31.045805 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:31.815073      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:32.815162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:33.052308 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:33.815344      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:34.815569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:35.059651 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:35.815888      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:36.816556      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:37.065167 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:37.817241      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:38.818105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:39.076454 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:39.818094      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:40.825129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:41.086897 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:41.820167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:42.821132      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:43.095122 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:43.824401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:44.822304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:45.100929 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:45.822436      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:46.823000      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:47.105112 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:47.827261      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:48.827590      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:49.111382 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:49.827752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:50.828290      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:51.125707 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:51.828508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:52.828752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:53.134666 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:53.829139      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:54.829876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:55.141798 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:55.830293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:56.830508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:57.153696 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:57.831468      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:15:58.832452      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:15:59.164561 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:15:59.833650      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:00.833695      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:01.174441 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:01.836976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:02.837467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:03.179678 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:03.837770      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:04.838362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:05.186074 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:05.838623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:06.839317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:07.197658 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:07.840236      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:08.841024      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:09.203869 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:09.841422      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:10.841985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:11.209463 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:11.842501      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:12.842935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:13.215378 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:13.843439      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:14.844105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:15.221188 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:15.844190      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:16.845200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:17.227079 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:17.845145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:18.846158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:19.233544 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:19.846344      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:20.847109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:21.239125 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:21.848050      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:22.865844      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:23.243683 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:23.866154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:24.866379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:25.249336 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:25.866581      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:26.866839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:27.254827 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:27.866909      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:28.867204      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:29.260064 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:29.867628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:30.867945      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:31.268463 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:31.868313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:32.868497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:33.274203 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:33.869246      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:34.869397      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:35.280500 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:35.870312      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:36.870570      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:37.285838 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:37.871275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:38.872205      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:39.294495 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:39.872392      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:40.872254      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:41.301878 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:41.873537      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:42.873495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:43.307839 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:43.874361      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:44.874684      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:45.314447 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:45.874425      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:46.875638      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:47.319082 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:47.877287      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:48.878091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:49.325418 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:49.885054      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:50.885104      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:51.332151 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:51.885357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:52.885474      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:53.339929 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:53.886496      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:54.887328      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:55.346383 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:55.887921      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:56.888040      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:57.351912 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:57.889049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:16:58.889115      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:16:59.355280 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:16:59.890350      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:00.890348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:01.361843 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:01.891227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:02.892418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:03.367568 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:03.893466      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:04.893691      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:05.371493 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:05.902879      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:06.903559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:07.380301 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:07.904207      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:08.904524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:09.388592 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:09.904570      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:10.904770      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:11.395887 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:11.905611      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:12.908983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:13.404478 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:13.909951      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:14.910550      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:15.412013 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:15.910664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:16.912348      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:17.424413 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:17.915040      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:18.915283      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:19.429457 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:19.915495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:20.915523      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:21.434080 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:21.915851      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:22.916178      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:23.438392 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:23.916378      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:24.916584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:25.444407 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:25.917020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:26.917151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:27.465467 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:27.920985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:28.919553      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:29.471398 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:29.919673      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:30.919923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:31.475626 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:31.920341      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:32.921060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:33.481164 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:33.923051      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:34.923657      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:35.490683 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:35.924698      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:36.925005      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:37.498954 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:37.925281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:38.925717      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:39.503437 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:39.925848      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:40.926426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:41.509483 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:41.926954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:42.927131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:43.517234 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:43.927505      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:44.928114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:45.523219 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:45.928134      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:46.928407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:47.528187 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:47.930109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:48.930509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:49.533039 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:49.930582      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:50.930794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:51.537384 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:51.931841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:52.932184      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:53.543188 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:53.932541      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:54.933292      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:55.549219 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:55.934039      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:56.935147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:57.552646 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:57.936057      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:17:58.936485      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:17:59.556788 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:17:59.936775      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:00.937184      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:01.561806 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:01.937865      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:02.942794      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:03.568101 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:03.942166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:04.942323      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:05.572315 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:05.942949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:06.946394      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:07.577158 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:07.950619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:08.950714      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:09.580467 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:09.952080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:10.952698      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:11.587132 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:11.952878      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:12.953044      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:13.601283 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:13.954655      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:14.954146      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:15.605417 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:15.954985      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:16.956002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:17.610237 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:17.956742      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:18.957511      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:19.616171 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:19.957620      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:20.960447      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:21.621285 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:21.961024      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:22.961054      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:23.627758 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:23.961971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:24.969741      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:25.632070 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:25.970515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:26.971413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:27.636057 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:27.976004      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:28.976773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:29.641546 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:29.977838      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:30.978519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:31.646211 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:31.978623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:32.978789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:33.652768 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:33.979300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:34.980581      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:35.657583 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:35.982196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:36.983224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:37.664453 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:37.990853      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:38.991624      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:39.669530 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:39.992490      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:40.992757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:41.676120 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:41.993792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:42.993896      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:43.680475 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:43.995071      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:44.995318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:45.686455 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:45.996020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:46.997035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:47.690799 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:47.998375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:49.000857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:49.696174 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:49.998549      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:50.998714      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:51.701233 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:51.999044      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:53.000137      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:53.708994 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:54.000767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:55.001476      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:55.714592 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:56.001971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:57.002875      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:57.720474 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:18:58.003789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:18:59.004354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:18:59.726209 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:19:00.004518      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:01.005512      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:01.730431 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:19:02.005793      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:03.006029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:03.736456 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:19:04.006810      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:05.007871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:05.741264 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:19:06.009011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:07.009545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:07.746600 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:19:08.010410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:09.010416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:09.752781 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:19:10.011214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:11.011645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:11.758338 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:19:12.011971      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:13.012669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:13.763440 22 container_probe.go:1758] Get pod busybox-a1590c7c-50eb-4ae8-ba2d-c02ed440f5c9 in namespace container-probe-1874
  E0909 22:19:14.012979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:15.014077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/09/25 22:19:15.763
  I0909 22:19:15.787085 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1874" for this suite. @ 09/09/25 22:19:15.803
• [242.981 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/09/25 22:19:15.827
  I0909 22:19:15.827635 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename containers @ 09/09/25 22:19:15.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:19:15.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:19:15.857
  STEP: Creating a pod to test override command @ 09/09/25 22:19:15.862
  E0909 22:19:16.016063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:17.016275      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:18.021416      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:19.022317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:19:19.896
  I0909 22:19:19.900326 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod client-containers-b06960b5-12b5-4227-892e-1632c836fa9b container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 22:19:19.927
  I0909 22:19:19.956044 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1032" for this suite. @ 09/09/25 22:19:19.961
• [4.143 seconds]
------------------------------
SS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/09/25 22:19:19.972
  I0909 22:19:19.972304 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename prestop @ 09/09/25 22:19:19.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:19:19.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:19:20.005
  STEP: Creating server pod server in namespace prestop-4697 @ 09/09/25 22:19:20.01
  STEP: Waiting for pods to come up. @ 09/09/25 22:19:20.025
  E0909 22:19:20.037203      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:21.038071      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:22.038569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-4697 @ 09/09/25 22:19:22.056
  E0909 22:19:23.039032      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:24.039559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/09/25 22:19:24.09
  E0909 22:19:25.041209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:26.041797      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:27.041770      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:28.041900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:29.042780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:29.119636 22 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/09/25 22:19:29.12
  I0909 22:19:29.156067 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4697" for this suite. @ 09/09/25 22:19:29.187
• [9.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/09/25 22:19:29.213
  I0909 22:19:29.213691 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 22:19:29.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:19:29.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:19:29.233
  STEP: Creating a pod to test downward api env vars @ 09/09/25 22:19:29.236
  E0909 22:19:30.042902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:31.042994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:32.043150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:33.043413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:19:33.263
  I0909 22:19:33.265488 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downward-api-2ae1a238-d667-4bcc-b0a1-f2fac5e537f8 container dapi-container: <nil>
  STEP: delete the pod @ 09/09/25 22:19:33.285
  I0909 22:19:33.323578 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-122" for this suite. @ 09/09/25 22:19:33.338
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/09/25 22:19:33.362
  I0909 22:19:33.362772 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/09/25 22:19:33.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:19:33.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:19:33.396
  I0909 22:19:33.401666 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:19:34.044012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:35.043987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:36.044395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:36.529527 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7657" for this suite. @ 09/09/25 22:19:36.539
• [3.186 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/09/25 22:19:36.555
  I0909 22:19:36.559549 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:19:36.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:19:36.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:19:36.592
  STEP: Creating secret with name s-test-opt-del-c96a733a-9b14-4aaf-bab1-59e61f1a21ff @ 09/09/25 22:19:36.639
  STEP: Creating secret with name s-test-opt-upd-429b9189-76d5-4eb1-a5e7-757ab4db97db @ 09/09/25 22:19:36.647
  STEP: Creating the pod @ 09/09/25 22:19:36.654
  E0909 22:19:37.046338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:38.046688      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-c96a733a-9b14-4aaf-bab1-59e61f1a21ff @ 09/09/25 22:19:38.779
  STEP: Updating secret s-test-opt-upd-429b9189-76d5-4eb1-a5e7-757ab4db97db @ 09/09/25 22:19:38.797
  STEP: Creating secret with name s-test-opt-create-eed01ee9-51f5-422c-b4f2-f62be849d5ea @ 09/09/25 22:19:38.809
  STEP: waiting to observe update in volume @ 09/09/25 22:19:38.82
  E0909 22:19:39.048247      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:40.048731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:41.049111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:42.049833      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:42.874867 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9221" for this suite. @ 09/09/25 22:19:42.88
• [6.339 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 09/09/25 22:19:42.895
  I0909 22:19:42.895689 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 22:19:42.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:19:42.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:19:42.916
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/09/25 22:19:42.92
  E0909 22:19:43.050642      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:44.051650      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:45.053143      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:46.054014      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:19:46.95
  I0909 22:19:46.954594 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-8a59a468-ac3b-4010-b983-66043a191808 container test-container: <nil>
  STEP: delete the pod @ 09/09/25 22:19:46.961
  I0909 22:19:46.993443 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6083" for this suite. @ 09/09/25 22:19:46.997
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/09/25 22:19:47.008
  I0909 22:19:47.008481 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 22:19:47.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:19:47.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:19:47.048
  STEP: Creating configMap with name configmap-test-volume-160e234d-f1fc-47f1-8b07-3f55bb788ccc @ 09/09/25 22:19:47.051
  E0909 22:19:47.055116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume configMaps @ 09/09/25 22:19:47.055
  E0909 22:19:48.055423      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:49.056654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:50.057460      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:51.057735      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:19:51.082
  I0909 22:19:51.085630 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-2676d305-db75-446f-a0cd-d22ae26e6ae0 container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 22:19:51.094
  I0909 22:19:51.121961 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9763" for this suite. @ 09/09/25 22:19:51.128
• [4.128 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 09/09/25 22:19:51.136
  I0909 22:19:51.137458 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 22:19:51.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:19:51.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:19:51.169
  STEP: creating a replication controller @ 09/09/25 22:19:51.18
  I0909 22:19:51.181403 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 create -f -'
  I0909 22:19:51.406757 22 builder.go:146] stderr: ""
  I0909 22:19:51.406820 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/09/25 22:19:51.406
  I0909 22:19:51.406929 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0909 22:19:51.747028 22 builder.go:146] stderr: ""
  I0909 22:19:51.747078 22 builder.go:147] stdout: "update-demo-nautilus-m2cfh update-demo-nautilus-x85l8 "
  I0909 22:19:51.747130 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-m2cfh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0909 22:19:51.826807 22 builder.go:146] stderr: ""
  I0909 22:19:51.826843 22 builder.go:147] stdout: ""
  I0909 22:19:51.826852 22 kubectl.go:2505] update-demo-nautilus-m2cfh is created but not running
  E0909 22:19:52.063223      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:53.063467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:54.063606      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:55.063882      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:19:56.064152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:56.828586 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0909 22:19:56.973045 22 builder.go:146] stderr: ""
  I0909 22:19:56.973082 22 builder.go:147] stdout: "update-demo-nautilus-m2cfh update-demo-nautilus-x85l8 "
  I0909 22:19:56.973127 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-m2cfh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0909 22:19:57.050241 22 builder.go:146] stderr: ""
  I0909 22:19:57.050277 22 builder.go:147] stdout: "true"
  I0909 22:19:57.050317 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-m2cfh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0909 22:19:57.064963      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:57.121363 22 builder.go:146] stderr: ""
  I0909 22:19:57.121397 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0909 22:19:57.121408 22 kubectl.go:2396] validating pod update-demo-nautilus-m2cfh
  I0909 22:19:57.129704 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0909 22:19:57.129777 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0909 22:19:57.129796 22 kubectl.go:2523] update-demo-nautilus-m2cfh is verified up and running
  I0909 22:19:57.129860 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-x85l8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0909 22:19:57.271954 22 builder.go:146] stderr: ""
  I0909 22:19:57.272005 22 builder.go:147] stdout: "true"
  I0909 22:19:57.272069 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-x85l8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0909 22:19:57.382598 22 builder.go:146] stderr: ""
  I0909 22:19:57.382835 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0909 22:19:57.382868 22 kubectl.go:2396] validating pod update-demo-nautilus-x85l8
  I0909 22:19:57.392056 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0909 22:19:57.392085 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0909 22:19:57.392092 22 kubectl.go:2523] update-demo-nautilus-x85l8 is verified up and running
  STEP: scaling down the replication controller @ 09/09/25 22:19:57.392
  I0909 22:19:57.393530 22 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0909 22:19:57.393559 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0909 22:19:58.065427      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:19:58.550844 22 builder.go:146] stderr: ""
  I0909 22:19:58.551823 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/09/25 22:19:58.552
  I0909 22:19:58.553827 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0909 22:19:58.698245 22 builder.go:146] stderr: ""
  I0909 22:19:58.698288 22 builder.go:147] stdout: "update-demo-nautilus-m2cfh update-demo-nautilus-x85l8 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 09/09/25 22:19:58.698
  E0909 22:19:59.065702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:00.065942      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:01.069009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:02.069371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:03.070369      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:03.700125 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0909 22:20:03.839731 22 builder.go:146] stderr: ""
  I0909 22:20:03.839769 22 builder.go:147] stdout: "update-demo-nautilus-m2cfh "
  I0909 22:20:03.839812 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-m2cfh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0909 22:20:03.929345 22 builder.go:146] stderr: ""
  I0909 22:20:03.929381 22 builder.go:147] stdout: "true"
  I0909 22:20:03.929424 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-m2cfh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0909 22:20:04.001652 22 builder.go:146] stderr: ""
  I0909 22:20:04.001691 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0909 22:20:04.001702 22 kubectl.go:2396] validating pod update-demo-nautilus-m2cfh
  I0909 22:20:04.005659 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0909 22:20:04.005708 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0909 22:20:04.005718 22 kubectl.go:2523] update-demo-nautilus-m2cfh is verified up and running
  STEP: scaling up the replication controller @ 09/09/25 22:20:04.005
  I0909 22:20:04.006749 22 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0909 22:20:04.006774 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0909 22:20:04.070628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:05.072619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:05.151126 22 builder.go:146] stderr: ""
  I0909 22:20:05.151191 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/09/25 22:20:05.151
  I0909 22:20:05.151405 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0909 22:20:05.252062 22 builder.go:146] stderr: ""
  I0909 22:20:05.252121 22 builder.go:147] stdout: "update-demo-nautilus-m2cfh update-demo-nautilus-wp9rh "
  I0909 22:20:05.252166 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-m2cfh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0909 22:20:05.345742 22 builder.go:146] stderr: ""
  I0909 22:20:05.345843 22 builder.go:147] stdout: "true"
  I0909 22:20:05.346171 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-m2cfh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0909 22:20:05.428150 22 builder.go:146] stderr: ""
  I0909 22:20:05.428236 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0909 22:20:05.428267 22 kubectl.go:2396] validating pod update-demo-nautilus-m2cfh
  I0909 22:20:05.432771 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0909 22:20:05.432969 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0909 22:20:05.432990 22 kubectl.go:2523] update-demo-nautilus-m2cfh is verified up and running
  I0909 22:20:05.433057 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-wp9rh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0909 22:20:05.529047 22 builder.go:146] stderr: ""
  I0909 22:20:05.529109 22 builder.go:147] stdout: ""
  I0909 22:20:05.529128 22 kubectl.go:2505] update-demo-nautilus-wp9rh is created but not running
  E0909 22:20:06.073258      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:07.074263      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:08.074158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:09.074759      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:10.075013      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:10.529516 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0909 22:20:10.652764 22 builder.go:146] stderr: ""
  I0909 22:20:10.652856 22 builder.go:147] stdout: "update-demo-nautilus-m2cfh update-demo-nautilus-wp9rh "
  I0909 22:20:10.652901 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-m2cfh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0909 22:20:10.731846 22 builder.go:146] stderr: ""
  I0909 22:20:10.731893 22 builder.go:147] stdout: "true"
  I0909 22:20:10.731936 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-m2cfh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0909 22:20:10.837416 22 builder.go:146] stderr: ""
  I0909 22:20:10.837501 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0909 22:20:10.837525 22 kubectl.go:2396] validating pod update-demo-nautilus-m2cfh
  I0909 22:20:10.844470 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0909 22:20:10.844532 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0909 22:20:10.844626 22 kubectl.go:2523] update-demo-nautilus-m2cfh is verified up and running
  I0909 22:20:10.844688 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-wp9rh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0909 22:20:10.944455 22 builder.go:146] stderr: ""
  I0909 22:20:10.944513 22 builder.go:147] stdout: "true"
  I0909 22:20:10.944663 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods update-demo-nautilus-wp9rh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0909 22:20:11.036284 22 builder.go:146] stderr: ""
  I0909 22:20:11.036339 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0909 22:20:11.036359 22 kubectl.go:2396] validating pod update-demo-nautilus-wp9rh
  I0909 22:20:11.046377 22 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0909 22:20:11.046489 22 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0909 22:20:11.046511 22 kubectl.go:2523] update-demo-nautilus-wp9rh is verified up and running
  STEP: using delete to clean up resources @ 09/09/25 22:20:11.046
  I0909 22:20:11.046673 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 delete --grace-period=0 --force -f -'
  E0909 22:20:11.075748      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:11.201324 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0909 22:20:11.201733 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0909 22:20:11.202090 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get rc,svc -l name=update-demo --no-headers'
  I0909 22:20:11.396101 22 builder.go:146] stderr: "No resources found in kubectl-8177 namespace.\n"
  I0909 22:20:11.396150 22 builder.go:147] stdout: ""
  I0909 22:20:11.396192 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-8177 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0909 22:20:11.614145 22 builder.go:146] stderr: ""
  I0909 22:20:11.614343 22 builder.go:147] stdout: ""
  I0909 22:20:11.614783 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8177" for this suite. @ 09/09/25 22:20:11.618
• [20.488 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/09/25 22:20:11.625
  I0909 22:20:11.625628 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename var-expansion @ 09/09/25 22:20:11.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:20:11.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:20:11.654
  STEP: Creating a pod to test substitution in container's command @ 09/09/25 22:20:11.657
  E0909 22:20:12.076982      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:13.076992      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:14.077121      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:15.078299      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:20:15.694
  I0909 22:20:15.699248 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod var-expansion-968b27ef-3135-40a3-8b5b-0121b95ef842 container dapi-container: <nil>
  STEP: delete the pod @ 09/09/25 22:20:15.708
  I0909 22:20:15.734826 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7998" for this suite. @ 09/09/25 22:20:15.741
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/09/25 22:20:15.763
  I0909 22:20:15.764194 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename hostport @ 09/09/25 22:20:15.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:20:15.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:20:15.802
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/09/25 22:20:15.842
  E0909 22:20:16.079400      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:17.080046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.150.103 on the node which pod1 resides and expect scheduled @ 09/09/25 22:20:17.873
  E0909 22:20:18.080198      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:19.080750      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.150.103 but use UDP protocol on the node which pod2 resides @ 09/09/25 22:20:19.909
  E0909 22:20:20.081247      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:21.081823      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:22.081886      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:23.083199      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/09/25 22:20:23.969
  I0909 22:20:23.970558 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.150.103 http://127.0.0.1:54323/hostname] Namespace:hostport-2705 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:20:23.971561 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:20:23.972525 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-2705/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.150.103+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  E0909 22:20:24.083289      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:24.213003 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.150.103, port: 54323 @ 09/09/25 22:20:24.214
  I0909 22:20:24.214732 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.150.103:54323/hostname] Namespace:hostport-2705 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:20:24.215251 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:20:24.216258 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-2705/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.150.103%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0909 22:20:24.371639 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.150.103, port: 54323 UDP @ 09/09/25 22:20:24.371
  I0909 22:20:24.371771 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.150.103 54323] Namespace:hostport-2705 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:20:24.371786 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:20:24.371868 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-2705/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.150.103+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0909 22:20:25.084217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:26.084644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:27.085473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:28.085694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:29.085936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:29.483071 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:20:29.483946 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2705" for this suite. @ 09/09/25 22:20:29.49
• [13.746 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 09/09/25 22:20:29.516
  I0909 22:20:29.516070 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-probe @ 09/09/25 22:20:29.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:20:29.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:20:29.544
  STEP: Creating pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841 @ 09/09/25 22:20:29.548
  E0909 22:20:30.086030      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:31.086270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/09/25 22:20:31.573
  I0909 22:20:31.576734 22 container_probe.go:1748] Initial restart count of pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d is 0
  I0909 22:20:31.581759 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:32.086386      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:33.086600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:33.587007 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:34.086861      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:35.087040      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:35.593193 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:36.087641      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:37.088128      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:37.599552 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:38.088939      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:39.089483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:39.604784 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:40.089528      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:41.090623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:41.610165 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:42.091347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:43.091950      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:43.617502 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:44.092505      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:45.093332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:45.623964 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:46.094180      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:47.094849      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:47.629641 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:48.094608      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:49.094692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:49.636112 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:50.095765      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:51.096012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:51.641169 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:52.096271      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:53.097525      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:53.648246 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:54.097734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:55.097813      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:55.656311 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:56.098357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:57.099367      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:57.660254 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:20:58.099649      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:20:59.100164      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:20:59.665911 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:00.101187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:01.101321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:01.671526 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:02.101742      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:03.102059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:03.675740 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:04.103064      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:05.103907      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:05.680701 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:06.105045      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:07.105657      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:07.686695 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:08.106009      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:09.106272      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:09.692753 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:10.106258      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:11.106759      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:11.697161 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:12.107628      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:13.107916      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:13.701988 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:14.108926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:15.109415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:15.708459 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:16.110850      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:17.110901      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:17.713180 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:18.111728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:19.113342      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:19.718313 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:20.113228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:21.113562      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:21.724967 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:22.114414      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:23.114969      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:23.731275 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:24.115153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:25.115318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:25.736673 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:26.116154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:27.116926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:27.743966 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:28.116907      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:29.117293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:29.750181 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:30.118004      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:31.118047      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:31.756696 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:32.118224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:33.118392      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:33.762971 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:34.118586      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:35.118843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:35.771601 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:36.119050      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:37.120346      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:37.776710 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:38.121210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:39.121024      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:39.782409 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:40.121058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:41.121279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:41.785964 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:42.121483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:43.121587      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:43.793044 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  E0909 22:21:44.122788      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:45.123355      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:45.799753 22 container_probe.go:1758] Get pod test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d in namespace container-probe-9841
  I0909 22:21:45.799924 22 container_probe.go:1762] Restart count of pod container-probe-9841/test-grpc-3073d389-3a90-414d-8e62-af61d3c60b5d is now 1 (1m14.223017145s elapsed)
  STEP: deleting the pod @ 09/09/25 22:21:45.801
  I0909 22:21:45.835250 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9841" for this suite. @ 09/09/25 22:21:45.841
• [76.342 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/09/25 22:21:45.852
  I0909 22:21:45.852768 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename daemonsets @ 09/09/25 22:21:45.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:21:45.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:21:45.883
  I0909 22:21:45.950577 22 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/09/25 22:21:45.958
  I0909 22:21:45.961080 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:21:45.961104 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/09/25 22:21:45.961
  E0909 22:21:46.142429      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:46.140515 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:21:46.144967 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  I0909 22:21:47.111882 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:21:47.113670 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  E0909 22:21:47.142737      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:48.111389 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 22:21:48.112227 22 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/09/25 22:21:48.127
  E0909 22:21:48.144106      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:48.188390 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:21:48.198700 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/09/25 22:21:48.2
  I0909 22:21:48.219594 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:21:48.219638 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  E0909 22:21:49.143577      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:49.223537 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:21:49.223617 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  E0909 22:21:50.145269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:50.223166 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:21:50.223901 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  E0909 22:21:51.147046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:51.231888 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:21:51.234941 22 fixtures.go:131] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  E0909 22:21:52.157319      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:52.224238 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0909 22:21:52.225186 22 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/09/25 22:21:52.233
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1756, will wait for the garbage collector to delete the pods @ 09/09/25 22:21:52.234
  I0909 22:21:52.301989 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.121041ms
  I0909 22:21:52.402215 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.216516ms
  E0909 22:21:53.148946      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:54.149423      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:21:54.707576 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:21:54.707655 22 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0909 22:21:54.714470 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"51365"},"items":null}

  I0909 22:21:54.721017 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"51365"},"items":null}

  I0909 22:21:54.780974 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1756" for this suite. @ 09/09/25 22:21:54.787
• [8.942 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/09/25 22:21:54.799
  I0909 22:21:54.799322 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/09/25 22:21:54.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:21:54.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:21:54.849
  STEP: fetching the /apis discovery document @ 09/09/25 22:21:54.852
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/09/25 22:21:54.853
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/09/25 22:21:54.853
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/09/25 22:21:54.853
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/09/25 22:21:54.855
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/09/25 22:21:54.855
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/09/25 22:21:54.856
  I0909 22:21:54.856596 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7357" for this suite. @ 09/09/25 22:21:54.859
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/09/25 22:21:54.874
  I0909 22:21:54.874557 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename volumeattachment @ 09/09/25 22:21:54.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:21:54.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:21:54.902
  STEP: Create VolumeAttachment "va-e2e-sl5nz" on node "oneke-ip-192-168-150-102" @ 09/09/25 22:21:54.964
  STEP: Get VolumeAttachment "va-e2e-sl5nz" on node "oneke-ip-192-168-150-102" @ 09/09/25 22:21:54.981
  STEP: Patch VolumeAttachment "va-e2e-sl5nz" on node "oneke-ip-192-168-150-102" @ 09/09/25 22:21:54.986
  STEP: List VolumeAttachments with "va-e2e-sl5nz=patched" label @ 09/09/25 22:21:54.995
  STEP: Delete VolumeAttachment "va-e2e-sl5nz" on node "oneke-ip-192-168-150-102" @ 09/09/25 22:21:55.004
  STEP: Confirm deletion of VolumeAttachment "va-e2e-sl5nz" on node "oneke-ip-192-168-150-102" @ 09/09/25 22:21:55.018
  STEP: Create VolumeAttachment "va-e2e-7whcj" on node "oneke-ip-192-168-150-104" @ 09/09/25 22:21:55.063
  STEP: Update the VolumeAttachment "va-e2e-7whcj" on node "oneke-ip-192-168-150-104" with label "va-e2e=updated" @ 09/09/25 22:21:55.07
  E0909 22:21:55.150253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create VolumeAttachment "va-e2e-jlkkn" on node "oneke-ip-192-168-150-105" @ 09/09/25 22:21:55.163
  STEP: Update the VolumeAttachment "va-e2e-jlkkn" on node "oneke-ip-192-168-150-105" with label "va-e2e=updated" @ 09/09/25 22:21:55.171
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/09/25 22:21:55.18
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/09/25 22:21:55.195
  I0909 22:21:55.200004 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-168" for this suite. @ 09/09/25 22:21:55.267
• [0.411 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/09/25 22:21:55.3
  I0909 22:21:55.302571 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 22:21:55.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:21:55.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:21:55.339
  STEP: creating a ConfigMap @ 09/09/25 22:21:55.352
  STEP: fetching the ConfigMap @ 09/09/25 22:21:55.365
  STEP: patching the ConfigMap @ 09/09/25 22:21:55.367
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/09/25 22:21:55.373
  STEP: deleting the ConfigMap by collection with a label selector @ 09/09/25 22:21:55.375
  STEP: listing all ConfigMaps in test namespace @ 09/09/25 22:21:55.381
  I0909 22:21:55.383503 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6516" for this suite. @ 09/09/25 22:21:55.387
• [0.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 09/09/25 22:21:55.396
  I0909 22:21:55.396462 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sched-preemption @ 09/09/25 22:21:55.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:21:55.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:21:55.416
  I0909 22:21:55.439273 22 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0909 22:21:56.150489      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:57.150756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:58.151577      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:21:59.151956      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:00.153154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:01.155690      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:02.156526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:03.157005      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:04.157146      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:05.157200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:06.157701      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:07.157810      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:08.158302      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:09.158703      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:10.159366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:11.161001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:12.161415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:13.162289      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:14.169131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:15.169368      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:16.169552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:17.170642      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:18.170872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:19.173270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:20.173298      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:21.173264      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:22.174402      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:23.174607      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:24.177081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:25.177235      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:26.178006      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:27.178331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:28.178339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:29.181191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:30.179118      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:31.179370      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:32.180993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:33.180782      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:34.181083      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:35.181359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:36.182457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:37.182819      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:38.183007      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:39.183224      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:40.183981      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:41.184101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:42.184352      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:43.184753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:44.185066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:45.185404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:46.186470      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:47.187115      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:48.188106      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:49.188226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:50.188366      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:51.188749      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:52.189100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:53.189259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:54.189442      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:55.189754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:22:55.447731 22 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/09/25 22:22:55.454
  I0909 22:22:55.454454 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/09/25 22:22:55.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:22:55.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:22:55.535
  STEP: Finding an available node @ 09/09/25 22:22:55.543
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/09/25 22:22:55.543
  E0909 22:22:56.190450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:57.191855      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/09/25 22:22:57.582
  I0909 22:22:57.600578 22 preemption.go:717] found a healthy node: oneke-ip-192-168-150-103
  STEP: Adding a custom resource @ 09/09/25 22:22:57.605
  E0909 22:22:58.191571      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:22:59.191797      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:00.192010      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:01.192978      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:02.192991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:03.193336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:23:03.737881 22 preemption.go:836] pods created so far: [1 1 1]
  I0909 22:23:03.737950 22 preemption.go:837] length of pods created so far: 3
  E0909 22:23:04.194390      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:05.201150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:23:05.772901 22 preemption.go:854] pods created so far: [2 2 1]
  E0909 22:23:06.199203      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:07.200094      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:08.200501      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:09.201626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:10.201757      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:11.201995      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:12.202318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/09/25 22:23:12.776
  STEP: Removing a custom resource @ 09/09/25 22:23:12.901
  STEP: Removing a custom resource @ 09/09/25 22:23:12.914
  I0909 22:23:12.941659 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5717" for this suite. @ 09/09/25 22:23:12.947
  I0909 22:23:12.954312 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7210" for this suite. @ 09/09/25 22:23:13.046
• [77.659 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/09/25 22:23:13.058
  I0909 22:23:13.058076 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 22:23:13.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:13.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:13.087
  STEP: Creating secret with name s-test-opt-del-a3a2c55b-b751-4fb6-9c87-8c10266d79cd @ 09/09/25 22:23:13.152
  STEP: Creating secret with name s-test-opt-upd-3dfef1f0-491e-4fe9-b45d-db692ebc4e05 @ 09/09/25 22:23:13.16
  STEP: Creating the pod @ 09/09/25 22:23:13.167
  E0909 22:23:13.203269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:14.203333      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:15.203428      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-a3a2c55b-b751-4fb6-9c87-8c10266d79cd @ 09/09/25 22:23:15.243
  STEP: Updating secret s-test-opt-upd-3dfef1f0-491e-4fe9-b45d-db692ebc4e05 @ 09/09/25 22:23:15.253
  STEP: Creating secret with name s-test-opt-create-e1f8c3c8-bc96-4c63-b8ce-61bdbda81178 @ 09/09/25 22:23:15.272
  STEP: waiting to observe update in volume @ 09/09/25 22:23:15.285
  E0909 22:23:16.204978      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:17.205113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:23:17.334998 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5457" for this suite. @ 09/09/25 22:23:17.341
• [4.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 09/09/25 22:23:17.372
  I0909 22:23:17.372949 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/09/25 22:23:17.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:17.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:17.463
  I0909 22:23:17.468169 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:23:18.205754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/09/25 22:23:19.141
  I0909 22:23:19.141877 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-6355 --namespace=crd-publish-openapi-6355 create -f -'
  E0909 22:23:19.206483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:23:19.264965 22 builder.go:146] stderr: ""
  I0909 22:23:19.265064 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-13-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0909 22:23:19.265327 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-6355 --namespace=crd-publish-openapi-6355 delete e2e-test-crd-publish-openapi-13-crds test-cr'
  I0909 22:23:19.385016 22 builder.go:146] stderr: ""
  I0909 22:23:19.385077 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-13-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0909 22:23:19.385256 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-6355 --namespace=crd-publish-openapi-6355 apply -f -'
  I0909 22:23:19.479319 22 builder.go:146] stderr: ""
  I0909 22:23:19.479369 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-13-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0909 22:23:19.479531 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-6355 --namespace=crd-publish-openapi-6355 delete e2e-test-crd-publish-openapi-13-crds test-cr'
  I0909 22:23:19.555068 22 builder.go:146] stderr: ""
  I0909 22:23:19.555166 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-13-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/09/25 22:23:19.555
  I0909 22:23:19.555370 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-6355 explain e2e-test-crd-publish-openapi-13-crds'
  I0909 22:23:19.672317 22 builder.go:146] stderr: ""
  I0909 22:23:19.672445 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-13-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0909 22:23:20.220176      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:21.221001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:23:21.525980 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6355" for this suite. @ 09/09/25 22:23:21.536
• [4.172 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/09/25 22:23:21.547
  I0909 22:23:21.547797 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename subjectreview @ 09/09/25 22:23:21.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:21.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:21.582
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6598" @ 09/09/25 22:23:21.585
  I0909 22:23:21.590895 22 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-6598:e2e"
  I0909 22:23:21.591668 22 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6598"}
  I0909 22:23:21.591995 22 subjectreviews.go:71] saUID: "e395d941-a926-49c7-b19a-2eeffa774918"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6598:e2e" @ 09/09/25 22:23:21.592
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6598:e2e" @ 09/09/25 22:23:21.592
  I0909 22:23:21.595047 22 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6598:e2e" api 'list' configmaps in "subjectreview-6598" namespace @ 09/09/25 22:23:21.595
  I0909 22:23:21.601881 22 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6598:e2e" @ 09/09/25 22:23:21.602
  I0909 22:23:21.609020 22 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0909 22:23:21.609381 22 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0909 22:23:21.609762 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6598" for this suite. @ 09/09/25 22:23:21.636
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 09/09/25 22:23:21.648
  I0909 22:23:21.648262 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename namespaces @ 09/09/25 22:23:21.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:21.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:21.686
  STEP: Updating Namespace "namespaces-3154" @ 09/09/25 22:23:21.689
  I0909 22:23:21.707058 22 namespace.go:390] Namespace "namespaces-3154" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"57eba362-f52f-4455-b471-d00e2be59338", "kubernetes.io/metadata.name":"namespaces-3154", "namespaces-3154":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0909 22:23:21.707698 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3154" for this suite. @ 09/09/25 22:23:21.734
• [0.098 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 09/09/25 22:23:21.747
  I0909 22:23:21.747334 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 22:23:21.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:21.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:21.768
  STEP: Starting the proxy @ 09/09/25 22:23:21.771
  I0909 22:23:21.771704 22 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-673 proxy --unix-socket=/tmp/kubectl-proxy-unix3154927026/test'
  STEP: retrieving proxy /api/ output @ 09/09/25 22:23:21.829
  I0909 22:23:21.832301 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-673" for this suite. @ 09/09/25 22:23:21.839
• [0.105 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 09/09/25 22:23:21.852
  I0909 22:23:21.852707 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename security-context @ 09/09/25 22:23:21.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:21.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:21.931
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/09/25 22:23:21.937
  E0909 22:23:22.222182      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:23.222843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:24.223482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:25.224493      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:23:25.974
  I0909 22:23:25.976896 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod security-context-5fc41555-2a96-42a6-974c-2b042fb3dc41 container test-container: <nil>
  STEP: delete the pod @ 09/09/25 22:23:25.983
  I0909 22:23:26.017868 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4624" for this suite. @ 09/09/25 22:23:26.02
• [4.174 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 09/09/25 22:23:26.026
  I0909 22:23:26.026444 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 22:23:26.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:26.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:26.145
  STEP: Creating a ResourceQuota @ 09/09/25 22:23:26.177
  E0909 22:23:26.253864      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting a ResourceQuota @ 09/09/25 22:23:26.254
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/09/25 22:23:26.305
  STEP: Patching the ResourceQuota @ 09/09/25 22:23:26.341
  STEP: Deleting a Collection of ResourceQuotas @ 09/09/25 22:23:26.347
  STEP: Verifying the deleted ResourceQuota @ 09/09/25 22:23:26.365
  I0909 22:23:26.368689 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1139" for this suite. @ 09/09/25 22:23:26.372
• [0.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/09/25 22:23:26.382
  I0909 22:23:26.382409 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename conformance-tests @ 09/09/25 22:23:26.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:26.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:26.404
  STEP: Getting node addresses @ 09/09/25 22:23:26.407
  I0909 22:23:26.407724 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0909 22:23:26.475259 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8628" for this suite. @ 09/09/25 22:23:26.485
• [0.127 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/09/25 22:23:26.513
  I0909 22:23:26.514096 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pods @ 09/09/25 22:23:26.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:26.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:26.549
  STEP: creating the pod @ 09/09/25 22:23:26.559
  STEP: setting up watch @ 09/09/25 22:23:26.559
  STEP: submitting the pod to kubernetes @ 09/09/25 22:23:26.662
  STEP: verifying the pod is in kubernetes @ 09/09/25 22:23:26.678
  STEP: verifying pod creation was observed @ 09/09/25 22:23:26.681
  E0909 22:23:27.254631      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:28.256132      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/09/25 22:23:28.709
  STEP: verifying pod deletion was observed @ 09/09/25 22:23:28.73
  E0909 22:23:29.257098      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:30.257297      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:23:31.105663 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8410" for this suite. @ 09/09/25 22:23:31.112
• [4.620 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 09/09/25 22:23:31.137
  I0909 22:23:31.138157 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-runtime @ 09/09/25 22:23:31.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:31.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:31.202
  STEP: create the container @ 09/09/25 22:23:31.216
  I0909 22:23:31.239038      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/09/25 22:23:31.24
  E0909 22:23:31.258327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:32.267841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:33.266593      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:34.266307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:35.266554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/09/25 22:23:35.275
  STEP: the container should be terminated @ 09/09/25 22:23:35.279
  STEP: the termination message should be set @ 09/09/25 22:23:35.279
  I0909 22:23:35.280009 22 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/09/25 22:23:35.28
  I0909 22:23:35.319224 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2550" for this suite. @ 09/09/25 22:23:35.331
• [4.220 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 09/09/25 22:23:35.36
  I0909 22:23:35.361439 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/09/25 22:23:35.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:35.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:35.392
  STEP: creating a target pod @ 09/09/25 22:23:35.397
  E0909 22:23:36.267659      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:37.268001      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/09/25 22:23:37.435
  E0909 22:23:38.268156      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:39.269909      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:40.269642      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:41.270539      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 09/09/25 22:23:41.476
  STEP: checking pod container endpoints @ 09/09/25 22:23:41.481
  I0909 22:23:41.482250 22 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4492 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:23:41.483344 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:23:41.487305 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-4492/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0909 22:23:41.625231 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:23:41.625317 22 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/09/25 22:23:41.635
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/09/25 22:23:41.642
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/09/25 22:23:41.666
  I0909 22:23:41.673205 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4492" for this suite. @ 09/09/25 22:23:41.692
• [6.345 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/09/25 22:23:41.708
  I0909 22:23:41.709060 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:23:41.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:41.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:41.744
  STEP: Creating configMap with name projected-configmap-test-volume-14255e78-e271-4036-bac6-34972c6f97c9 @ 09/09/25 22:23:41.748
  STEP: Creating a pod to test consume configMaps @ 09/09/25 22:23:41.752
  E0909 22:23:42.271212      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:43.272072      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:44.273179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:45.273485      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:23:45.791
  I0909 22:23:45.795827 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-configmaps-0ebd25bb-fbff-4ebd-9fa9-d392b648786f container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 22:23:45.822
  I0909 22:23:45.871291 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4723" for this suite. @ 09/09/25 22:23:45.878
• [4.179 seconds]
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/09/25 22:23:45.888
  I0909 22:23:45.888410 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename limitrange @ 09/09/25 22:23:45.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:45.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:45.918
  STEP: Creating LimitRange "e2e-limitrange-2fxkr" in namespace "limitrange-6665" @ 09/09/25 22:23:45.923
  STEP: Creating another limitRange in another namespace @ 09/09/25 22:23:45.928
  I0909 22:23:45.943371 22 limit_range.go:299] Namespace "e2e-limitrange-2fxkr-2427" created
  I0909 22:23:45.944114 22 limit_range.go:300] Creating LimitRange "e2e-limitrange-2fxkr" in namespace "e2e-limitrange-2fxkr-2427"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-2fxkr" @ 09/09/25 22:23:45.951
  I0909 22:23:45.954123 22 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-2fxkr" in "limitrange-6665" namespace @ 09/09/25 22:23:45.954
  I0909 22:23:45.963664 22 limit_range.go:335] LimitRange "e2e-limitrange-2fxkr" has been patched
  STEP: Delete LimitRange "e2e-limitrange-2fxkr" by Collection with labelSelector: "e2e-limitrange-2fxkr=patched" @ 09/09/25 22:23:45.964
  STEP: Confirm that the limitRange "e2e-limitrange-2fxkr" has been deleted @ 09/09/25 22:23:45.976
  I0909 22:23:45.976235 22 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0909 22:23:45.979269 22 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-2fxkr=patched"
  I0909 22:23:45.979826 22 limit_range.go:344] LimitRange "e2e-limitrange-2fxkr" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-2fxkr" @ 09/09/25 22:23:45.98
  I0909 22:23:45.982715 22 limit_range.go:350] Found 1 limitRange
  I0909 22:23:45.983324 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6665" for this suite. @ 09/09/25 22:23:45.988
  STEP: Destroying namespace "e2e-limitrange-2fxkr-2427" for this suite. @ 09/09/25 22:23:45.995
• [0.116 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/09/25 22:23:46.007
  I0909 22:23:46.008418 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename daemonsets @ 09/09/25 22:23:46.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:46.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:46.036
  STEP: Creating simple DaemonSet "daemon-set" @ 09/09/25 22:23:46.095
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/09/25 22:23:46.108
  I0909 22:23:46.219687 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:23:46.223198 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 22:23:46.228076 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:23:46.229203 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 22:23:46.273684      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:23:47.118041 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:23:47.118628 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 22:23:47.126907 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0909 22:23:47.129584 22 fixtures.go:131] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0909 22:23:47.274493      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:23:48.121734 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0909 22:23:48.121808 22 fixtures.go:90] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0909 22:23:48.139868 22 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0909 22:23:48.140599 22 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/09/25 22:23:48.148
  STEP: DeleteCollection of the DaemonSets @ 09/09/25 22:23:48.153
  STEP: Verify that ReplicaSets have been deleted @ 09/09/25 22:23:48.162
  I0909 22:23:48.228884 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"52417"},"items":null}

  I0909 22:23:48.246607 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"52418"},"items":[{"metadata":{"name":"daemon-set-5wl7q","generateName":"daemon-set-","namespace":"daemonsets-8748","uid":"8afeaa2c-c481-466b-b524-3f7115586bba","resourceVersion":"52416","generation":2,"creationTimestamp":"2025-09-09T22:23:46Z","deletionTimestamp":"2025-09-09T22:24:18Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"93363cd57715c920ec80cee369bcffef60e5094a25c327def132b0b0d2a190ed","cni.projectcalico.org/podIP":"10.42.3.81/32","cni.projectcalico.org/podIPs":"10.42.3.81/32","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.81\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"be0093bf-88d0-4735-ab89-94e8d04b437e","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-09-09T22:23:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-09T22:23:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"be0093bf-88d0-4735-ab89-94e8d04b437e\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"multus","operation":"Update","apiVersion":"v1","time":"2025-09-09T22:23:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-09T22:23:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.3.81\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fhcrj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-fhcrj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"oneke-ip-192-168-150-105","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["oneke-ip-192-168-150-105"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-09T22:23:48Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-09T22:23:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-09T22:23:48Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-09T22:23:48Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-09T22:23:46Z"}],"hostIP":"192.168.150.105","hostIPs":[{"ip":"192.168.150.105"}],"podIP":"10.42.3.81","podIPs":[{"ip":"10.42.3.81"}],"startTime":"2025-09-09T22:23:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-09T22:23:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://dd6d32429dff7ad3e9b666470e9cb6e2d8970eb51c6e6d2d9e5926a6fd52ed04","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-fhcrj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-fnw86","generateName":"daemon-set-","namespace":"daemonsets-8748","uid":"029ac2d3-86e8-4f75-a1b9-68a2675af7f5","resourceVersion":"52415","generation":2,"creationTimestamp":"2025-09-09T22:23:46Z","deletionTimestamp":"2025-09-09T22:24:18Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"48ec5ccf5723245337fb1cde33ca98dd44d7a9af15c605e648874a3a89616be4","cni.projectcalico.org/podIP":"10.42.1.147/32","cni.projectcalico.org/podIPs":"10.42.1.147/32","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.147\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"be0093bf-88d0-4735-ab89-94e8d04b437e","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-09-09T22:23:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-09T22:23:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"be0093bf-88d0-4735-ab89-94e8d04b437e\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"multus","operation":"Update","apiVersion":"v1","time":"2025-09-09T22:23:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-09T22:23:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.147\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-dpfhz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-dpfhz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"oneke-ip-192-168-150-103","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["oneke-ip-192-168-150-103"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-09T22:23:47Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-09T22:23:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-09T22:23:47Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-09T22:23:47Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-09T22:23:46Z"}],"hostIP":"192.168.150.103","hostIPs":[{"ip":"192.168.150.103"}],"podIP":"10.42.1.147","podIPs":[{"ip":"10.42.1.147"}],"startTime":"2025-09-09T22:23:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-09T22:23:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://7df8945845c7047e6e29b9f66e61ffa66967b94648b800135b0615dc3079791c","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-dpfhz","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I0909 22:23:48.255368 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8748" for this suite. @ 09/09/25 22:23:48.259
• [2.260 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/09/25 22:23:48.27
  I0909 22:23:48.271233 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename discovery @ 09/09/25 22:23:48.273
  E0909 22:23:48.275043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:48.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:48.301
  STEP: Setting up server cert @ 09/09/25 22:23:48.306
  STEP: Requesting APIResourceList from "/api/v1" @ 09/09/25 22:23:48.705
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/09/25 22:23:48.707
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/09/25 22:23:48.708
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/09/25 22:23:48.709
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/09/25 22:23:48.709
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/09/25 22:23:48.71
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/09/25 22:23:48.711
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/09/25 22:23:48.712
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/09/25 22:23:48.712
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/09/25 22:23:48.713
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/09/25 22:23:48.714
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/09/25 22:23:48.715
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/09/25 22:23:48.715
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/09/25 22:23:48.716
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/09/25 22:23:48.717
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/09/25 22:23:48.719
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/09/25 22:23:48.72
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/09/25 22:23:48.722
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/09/25 22:23:48.723
  I0909 22:23:48.724756 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1357" for this suite. @ 09/09/25 22:23:48.728
• [0.468 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/09/25 22:23:48.741
  I0909 22:23:48.742603 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:23:48.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:48.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:48.769
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 22:23:48.771
  E0909 22:23:49.277463      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:50.277332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:51.281167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:52.282189      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:23:52.807
  I0909 22:23:52.814147 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-91b12da1-646b-4b54-bc9e-b895a5c50410 container client-container: <nil>
  STEP: delete the pod @ 09/09/25 22:23:52.824
  I0909 22:23:52.861337 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9197" for this suite. @ 09/09/25 22:23:52.868
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 09/09/25 22:23:52.913
  I0909 22:23:52.913833 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename runtimeclass @ 09/09/25 22:23:52.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:52.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:52.955
  STEP: Deleting RuntimeClass runtimeclass-9537-delete-me @ 09/09/25 22:23:52.971
  STEP: Waiting for the RuntimeClass to disappear @ 09/09/25 22:23:52.985
  I0909 22:23:52.995182 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9537" for this suite. @ 09/09/25 22:23:52.999
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 09/09/25 22:23:53.008
  I0909 22:23:53.008708 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-probe @ 09/09/25 22:23:53.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:23:53.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:23:53.036
  STEP: Creating pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772 @ 09/09/25 22:23:53.04
  E0909 22:23:53.283054      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:54.285046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:55.285281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:56.285822      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/09/25 22:23:57.131
  I0909 22:23:57.136289 22 container_probe.go:1748] Initial restart count of pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 is 0
  I0909 22:23:57.140749 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:23:57.287486      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:23:58.291325      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:23:59.145135 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:23:59.288924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:00.289157      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:01.150416 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:01.289578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:02.290536      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:03.155671 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:03.290619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:04.291609      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:05.160332 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:05.291960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:06.292747      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:07.165103 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:07.293673      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:08.294324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:09.170725 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:09.294990      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:10.295739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:11.175676 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:11.295900      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:12.306142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:13.181783 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:13.307077      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:14.307811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:15.187852 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:15.307926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:16.308140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:17.193190 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:17.308286      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:18.313011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:19.198880 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:19.313193      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:20.314995      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:21.204689 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:21.315954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:22.316231      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:23.207730 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:23.317033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:24.317315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:25.213523 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:25.317505      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:26.317670      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:27.219840 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:27.318654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:28.319724      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:29.225456 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:29.319557      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:30.323704      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:31.230293 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:31.324911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:32.325635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:33.236193 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:33.326102      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:34.326293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:35.243407 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:35.327148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:36.327588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:37.249267 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:37.328667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:38.331497      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:39.254940 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:39.332145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:40.332787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:41.262978 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:41.333880      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:42.334602      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:43.269915 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:43.335889      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:44.336052      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:45.275431 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:45.337152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:46.337488      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:47.279818 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:47.338341      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:48.338559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:49.285480 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:49.339035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:50.339313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:51.291375 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:51.340399      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:52.340595      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:53.297990 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:53.341578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:54.342248      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:55.302543 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:55.342618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:56.343205      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:57.308624 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:57.344432      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:24:58.344371      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:24:59.315998 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:24:59.345507      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:00.345678      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:01.323771 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:01.356168      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:02.347804      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:03.329719 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:03.348488      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:04.349051      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:05.336785 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:05.350591      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:06.350634      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:07.341171 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:07.356503      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:08.357169      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:09.345860 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:09.357573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:10.358355      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:11.360934      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:11.369089 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:12.367136      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:13.368167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:13.409336 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:14.368339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:15.369567      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:15.415048 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:16.369100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:17.369228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:17.422365 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:18.369423      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:19.370107      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:19.426314 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:20.370585      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:21.371024      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:21.430269 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:22.372143      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:23.372428      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:23.436911 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:24.372481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:25.373540      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:25.445939 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:26.372958      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:27.373257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:27.453018 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:28.373392      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:29.373742      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:29.458242 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:30.373962      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:31.374221      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:31.462499 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:32.374496      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:33.374808      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:33.468951 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:34.375908      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:35.376113      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:35.473433 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:36.376680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:37.377489      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:37.481617 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:38.377635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:39.377797      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:39.492149 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:40.378019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:41.378228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:41.499165 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:42.378484      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:43.378741      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:43.514729 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:44.378803      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:45.379091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:45.530641 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:46.379473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:47.379521      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:47.544014 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:48.379791      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:49.380464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:49.562658 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:50.381118      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:51.381530      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:51.572041 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:52.381787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:53.386421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:53.589405 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:54.386739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:55.387872      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:55.599608 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:56.388501      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:57.389111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:57.604071 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:25:58.389340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:25:59.389803      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:25:59.613456 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:00.390274      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:01.390403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:01.621630 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:02.392482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:03.392662      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:03.631596 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:04.394905      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:05.394141      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:05.641397 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:06.394644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:07.394630      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:07.644844 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:08.395369      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:09.395417      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:09.651546 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:10.396650      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:11.397511      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:11.655936 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:12.398042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:13.398404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:13.660010 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:14.398527      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:15.398798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:15.668097 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:16.400492      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:17.400324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:17.671260 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:18.401091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:19.401321      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:19.681218 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:20.401547      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:21.401761      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:21.686217 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:22.402225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:23.402492      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:23.692050 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:24.403162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:25.403504      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:25.697446 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:26.403535      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:27.403959      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:27.703887 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:28.404780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:29.405513      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:29.712503 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:30.405727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:31.405792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:31.722213 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:32.406772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:33.407365      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:33.732290 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:34.407731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:35.408122      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:35.755760 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:36.408415      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:37.409074      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:37.771564 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:38.409580      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:39.409556      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:39.779520 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:40.410530      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:41.410648      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:41.794552 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:42.411046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:43.411575      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:43.806388 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:44.412282      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:45.412645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:45.817555 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:46.413258      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:47.414227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:47.827309 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:48.415356      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:49.415481      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:49.834598 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:50.415727      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:51.415930      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:51.845642 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:52.416158      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:53.417257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:53.863725 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:54.418265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:55.417962      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:55.869493 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:56.418867      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:57.421035      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:57.874426 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:26:58.421231      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:26:59.422334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:26:59.879840 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:00.422651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:01.422810      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:01.884518 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:02.422941      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:03.423310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:03.889155 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:04.424175      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:05.424756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:05.895520 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:06.425752      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:07.426714      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:07.899033 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:08.426919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:09.427283      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:09.905006 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:10.427600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:11.428467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:11.910461 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:12.428653      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:13.429195      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:13.916132 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:14.429400      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:15.430565      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:15.922801 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:16.430960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:17.430920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:17.928354 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:18.431163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:19.431354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:19.933682 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:20.432458      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:21.433215      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:21.938471 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:22.434489      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:23.434483      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:23.944282 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:24.434987      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:25.436190      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:25.951243 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:26.437269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:27.438059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:27.962806 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:28.439499      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:29.439787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:29.969144 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:30.440466      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:31.440778      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:31.973485 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:32.441080      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:33.441782      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:33.977269 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:34.442209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:35.442457      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:35.982691 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:36.442846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:37.443552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:37.986568 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:38.444767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:39.444967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:39.993420 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:40.445623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:41.446340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:41.998712 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:42.447067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:43.447082      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:44.004076 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:44.447732      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:45.448028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:46.010927 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:46.449117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:47.449195      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:48.019906 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:48.450451      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:49.450965      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:50.024692 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:50.451241      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:51.452680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:52.030941 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:52.453222      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:53.454131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:54.034503 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:54.454677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:55.454566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:27:56.039177 22 container_probe.go:1758] Get pod test-webserver-2b99b527-fbc3-4d34-b40c-adbb179fe2e6 in namespace container-probe-7772
  E0909 22:27:56.454670      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:57.455873      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/09/25 22:27:58.04
  I0909 22:27:58.079413 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7772" for this suite. @ 09/09/25 22:27:58.095
• [245.094 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 09/09/25 22:27:58.103
  I0909 22:27:58.103330 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename statefulset @ 09/09/25 22:27:58.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:27:58.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:27:58.15
  STEP: Creating service test in namespace statefulset-66 @ 09/09/25 22:27:58.154
  STEP: Creating statefulset ss in namespace statefulset-66 @ 09/09/25 22:27:58.169
  I0909 22:27:58.196308 22 wait.go:44] Found 0 stateful pods, waiting for 1
  E0909 22:27:58.456462      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:27:59.456772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:00.457328      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:01.457227      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:02.458363      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:03.458531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:04.459142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:05.459579      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:06.460357      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:07.460858      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:28:08.192086 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/09/25 22:28:08.204
  STEP: updating a scale subresource @ 09/09/25 22:28:08.21
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/09/25 22:28:08.217
  STEP: Patch a scale subresource @ 09/09/25 22:28:08.24
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/09/25 22:28:08.264
  I0909 22:28:08.273174 22 statefulset.go:138] Deleting all statefulset in ns statefulset-66
  I0909 22:28:08.278094 22 rest.go:153] Scaling statefulset ss to 0
  E0909 22:28:08.461012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:09.461999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:10.462198      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:11.462437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:12.462622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:13.463052      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:14.463875      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:15.464087      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:16.464421      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:17.464935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:28:18.307321 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0909 22:28:18.314795 22 rest.go:91] Deleting statefulset ss
  I0909 22:28:18.338882 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-66" for this suite. @ 09/09/25 22:28:18.352
• [20.257 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/09/25 22:28:18.361
  I0909 22:28:18.361136 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pods @ 09/09/25 22:28:18.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:28:18.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:28:18.378
  I0909 22:28:18.386562 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: creating the pod @ 09/09/25 22:28:18.387
  STEP: submitting the pod to kubernetes @ 09/09/25 22:28:18.387
  E0909 22:28:18.465552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:19.465876      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 09/09/25 22:28:20.41
  I0909 22:28:20.461336 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0909 22:28:20.465803      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pods-5901" for this suite. @ 09/09/25 22:28:20.467
• [2.122 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 09/09/25 22:28:20.49
  I0909 22:28:20.491479 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-probe @ 09/09/25 22:28:20.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:28:20.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:28:20.521
  E0909 22:28:21.469211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:22.469201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:23.470480      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:24.469767      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:25.470078      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:26.470903      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:27.473081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:28.473327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:29.473576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:30.473865      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:31.474851      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:32.475163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:33.475543      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:34.475843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:35.476162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:36.476501      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:37.476717      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:38.477687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:39.478101      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:40.478170      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:41.478529      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:42.479017      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:43.479044      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:44.479317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:45.479702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:46.482233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:47.481508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:48.481644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:49.482648      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:50.483359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:51.485090      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:52.491262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:53.486413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:54.485654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:55.488026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:56.489153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:57.489584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:58.489983      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:28:59.490868      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:00.491196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:01.491283      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:02.491899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:03.492707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:04.492656      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:05.493065      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:06.493374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:07.493420      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:08.493637      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:09.493911      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:10.494143      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:11.494514      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:12.495642      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:13.495686      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:14.496196      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:15.496956      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:16.497026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:17.497975      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:18.498281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:19.498524      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:20.499174      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:29:20.547922 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1854" for this suite. @ 09/09/25 22:29:20.554
• [60.076 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 09/09/25 22:29:20.567
  I0909 22:29:20.567787 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename emptydir @ 09/09/25 22:29:20.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:29:20.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:29:20.612
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/09/25 22:29:20.617
  E0909 22:29:21.499299      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:22.500096      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:23.500967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:24.501129      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:29:24.655
  I0909 22:29:24.659710 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-67582a92-f3a2-4849-8331-759d2bce673a container test-container: <nil>
  STEP: delete the pod @ 09/09/25 22:29:24.689
  I0909 22:29:24.727014 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6068" for this suite. @ 09/09/25 22:29:24.731
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/09/25 22:29:24.74
  I0909 22:29:24.740896 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/09/25 22:29:24.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:29:24.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:29:24.763
  STEP: Setting up server cert @ 09/09/25 22:29:24.767
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/09/25 22:29:24.984
  STEP: Deploying the custom resource conversion webhook pod @ 09/09/25 22:29:24.992
  STEP: Wait for the deployment to be ready @ 09/09/25 22:29:25.019
  I0909 22:29:25.025175 22 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0909 22:29:25.501498      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:26.502383      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:29:27.037
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:29:27.083
  E0909 22:29:27.503114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:29:28.084745 22 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/09/25 22:29:28.088
  I0909 22:29:28.089200 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:29:28.504150      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource conversion webhook @ 09/09/25 22:29:28.629
  E0909 22:29:29.504332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:30.504395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 09/09/25 22:29:30.722
  STEP: Registering informers with field selectors @ 09/09/25 22:29:30.725
  STEP: Creating custom resources @ 09/09/25 22:29:30.725
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/09/25 22:29:30.774
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/09/25 22:29:30.777
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/09/25 22:29:30.78
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/09/25 22:29:30.784
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/09/25 22:29:30.789
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/09/25 22:29:30.795
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/09/25 22:29:30.795
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/09/25 22:29:30.795
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/09/25 22:29:30.795
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/09/25 22:29:30.795
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/09/25 22:29:30.812
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/09/25 22:29:30.844
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/09/25 22:29:30.848
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/09/25 22:29:30.851
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/09/25 22:29:30.856
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/09/25 22:29:30.856
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/09/25 22:29:30.856
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/09/25 22:29:30.856
  I0909 22:29:31.476142 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-1750" for this suite. @ 09/09/25 22:29:31.491
• [6.763 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 09/09/25 22:29:31.505
  E0909 22:29:31.505267      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:29:31.505388 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-probe @ 09/09/25 22:29:31.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:29:31.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:29:31.527
  E0909 22:29:32.506255      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:33.506619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:34.507690      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:35.507390      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:36.507649      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:37.508015      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:38.509425      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:39.509618      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:40.511021      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:41.511058      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:42.513374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:43.512736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:44.513146      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:45.513664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:46.514443      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:47.518028      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:48.518126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:49.518640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:50.519301      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:51.519176      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:52.520147      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:53.521024      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:54.521053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:55.521305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:29:55.620415 22 container_probe.go:91] Container started at 2025-09-09 22:29:32 +0000 UTC, pod became ready at 2025-09-09 22:29:54 +0000 UTC
  I0909 22:29:55.621983 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7854" for this suite. @ 09/09/25 22:29:55.633
• [24.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/09/25 22:29:55.654
  I0909 22:29:55.654701 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename csinodes @ 09/09/25 22:29:55.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:29:55.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:29:55.682
  STEP: Creating initial csiNode "e2e-csinode-qkkrw" @ 09/09/25 22:29:55.686
  STEP: Getting initial csiNode "e2e-csinode-qkkrw" @ 09/09/25 22:29:55.693
  STEP: Patching initial csiNode: "e2e-csinode-qkkrw" @ 09/09/25 22:29:55.695
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-qkkrw=patched" @ 09/09/25 22:29:55.702
  STEP: Delete initial csiNode: "e2e-csinode-qkkrw" @ 09/09/25 22:29:55.705
  STEP: Confirm deletion of csiNode "e2e-csinode-qkkrw" @ 09/09/25 22:29:55.71
  STEP: Creating replacement csiNode "e2e-csinode-69hjp" @ 09/09/25 22:29:55.713
  STEP: Getting replacement csiNode "e2e-csinode-69hjp" @ 09/09/25 22:29:55.717
  STEP: Updating replacement csiNode "e2e-csinode-69hjp" @ 09/09/25 22:29:55.72
  STEP: DeleteCollection of CSINodes with "e2e-csinode-69hjp=updated" label @ 09/09/25 22:29:55.728
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-69hjp=updated" @ 09/09/25 22:29:55.739
  I0909 22:29:55.742489 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-7289" for this suite. @ 09/09/25 22:29:55.748
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/09/25 22:29:55.771
  I0909 22:29:55.771427 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-webhook @ 09/09/25 22:29:55.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:29:55.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:29:55.801
  STEP: Setting up server cert @ 09/09/25 22:29:55.803
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/09/25 22:29:56.125
  STEP: Deploying the custom resource conversion webhook pod @ 09/09/25 22:29:56.134
  STEP: Wait for the deployment to be ready @ 09/09/25 22:29:56.156
  I0909 22:29:56.173457 22 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0909 22:29:56.522431      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:29:57.523122      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:29:58.193
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:29:58.236
  E0909 22:29:58.524474      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:29:59.237877 22 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0909 22:29:59.243439 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:29:59.525406      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:00.525159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:01.525290      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/09/25 22:30:01.873
  STEP: v2 custom resource should be converted @ 09/09/25 22:30:01.878
  I0909 22:30:02.524019 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0909 22:30:02.525860      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-5861" for this suite. @ 09/09/25 22:30:02.539
• [6.774 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/09/25 22:30:02.545
  I0909 22:30:02.545371 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubelet-test @ 09/09/25 22:30:02.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:30:02.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:30:02.575
  I0909 22:30:02.687393 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9016" for this suite. @ 09/09/25 22:30:02.693
• [0.157 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/09/25 22:30:02.703
  I0909 22:30:02.704058 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:30:02.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:30:02.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:30:02.73
  STEP: Creating projection with secret that has name projected-secret-test-955be649-ede5-4699-8d7b-989f4291c83d @ 09/09/25 22:30:02.735
  STEP: Creating a pod to test consume secrets @ 09/09/25 22:30:02.74
  E0909 22:30:03.526728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:04.527620      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:05.528225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:06.528335      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:30:06.784
  I0909 22:30:06.799791 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-projected-secrets-9c16a9e2-fd36-4122-aa2e-0dd53036c46b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 22:30:06.818
  I0909 22:30:06.840282 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3850" for this suite. @ 09/09/25 22:30:06.846
• [4.153 seconds]
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/09/25 22:30:06.857
  I0909 22:30:06.858057 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename fake-node @ 09/09/25 22:30:06.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:30:06.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:30:06.878
  STEP: Create "e2e-fake-node-bqhl7" @ 09/09/25 22:30:06.882
  STEP: Getting "e2e-fake-node-bqhl7" @ 09/09/25 22:30:06.897
  STEP: Patching "e2e-fake-node-bqhl7" @ 09/09/25 22:30:06.913
  STEP: Listing nodes with LabelSelector "e2e-fake-node-bqhl7=patched" @ 09/09/25 22:30:06.954
  STEP: Updating "e2e-fake-node-bqhl7" @ 09/09/25 22:30:06.961
  STEP: Delete "e2e-fake-node-bqhl7" @ 09/09/25 22:30:06.971
  STEP: Confirm deletion of "e2e-fake-node-bqhl7" @ 09/09/25 22:30:06.984
  E0909 22:30:07.529008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:08.530115      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:09.530075      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:10.530473      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:11.530966      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:30:11.991011 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-4057" for this suite. @ 09/09/25 22:30:11.995
• [5.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/09/25 22:30:12.001
  I0909 22:30:12.001073 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sysctl @ 09/09/25 22:30:12.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:30:12.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:30:12.036
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/09/25 22:30:12.039
  I0909 22:30:12.042709 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6998" for this suite. @ 09/09/25 22:30:12.096
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 09/09/25 22:30:12.105
  I0909 22:30:12.105738 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/09/25 22:30:12.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:30:12.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:30:12.137
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/09/25 22:30:12.146
  I0909 22:30:12.149071 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:30:12.532330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:13.533039      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:14.534455      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:15.556240      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:16.559282      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:17.560991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:18.561984      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/09/25 22:30:18.982
  I0909 22:30:18.983558 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:30:19.562375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:20.567464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:30:20.871321 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:30:21.568787      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:22.568768      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:23.569902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:24.570242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:25.588982      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:26.577723      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:30:27.575433 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0909 22:30:27.577978      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-publish-openapi-8942" for this suite. @ 09/09/25 22:30:27.587
• [15.491 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/09/25 22:30:27.606
  I0909 22:30:27.607575 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename disruption @ 09/09/25 22:30:27.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:30:27.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:30:27.641
  STEP: Waiting for the pdb to be processed @ 09/09/25 22:30:27.664
  STEP: Waiting for all pods to be running @ 09/09/25 22:30:27.736
  I0909 22:30:27.752292 22 disruption.go:691] running pods: 0 < 3
  E0909 22:30:28.578444      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:29.579356      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:30:29.745709 22 disruption.go:691] running pods: 0 < 3
  E0909 22:30:30.579559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:31.583894      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:30:31.751279 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1128" for this suite. @ 09/09/25 22:30:31.763
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/09/25 22:30:31.793
  I0909 22:30:31.793339 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/09/25 22:30:31.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:30:31.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:30:31.833
  STEP: Setting up the test @ 09/09/25 22:30:31.838
  STEP: Creating hostNetwork=false pod @ 09/09/25 22:30:31.838
  E0909 22:30:32.581293      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:33.581608      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/09/25 22:30:33.897
  E0909 22:30:34.581967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:35.582654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/09/25 22:30:35.916
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/09/25 22:30:35.916
  I0909 22:30:35.916712 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7001 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:30:35.916732 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:30:35.916868 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7001/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0909 22:30:36.022882 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:30:36.023012 22 exec_util.go:112] Exec stderr: ""
  I0909 22:30:36.023040 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7001 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:30:36.023050 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:30:36.023116 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7001/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0909 22:30:36.126616 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:30:36.126841 22 exec_util.go:112] Exec stderr: ""
  I0909 22:30:36.127445 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7001 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:30:36.128115 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:30:36.128935 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7001/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0909 22:30:36.235834 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:30:36.235881 22 exec_util.go:112] Exec stderr: ""
  I0909 22:30:36.235905 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7001 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:30:36.235915 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:30:36.235975 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7001/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0909 22:30:36.329954 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:30:36.330036 22 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/09/25 22:30:36.33
  I0909 22:30:36.330334 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7001 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:30:36.330751 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:30:36.331386 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7001/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0909 22:30:36.429532 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:30:36.429747 22 exec_util.go:112] Exec stderr: ""
  I0909 22:30:36.430158 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7001 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:30:36.430686 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:30:36.431160 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7001/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0909 22:30:36.573848 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:30:36.573959 22 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/09/25 22:30:36.573
  I0909 22:30:36.574005 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7001 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:30:36.574071 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:30:36.574118 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7001/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  E0909 22:30:36.587412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:30:36.703009 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:30:36.703086 22 exec_util.go:112] Exec stderr: ""
  I0909 22:30:36.703121 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7001 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:30:36.703447 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:30:36.704002 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7001/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0909 22:30:36.805679 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:30:36.806061 22 exec_util.go:112] Exec stderr: ""
  I0909 22:30:36.806817 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7001 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:30:36.806834 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:30:36.807432 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7001/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  E0909 22:30:36.826605      22 websocket.go:297] Unknown stream id 1, discarding message
  I0909 22:30:36.999730 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:30:36.999860 22 exec_util.go:112] Exec stderr: ""
  I0909 22:30:36.999977 22 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7001 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:30:36.999992 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:30:37.000233 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7001/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0909 22:30:37.098228 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:30:37.098771 22 exec_util.go:112] Exec stderr: ""
  I0909 22:30:37.099341 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7001" for this suite. @ 09/09/25 22:30:37.104
• [5.320 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 09/09/25 22:30:37.116
  I0909 22:30:37.116260 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename dns @ 09/09/25 22:30:37.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:30:37.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:30:37.142
  STEP: Creating a test externalName service @ 09/09/25 22:30:37.145
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8982.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local; sleep 1; done
   @ 09/09/25 22:30:37.153
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8982.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local; sleep 1; done
   @ 09/09/25 22:30:37.153
  STEP: creating a pod to probe DNS @ 09/09/25 22:30:37.153
  STEP: submitting the pod to kubernetes @ 09/09/25 22:30:37.153
  E0909 22:30:37.588086      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:38.589192      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/09/25 22:30:39.174
  STEP: looking for the results for each expected name from probers @ 09/09/25 22:30:39.178
  I0909 22:30:39.203001 22 dns_common.go:571] DNS probes using dns-test-facd0fd0-a7bd-464a-98e0-f05f924cdea1 succeeded

  STEP: changing the externalName to bar.example.com @ 09/09/25 22:30:39.203
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8982.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local; sleep 1; done
   @ 09/09/25 22:30:39.229
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8982.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local; sleep 1; done
   @ 09/09/25 22:30:39.229
  STEP: creating a second pod to probe DNS @ 09/09/25 22:30:39.229
  STEP: submitting the pod to kubernetes @ 09/09/25 22:30:39.229
  E0909 22:30:39.589455      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:40.590401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/09/25 22:30:41.261
  STEP: looking for the results for each expected name from probers @ 09/09/25 22:30:41.268
  I0909 22:30:41.281161 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:30:41.291101 22 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:30:41.292028 22 dns_common.go:506] Lookups using dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 failed for: [agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local]

  I0909 22:30:41.310240 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 22:30:41.318487 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 22:30:41.328974 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 22:30:41.590792      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:42.597188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:43.597462      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:44.598479      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:45.598716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:30:46.274246 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:30:46.279478 22 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:30:46.279568 22 dns_common.go:506] Lookups using dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 failed for: [agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local]

  I0909 22:30:46.288165 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 22:30:46.297346 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 22:30:46.307638 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 22:30:46.599488      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:47.601286      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:48.601975      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:49.602171      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:50.602540      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:30:51.275725 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:30:51.284756 22 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:30:51.285034 22 dns_common.go:506] Lookups using dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 failed for: [agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local]

  I0909 22:30:51.296688 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 22:30:51.307550 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 22:30:51.320688 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 22:30:51.602978      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:52.603434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:53.603647      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:54.604548      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:55.605645      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:30:56.274767 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:30:56.282507 22 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:30:56.284325 22 dns_common.go:506] Lookups using dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 failed for: [agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local]

  I0909 22:30:56.297310 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 22:30:56.309966 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 22:30:56.331628 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 22:30:56.605837      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:57.606563      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:58.607311      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:30:59.607719      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:00.608182      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:31:01.274670 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:31:01.281612 22 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:31:01.281652 22 dns_common.go:506] Lookups using dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 failed for: [agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local]

  I0909 22:31:01.291460 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 22:31:01.301338 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 22:31:01.313227 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 22:31:01.608413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:02.608739      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:03.609394      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:04.609591      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:05.610278      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:31:06.275737 22 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:31:06.283135 22 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local from pod  dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0909 22:31:06.283224 22 dns_common.go:506] Lookups using dns-8982/dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 failed for: [agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local]

  I0909 22:31:06.296109 22 dns_common.go:514] Pod client logs for webserver: 
  I0909 22:31:06.310076 22 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0909 22:31:06.322305 22 dns_common.go:514] Pod client logs for jessie-querier: 
  E0909 22:31:06.611456      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:07.612109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:08.612703      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:09.613125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:10.613609      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:31:11.318204 22 dns_common.go:571] DNS probes using dns-test-f0ed54f9-4532-4d76-b3e2-e46d60bd1404 succeeded

  STEP: changing the service to type=ClusterIP @ 09/09/25 22:31:11.318
  I0909 22:31:11.377749      22 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8982.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-8982.svc.cluster.local; sleep 1; done
   @ 09/09/25 22:31:11.381
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8982.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8982.svc.cluster.local; sleep 1; done
   @ 09/09/25 22:31:11.382
  STEP: creating a third pod to probe DNS @ 09/09/25 22:31:11.385
  STEP: submitting the pod to kubernetes @ 09/09/25 22:31:11.402
  E0909 22:31:11.614361      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:12.615486      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/09/25 22:31:13.461
  STEP: looking for the results for each expected name from probers @ 09/09/25 22:31:13.466
  I0909 22:31:13.479248 22 dns_common.go:571] DNS probes using dns-test-b70b8f8b-28f7-40bc-aef2-7afcce9603f8 succeeded

  STEP: deleting the pod @ 09/09/25 22:31:13.479
  STEP: deleting the pod @ 09/09/25 22:31:13.509
  STEP: deleting the pod @ 09/09/25 22:31:13.538
  STEP: deleting the test externalName service @ 09/09/25 22:31:13.559
  I0909 22:31:13.607023 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8982" for this suite. @ 09/09/25 22:31:13.611
• [36.501 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  E0909 22:31:13.618029      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 09/09/25 22:31:13.623
  I0909 22:31:13.623271 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename resourcequota @ 09/09/25 22:31:13.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:31:13.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:31:13.655
  STEP: Counting existing ResourceQuota @ 09/09/25 22:31:13.658
  E0909 22:31:14.618585      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:15.619467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:16.620207      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:17.621017      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:18.623389      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/09/25 22:31:18.669
  STEP: Ensuring resource quota status is calculated @ 09/09/25 22:31:18.679
  E0909 22:31:19.626384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:20.626259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 09/09/25 22:31:20.686
  STEP: Creating a NodePort Service @ 09/09/25 22:31:20.729
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/09/25 22:31:20.777
  STEP: Ensuring resource quota status captures service creation @ 09/09/25 22:31:20.822
  E0909 22:31:21.626493      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:22.626706      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 09/09/25 22:31:22.827
  STEP: Ensuring resource quota status released usage @ 09/09/25 22:31:22.939
  E0909 22:31:23.627588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:24.627747      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:31:24.947958 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6344" for this suite. @ 09/09/25 22:31:24.955
• [11.345 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/09/25 22:31:24.976
  I0909 22:31:24.977325 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename field-validation @ 09/09/25 22:31:24.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:31:25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:31:25.007
  I0909 22:31:25.010239 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:31:25.628051      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:26.628265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:31:27.592480      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0909 22:31:27.592513      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0909 22:31:27.592519      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0909 22:31:27.592525      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0909 22:31:27.592531      22 warnings.go:110] "Warning: unknown field \"gamma\""
  E0909 22:31:27.630016      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:31:28.156612 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3581" for this suite. @ 09/09/25 22:31:28.167
• [3.199 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/09/25 22:31:28.177
  I0909 22:31:28.177752 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replicaset @ 09/09/25 22:31:28.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:31:28.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:31:28.212
  I0909 22:31:28.214841 22 replica_set.go:192] Creating ReplicaSet my-hostname-basic-1420fcbe-b3c7-49a0-8869-8aa09a30305c
  I0909 22:31:28.232174 22 resource.go:81] Pod name my-hostname-basic-1420fcbe-b3c7-49a0-8869-8aa09a30305c: Found 0 pods out of 1
  E0909 22:31:28.630861      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:29.631037      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:30.631327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:31.632362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:32.632455      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:31:33.240007 22 resource.go:81] Pod name my-hostname-basic-1420fcbe-b3c7-49a0-8869-8aa09a30305c: Found 1 pods out of 1
  I0909 22:31:33.240070 22 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-1420fcbe-b3c7-49a0-8869-8aa09a30305c" is running
  I0909 22:31:33.246627 22 replica_set.go:221] Pod "my-hostname-basic-1420fcbe-b3c7-49a0-8869-8aa09a30305c-6scbh" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-09 22:31:29 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-09 22:31:28 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-09 22:31:29 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-09 22:31:29 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-09 22:31:28 +0000 UTC Reason: Message:}])
  I0909 22:31:33.247140 22 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/09/25 22:31:33.247
  I0909 22:31:33.266159 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7437" for this suite. @ 09/09/25 22:31:33.277
• [5.111 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/09/25 22:31:33.288
  I0909 22:31:33.288610 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename events @ 09/09/25 22:31:33.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:31:33.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:31:33.331
  STEP: Create set of events @ 09/09/25 22:31:33.333
  I0909 22:31:33.339020 22 core_events.go:198] created test-event-1
  I0909 22:31:33.344100 22 core_events.go:198] created test-event-2
  I0909 22:31:33.352760 22 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/09/25 22:31:33.352
  STEP: delete collection of events @ 09/09/25 22:31:33.354
  I0909 22:31:33.354736 22 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/09/25 22:31:33.376
  I0909 22:31:33.376654 22 core_events.go:230] requesting list of events to confirm quantity
  I0909 22:31:33.384303 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1296" for this suite. @ 09/09/25 22:31:33.4
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/09/25 22:31:33.424
  I0909 22:31:33.425044 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:31:33.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:31:33.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:31:33.457
  STEP: Setting up server cert @ 09/09/25 22:31:33.482
  E0909 22:31:33.633279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:31:34.387
  STEP: Deploying the webhook pod @ 09/09/25 22:31:34.394
  STEP: Wait for the deployment to be ready @ 09/09/25 22:31:34.417
  I0909 22:31:34.441471 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:31:34.634379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:35.635360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:31:36.457808 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 31, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 31, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 31, 34, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 31, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:31:36.653085      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:37.653626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:31:38.484
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:31:38.516
  E0909 22:31:38.657188      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:31:39.517053 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/09/25 22:31:39.522
  STEP: create a configmap that should be updated by the webhook @ 09/09/25 22:31:39.566
  E0909 22:31:39.662780      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:31:39.732004 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9364" for this suite. @ 09/09/25 22:31:39.741
  STEP: Destroying namespace "webhook-markers-6163" for this suite. @ 09/09/25 22:31:39.746
• [6.333 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 09/09/25 22:31:39.757
  I0909 22:31:39.757738 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename statefulset @ 09/09/25 22:31:39.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:31:39.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:31:39.786
  STEP: Creating service test in namespace statefulset-7885 @ 09/09/25 22:31:39.788
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/09/25 22:31:39.797
  STEP: Creating stateful set ss in namespace statefulset-7885 @ 09/09/25 22:31:39.812
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7885 @ 09/09/25 22:31:39.819
  I0909 22:31:39.845923 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0909 22:31:40.663032      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:41.663199      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:42.663865      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:43.665491      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:44.665815      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:45.666194      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:46.666414      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:47.667345      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:48.668201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:49.669667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:31:49.825918 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/09/25 22:31:49.827
  I0909 22:31:49.833661 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7885 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0909 22:31:50.082411 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0909 22:31:50.082538 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0909 22:31:50.082554 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0909 22:31:50.087610 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0909 22:31:50.669572      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:51.669846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:52.670184      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:53.671295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:54.671956      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:55.672505      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:56.674245      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:57.675026      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:58.675401      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:31:59.676429      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:00.089643 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0909 22:32:00.090702 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0909 22:32:00.166062 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.99999884s
  E0909 22:32:00.677707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:01.179858 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.952236557s
  E0909 22:32:01.680652      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:02.185325 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.938288062s
  E0909 22:32:02.681395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:03.190692 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.932149437s
  E0909 22:32:03.683318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:04.198186 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.927533514s
  E0909 22:32:04.685114      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:05.206995 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.918612795s
  E0909 22:32:05.686070      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:06.213289 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.910965038s
  E0909 22:32:06.686202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:07.217582 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.90486211s
  E0909 22:32:07.686545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:08.223387 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.899969423s
  E0909 22:32:08.687309      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:09.229507 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 894.629529ms
  E0909 22:32:09.687544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7885 @ 09/09/25 22:32:10.23
  I0909 22:32:10.236101 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7885 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0909 22:32:10.493491 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0909 22:32:10.493553 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0909 22:32:10.493572 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0909 22:32:10.498359 22 wait.go:44] Found 1 stateful pods, waiting for 3
  E0909 22:32:10.687559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:11.687586      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:12.687756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:13.688329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:14.688765      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:15.689168      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:16.689669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:17.690709      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:18.692722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:19.692585      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:20.500115 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0909 22:32:20.500192 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0909 22:32:20.500212 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/09/25 22:32:20.5
  STEP: Scale down will halt with unhealthy stateful pod @ 09/09/25 22:32:20.5
  I0909 22:32:20.514265 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7885 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0909 22:32:20.693200      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:20.765230 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0909 22:32:20.765270 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0909 22:32:20.765282 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0909 22:32:20.765317 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7885 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0909 22:32:21.005343 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0909 22:32:21.005443 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0909 22:32:21.005468 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0909 22:32:21.005542 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7885 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0909 22:32:21.261407 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0909 22:32:21.261524 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0909 22:32:21.261537 22 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0909 22:32:21.261547 22 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0909 22:32:21.274351 22 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0909 22:32:21.693493      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:22.697504      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:23.695047      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:24.696445      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:25.697887      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:26.698254      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:27.698829      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:28.698917      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:29.700379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:30.700226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:31.273916 22 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0909 22:32:31.274005 22 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0909 22:32:31.274026 22 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0909 22:32:31.371070 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.99999923s
  E0909 22:32:31.701897      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:32.378901 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.921280556s
  E0909 22:32:32.701693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:33.388059 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.913130706s
  E0909 22:32:33.702682      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:34.398066 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.903250379s
  E0909 22:32:34.703387      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:35.406716 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.89412034s
  E0909 22:32:35.703860      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:36.413968 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.886222232s
  E0909 22:32:36.705042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:37.420732 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.878343139s
  E0909 22:32:37.705530      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:38.427002 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.871430043s
  E0909 22:32:38.706734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:39.433620 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.865991188s
  E0909 22:32:39.707032      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:40.440543 22 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 859.52994ms
  E0909 22:32:40.707256      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7885 @ 09/09/25 22:32:41.44
  I0909 22:32:41.447982 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7885 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0909 22:32:41.698311 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0909 22:32:41.698395 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0909 22:32:41.698419 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0909 22:32:41.698827 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7885 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0909 22:32:41.707647      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:32:42.001235 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0909 22:32:42.001299 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0909 22:32:42.001319 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0909 22:32:42.001388 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7885 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0909 22:32:42.282450 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0909 22:32:42.282505 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0909 22:32:42.282527 22 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0909 22:32:42.282543 22 rest.go:153] Scaling statefulset ss to 0
  E0909 22:32:42.707879      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:43.708121      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:44.708555      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:45.709831      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:46.710250      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:47.710545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:48.711201      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:49.711853      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:50.712118      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:51.712334      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/09/25 22:32:52.29
  I0909 22:32:52.291297 22 statefulset.go:138] Deleting all statefulset in ns statefulset-7885
  I0909 22:32:52.308232 22 rest.go:153] Scaling statefulset ss to 0
  I0909 22:32:52.315449 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0909 22:32:52.320243 22 rest.go:91] Deleting statefulset ss
  I0909 22:32:52.347940 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7885" for this suite. @ 09/09/25 22:32:52.359
• [72.610 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/09/25 22:32:52.368
  I0909 22:32:52.368371 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 22:32:52.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:32:52.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:32:52.402
  STEP: Creating a pod to test downward api env vars @ 09/09/25 22:32:52.408
  E0909 22:32:52.712996      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:53.713498      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:54.713622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:55.714269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:32:56.437
  I0909 22:32:56.442277 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod downward-api-278a37ca-0208-4713-9cd9-6524a7adbdc0 container dapi-container: <nil>
  STEP: delete the pod @ 09/09/25 22:32:56.466
  I0909 22:32:56.499280 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9768" for this suite. @ 09/09/25 22:32:56.506
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/09/25 22:32:56.525
  I0909 22:32:56.525784 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename endpointslice @ 09/09/25 22:32:56.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:32:56.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:32:56.552
  STEP: getting /apis @ 09/09/25 22:32:56.556
  STEP: getting /apis/discovery.k8s.io @ 09/09/25 22:32:56.566
  STEP: getting /apis/discovery.k8s.iov1 @ 09/09/25 22:32:56.568
  STEP: creating @ 09/09/25 22:32:56.569
  STEP: getting @ 09/09/25 22:32:56.598
  STEP: listing @ 09/09/25 22:32:56.603
  STEP: watching @ 09/09/25 22:32:56.607
  I0909 22:32:56.608167 22 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/09/25 22:32:56.611
  STEP: cluster-wide watching @ 09/09/25 22:32:56.618
  I0909 22:32:56.619118 22 endpointslice.go:459] starting watch
  STEP: patching @ 09/09/25 22:32:56.621
  STEP: updating @ 09/09/25 22:32:56.633
  I0909 22:32:56.643895 22 endpointslice.go:482] waiting for watch events with expected annotations
  I0909 22:32:56.644913 22 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/09/25 22:32:56.646
  STEP: deleting a collection @ 09/09/25 22:32:56.665
  I0909 22:32:56.685655 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7780" for this suite. @ 09/09/25 22:32:56.691
• [0.173 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/09/25 22:32:56.698
  I0909 22:32:56.698590 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:32:56.699
  E0909 22:32:56.721238      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:32:56.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:32:56.74
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 22:32:56.751
  E0909 22:32:57.721509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:58.722354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:32:59.723324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:00.723948      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:33:00.789
  I0909 22:33:00.793687 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-a326f747-01b4-4646-97b8-f6b1e48c16b0 container client-container: <nil>
  STEP: delete the pod @ 09/09/25 22:33:00.831
  I0909 22:33:00.861356 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8577" for this suite. @ 09/09/25 22:33:00.871
• [4.184 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/09/25 22:33:00.883
  I0909 22:33:00.884146 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename svc-latency @ 09/09/25 22:33:00.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:33:00.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:33:00.917
  I0909 22:33:00.920037 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  I0909 22:33:00.928629 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0909 22:33:01.724358      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:02.725723      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:02.944697 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 33, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 33, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 33, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 33, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"svc-latency-rc-846dbb995\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:33:03.725735      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:04.726424      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:04.936228      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 22:33:04.938147      22 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0909 22:33:05.075362 22 service_latency.go:351] Created: latency-svc-z7gjv
  I0909 22:33:05.080359 22 service_latency.go:358] Got endpoints: latency-svc-z7gjv [44.824241ms]
  I0909 22:33:05.104860 22 service_latency.go:351] Created: latency-svc-5vfmg
  I0909 22:33:05.119034 22 service_latency.go:358] Got endpoints: latency-svc-5vfmg [38.323652ms]
  I0909 22:33:05.145056 22 service_latency.go:351] Created: latency-svc-kq722
  I0909 22:33:05.165540 22 service_latency.go:358] Got endpoints: latency-svc-kq722 [83.557665ms]
  I0909 22:33:05.167393 22 service_latency.go:351] Created: latency-svc-sbw9w
  I0909 22:33:05.186537 22 service_latency.go:358] Got endpoints: latency-svc-sbw9w [104.467249ms]
  I0909 22:33:05.193172 22 service_latency.go:351] Created: latency-svc-d8d7d
  I0909 22:33:05.211024 22 service_latency.go:358] Got endpoints: latency-svc-d8d7d [128.910529ms]
  I0909 22:33:05.223161 22 service_latency.go:351] Created: latency-svc-gh6wx
  I0909 22:33:05.236027 22 service_latency.go:351] Created: latency-svc-45j7x
  I0909 22:33:05.236116 22 service_latency.go:358] Got endpoints: latency-svc-gh6wx [153.970612ms]
  I0909 22:33:05.257239 22 service_latency.go:358] Got endpoints: latency-svc-45j7x [175.78292ms]
  I0909 22:33:05.242690 22 service_latency.go:351] Created: latency-svc-nrgpn
  I0909 22:33:05.259757 22 service_latency.go:358] Got endpoints: latency-svc-nrgpn [177.591628ms]
  I0909 22:33:05.270287 22 service_latency.go:351] Created: latency-svc-wjvtt
  I0909 22:33:05.278011 22 service_latency.go:358] Got endpoints: latency-svc-wjvtt [195.80416ms]
  I0909 22:33:05.301632 22 service_latency.go:351] Created: latency-svc-fcxkz
  I0909 22:33:05.306503 22 service_latency.go:351] Created: latency-svc-kvgrc
  I0909 22:33:05.306988 22 service_latency.go:358] Got endpoints: latency-svc-kvgrc [224.78526ms]
  I0909 22:33:05.315589 22 service_latency.go:358] Got endpoints: latency-svc-fcxkz [233.325048ms]
  I0909 22:33:05.327331 22 service_latency.go:351] Created: latency-svc-gtnpz
  I0909 22:33:05.352960 22 service_latency.go:351] Created: latency-svc-7f5gj
  I0909 22:33:05.360074 22 service_latency.go:358] Got endpoints: latency-svc-gtnpz [277.819568ms]
  I0909 22:33:05.361315 22 service_latency.go:358] Got endpoints: latency-svc-7f5gj [279.084044ms]
  I0909 22:33:05.372743 22 service_latency.go:351] Created: latency-svc-pn8fs
  I0909 22:33:05.384901 22 service_latency.go:351] Created: latency-svc-6pfb8
  I0909 22:33:05.384428 22 service_latency.go:358] Got endpoints: latency-svc-pn8fs [302.137468ms]
  I0909 22:33:05.424321 22 service_latency.go:358] Got endpoints: latency-svc-6pfb8 [341.998837ms]
  I0909 22:33:05.427012 22 service_latency.go:351] Created: latency-svc-x4rxm
  I0909 22:33:05.427976 22 service_latency.go:358] Got endpoints: latency-svc-x4rxm [345.657864ms]
  I0909 22:33:05.427908 22 service_latency.go:351] Created: latency-svc-hgd4s
  I0909 22:33:05.435577 22 service_latency.go:358] Got endpoints: latency-svc-hgd4s [316.482153ms]
  I0909 22:33:05.442997 22 service_latency.go:351] Created: latency-svc-4vnv6
  I0909 22:33:05.465014 22 service_latency.go:358] Got endpoints: latency-svc-4vnv6 [298.295611ms]
  I0909 22:33:05.469143 22 service_latency.go:351] Created: latency-svc-bqpks
  I0909 22:33:05.490055 22 service_latency.go:358] Got endpoints: latency-svc-bqpks [298.840633ms]
  I0909 22:33:05.490079 22 service_latency.go:351] Created: latency-svc-c7n47
  I0909 22:33:05.504776 22 service_latency.go:358] Got endpoints: latency-svc-c7n47 [282.887652ms]
  I0909 22:33:05.525340 22 service_latency.go:351] Created: latency-svc-dghcd
  I0909 22:33:05.525746 22 service_latency.go:351] Created: latency-svc-4zqkc
  I0909 22:33:05.534792 22 service_latency.go:358] Got endpoints: latency-svc-dghcd [276.135642ms]
  I0909 22:33:05.537630 22 service_latency.go:358] Got endpoints: latency-svc-4zqkc [278.584532ms]
  I0909 22:33:05.547282 22 service_latency.go:351] Created: latency-svc-d5j6c
  I0909 22:33:05.557170 22 service_latency.go:358] Got endpoints: latency-svc-d5j6c [297.392517ms]
  I0909 22:33:05.572373 22 service_latency.go:351] Created: latency-svc-xvk8q
  I0909 22:33:05.585432 22 service_latency.go:351] Created: latency-svc-8cg29
  I0909 22:33:05.593391 22 service_latency.go:358] Got endpoints: latency-svc-xvk8q [314.880965ms]
  I0909 22:33:05.609288 22 service_latency.go:351] Created: latency-svc-klvx7
  I0909 22:33:05.609039 22 service_latency.go:358] Got endpoints: latency-svc-8cg29 [301.675495ms]
  I0909 22:33:05.617052 22 service_latency.go:358] Got endpoints: latency-svc-klvx7 [301.397104ms]
  E0909 22:33:05.732736      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:05.762614 22 service_latency.go:351] Created: latency-svc-7cdsh
  I0909 22:33:05.763389 22 service_latency.go:351] Created: latency-svc-w4tcx
  I0909 22:33:05.763428 22 service_latency.go:351] Created: latency-svc-tc8ld
  I0909 22:33:05.769525 22 service_latency.go:351] Created: latency-svc-wp87m
  I0909 22:33:05.769603 22 service_latency.go:351] Created: latency-svc-x9p67
  I0909 22:33:05.769820 22 service_latency.go:351] Created: latency-svc-n4djk
  I0909 22:33:05.769917 22 service_latency.go:351] Created: latency-svc-wvcxc
  I0909 22:33:05.769951 22 service_latency.go:351] Created: latency-svc-9zj7x
  I0909 22:33:05.775948 22 service_latency.go:351] Created: latency-svc-plfws
  I0909 22:33:05.786051 22 service_latency.go:351] Created: latency-svc-96497
  I0909 22:33:05.786164 22 service_latency.go:351] Created: latency-svc-tf8w7
  I0909 22:33:05.786204 22 service_latency.go:351] Created: latency-svc-st7j7
  I0909 22:33:05.786224 22 service_latency.go:351] Created: latency-svc-jsp7r
  I0909 22:33:05.786247 22 service_latency.go:351] Created: latency-svc-6wclh
  I0909 22:33:05.786269 22 service_latency.go:351] Created: latency-svc-xclcm
  I0909 22:33:05.807478 22 service_latency.go:358] Got endpoints: latency-svc-9zj7x [445.07884ms]
  I0909 22:33:05.842060 22 service_latency.go:358] Got endpoints: latency-svc-wp87m [417.447356ms]
  I0909 22:33:05.842330 22 service_latency.go:358] Got endpoints: latency-svc-w4tcx [226.802639ms]
  I0909 22:33:05.851054 22 service_latency.go:358] Got endpoints: latency-svc-x9p67 [422.84829ms]
  I0909 22:33:05.854412 22 service_latency.go:358] Got endpoints: latency-svc-wvcxc [461.679535ms]
  I0909 22:33:05.855712 22 service_latency.go:358] Got endpoints: latency-svc-n4djk [420.064668ms]
  I0909 22:33:05.857256 22 service_latency.go:358] Got endpoints: latency-svc-tc8ld [240.161409ms]
  I0909 22:33:05.867980 22 service_latency.go:358] Got endpoints: latency-svc-st7j7 [329.546861ms]
  I0909 22:33:05.875539 22 service_latency.go:358] Got endpoints: latency-svc-xclcm [385.423672ms]
  I0909 22:33:05.875574 22 service_latency.go:358] Got endpoints: latency-svc-7cdsh [514.814113ms]
  I0909 22:33:05.875581 22 service_latency.go:358] Got endpoints: latency-svc-plfws [369.794112ms]
  I0909 22:33:05.875593 22 service_latency.go:358] Got endpoints: latency-svc-tf8w7 [405.632403ms]
  I0909 22:33:05.891404 22 service_latency.go:358] Got endpoints: latency-svc-96497 [297.972719ms]
  I0909 22:33:05.891497 22 service_latency.go:358] Got endpoints: latency-svc-jsp7r [332.003122ms]
  I0909 22:33:05.891566 22 service_latency.go:358] Got endpoints: latency-svc-6wclh [356.05706ms]
  I0909 22:33:05.898959 22 service_latency.go:351] Created: latency-svc-gkdcf
  I0909 22:33:05.917887 22 service_latency.go:351] Created: latency-svc-mdtb6
  I0909 22:33:05.922363 22 service_latency.go:358] Got endpoints: latency-svc-gkdcf [114.824087ms]
  I0909 22:33:05.931067 22 service_latency.go:358] Got endpoints: latency-svc-mdtb6 [88.968069ms]
  I0909 22:33:05.933160 22 service_latency.go:351] Created: latency-svc-rv7k5
  I0909 22:33:05.947148 22 service_latency.go:351] Created: latency-svc-w77nt
  I0909 22:33:05.952135 22 service_latency.go:358] Got endpoints: latency-svc-rv7k5 [109.788423ms]
  I0909 22:33:05.967689 22 service_latency.go:358] Got endpoints: latency-svc-w77nt [116.538394ms]
  I0909 22:33:05.977156 22 service_latency.go:351] Created: latency-svc-7p6wn
  I0909 22:33:05.997163 22 service_latency.go:358] Got endpoints: latency-svc-7p6wn [142.728341ms]
  I0909 22:33:05.997990 22 service_latency.go:351] Created: latency-svc-rqhxs
  I0909 22:33:06.004260 22 service_latency.go:358] Got endpoints: latency-svc-rqhxs [148.527438ms]
  I0909 22:33:06.037088 22 service_latency.go:351] Created: latency-svc-4d2vg
  I0909 22:33:06.045637 22 service_latency.go:351] Created: latency-svc-dtf4t
  I0909 22:33:06.074782 22 service_latency.go:351] Created: latency-svc-lrdcd
  I0909 22:33:06.087072 22 service_latency.go:358] Got endpoints: latency-svc-4d2vg [229.791022ms]
  I0909 22:33:06.087295 22 service_latency.go:358] Got endpoints: latency-svc-dtf4t [195.87101ms]
  I0909 22:33:06.087750 22 service_latency.go:358] Got endpoints: latency-svc-lrdcd [196.529434ms]
  I0909 22:33:06.102007 22 service_latency.go:351] Created: latency-svc-2hqnv
  I0909 22:33:06.123713 22 service_latency.go:351] Created: latency-svc-rxmqr
  I0909 22:33:06.130847 22 service_latency.go:358] Got endpoints: latency-svc-2hqnv [240.022788ms]
  I0909 22:33:06.145233 22 service_latency.go:351] Created: latency-svc-qzz59
  I0909 22:33:06.159427 22 service_latency.go:351] Created: latency-svc-tcdpr
  I0909 22:33:06.179709 22 service_latency.go:358] Got endpoints: latency-svc-rxmqr [288.676936ms]
  I0909 22:33:06.197953 22 service_latency.go:351] Created: latency-svc-n9qws
  I0909 22:33:06.197961 22 service_latency.go:351] Created: latency-svc-m9q57
  I0909 22:33:06.204508 22 service_latency.go:351] Created: latency-svc-6ldjb
  I0909 22:33:06.235581 22 service_latency.go:351] Created: latency-svc-6rv72
  I0909 22:33:06.236048 22 service_latency.go:358] Got endpoints: latency-svc-qzz59 [344.909279ms]
  I0909 22:33:06.252141 22 service_latency.go:351] Created: latency-svc-wz8nv
  I0909 22:33:06.267523 22 service_latency.go:351] Created: latency-svc-dgr2f
  I0909 22:33:06.280538 22 service_latency.go:358] Got endpoints: latency-svc-tcdpr [379.712186ms]
  I0909 22:33:06.288908 22 service_latency.go:351] Created: latency-svc-7w2bf
  I0909 22:33:06.298801 22 service_latency.go:351] Created: latency-svc-zs4nb
  I0909 22:33:06.327930 22 service_latency.go:358] Got endpoints: latency-svc-n9qws [436.34699ms]
  I0909 22:33:06.342392 22 service_latency.go:351] Created: latency-svc-hvbmc
  I0909 22:33:06.353302 22 service_latency.go:351] Created: latency-svc-2wbgs
  I0909 22:33:06.363991 22 service_latency.go:351] Created: latency-svc-m9b9c
  I0909 22:33:06.376688 22 service_latency.go:351] Created: latency-svc-lh6fm
  I0909 22:33:06.389012 22 service_latency.go:358] Got endpoints: latency-svc-m9q57 [497.500674ms]
  I0909 22:33:06.411558 22 service_latency.go:351] Created: latency-svc-kq5qm
  I0909 22:33:06.442598 22 service_latency.go:351] Created: latency-svc-nknwr
  I0909 22:33:06.443086 22 service_latency.go:358] Got endpoints: latency-svc-6ldjb [520.696588ms]
  I0909 22:33:06.447410 22 service_latency.go:351] Created: latency-svc-8rncs
  I0909 22:33:06.457082 22 service_latency.go:351] Created: latency-svc-g7wwl
  I0909 22:33:06.478225 22 service_latency.go:358] Got endpoints: latency-svc-6rv72 [545.751591ms]
  I0909 22:33:06.478443 22 service_latency.go:351] Created: latency-svc-cl79c
  I0909 22:33:06.493286 22 service_latency.go:351] Created: latency-svc-zsq6q
  I0909 22:33:06.520006 22 service_latency.go:351] Created: latency-svc-mq24w
  I0909 22:33:06.524847 22 service_latency.go:358] Got endpoints: latency-svc-wz8nv [571.723207ms]
  I0909 22:33:06.552366 22 service_latency.go:351] Created: latency-svc-swvzl
  I0909 22:33:06.574631 22 service_latency.go:358] Got endpoints: latency-svc-dgr2f [597.750952ms]
  I0909 22:33:06.614334 22 service_latency.go:351] Created: latency-svc-l6vdd
  I0909 22:33:06.629287 22 service_latency.go:358] Got endpoints: latency-svc-7w2bf [631.551115ms]
  I0909 22:33:06.651101 22 service_latency.go:351] Created: latency-svc-l522n
  I0909 22:33:06.671434 22 service_latency.go:358] Got endpoints: latency-svc-zs4nb [666.789483ms]
  I0909 22:33:06.699830 22 service_latency.go:351] Created: latency-svc-mmmb9
  I0909 22:33:06.717422 22 service_latency.go:358] Got endpoints: latency-svc-hvbmc [630.307889ms]
  E0909 22:33:06.732894      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:06.744405 22 service_latency.go:351] Created: latency-svc-gwlsn
  I0909 22:33:06.776554 22 service_latency.go:358] Got endpoints: latency-svc-2wbgs [688.783401ms]
  I0909 22:33:06.796457 22 service_latency.go:351] Created: latency-svc-rl2q6
  I0909 22:33:06.823974 22 service_latency.go:358] Got endpoints: latency-svc-m9b9c [736.661966ms]
  I0909 22:33:06.842276 22 service_latency.go:351] Created: latency-svc-rb2px
  I0909 22:33:06.867352 22 service_latency.go:358] Got endpoints: latency-svc-lh6fm [736.236825ms]
  I0909 22:33:06.891330 22 service_latency.go:351] Created: latency-svc-5cpsb
  I0909 22:33:06.925734 22 service_latency.go:358] Got endpoints: latency-svc-kq5qm [689.656026ms]
  I0909 22:33:06.962526 22 service_latency.go:351] Created: latency-svc-pgzdv
  I0909 22:33:06.970293 22 service_latency.go:358] Got endpoints: latency-svc-nknwr [789.139542ms]
  I0909 22:33:07.016591 22 service_latency.go:351] Created: latency-svc-hdp69
  I0909 22:33:07.024064 22 service_latency.go:358] Got endpoints: latency-svc-8rncs [743.485208ms]
  I0909 22:33:07.081059 22 service_latency.go:351] Created: latency-svc-9h656
  I0909 22:33:07.108416 22 service_latency.go:358] Got endpoints: latency-svc-g7wwl [780.367843ms]
  I0909 22:33:07.140512 22 service_latency.go:358] Got endpoints: latency-svc-cl79c [751.437292ms]
  I0909 22:33:07.168283 22 service_latency.go:351] Created: latency-svc-5lgpq
  I0909 22:33:07.185058 22 service_latency.go:351] Created: latency-svc-cf6dv
  I0909 22:33:07.184588 22 service_latency.go:358] Got endpoints: latency-svc-zsq6q [737.740161ms]
  I0909 22:33:07.221956 22 service_latency.go:351] Created: latency-svc-bnw66
  I0909 22:33:07.235653 22 service_latency.go:358] Got endpoints: latency-svc-mq24w [757.392619ms]
  I0909 22:33:07.263036 22 service_latency.go:351] Created: latency-svc-7nt6b
  I0909 22:33:07.267608 22 service_latency.go:358] Got endpoints: latency-svc-swvzl [742.684094ms]
  I0909 22:33:07.294028 22 service_latency.go:351] Created: latency-svc-kqs5d
  I0909 22:33:07.322526 22 service_latency.go:358] Got endpoints: latency-svc-l6vdd [747.830647ms]
  I0909 22:33:07.359715 22 service_latency.go:351] Created: latency-svc-fmbm7
  I0909 22:33:07.377973 22 service_latency.go:358] Got endpoints: latency-svc-l522n [748.6425ms]
  I0909 22:33:07.412578 22 service_latency.go:351] Created: latency-svc-qkv97
  I0909 22:33:07.430653 22 service_latency.go:358] Got endpoints: latency-svc-mmmb9 [759.175738ms]
  I0909 22:33:07.480975 22 service_latency.go:351] Created: latency-svc-zbrpc
  I0909 22:33:07.484973 22 service_latency.go:358] Got endpoints: latency-svc-gwlsn [766.950292ms]
  I0909 22:33:07.519411 22 service_latency.go:351] Created: latency-svc-lkckj
  I0909 22:33:07.522710 22 service_latency.go:358] Got endpoints: latency-svc-rl2q6 [746.097308ms]
  I0909 22:33:07.549457 22 service_latency.go:351] Created: latency-svc-rsksz
  I0909 22:33:07.572375 22 service_latency.go:358] Got endpoints: latency-svc-rb2px [748.344758ms]
  I0909 22:33:07.593014 22 service_latency.go:351] Created: latency-svc-5zwbb
  I0909 22:33:07.621457 22 service_latency.go:358] Got endpoints: latency-svc-5cpsb [752.066305ms]
  I0909 22:33:07.644604 22 service_latency.go:351] Created: latency-svc-qwqhg
  I0909 22:33:07.673114 22 service_latency.go:358] Got endpoints: latency-svc-pgzdv [747.284254ms]
  I0909 22:33:07.704705 22 service_latency.go:351] Created: latency-svc-szn4n
  I0909 22:33:07.723491 22 service_latency.go:358] Got endpoints: latency-svc-hdp69 [752.547276ms]
  E0909 22:33:07.734658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:07.766872 22 service_latency.go:351] Created: latency-svc-zmgnb
  I0909 22:33:07.770078 22 service_latency.go:358] Got endpoints: latency-svc-9h656 [735.107288ms]
  I0909 22:33:07.818805 22 service_latency.go:351] Created: latency-svc-8gd7k
  I0909 22:33:07.843317 22 service_latency.go:358] Got endpoints: latency-svc-5lgpq [722.663582ms]
  I0909 22:33:07.873038 22 service_latency.go:358] Got endpoints: latency-svc-cf6dv [730.497858ms]
  I0909 22:33:07.878282 22 service_latency.go:351] Created: latency-svc-kst67
  I0909 22:33:07.911428 22 service_latency.go:351] Created: latency-svc-dwlzx
  I0909 22:33:07.929822 22 service_latency.go:358] Got endpoints: latency-svc-bnw66 [743.688176ms]
  I0909 22:33:07.962867 22 service_latency.go:351] Created: latency-svc-vjh22
  I0909 22:33:07.977484 22 service_latency.go:358] Got endpoints: latency-svc-7nt6b [741.162425ms]
  I0909 22:33:08.001778 22 service_latency.go:351] Created: latency-svc-mhmjm
  I0909 22:33:08.021927 22 service_latency.go:358] Got endpoints: latency-svc-kqs5d [754.256614ms]
  I0909 22:33:08.045777 22 service_latency.go:351] Created: latency-svc-2jvpl
  I0909 22:33:08.075564 22 service_latency.go:358] Got endpoints: latency-svc-fmbm7 [752.439815ms]
  I0909 22:33:08.097823 22 service_latency.go:351] Created: latency-svc-db5hk
  I0909 22:33:08.128486 22 service_latency.go:358] Got endpoints: latency-svc-qkv97 [750.143875ms]
  I0909 22:33:08.147912 22 service_latency.go:351] Created: latency-svc-824mb
  I0909 22:33:08.198953 22 service_latency.go:358] Got endpoints: latency-svc-zbrpc [759.379836ms]
  I0909 22:33:08.224148 22 service_latency.go:358] Got endpoints: latency-svc-lkckj [738.894284ms]
  I0909 22:33:08.234044 22 service_latency.go:351] Created: latency-svc-kfm27
  I0909 22:33:08.253674 22 service_latency.go:351] Created: latency-svc-mmklk
  I0909 22:33:08.276374 22 service_latency.go:358] Got endpoints: latency-svc-rsksz [753.336659ms]
  I0909 22:33:08.302115 22 service_latency.go:351] Created: latency-svc-wrjkr
  I0909 22:33:08.319781 22 service_latency.go:358] Got endpoints: latency-svc-5zwbb [746.84725ms]
  I0909 22:33:08.341868 22 service_latency.go:351] Created: latency-svc-tbt8n
  I0909 22:33:08.369788 22 service_latency.go:358] Got endpoints: latency-svc-qwqhg [748.211775ms]
  I0909 22:33:08.390831 22 service_latency.go:351] Created: latency-svc-8rb72
  I0909 22:33:08.441719 22 service_latency.go:358] Got endpoints: latency-svc-szn4n [768.549596ms]
  I0909 22:33:08.488629 22 service_latency.go:351] Created: latency-svc-sp86h
  I0909 22:33:08.512765 22 service_latency.go:358] Got endpoints: latency-svc-zmgnb [788.611306ms]
  I0909 22:33:08.547620 22 service_latency.go:358] Got endpoints: latency-svc-8gd7k [771.62601ms]
  I0909 22:33:08.585104 22 service_latency.go:358] Got endpoints: latency-svc-kst67 [741.598085ms]
  I0909 22:33:08.633284 22 service_latency.go:358] Got endpoints: latency-svc-dwlzx [752.272523ms]
  I0909 22:33:08.669220 22 service_latency.go:351] Created: latency-svc-lzwcl
  I0909 22:33:08.669551 22 service_latency.go:351] Created: latency-svc-s8nvr
  I0909 22:33:08.681101 22 service_latency.go:358] Got endpoints: latency-svc-vjh22 [751.165528ms]
  I0909 22:33:08.715421 22 service_latency.go:351] Created: latency-svc-rvqg7
  I0909 22:33:08.724631 22 service_latency.go:358] Got endpoints: latency-svc-mhmjm [747.013368ms]
  I0909 22:33:08.727525 22 service_latency.go:351] Created: latency-svc-89phb
  E0909 22:33:08.736194      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:08.736316 22 service_latency.go:351] Created: latency-svc-6k2t6
  I0909 22:33:08.753920 22 service_latency.go:351] Created: latency-svc-c57rb
  I0909 22:33:08.766884 22 service_latency.go:358] Got endpoints: latency-svc-2jvpl [744.794919ms]
  I0909 22:33:08.791106 22 service_latency.go:351] Created: latency-svc-sgbj8
  I0909 22:33:08.817321 22 service_latency.go:358] Got endpoints: latency-svc-db5hk [741.705135ms]
  I0909 22:33:08.851089 22 service_latency.go:351] Created: latency-svc-pwzqm
  I0909 22:33:08.871958 22 service_latency.go:358] Got endpoints: latency-svc-824mb [743.022611ms]
  I0909 22:33:08.901777 22 service_latency.go:351] Created: latency-svc-4wvd4
  I0909 22:33:08.931042 22 service_latency.go:358] Got endpoints: latency-svc-kfm27 [731.63763ms]
  I0909 22:33:08.969844 22 service_latency.go:351] Created: latency-svc-v6z2s
  I0909 22:33:08.976493 22 service_latency.go:358] Got endpoints: latency-svc-mmklk [751.958811ms]
  I0909 22:33:09.005390 22 service_latency.go:351] Created: latency-svc-mjdwm
  I0909 22:33:09.020246 22 service_latency.go:358] Got endpoints: latency-svc-wrjkr [743.494993ms]
  I0909 22:33:09.050941 22 service_latency.go:351] Created: latency-svc-w5phz
  I0909 22:33:09.072232 22 service_latency.go:358] Got endpoints: latency-svc-tbt8n [751.092287ms]
  I0909 22:33:09.116407 22 service_latency.go:351] Created: latency-svc-l9lck
  I0909 22:33:09.130435 22 service_latency.go:358] Got endpoints: latency-svc-8rb72 [760.322268ms]
  I0909 22:33:09.171705 22 service_latency.go:351] Created: latency-svc-gfflz
  I0909 22:33:09.179877 22 service_latency.go:358] Got endpoints: latency-svc-sp86h [737.945028ms]
  I0909 22:33:09.206724 22 service_latency.go:351] Created: latency-svc-ztd99
  I0909 22:33:09.222892 22 service_latency.go:358] Got endpoints: latency-svc-s8nvr [697.844208ms]
  I0909 22:33:09.251342 22 service_latency.go:351] Created: latency-svc-jtq25
  I0909 22:33:09.277160 22 service_latency.go:358] Got endpoints: latency-svc-lzwcl [729.424999ms]
  I0909 22:33:09.299588 22 service_latency.go:351] Created: latency-svc-ztlh4
  I0909 22:33:09.322047 22 service_latency.go:358] Got endpoints: latency-svc-rvqg7 [728.104012ms]
  I0909 22:33:09.343555 22 service_latency.go:351] Created: latency-svc-xb7px
  I0909 22:33:09.370870 22 service_latency.go:358] Got endpoints: latency-svc-89phb [737.505915ms]
  I0909 22:33:09.397370 22 service_latency.go:351] Created: latency-svc-nrjb5
  I0909 22:33:09.419991 22 service_latency.go:358] Got endpoints: latency-svc-6k2t6 [737.420984ms]
  I0909 22:33:09.452446 22 service_latency.go:351] Created: latency-svc-z45x6
  I0909 22:33:09.475886 22 service_latency.go:358] Got endpoints: latency-svc-c57rb [750.733434ms]
  I0909 22:33:09.502434 22 service_latency.go:351] Created: latency-svc-5k9ts
  I0909 22:33:09.522697 22 service_latency.go:358] Got endpoints: latency-svc-sgbj8 [755.534624ms]
  I0909 22:33:09.550063 22 service_latency.go:351] Created: latency-svc-nz4vz
  I0909 22:33:09.572502 22 service_latency.go:358] Got endpoints: latency-svc-pwzqm [754.328739ms]
  I0909 22:33:09.603054 22 service_latency.go:351] Created: latency-svc-8g5x5
  I0909 22:33:09.626620 22 service_latency.go:358] Got endpoints: latency-svc-4wvd4 [753.538586ms]
  I0909 22:33:09.664229 22 service_latency.go:351] Created: latency-svc-glvwb
  I0909 22:33:09.679041 22 service_latency.go:358] Got endpoints: latency-svc-v6z2s [744.638456ms]
  I0909 22:33:09.711391 22 service_latency.go:351] Created: latency-svc-826k6
  I0909 22:33:09.729409 22 service_latency.go:358] Got endpoints: latency-svc-mjdwm [752.620301ms]
  E0909 22:33:09.737298      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:09.782749 22 service_latency.go:358] Got endpoints: latency-svc-w5phz [762.298774ms]
  I0909 22:33:09.787081 22 service_latency.go:351] Created: latency-svc-5s6wf
  I0909 22:33:09.826214 22 service_latency.go:358] Got endpoints: latency-svc-l9lck [753.691986ms]
  I0909 22:33:09.835337 22 service_latency.go:351] Created: latency-svc-6vs5l
  I0909 22:33:09.857748 22 service_latency.go:351] Created: latency-svc-vm2k2
  I0909 22:33:09.869975 22 service_latency.go:358] Got endpoints: latency-svc-gfflz [739.201021ms]
  I0909 22:33:09.893582 22 service_latency.go:351] Created: latency-svc-bhptk
  I0909 22:33:09.918153 22 service_latency.go:358] Got endpoints: latency-svc-ztd99 [736.320758ms]
  I0909 22:33:09.941495 22 service_latency.go:351] Created: latency-svc-jrfrk
  I0909 22:33:09.975462 22 service_latency.go:358] Got endpoints: latency-svc-jtq25 [750.31777ms]
  I0909 22:33:10.003328 22 service_latency.go:351] Created: latency-svc-9ct7z
  I0909 22:33:10.018470 22 service_latency.go:358] Got endpoints: latency-svc-ztlh4 [741.22438ms]
  I0909 22:33:10.042305 22 service_latency.go:351] Created: latency-svc-tfghg
  I0909 22:33:10.087415 22 service_latency.go:358] Got endpoints: latency-svc-xb7px [765.308087ms]
  I0909 22:33:10.117695 22 service_latency.go:358] Got endpoints: latency-svc-nrjb5 [746.774334ms]
  I0909 22:33:10.134910 22 service_latency.go:351] Created: latency-svc-xzlgq
  I0909 22:33:10.165091 22 service_latency.go:351] Created: latency-svc-d54qk
  I0909 22:33:10.174849 22 service_latency.go:358] Got endpoints: latency-svc-z45x6 [754.708189ms]
  I0909 22:33:10.192952 22 service_latency.go:351] Created: latency-svc-sp7d4
  I0909 22:33:10.254330 22 service_latency.go:358] Got endpoints: latency-svc-5k9ts [778.238263ms]
  I0909 22:33:10.279915 22 service_latency.go:358] Got endpoints: latency-svc-nz4vz [757.088169ms]
  I0909 22:33:10.289881 22 service_latency.go:351] Created: latency-svc-f5722
  I0909 22:33:10.303663 22 service_latency.go:351] Created: latency-svc-9xz2g
  I0909 22:33:10.321280 22 service_latency.go:358] Got endpoints: latency-svc-8g5x5 [748.608991ms]
  I0909 22:33:10.340262 22 service_latency.go:351] Created: latency-svc-kw85r
  I0909 22:33:10.385158 22 service_latency.go:358] Got endpoints: latency-svc-glvwb [757.587381ms]
  I0909 22:33:10.407674 22 service_latency.go:351] Created: latency-svc-6p8tv
  I0909 22:33:10.425509 22 service_latency.go:358] Got endpoints: latency-svc-826k6 [745.856898ms]
  I0909 22:33:10.449125 22 service_latency.go:351] Created: latency-svc-ffhz6
  I0909 22:33:10.479185 22 service_latency.go:358] Got endpoints: latency-svc-5s6wf [749.411533ms]
  I0909 22:33:10.534644 22 service_latency.go:358] Got endpoints: latency-svc-6vs5l [746.752622ms]
  I0909 22:33:10.541611 22 service_latency.go:351] Created: latency-svc-zxsw5
  I0909 22:33:10.571983 22 service_latency.go:351] Created: latency-svc-4gdsr
  I0909 22:33:10.580014 22 service_latency.go:358] Got endpoints: latency-svc-vm2k2 [753.068159ms]
  I0909 22:33:10.604728 22 service_latency.go:351] Created: latency-svc-phr6h
  I0909 22:33:10.622362 22 service_latency.go:358] Got endpoints: latency-svc-bhptk [751.731963ms]
  I0909 22:33:10.647120 22 service_latency.go:351] Created: latency-svc-xzjsv
  I0909 22:33:10.674651 22 service_latency.go:358] Got endpoints: latency-svc-jrfrk [755.776041ms]
  I0909 22:33:10.705603 22 service_latency.go:351] Created: latency-svc-nprkp
  I0909 22:33:10.725319 22 service_latency.go:358] Got endpoints: latency-svc-9ct7z [749.793855ms]
  E0909 22:33:10.739162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:10.745716 22 service_latency.go:351] Created: latency-svc-ps5p9
  I0909 22:33:10.774099 22 service_latency.go:358] Got endpoints: latency-svc-tfghg [755.58522ms]
  I0909 22:33:10.797116 22 service_latency.go:351] Created: latency-svc-w75cg
  I0909 22:33:10.822322 22 service_latency.go:358] Got endpoints: latency-svc-xzlgq [734.790627ms]
  I0909 22:33:10.847252 22 service_latency.go:351] Created: latency-svc-grnvw
  I0909 22:33:10.882560 22 service_latency.go:358] Got endpoints: latency-svc-d54qk [764.808522ms]
  I0909 22:33:10.906582 22 service_latency.go:351] Created: latency-svc-mtj97
  I0909 22:33:10.926266 22 service_latency.go:358] Got endpoints: latency-svc-sp7d4 [750.728299ms]
  I0909 22:33:10.960488 22 service_latency.go:351] Created: latency-svc-gsp65
  I0909 22:33:10.969472 22 service_latency.go:358] Got endpoints: latency-svc-f5722 [715.037079ms]
  I0909 22:33:10.997937 22 service_latency.go:351] Created: latency-svc-dfxv9
  I0909 22:33:11.028152 22 service_latency.go:358] Got endpoints: latency-svc-9xz2g [745.671997ms]
  I0909 22:33:11.057112 22 service_latency.go:351] Created: latency-svc-qprvm
  I0909 22:33:11.086731 22 service_latency.go:358] Got endpoints: latency-svc-kw85r [765.409505ms]
  I0909 22:33:11.109537 22 service_latency.go:351] Created: latency-svc-zpc8z
  I0909 22:33:11.117393 22 service_latency.go:358] Got endpoints: latency-svc-6p8tv [731.590684ms]
  I0909 22:33:11.140455 22 service_latency.go:351] Created: latency-svc-qfdr9
  I0909 22:33:11.168724 22 service_latency.go:358] Got endpoints: latency-svc-ffhz6 [741.958469ms]
  I0909 22:33:11.190619 22 service_latency.go:351] Created: latency-svc-pt657
  I0909 22:33:11.218457 22 service_latency.go:358] Got endpoints: latency-svc-zxsw5 [735.696702ms]
  I0909 22:33:11.243819 22 service_latency.go:351] Created: latency-svc-lj7tp
  I0909 22:33:11.281190 22 service_latency.go:358] Got endpoints: latency-svc-4gdsr [745.614026ms]
  I0909 22:33:11.325391 22 service_latency.go:351] Created: latency-svc-9dp7k
  I0909 22:33:11.326669 22 service_latency.go:358] Got endpoints: latency-svc-phr6h [745.129753ms]
  I0909 22:33:11.374304 22 service_latency.go:358] Got endpoints: latency-svc-xzjsv [751.30962ms]
  I0909 22:33:11.375645 22 service_latency.go:351] Created: latency-svc-8q6ct
  I0909 22:33:11.400747 22 service_latency.go:351] Created: latency-svc-68fnd
  I0909 22:33:11.424024 22 service_latency.go:358] Got endpoints: latency-svc-nprkp [742.686052ms]
  I0909 22:33:11.445319 22 service_latency.go:351] Created: latency-svc-rz4jg
  I0909 22:33:11.474440 22 service_latency.go:358] Got endpoints: latency-svc-ps5p9 [748.532188ms]
  I0909 22:33:11.514738 22 service_latency.go:351] Created: latency-svc-w8vx5
  I0909 22:33:11.529090 22 service_latency.go:358] Got endpoints: latency-svc-w75cg [754.942877ms]
  I0909 22:33:11.549895 22 service_latency.go:351] Created: latency-svc-kg7mk
  I0909 22:33:11.578904 22 service_latency.go:358] Got endpoints: latency-svc-grnvw [752.532875ms]
  I0909 22:33:11.601346 22 service_latency.go:351] Created: latency-svc-zg49p
  I0909 22:33:11.623992 22 service_latency.go:358] Got endpoints: latency-svc-mtj97 [741.361685ms]
  I0909 22:33:11.642887 22 service_latency.go:351] Created: latency-svc-cbnl9
  I0909 22:33:11.669694 22 service_latency.go:358] Got endpoints: latency-svc-gsp65 [742.062288ms]
  I0909 22:33:11.690899 22 service_latency.go:351] Created: latency-svc-c9kz6
  I0909 22:33:11.719415 22 service_latency.go:358] Got endpoints: latency-svc-dfxv9 [748.364176ms]
  E0909 22:33:11.741157      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:11.771479 22 service_latency.go:351] Created: latency-svc-j6vvm
  I0909 22:33:11.772963 22 service_latency.go:358] Got endpoints: latency-svc-qprvm [744.620469ms]
  I0909 22:33:11.810468 22 service_latency.go:351] Created: latency-svc-ztj74
  I0909 22:33:11.818657 22 service_latency.go:358] Got endpoints: latency-svc-zpc8z [731.840222ms]
  I0909 22:33:11.842621 22 service_latency.go:351] Created: latency-svc-xdbxs
  I0909 22:33:11.874584 22 service_latency.go:358] Got endpoints: latency-svc-qfdr9 [754.291582ms]
  I0909 22:33:11.905993 22 service_latency.go:351] Created: latency-svc-dvcdz
  I0909 22:33:11.921857 22 service_latency.go:358] Got endpoints: latency-svc-pt657 [753.084067ms]
  I0909 22:33:11.972717 22 service_latency.go:351] Created: latency-svc-ttvgw
  I0909 22:33:11.977106 22 service_latency.go:358] Got endpoints: latency-svc-lj7tp [758.541411ms]
  I0909 22:33:12.020416 22 service_latency.go:351] Created: latency-svc-km25z
  I0909 22:33:12.025890 22 service_latency.go:358] Got endpoints: latency-svc-9dp7k [740.322079ms]
  I0909 22:33:12.059185 22 service_latency.go:351] Created: latency-svc-fqh2r
  I0909 22:33:12.072614 22 service_latency.go:358] Got endpoints: latency-svc-8q6ct [745.802344ms]
  I0909 22:33:12.110886 22 service_latency.go:351] Created: latency-svc-72g6j
  I0909 22:33:12.118307 22 service_latency.go:358] Got endpoints: latency-svc-68fnd [743.767355ms]
  I0909 22:33:12.163702 22 service_latency.go:351] Created: latency-svc-n7h7m
  I0909 22:33:12.186725 22 service_latency.go:358] Got endpoints: latency-svc-rz4jg [762.594609ms]
  I0909 22:33:12.209842 22 service_latency.go:351] Created: latency-svc-5vsdg
  I0909 22:33:12.220030 22 service_latency.go:358] Got endpoints: latency-svc-w8vx5 [745.489932ms]
  I0909 22:33:12.257892 22 service_latency.go:351] Created: latency-svc-pj2cz
  I0909 22:33:12.277167 22 service_latency.go:358] Got endpoints: latency-svc-kg7mk [747.429461ms]
  I0909 22:33:12.317068 22 service_latency.go:351] Created: latency-svc-d2nw2
  I0909 22:33:12.328232 22 service_latency.go:358] Got endpoints: latency-svc-zg49p [748.455585ms]
  I0909 22:33:12.346314 22 service_latency.go:351] Created: latency-svc-bbbcq
  I0909 22:33:12.371405 22 service_latency.go:358] Got endpoints: latency-svc-cbnl9 [746.475026ms]
  I0909 22:33:12.411736 22 service_latency.go:351] Created: latency-svc-b472l
  I0909 22:33:12.423600 22 service_latency.go:358] Got endpoints: latency-svc-c9kz6 [753.827489ms]
  I0909 22:33:12.448015 22 service_latency.go:351] Created: latency-svc-lzbcd
  I0909 22:33:12.471218 22 service_latency.go:358] Got endpoints: latency-svc-j6vvm [751.75931ms]
  I0909 22:33:12.498755 22 service_latency.go:351] Created: latency-svc-rxgq2
  I0909 22:33:12.522382 22 service_latency.go:358] Got endpoints: latency-svc-ztj74 [749.313728ms]
  I0909 22:33:12.548029 22 service_latency.go:351] Created: latency-svc-dttbv
  I0909 22:33:12.569359 22 service_latency.go:358] Got endpoints: latency-svc-xdbxs [750.487883ms]
  I0909 22:33:12.601083 22 service_latency.go:351] Created: latency-svc-gwgh7
  I0909 22:33:12.621884 22 service_latency.go:358] Got endpoints: latency-svc-dvcdz [746.804327ms]
  I0909 22:33:12.662488 22 service_latency.go:351] Created: latency-svc-6b89c
  I0909 22:33:12.669888 22 service_latency.go:358] Got endpoints: latency-svc-ttvgw [747.983891ms]
  I0909 22:33:12.697328 22 service_latency.go:351] Created: latency-svc-fnvwq
  I0909 22:33:12.719173 22 service_latency.go:358] Got endpoints: latency-svc-km25z [741.995344ms]
  E0909 22:33:12.763399      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:12.775433 22 service_latency.go:358] Got endpoints: latency-svc-fqh2r [748.179382ms]
  I0909 22:33:12.784985 22 service_latency.go:351] Created: latency-svc-zdfqh
  I0909 22:33:12.811969 22 service_latency.go:351] Created: latency-svc-ht4pn
  I0909 22:33:12.822013 22 service_latency.go:358] Got endpoints: latency-svc-72g6j [746.739546ms]
  I0909 22:33:12.840299 22 service_latency.go:351] Created: latency-svc-5dj4m
  I0909 22:33:12.871633 22 service_latency.go:358] Got endpoints: latency-svc-n7h7m [744.236374ms]
  I0909 22:33:12.892257 22 service_latency.go:351] Created: latency-svc-l48c2
  I0909 22:33:12.920872 22 service_latency.go:358] Got endpoints: latency-svc-5vsdg [733.680477ms]
  I0909 22:33:12.981341 22 service_latency.go:358] Got endpoints: latency-svc-pj2cz [761.194181ms]
  I0909 22:33:13.031836 22 service_latency.go:358] Got endpoints: latency-svc-d2nw2 [754.122769ms]
  I0909 22:33:13.073459 22 service_latency.go:358] Got endpoints: latency-svc-bbbcq [742.957889ms]
  I0909 22:33:13.136998 22 service_latency.go:358] Got endpoints: latency-svc-b472l [758.84926ms]
  I0909 22:33:13.174042 22 service_latency.go:358] Got endpoints: latency-svc-lzbcd [746.925976ms]
  I0909 22:33:13.227951 22 service_latency.go:358] Got endpoints: latency-svc-rxgq2 [755.553385ms]
  I0909 22:33:13.275273 22 service_latency.go:358] Got endpoints: latency-svc-dttbv [751.342566ms]
  I0909 22:33:13.326080 22 service_latency.go:358] Got endpoints: latency-svc-gwgh7 [755.060222ms]
  I0909 22:33:13.371726 22 service_latency.go:358] Got endpoints: latency-svc-6b89c [749.784408ms]
  I0909 22:33:13.425171 22 service_latency.go:358] Got endpoints: latency-svc-fnvwq [755.136942ms]
  I0909 22:33:13.475964 22 service_latency.go:358] Got endpoints: latency-svc-zdfqh [756.509377ms]
  I0909 22:33:13.523314 22 service_latency.go:358] Got endpoints: latency-svc-ht4pn [746.903855ms]
  I0909 22:33:13.573365 22 service_latency.go:358] Got endpoints: latency-svc-5dj4m [751.207034ms]
  I0909 22:33:13.619592 22 service_latency.go:358] Got endpoints: latency-svc-l48c2 [747.365066ms]
  I0909 22:33:13.619837 22 service_latency.go:114] Latencies: [38.323652ms 83.557665ms 88.968069ms 104.467249ms 109.788423ms 114.824087ms 116.538394ms 128.910529ms 142.728341ms 148.527438ms 153.970612ms 175.78292ms 177.591628ms 195.80416ms 195.87101ms 196.529434ms 224.78526ms 226.802639ms 229.791022ms 233.325048ms 240.022788ms 240.161409ms 276.135642ms 277.819568ms 278.584532ms 279.084044ms 282.887652ms 288.676936ms 297.392517ms 297.972719ms 298.295611ms 298.840633ms 301.397104ms 301.675495ms 302.137468ms 314.880965ms 316.482153ms 329.546861ms 332.003122ms 341.998837ms 344.909279ms 345.657864ms 356.05706ms 369.794112ms 379.712186ms 385.423672ms 405.632403ms 417.447356ms 420.064668ms 422.84829ms 436.34699ms 445.07884ms 461.679535ms 497.500674ms 514.814113ms 520.696588ms 545.751591ms 571.723207ms 597.750952ms 630.307889ms 631.551115ms 666.789483ms 688.783401ms 689.656026ms 697.844208ms 715.037079ms 722.663582ms 728.104012ms 729.424999ms 730.497858ms 731.590684ms 731.63763ms 731.840222ms 733.680477ms 734.790627ms 735.107288ms 735.696702ms 736.236825ms 736.320758ms 736.661966ms 737.420984ms 737.505915ms 737.740161ms 737.945028ms 738.894284ms 739.201021ms 740.322079ms 741.162425ms 741.22438ms 741.361685ms 741.598085ms 741.705135ms 741.958469ms 741.995344ms 742.062288ms 742.684094ms 742.686052ms 742.957889ms 743.022611ms 743.485208ms 743.494993ms 743.688176ms 743.767355ms 744.236374ms 744.620469ms 744.638456ms 744.794919ms 745.129753ms 745.489932ms 745.614026ms 745.671997ms 745.802344ms 745.856898ms 746.097308ms 746.475026ms 746.739546ms 746.752622ms 746.774334ms 746.804327ms 746.84725ms 746.903855ms 746.925976ms 747.013368ms 747.284254ms 747.365066ms 747.429461ms 747.830647ms 747.983891ms 748.179382ms 748.211775ms 748.344758ms 748.364176ms 748.455585ms 748.532188ms 748.608991ms 748.6425ms 749.313728ms 749.411533ms 749.784408ms 749.793855ms 750.143875ms 750.31777ms 750.487883ms 750.728299ms 750.733434ms 751.092287ms 751.165528ms 751.207034ms 751.30962ms 751.342566ms 751.437292ms 751.731963ms 751.75931ms 751.958811ms 752.066305ms 752.272523ms 752.439815ms 752.532875ms 752.547276ms 752.620301ms 753.068159ms 753.084067ms 753.336659ms 753.538586ms 753.691986ms 753.827489ms 754.122769ms 754.256614ms 754.291582ms 754.328739ms 754.708189ms 754.942877ms 755.060222ms 755.136942ms 755.534624ms 755.553385ms 755.58522ms 755.776041ms 756.509377ms 757.088169ms 757.392619ms 757.587381ms 758.541411ms 758.84926ms 759.175738ms 759.379836ms 760.322268ms 761.194181ms 762.298774ms 762.594609ms 764.808522ms 765.308087ms 765.409505ms 766.950292ms 768.549596ms 771.62601ms 778.238263ms 780.367843ms 788.611306ms 789.139542ms]
  I0909 22:33:13.619861 22 service_latency.go:118] 50 %ile: 743.494993ms
  I0909 22:33:13.619875 22 service_latency.go:119] 90 %ile: 757.392619ms
  I0909 22:33:13.619888 22 service_latency.go:120] 99 %ile: 788.611306ms
  I0909 22:33:13.619901 22 service_latency.go:121] Total sample count: 200
  I0909 22:33:13.620592 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9928" for this suite. @ 09/09/25 22:33:13.635
• [12.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/09/25 22:33:13.655
  I0909 22:33:13.655866 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pods @ 09/09/25 22:33:13.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:33:13.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:33:13.695
  E0909 22:33:13.742210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:14.742699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:15.743059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:16.744163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:17.744554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:18.753763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:19.756986      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:33:19.85
  I0909 22:33:19.859068 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod client-envvars-b7cfb79f-85f4-41c5-a5e5-3849202c13f6 container env3cont: <nil>
  STEP: delete the pod @ 09/09/25 22:33:19.87
  I0909 22:33:19.911470 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4849" for this suite. @ 09/09/25 22:33:19.93
• [6.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/09/25 22:33:19.962
  I0909 22:33:19.964613 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:33:19.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:33:20.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:33:20.019
  STEP: Creating configMap with name projected-configmap-test-volume-map-2d9193df-4a80-4635-9155-8ef52ce56120 @ 09/09/25 22:33:20.024
  STEP: Creating a pod to test consume configMaps @ 09/09/25 22:33:20.037
  E0909 22:33:20.750332      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:21.751061      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:22.754313      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:23.755430      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:33:24.119
  I0909 22:33:24.131224 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-configmaps-585507e3-8e6c-4219-92d6-fce08e1e906b container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 22:33:24.142
  I0909 22:33:24.197565 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1062" for this suite. @ 09/09/25 22:33:24.21
• [4.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 09/09/25 22:33:24.265
  I0909 22:33:24.265608 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:33:24.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:33:24.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:33:24.307
  STEP: Setting up server cert @ 09/09/25 22:33:24.367
  E0909 22:33:24.769459      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:33:25.455
  STEP: Deploying the webhook pod @ 09/09/25 22:33:25.463
  STEP: Wait for the deployment to be ready @ 09/09/25 22:33:25.496
  I0909 22:33:25.518827 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:33:25.770117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:26.777337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:33:27.543
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:33:27.576
  E0909 22:33:27.785054      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:28.577005 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/09/25 22:33:28.742
  E0909 22:33:28.781294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:28.802300 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:28.924774 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:29.040916 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:29.127772 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:29.243239 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:29.337883 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:29.423526 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:29.530641 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:29.638286 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:29.725785 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0909 22:33:29.782214      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:29.835456 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:29.934341 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:30.031067 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:30.124606 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:30.232896 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:30.337361 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:30.427122 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:30.541439 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:30.632184 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:30.729298 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0909 22:33:30.782707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:30.834688 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:30.922376 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:31.030459 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:31.122958 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:31.225928 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:31.355393 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:31.430298 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:31.527484 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:31.639959 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:31.744206 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0909 22:33:31.783646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:31.829537 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:31.929947 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:32.037604 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:32.128893 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:32.234485 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:32.338250 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:32.438813 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:32.538061 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:32.657190 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  I0909 22:33:32.736589 22 webhook.go:2704] Waiting for webhook configuration to be ready...
  E0909 22:33:32.788991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/09/25 22:33:32.875
  STEP: Deleting the collection of validation webhooks @ 09/09/25 22:33:32.954
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/09/25 22:33:33.042
  I0909 22:33:33.162608 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-515" for this suite. @ 09/09/25 22:33:33.176
  STEP: Destroying namespace "webhook-markers-9166" for this suite. @ 09/09/25 22:33:33.206
• [8.947 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 09/09/25 22:33:33.216
  I0909 22:33:33.216762 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 22:33:33.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:33:33.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:33:33.241
  I0909 22:33:33.243319 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-6324 version'
  I0909 22:33:33.315423 22 builder.go:146] stderr: ""
  I0909 22:33:33.315487 22 builder.go:147] stdout: "Client Version: v1.33.4\nKustomize Version: v5.6.0\nServer Version: v1.33.4+rke2r1\n"
  I0909 22:33:33.316373 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6324" for this suite. @ 09/09/25 22:33:33.321
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/09/25 22:33:33.333
  I0909 22:33:33.333323 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:33:33.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:33:33.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:33:33.358
  STEP: Setting up server cert @ 09/09/25 22:33:33.383
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:33:33.631
  STEP: Deploying the webhook pod @ 09/09/25 22:33:33.639
  STEP: Wait for the deployment to be ready @ 09/09/25 22:33:33.655
  I0909 22:33:33.672205 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:33:33.789161      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:34.789233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:35.690418 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 33, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 33, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 33, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 33, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:33:35.790629      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:36.790802      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:33:37.696
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:33:37.735
  E0909 22:33:37.791562      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:38.740898 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0909 22:33:38.760970 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:33:38.792385      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1840-crds.webhook.example.com via the AdmissionRegistration API @ 09/09/25 22:33:39.29
  STEP: Creating a custom resource while v1 is storage version @ 09/09/25 22:33:39.327
  E0909 22:33:39.793110      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:40.795052      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/09/25 22:33:41.388
  STEP: Patching the custom resource while v2 is storage version @ 09/09/25 22:33:41.436
  E0909 22:33:41.795448      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:42.082917 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3327" for this suite. @ 09/09/25 22:33:42.091
  STEP: Destroying namespace "webhook-markers-4417" for this suite. @ 09/09/25 22:33:42.106
• [8.782 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/09/25 22:33:42.116
  I0909 22:33:42.116380 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename var-expansion @ 09/09/25 22:33:42.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:33:42.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:33:42.151
  E0909 22:33:42.800935      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:43.797350      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:44.185222 22 delete.go:62] Deleting pod "var-expansion-920789fb-ab1e-4255-aef7-e215c554650e" in namespace "var-expansion-2392"
  I0909 22:33:44.204086 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-920789fb-ab1e-4255-aef7-e215c554650e" to be fully deleted
  E0909 22:33:44.797725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:45.798024      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:46.798725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:47.800999      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:48.223960 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2392" for this suite. @ 09/09/25 22:33:48.233
• [6.136 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/09/25 22:33:48.259
  I0909 22:33:48.260406 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename containers @ 09/09/25 22:33:48.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:33:48.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:33:48.298
  STEP: Creating a pod to test override arguments @ 09/09/25 22:33:48.303
  E0909 22:33:48.800304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:49.801281      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:50.802076      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:51.802325      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:33:52.34
  I0909 22:33:52.346323 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod client-containers-dbe8b25a-3517-46f9-8f3f-8042b1f18546 container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 22:33:52.365
  I0909 22:33:52.413828 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1564" for this suite. @ 09/09/25 22:33:52.421
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/09/25 22:33:52.441
  I0909 22:33:52.441639 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replicaset @ 09/09/25 22:33:52.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:33:52.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:33:52.464
  STEP: Create a Replicaset @ 09/09/25 22:33:52.475
  STEP: Verify that the required pods have come up. @ 09/09/25 22:33:52.49
  I0909 22:33:52.510391 22 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/09/25 22:33:52.51
  E0909 22:33:52.805436      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:53.806883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/09/25 22:33:54.524
  I0909 22:33:54.529112 22 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/09/25 22:33:54.529
  I0909 22:33:54.541159 22 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/09/25 22:33:54.542
  I0909 22:33:54.548282 22 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0909 22:33:54.548997 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0909 22:33:54.549730 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0909 22:33:54.550565 22 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0909 22:33:54.550644 22 replica_set.go:688] Found replicaset test-rs in namespace replicaset-1319 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0909 22:33:54.550666 22 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/09/25 22:33:54.55
  I0909 22:33:54.550706 22 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0909 22:33:54.565641 22 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/09/25 22:33:54.566
  I0909 22:33:54.573525 22 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0909 22:33:54.575831 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0909 22:33:54.577284 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0909 22:33:54.579475 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0909 22:33:54.580457 22 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-1319 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0909 22:33:54.582259 22 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0909 22:33:54.583622 22 replica_set.go:724] Found replicaset test-rs in namespace replicaset-1319 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0909 22:33:54.583801 22 replica_set.go:735] Replicaset test-rs has a patched status
  I0909 22:33:54.585448 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1319" for this suite. @ 09/09/25 22:33:54.593
• [2.160 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/09/25 22:33:54.605
  I0909 22:33:54.605663 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename deployment @ 09/09/25 22:33:54.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:33:54.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:33:54.644
  I0909 22:33:54.656000 22 deployment.go:1664] Creating simple deployment test-new-deployment
  I0909 22:33:54.677609 22 deployment.go:223] new replicaset for deployment "test-new-deployment" is yet to be created
  E0909 22:33:54.807781      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:55.808437      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/09/25 22:33:56.697
  STEP: updating a scale subresource @ 09/09/25 22:33:56.704
  STEP: verifying the deployment Spec.Replicas was modified @ 09/09/25 22:33:56.719
  STEP: Patch a scale subresource @ 09/09/25 22:33:56.734
  E0909 22:33:56.810191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:33:56.814002 22 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9741",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82502092-858c-4eda-9b13-6a3aecf41d16",
      ResourceVersion: (string) (len=5) "59235",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893054034,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0909 22:33:56.855517 22 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9741",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2b65e2b-b7d6-4493-a07b-4f69340649f4",
      ResourceVersion: (string) (len=5) "59241",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893054034,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "82502092-858c-4eda-9b13-6a3aecf41d16",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 32 35 30 32 30  39 32 2d 38 35 38 63 2d  |\"82502092-858c-|
              00000120  34 65 64 61 2d 39 62 31  33 2d 36 61 33 61 65 63  |4eda-9b13-6a3aec|
              00000130  66 34 31 64 31 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f41d16\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0909 22:33:56.884474 22 deployment.go:68] Pod "test-new-deployment-685b768f58-kbhs6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-kbhs6",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9741",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aefc44c5-bf42-4187-a34c-93a5e9fdeedf",
      ResourceVersion: (string) (len=5) "59222",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893054034,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.167/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.167\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2c3cb452558ef5927045fe4fc3354e6faa01ccd69a71e70d73e4e6900a3b31b7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.167/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "e2b65e2b-b7d6-4493-a07b-4f69340649f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  62 36 35 65 32 62 2d 62  |d\":\"e2b65e2b-b|
              00000090  37 64 36 2d 34 34 39 33  2d 61 30 37 62 2d 34 66  |7d6-4493-a07b-4f|
              000000a0  36 39 33 34 30 36 34 39  66 34 5c 22 7d 22 3a 7b  |69340649f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 36  37 5c 22 7d 22 3a 7b 22  |.42.1.167\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8lbmd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8lbmd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=11) "10.42.1.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893054034,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63893054035,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ab168bd603d53fe7276182f6e46122e4b4f49c14754cd5ad40a433bfc816cca3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8lbmd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 22:33:56.893658 22 deployment.go:68] Pod "test-new-deployment-685b768f58-nbhpq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-nbhpq",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9741",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1861287-d180-43ae-98d5-b552c0ada437",
      ResourceVersion: (string) (len=5) "59244",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893054036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "e2b65e2b-b7d6-4493-a07b-4f69340649f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  62 36 35 65 32 62 2d 62  |d\":\"e2b65e2b-b|
              00000090  37 64 36 2d 34 34 39 33  2d 61 30 37 62 2d 34 66  |7d6-4493-a07b-4f|
              000000a0  36 39 33 34 30 36 34 39  66 34 5c 22 7d 22 3a 7b  |69340649f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gvrrz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gvrrz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 22:33:56.895411 22 deployment.go:68] Pod "test-new-deployment-685b768f58-sdhkt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-sdhkt",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9741",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67737f4c-9b66-432a-8ae3-3d7e97242c7f",
      ResourceVersion: (string) (len=5) "59242",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893054036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "e2b65e2b-b7d6-4493-a07b-4f69340649f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  62 36 35 65 32 62 2d 62  |d\":\"e2b65e2b-b|
              00000090  37 64 36 2d 34 34 39 33  2d 61 30 37 62 2d 34 66  |7d6-4493-a07b-4f|
              000000a0  36 39 33 34 30 36 34 39  66 34 5c 22 7d 22 3a 7b  |69340649f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-27lfl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-27lfl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63893054036,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63893054036,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-27lfl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0909 22:33:56.911128 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9741" for this suite. @ 09/09/25 22:33:56.928
• [2.345 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/09/25 22:33:56.946
  I0909 22:33:56.946780 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename cronjob @ 09/09/25 22:33:56.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:33:56.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:33:56.971
  STEP: Creating a suspended cronjob @ 09/09/25 22:33:56.975
  STEP: Ensuring no jobs are scheduled @ 09/09/25 22:33:56.982
  E0909 22:33:57.812403      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:58.813561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:33:59.814336      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:00.816166      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:01.816734      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:02.817993      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:03.819059      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:04.820228      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:05.820363      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:06.821184      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:07.822069      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:08.823011      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:09.823220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:10.825269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:11.825563      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:12.827045      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:13.827873      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:14.828419      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:15.828744      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:16.829211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:17.829364      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:18.829923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:19.830171      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:20.830825      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:21.832443      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:22.833154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:23.834276      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:24.834720      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:25.835280      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:26.835464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:27.836753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:28.837179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:29.837597      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:30.837845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:31.838187      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:32.838362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:33.839507      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:34.839707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:35.840153      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:36.841646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:37.842728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:38.843761      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:39.844159      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:40.844269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:41.845248      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:42.845002      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:43.846379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:44.846359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:45.847445      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:46.847314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:47.848775      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:48.849160      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:49.849871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:50.850375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:51.851295      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:52.851620      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:53.852362      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:54.852622      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:55.852708      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:56.853128      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:57.856163      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:58.856559      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:34:59.857810      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:00.857445      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:01.858049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:02.865717      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:03.860085      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:04.860305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:05.860944      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:06.861716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:07.863186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:08.863768      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:09.863907      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:10.864145      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:11.864453      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:12.865081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:13.865354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:14.866551      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:15.866236      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:16.867278      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:17.878509      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:18.879538      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:19.880195      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:20.880314      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:21.881211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:22.882161      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:23.883078      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:24.883567      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:25.883544      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:26.883885      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:27.885259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:28.885601      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:29.886285      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:30.887152      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:31.887662      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:32.888960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:33.889257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:34.889839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:35.890244      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:36.890458      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:37.893063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:38.894433      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:39.894798      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:40.895049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:41.896251      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:42.897063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:43.898124      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:44.898234      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:45.899359      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:46.900324      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:47.901470      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:48.901979      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:49.902181      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:50.902412      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:51.902643      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:52.902777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:53.903589      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:54.904053      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:55.903954      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:56.904623      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:57.905891      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:58.908338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:35:59.910842      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:00.909746      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:01.910393      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:02.911566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:03.911634      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:04.912094      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:05.912253      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:06.912543      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:07.912702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:08.913725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:09.913870      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:10.914426      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:11.915115      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:12.915431      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:13.916638      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:14.917043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:15.917766      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:16.918665      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:17.921023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:18.921242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:19.921566      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:20.921758      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:21.921976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:22.922097      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:23.923782      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:24.924279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:25.924755      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:26.925428      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:27.925410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:28.925648      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:29.925918      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:30.927252      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:31.928091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:32.928349      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:33.929262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:34.930517      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:35.931508      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:36.932475      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:37.933510      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:38.933610      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:39.934284      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:40.934418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:41.935229      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:42.935360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:43.935554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:44.937154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:45.936716      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:46.937467      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:47.937578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:48.938765      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:49.939003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:50.939095      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:51.939365      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:52.940328      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:53.941542      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:54.942856      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:55.942569      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:56.943809      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:57.944573      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:58.944735      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:36:59.946902      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:00.945126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:01.946049      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:02.947354      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:03.947466      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:04.948318      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:05.949337      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:06.949626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:07.950449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:08.950899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:09.951888      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:10.952106      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:11.952244      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:12.952500      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:13.952960      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:14.953220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:15.953632      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:16.953886      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:17.953970      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:18.954854      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:19.955578      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:20.956239      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:21.956561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:22.957117      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:23.957309      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:24.957500      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:25.958338      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:26.959418      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:27.959741      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:28.960707      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:29.961257      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:30.961908      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:31.962619      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:32.962781      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:33.963353      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:34.963931      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:35.964265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:36.965067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:37.965703      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:38.967375      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:39.968315      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:40.972920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:41.971345      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:42.971432      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:43.971576      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:44.972269      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:45.972694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:46.972661      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:47.973283      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:48.973420      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:49.974237      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:50.974519      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:51.976036      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:52.976111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:53.976395      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:54.977036      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:55.977700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:56.978746      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:57.980241      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:58.980495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:37:59.981272      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:00.985404      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:01.985600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:02.985729      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:03.986677      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:04.987185      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:05.988108      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:06.989186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:07.989409      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:08.990286      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:09.990516      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:10.990379      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:11.991044      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:12.991554      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:13.992189      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:14.992667      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:15.993260      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:16.993482      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:17.994593      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:18.995680      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:19.995949      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:20.996466      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:21.996531      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:22.997066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:23.997598      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:24.997871      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:26.001033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:27.001256      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:28.001360      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:29.002067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:30.003183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:31.003662      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:32.004243      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:33.005019      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:34.005907      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:35.006464      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:36.008550      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:37.008970      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:38.009543      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:39.010709      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:40.010839      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:41.011292      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:42.012162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:43.012603      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:44.013536      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:45.013381      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:46.013665      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:47.014250      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:48.013753      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:49.016040      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:50.017072      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:51.017042      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:52.017173      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:53.017288      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:54.017511      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:55.018449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:56.018669      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/09/25 22:38:56.982
  STEP: Removing cronjob @ 09/09/25 22:38:56.988
  I0909 22:38:56.996556 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9587" for this suite. @ 09/09/25 22:38:57.004
• [300.069 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 09/09/25 22:38:57.017
  I0909 22:38:57.017725 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:38:57.018827      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename services @ 09/09/25 22:38:57.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:38:57.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:38:57.049
  STEP: creating service nodeport-test with type=NodePort in namespace services-2706 @ 09/09/25 22:38:57.052
  I0909 22:38:57.124758 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0909 22:38:58.025018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:38:59.025580      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:38:59.129123 22 resource.go:361] Creating new exec pod
  E0909 22:39:00.025756      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:01.026162      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:39:01.175335 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2706 exec execpodzsz52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0909 22:39:01.431998 22 builder.go:146] stderr: "+ echo+ nc -v -t -w 2 nodeport-test 80\n hostName\nConnection to nodeport-test (10.43.233.207) 80 port [tcp/http] succeeded!\n"
  I0909 22:39:01.432089 22 builder.go:147] stdout: ""
  E0909 22:39:02.028112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:39:02.176119 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2706 exec execpodzsz52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0909 22:39:02.496986 22 builder.go:146] stderr: "+ + ncecho hostName\n -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.233.207) 80 port [tcp/http] succeeded!\n"
  I0909 22:39:02.497625 22 builder.go:147] stdout: "nodeport-test-7dfb4bddf4-n9pzx"
  I0909 22:39:02.498526 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2706 exec execpodzsz52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.233.207 80'
  I0909 22:39:02.920142 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.233.207 80\nConnection to 10.43.233.207 80 port [tcp/http] succeeded!\n"
  I0909 22:39:02.920179 22 builder.go:147] stdout: "nodeport-test-7dfb4bddf4-9kh8q"
  I0909 22:39:02.920244 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2706 exec execpodzsz52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 30165'
  E0909 22:39:03.029226      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:39:03.156374 22 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 192.168.150.103 30165\nConnection to 192.168.150.103 30165 port [tcp/*] succeeded!\n"
  I0909 22:39:03.156429 22 builder.go:147] stdout: "nodeport-test-7dfb4bddf4-n9pzx"
  I0909 22:39:03.156512 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=services-2706 exec execpodzsz52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.105 30165'
  I0909 22:39:03.403936 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.105 30165\nConnection to 192.168.150.105 30165 port [tcp/*] succeeded!\n"
  I0909 22:39:03.404001 22 builder.go:147] stdout: "nodeport-test-7dfb4bddf4-9kh8q"
  I0909 22:39:03.404198 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2706" for this suite. @ 09/09/25 22:39:03.411
• [6.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/09/25 22:39:03.424
  I0909 22:39:03.424775 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pod-network-test @ 09/09/25 22:39:03.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:39:03.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:39:03.46
  STEP: Performing setup for networking test in namespace pod-network-test-7272 @ 09/09/25 22:39:03.463
  STEP: creating a selector @ 09/09/25 22:39:03.463
  STEP: Creating the service pods in kubernetes @ 09/09/25 22:39:03.463
  I0909 22:39:03.463543 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0909 22:39:04.030331      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:05.030870      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:06.031610      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:07.031973      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:08.033857      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:09.034119      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:10.034903      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:11.035825      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:12.036635      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:13.037020      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:14.038225      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:15.038831      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:16.038693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:17.039012      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/09/25 22:39:17.662
  E0909 22:39:18.039654      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:19.041365      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:20.040970      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:21.041100      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:39:21.704464 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0909 22:39:21.704509 22 networking.go:42] Breadth first check of 10.42.1.170 on host 192.168.150.103...
  I0909 22:39:21.708034 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.171:9080/dial?request=hostname&protocol=http&host=10.42.1.170&port=8083&tries=1'] Namespace:pod-network-test-7272 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:39:21.708100 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:39:21.708171 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7272/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.171%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.170%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0909 22:39:21.862155 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:39:21.862221 22 utils.go:355] Waiting for responses: map[]
  I0909 22:39:21.862232 22 utils.go:359] reached 10.42.1.170 after 0/1 tries
  I0909 22:39:21.862240 22 networking.go:42] Breadth first check of 10.42.3.97 on host 192.168.150.105...
  I0909 22:39:21.864617 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.171:9080/dial?request=hostname&protocol=http&host=10.42.3.97&port=8083&tries=1'] Namespace:pod-network-test-7272 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:39:21.864647 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:39:21.864685 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7272/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.171%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.3.97%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0909 22:39:21.973352 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:39:21.973423 22 utils.go:355] Waiting for responses: map[]
  I0909 22:39:21.973433 22 utils.go:359] reached 10.42.3.97 after 0/1 tries
  I0909 22:39:21.973441 22 networking.go:53] Going to retry 0 out of 2 pods....
  I0909 22:39:21.973809 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7272" for this suite. @ 09/09/25 22:39:21.978
• [18.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/09/25 22:39:21.988
  I0909 22:39:21.988482 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:39:21.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:39:22.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:39:22.017
  E0909 22:39:22.041651      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating configMap with name cm-test-opt-del-16bba1d0-18a9-4769-bb11-43550dd0a59e @ 09/09/25 22:39:22.079
  STEP: Creating configMap with name cm-test-opt-upd-6a947338-4f8c-4683-8dce-9d955339169f @ 09/09/25 22:39:22.086
  STEP: Creating the pod @ 09/09/25 22:39:22.091
  E0909 22:39:23.041841      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:24.042310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-16bba1d0-18a9-4769-bb11-43550dd0a59e @ 09/09/25 22:39:24.181
  STEP: Updating configmap cm-test-opt-upd-6a947338-4f8c-4683-8dce-9d955339169f @ 09/09/25 22:39:24.197
  STEP: Creating configMap with name cm-test-opt-create-816bd9a0-d6a0-4d6e-b520-52a04569e7cc @ 09/09/25 22:39:24.205
  STEP: waiting to observe update in volume @ 09/09/25 22:39:24.214
  E0909 22:39:25.043285      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:26.044064      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:39:26.288609 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9539" for this suite. @ 09/09/25 22:39:26.3
• [4.324 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/09/25 22:39:26.313
  I0909 22:39:26.313088 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename secrets @ 09/09/25 22:39:26.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:39:26.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:39:26.354
  STEP: Creating secret with name secret-test-map-473a3612-6dfe-42ab-9c44-84cb6989b7b1 @ 09/09/25 22:39:26.359
  STEP: Creating a pod to test consume secrets @ 09/09/25 22:39:26.373
  E0909 22:39:27.044186      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:28.045906      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:29.045644      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:30.046316      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:39:30.409
  I0909 22:39:30.413345 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-secrets-b6de2707-6af3-45f9-8590-2a5f31d83414 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 22:39:30.441
  I0909 22:39:30.474740 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5888" for this suite. @ 09/09/25 22:39:30.484
• [4.192 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 09/09/25 22:39:30.507
  I0909 22:39:30.507182 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pods @ 09/09/25 22:39:30.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:39:30.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:39:30.534
  STEP: creating a Pod with a static label @ 09/09/25 22:39:30.542
  STEP: watching for Pod to be ready @ 09/09/25 22:39:30.556
  I0909 22:39:30.560405 22 pods.go:947] observed Pod pod-test in namespace pods-1863 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0909 22:39:30.563461 22 pods.go:947] observed Pod pod-test in namespace pods-1863 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  }]
  I0909 22:39:30.593811 22 pods.go:947] observed Pod pod-test in namespace pods-1863 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  }]
  E0909 22:39:31.049323      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:39:31.111030 22 pods.go:947] observed Pod pod-test in namespace pods-1863 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  }]
  I0909 22:39:31.175003 22 pods.go:947] observed Pod pod-test in namespace pods-1863 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  }]
  I0909 22:39:32.037507 22 pods.go:950] Found Pod pod-test in namespace pods-1863 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:31 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:31 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:31 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-09 22:39:30 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/09/25 22:39:32.043
  E0909 22:39:32.048939      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting the Pod and ensuring that it's patched @ 09/09/25 22:39:32.06
  STEP: replacing the Pod's status Ready condition to False @ 09/09/25 22:39:32.074
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/09/25 22:39:32.104
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/09/25 22:39:32.104
  STEP: watching for the Pod to be deleted @ 09/09/25 22:39:32.121
  I0909 22:39:32.130984 22 pods.go:1060] observed event type MODIFIED
  E0909 22:39:33.049820      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:39:34.041240 22 pods.go:1060] observed event type MODIFIED
  E0909 22:39:34.050291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:39:34.553079 22 pods.go:1060] observed event type MODIFIED
  I0909 22:39:34.621294 22 pods.go:1060] observed event type MODIFIED
  E0909 22:39:35.051265      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:39:35.070922 22 pods.go:1060] observed event type MODIFIED
  I0909 22:39:35.089903 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1863" for this suite. @ 09/09/25 22:39:35.096
• [4.596 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 09/09/25 22:39:35.11
  I0909 22:39:35.111342 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename container-runtime @ 09/09/25 22:39:35.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:39:35.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:39:35.144
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/09/25 22:39:35.161
  E0909 22:39:36.051666      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:37.053286      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:38.055013      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:39.056584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:40.055754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:41.055947      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:42.056242      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:43.057216      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:44.057731      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:45.058725      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:46.058779      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:47.059229      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:48.059328      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:49.060476      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:50.060919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:51.060919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:52.061154      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:53.062096      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:54.063131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/09/25 22:39:54.264
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/09/25 22:39:54.267
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/09/25 22:39:54.274
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/09/25 22:39:54.274
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/09/25 22:39:54.32
  E0909 22:39:55.063294      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:56.064584      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:57.065109      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/09/25 22:39:57.358
  E0909 22:39:58.065374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:39:59.065546      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/09/25 22:39:59.378
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/09/25 22:39:59.386
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/09/25 22:39:59.387
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/09/25 22:39:59.431
  E0909 22:40:00.065722      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/09/25 22:40:00.451
  E0909 22:40:01.066039      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:02.067105      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:03.067663      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/09/25 22:40:03.478
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/09/25 22:40:03.505
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/09/25 22:40:03.505
  I0909 22:40:03.555037 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2705" for this suite. @ 09/09/25 22:40:03.563
• [28.463 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 09/09/25 22:40:03.574
  I0909 22:40:03.574307 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 22:40:03.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:40:03.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:40:03.618
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 09/09/25 22:40:03.625
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/09/25 22:40:03.639
  E0909 22:40:04.069193      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:05.069377      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:06.069773      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:07.070243      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 09/09/25 22:40:07.654
  STEP: Verifying that the only appropriately index succeeded @ 09/09/25 22:40:07.659
  I0909 22:40:07.662476 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5047" for this suite. @ 09/09/25 22:40:07.667
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/09/25 22:40:07.693
  I0909 22:40:07.693698 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:40:07.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:40:07.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:40:07.727
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 22:40:07.734
  E0909 22:40:08.071023      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:09.071989      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:10.072629      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:11.073210      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:40:11.768
  I0909 22:40:11.773032 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-82c02993-33b5-437c-bbed-718e96009ccc container client-container: <nil>
  STEP: delete the pod @ 09/09/25 22:40:11.781
  I0909 22:40:11.814725 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2460" for this suite. @ 09/09/25 22:40:11.821
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/09/25 22:40:11.835
  I0909 22:40:11.835752 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename configmap @ 09/09/25 22:40:11.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:40:11.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:40:11.863
  STEP: Creating configMap that has name configmap-test-emptyKey-caed9a7e-886e-436b-8666-eab384a4203a @ 09/09/25 22:40:11.867
  I0909 22:40:11.869530 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9703" for this suite. @ 09/09/25 22:40:11.921
• [0.096 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 09/09/25 22:40:11.933
  I0909 22:40:11.934470 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 22:40:11.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:40:11.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:40:11.965
  STEP: Creating a pod to test downward api env vars @ 09/09/25 22:40:11.971
  E0909 22:40:12.073353      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:13.074830      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:14.075515      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:15.076277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:40:15.996
  I0909 22:40:15.998916 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod downward-api-e39183d3-85a6-4ab3-a0aa-2b6b1e6eabbd container dapi-container: <nil>
  STEP: delete the pod @ 09/09/25 22:40:16.019
  I0909 22:40:16.041897 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4886" for this suite. @ 09/09/25 22:40:16.048
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/09/25 22:40:16.071
  I0909 22:40:16.072375 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pods @ 09/09/25 22:40:16.075
  E0909 22:40:16.077140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:40:16.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:40:16.101
  STEP: creating the pod @ 09/09/25 22:40:16.105
  STEP: submitting the pod to kubernetes @ 09/09/25 22:40:16.106
  I0909 22:40:16.120208      22 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0909 22:40:17.081326      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:18.081545      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/09/25 22:40:18.139
  STEP: updating the pod @ 09/09/25 22:40:18.149
  I0909 22:40:18.679411 22 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-e784589a-d53f-4cb1-b792-2b1bde66753f"
  E0909 22:40:19.081892      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:20.082167      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:21.082920      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:22.083140      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:23.083942      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:24.084495      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:40:24.701194 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6230" for this suite. @ 09/09/25 22:40:24.705
• [8.652 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 09/09/25 22:40:24.723
  I0909 22:40:24.723910 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename statefulset @ 09/09/25 22:40:24.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:40:24.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:40:24.752
  STEP: Creating service test in namespace statefulset-7531 @ 09/09/25 22:40:24.757
  STEP: Creating a new StatefulSet @ 09/09/25 22:40:24.775
  I0909 22:40:24.815124 22 wait.go:44] Found 0 stateful pods, waiting for 3
  E0909 22:40:25.085526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:26.085715      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:27.086385      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:28.086552      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:29.086828      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:30.086758      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:31.087131      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:32.087649      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:33.090624      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:34.089327      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:40:34.809067 22 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0909 22:40:34.809402 22 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0909 22:40:34.809672 22 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0909 22:40:34.821631 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7531 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0909 22:40:35.090410      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:40:35.092230 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0909 22:40:35.092313 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0909 22:40:35.092337 22 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0909 22:40:36.090600      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:37.091262      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:38.091241      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:39.092211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:40.092988      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:41.093091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:42.094329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:43.094751      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:44.095561      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:45.096923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/09/25 22:40:45.102
  I0909 22:40:45.122781 22 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 09/09/25 22:40:45.124
  E0909 22:40:46.096714      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:47.097099      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:48.097868      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:49.098763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:50.099697      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:51.100066      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:52.100305      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:53.100550      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:54.100728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:55.100970      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/09/25 22:40:55.16
  I0909 22:40:55.168112 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7531 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0909 22:40:55.377882 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0909 22:40:55.377935 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0909 22:40:55.377955 22 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0909 22:40:56.101551      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:57.102598      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:58.103560      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:40:59.103856      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:00.104132      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:01.104477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:02.104762      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:03.105233      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:04.106126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:05.106728      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:41:05.393810 22 wait.go:158] Waiting for StatefulSet statefulset-7531/ss2 to complete update
  E0909 22:41:06.108183      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:07.108687      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:08.108772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:09.109081      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:10.109633      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:11.110343      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:12.110693      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:13.111099      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:14.111836      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:15.111772      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/09/25 22:41:15.396
  I0909 22:41:15.396406 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7531 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0909 22:41:15.727069 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0909 22:41:15.727132 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0909 22:41:15.727153 22 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0909 22:41:16.111918      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:17.113502      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:18.112705      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:19.113148      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:20.113626      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:21.116125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:22.116279      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:23.117709      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:24.117967      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:25.118259      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:41:25.757801 22 statefulset.go:2542] Updating stateful set ss2
  E0909 22:41:26.118615      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:27.118924      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:28.119700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:29.120202      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:30.121662      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:31.121434      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:32.121666      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:33.121843      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:34.122146      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:35.122304      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/09/25 22:41:35.768
  I0909 22:41:35.773097 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=statefulset-7531 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0909 22:41:36.051571 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0909 22:41:36.051633 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0909 22:41:36.051648 22 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0909 22:41:36.122454      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:37.122845      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:38.123702      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:39.123662      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:40.128678      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:41.125906      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:42.126718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:43.127795      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:44.127991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:45.128723      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:41:46.068915 22 statefulset.go:138] Deleting all statefulset in ns statefulset-7531
  I0909 22:41:46.072247 22 rest.go:153] Scaling statefulset ss2 to 0
  E0909 22:41:46.130811      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:47.131063      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:48.133179      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:49.133211      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:50.133449      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:51.134339      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:52.134587      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:53.135208      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:54.137271      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:41:55.136612      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:41:56.101381 22 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0909 22:41:56.105550 22 rest.go:91] Deleting statefulset ss2
  E0909 22:41:56.140413      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:41:56.145517 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7531" for this suite. @ 09/09/25 22:41:56.157
• [91.443 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 09/09/25 22:41:56.168
  I0909 22:41:56.168611 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 22:41:56.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:41:56.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:41:56.192
  STEP: creating Agnhost RC @ 09/09/25 22:41:56.194
  I0909 22:41:56.194570 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-5012 create -f -'
  I0909 22:41:56.388266 22 builder.go:146] stderr: ""
  I0909 22:41:56.388328 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/09/25 22:41:56.388
  E0909 22:41:57.141052      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:41:57.395689 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0909 22:41:57.395767 22 framework.go:733] Found 0 / 1
  E0909 22:41:58.141340      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:41:58.396784 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0909 22:41:58.397086 22 framework.go:733] Found 1 / 1
  I0909 22:41:58.397359 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/09/25 22:41:58.397
  I0909 22:41:58.402055 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0909 22:41:58.403072 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0909 22:41:58.403764 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-5012 patch pod agnhost-primary-jdxt2 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0909 22:41:58.543922 22 builder.go:146] stderr: ""
  I0909 22:41:58.543967 22 builder.go:147] stdout: "pod/agnhost-primary-jdxt2 patched\n"
  STEP: checking annotations @ 09/09/25 22:41:58.544
  I0909 22:41:58.547602 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0909 22:41:58.547645 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0909 22:41:58.547765 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5012" for this suite. @ 09/09/25 22:41:58.552
• [2.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/09/25 22:41:58.562
  I0909 22:41:58.562129 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename downward-api @ 09/09/25 22:41:58.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:41:58.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:41:58.583
  STEP: Creating a pod to test downward API volume plugin @ 09/09/25 22:41:58.586
  E0909 22:41:59.141607      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:00.149088      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:01.148290      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:02.155291      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:42:02.629
  I0909 22:42:02.639454 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-55ef8d35-ad88-4560-b353-facc74210cb2 container client-container: <nil>
  STEP: delete the pod @ 09/09/25 22:42:02.661
  I0909 22:42:02.695584 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9021" for this suite. @ 09/09/25 22:42:02.704
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/09/25 22:42:02.728
  I0909 22:42:02.728892 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pod-network-test @ 09/09/25 22:42:02.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:42:02.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:42:02.756
  STEP: Performing setup for networking test in namespace pod-network-test-462 @ 09/09/25 22:42:02.759
  STEP: creating a selector @ 09/09/25 22:42:02.759
  STEP: Creating the service pods in kubernetes @ 09/09/25 22:42:02.76
  I0909 22:42:02.760710 22 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0909 22:42:03.156102      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:04.156270      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:05.157774      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:06.157919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:07.158219      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:08.158929      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:09.159894      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:10.160290      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:11.161067      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:12.166700      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:13.166810      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:14.181777      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:15.167682      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:16.167923      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/09/25 22:42:16.898
  E0909 22:42:17.169125      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:18.170307      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:42:18.971931 22 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0909 22:42:18.972179 22 utils.go:495] Going to poll 10.42.1.180 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0909 22:42:18.978278 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.180 8081 | grep -v '^\s*$'] Namespace:pod-network-test-462 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:42:18.978304 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:42:18.978349 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-462/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.180+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0909 22:42:19.170768      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:42:20.102511 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:42:20.102573 22 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0909 22:42:20.102595 22 utils.go:495] Going to poll 10.42.3.112 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0909 22:42:20.105936 22 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.3.112 8081 | grep -v '^\s*$'] Namespace:pod-network-test-462 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0909 22:42:20.106451 22 exec_util.go:68] ExecWithOptions: Clientset creation
  I0909 22:42:20.107154 22 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-462/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.3.112+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0909 22:42:20.171712      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:21.172018      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:42:21.272548 22 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0909 22:42:21.274821 22 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0909 22:42:21.276191 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-462" for this suite. @ 09/09/25 22:42:21.291
• [18.577 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/09/25 22:42:21.305
  I0909 22:42:21.305548 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/09/25 22:42:21.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:42:21.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:42:21.335
  I0909 22:42:21.341084 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:42:22.172655      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:23.174450      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:24.174345      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:42:24.456770 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6" for this suite. @ 09/09/25 22:42:24.468
• [3.176 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 09/09/25 22:42:24.491
  I0909 22:42:24.492546 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replication-controller @ 09/09/25 22:42:24.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:42:24.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:42:24.53
  I0909 22:42:24.535921 22 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/09/25 22:42:24.547
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/09/25 22:42:24.558
  E0909 22:42:25.174742      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/09/25 22:42:25.567
  I0909 22:42:25.582964 22 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/09/25 22:42:25.583
  I0909 22:42:25.594454 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3374" for this suite. @ 09/09/25 22:42:25.607
• [1.132 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 09/09/25 22:42:25.623
  I0909 22:42:25.623890 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename runtimeclass @ 09/09/25 22:42:25.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:42:25.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:42:25.649
  E0909 22:42:26.175343      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:27.177199      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:42:27.698822 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2980" for this suite. @ 09/09/25 22:42:27.709
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 09/09/25 22:42:27.735
  I0909 22:42:27.735973 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename sched-pred @ 09/09/25 22:42:27.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:42:27.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:42:27.76
  I0909 22:42:27.765553 22 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0909 22:42:27.815291 22 util.go:390] Waiting for terminating namespaces to be deleted...
  I0909 22:42:27.818999 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-103 before test
  I0909 22:42:27.827297 22 predicates.go:958] kube-proxy-oneke-ip-192-168-150-103 from kube-system started at 2025-09-09 20:49:22 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827334 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0909 22:42:27.827343 22 predicates.go:958] rke2-canal-pwldb from kube-system started at 2025-09-09 20:49:22 +0000 UTC (2 container statuses recorded)
  I0909 22:42:27.827348 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0909 22:42:27.827353 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0909 22:42:27.827359 22 predicates.go:958] rke2-coredns-rke2-coredns-86c455b944-8sftv from kube-system started at 2025-09-09 22:14:47 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827365 22 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0909 22:42:27.827370 22 predicates.go:958] rke2-coredns-rke2-coredns-autoscaler-79677f89c4-zd6cf from kube-system started at 2025-09-09 22:14:47 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827375 22 predicates.go:960] 	Container autoscaler ready: true, restart count 0
  I0909 22:42:27.827381 22 predicates.go:958] rke2-metrics-server-69bdccfdd9-8d9d2 from kube-system started at 2025-09-09 22:14:47 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827387 22 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0909 22:42:27.827393 22 predicates.go:958] rke2-multus-6kq6h from kube-system started at 2025-09-09 20:49:22 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827398 22 predicates.go:960] 	Container kube-rke2-multus ready: true, restart count 2
  I0909 22:42:27.827403 22 predicates.go:958] rke2-multus-rke2-whereabouts-wj5lf from kube-system started at 2025-09-09 21:28:40 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827408 22 predicates.go:960] 	Container rke2-whereabouts ready: true, restart count 0
  I0909 22:42:27.827414 22 predicates.go:958] rke2-snapshot-controller-696989ffdd-wg7gm from kube-system started at 2025-09-09 21:28:12 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827419 22 predicates.go:960] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0909 22:42:27.827425 22 predicates.go:958] csi-attacher-6d6c77b95b-f474h from longhorn-system started at 2025-09-09 22:14:47 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827431 22 predicates.go:960] 	Container csi-attacher ready: true, restart count 0
  I0909 22:42:27.827438 22 predicates.go:958] csi-provisioner-5584b8f578-ckqfw from longhorn-system started at 2025-09-09 22:14:47 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827443 22 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I0909 22:42:27.827449 22 predicates.go:958] csi-resizer-7d76b968d9-qpz7x from longhorn-system started at 2025-09-09 22:14:47 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827454 22 predicates.go:960] 	Container csi-resizer ready: true, restart count 0
  I0909 22:42:27.827459 22 predicates.go:958] csi-snapshotter-7f46d58c9f-zhsgt from longhorn-system started at 2025-09-09 22:14:47 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827464 22 predicates.go:960] 	Container csi-snapshotter ready: true, restart count 0
  I0909 22:42:27.827469 22 predicates.go:958] engine-image-ei-b4bcf0a5-479c7 from longhorn-system started at 2025-09-09 21:28:42 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827474 22 predicates.go:960] 	Container engine-image-ei-b4bcf0a5 ready: true, restart count 0
  I0909 22:42:27.827480 22 predicates.go:958] instance-manager-a66ef38aea842eb90d02b3a6a3136a1e from longhorn-system started at 2025-09-09 21:28:47 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827486 22 predicates.go:960] 	Container instance-manager ready: true, restart count 0
  I0909 22:42:27.827492 22 predicates.go:958] longhorn-csi-plugin-w8hxf from longhorn-system started at 2025-09-09 21:28:16 +0000 UTC (3 container statuses recorded)
  I0909 22:42:27.827497 22 predicates.go:960] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0909 22:42:27.827502 22 predicates.go:960] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0909 22:42:27.827507 22 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0909 22:42:27.827512 22 predicates.go:958] longhorn-manager-7xjhj from longhorn-system started at 2025-09-09 21:28:41 +0000 UTC (2 container statuses recorded)
  I0909 22:42:27.827517 22 predicates.go:960] 	Container longhorn-manager ready: true, restart count 0
  I0909 22:42:27.827522 22 predicates.go:960] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0909 22:42:27.827718 22 predicates.go:958] one-metallb-controller-8576445d78-rdzdq from metallb-system started at 2025-09-09 21:28:12 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827726 22 predicates.go:960] 	Container controller ready: true, restart count 0
  I0909 22:42:27.827731 22 predicates.go:958] one-metallb-speaker-d5dh6 from metallb-system started at 2025-09-09 21:28:10 +0000 UTC (4 container statuses recorded)
  I0909 22:42:27.827736 22 predicates.go:960] 	Container frr ready: true, restart count 0
  I0909 22:42:27.827740 22 predicates.go:960] 	Container frr-metrics ready: true, restart count 0
  I0909 22:42:27.827745 22 predicates.go:960] 	Container reloader ready: true, restart count 0
  I0909 22:42:27.827750 22 predicates.go:960] 	Container speaker ready: true, restart count 0
  I0909 22:42:27.827794 22 predicates.go:958] condition-test-gw6rv from replication-controller-3374 started at 2025-09-09 22:42:24 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827802 22 predicates.go:960] 	Container httpd ready: true, restart count 0
  I0909 22:42:27.827808 22 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-09 21:03:43 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827814 22 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0909 22:42:27.827820 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-743f0bf30f3f4846-j94rb from sonobuoy started at 2025-09-09 21:03:49 +0000 UTC (2 container statuses recorded)
  I0909 22:42:27.827826 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0909 22:42:27.827831 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0909 22:42:27.827837 22 predicates.go:958] one-traefik-6b6df477ff-c9ckd from traefik-system started at 2025-09-09 21:28:16 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.827841 22 predicates.go:960] 	Container one-traefik ready: true, restart count 0
  I0909 22:42:27.827846 22 predicates.go:120] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-105 before test
  I0909 22:42:27.835771 22 predicates.go:958] kube-proxy-oneke-ip-192-168-150-105 from kube-system started at 2025-09-09 20:57:09 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.835854 22 predicates.go:960] 	Container kube-proxy ready: true, restart count 0
  I0909 22:42:27.835865 22 predicates.go:958] rke2-canal-2p6vz from kube-system started at 2025-09-09 20:57:10 +0000 UTC (2 container statuses recorded)
  I0909 22:42:27.835889 22 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0909 22:42:27.835895 22 predicates.go:960] 	Container kube-flannel ready: true, restart count 0
  I0909 22:42:27.835901 22 predicates.go:958] rke2-multus-lfldf from kube-system started at 2025-09-09 20:57:10 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.835906 22 predicates.go:960] 	Container kube-rke2-multus ready: true, restart count 1
  I0909 22:42:27.835989 22 predicates.go:958] rke2-multus-rke2-whereabouts-g56fq from kube-system started at 2025-09-09 22:15:17 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.835998 22 predicates.go:960] 	Container rke2-whereabouts ready: true, restart count 0
  I0909 22:42:27.836004 22 predicates.go:958] engine-image-ei-b4bcf0a5-nglpp from longhorn-system started at 2025-09-09 22:15:18 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.836009 22 predicates.go:960] 	Container engine-image-ei-b4bcf0a5 ready: true, restart count 0
  I0909 22:42:27.836015 22 predicates.go:958] instance-manager-4b2431e7d9277de65a4f9968308c14c0 from longhorn-system started at 2025-09-09 22:15:23 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.836021 22 predicates.go:960] 	Container instance-manager ready: true, restart count 0
  I0909 22:42:27.836026 22 predicates.go:958] longhorn-csi-plugin-gt52f from longhorn-system started at 2025-09-09 22:15:12 +0000 UTC (3 container statuses recorded)
  I0909 22:42:27.836032 22 predicates.go:960] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0909 22:42:27.836036 22 predicates.go:960] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0909 22:42:27.836041 22 predicates.go:960] 	Container node-driver-registrar ready: true, restart count 0
  I0909 22:42:27.836100 22 predicates.go:958] longhorn-manager-pwshg from longhorn-system started at 2025-09-09 22:15:17 +0000 UTC (2 container statuses recorded)
  I0909 22:42:27.836106 22 predicates.go:960] 	Container longhorn-manager ready: true, restart count 0
  I0909 22:42:27.836111 22 predicates.go:960] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0909 22:42:27.836116 22 predicates.go:958] one-metallb-speaker-qdc29 from metallb-system started at 2025-09-09 22:15:12 +0000 UTC (4 container statuses recorded)
  I0909 22:42:27.836121 22 predicates.go:960] 	Container frr ready: true, restart count 0
  I0909 22:42:27.836126 22 predicates.go:960] 	Container frr-metrics ready: true, restart count 0
  I0909 22:42:27.836131 22 predicates.go:960] 	Container reloader ready: true, restart count 0
  I0909 22:42:27.836135 22 predicates.go:960] 	Container speaker ready: true, restart count 0
  I0909 22:42:27.836140 22 predicates.go:958] netserver-1 from pod-network-test-462 started at 2025-09-09 22:42:02 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.836145 22 predicates.go:960] 	Container webserver ready: false, restart count 0
  I0909 22:42:27.836151 22 predicates.go:958] test-container-pod from pod-network-test-462 started at 2025-09-09 22:42:16 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.836210 22 predicates.go:960] 	Container webserver ready: false, restart count 0
  I0909 22:42:27.836217 22 predicates.go:958] condition-test-hlqfw from replication-controller-3374 started at 2025-09-09 22:42:24 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.836221 22 predicates.go:960] 	Container httpd ready: true, restart count 0
  I0909 22:42:27.836226 22 predicates.go:958] test-runtimeclass-runtimeclass-2980-preconfigured-handler-lf7jt from runtimeclass-2980 started at 2025-09-09 22:42:25 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.836231 22 predicates.go:960] 	Container test ready: false, restart count 0
  I0909 22:42:27.836238 22 predicates.go:958] sonobuoy-systemd-logs-daemon-set-743f0bf30f3f4846-hm229 from sonobuoy started at 2025-09-09 21:03:49 +0000 UTC (2 container statuses recorded)
  I0909 22:42:27.836243 22 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0909 22:42:27.836248 22 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0909 22:42:27.836253 22 predicates.go:958] one-traefik-6b6df477ff-57v46 from traefik-system started at 2025-09-09 22:15:12 +0000 UTC (1 container statuses recorded)
  I0909 22:42:27.836258 22 predicates.go:960] 	Container one-traefik ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/09/25 22:42:27.836
  E0909 22:42:28.177453      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:29.177754      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/09/25 22:42:29.862
  STEP: Trying to apply a random label on the found node. @ 09/09/25 22:42:29.883
  STEP: verifying the node has the label kubernetes.io/e2e-cd5707d8-62e1-4925-a0c1-4e16fbf28829 42 @ 09/09/25 22:42:29.902
  STEP: Trying to relaunch the pod, now with labels. @ 09/09/25 22:42:29.905
  E0909 22:42:30.179216      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:31.200958      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:32.201517      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:33.202763      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-cd5707d8-62e1-4925-a0c1-4e16fbf28829 off the node oneke-ip-192-168-150-105 @ 09/09/25 22:42:33.954
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-cd5707d8-62e1-4925-a0c1-4e16fbf28829 @ 09/09/25 22:42:33.992
  I0909 22:42:34.000522 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5873" for this suite. @ 09/09/25 22:42:34.005
• [6.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/09/25 22:42:34.023
  I0909 22:42:34.023681 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename subpath @ 09/09/25 22:42:34.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:42:34.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:42:34.046
  STEP: Setting up data @ 09/09/25 22:42:34.05
  STEP: Creating pod pod-subpath-test-projected-nbrh @ 09/09/25 22:42:34.064
  STEP: Creating a pod to test atomic-volume-subpath @ 09/09/25 22:42:34.064
  E0909 22:42:34.202846      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:35.203030      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:36.203668      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:37.203937      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:38.205046      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:39.205004      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:40.206209      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:41.206947      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:42.207649      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:43.207799      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:44.207918      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:45.208220      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:46.208765      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:47.209572      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:48.210593      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:49.211091      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:50.211223      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:51.211542      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:52.212390      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:53.214640      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:54.215255      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:55.214997      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:56.216184      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:42:57.217206      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:42:58.176
  I0909 22:42:58.181057 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-subpath-test-projected-nbrh container test-container-subpath-projected-nbrh: <nil>
  STEP: delete the pod @ 09/09/25 22:42:58.193
  E0909 22:42:58.217844      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pod pod-subpath-test-projected-nbrh @ 09/09/25 22:42:58.231
  I0909 22:42:58.231506 22 delete.go:62] Deleting pod "pod-subpath-test-projected-nbrh" in namespace "subpath-928"
  I0909 22:42:58.235339 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-928" for this suite. @ 09/09/25 22:42:58.245
• [24.231 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/09/25 22:42:58.254
  I0909 22:42:58.255008 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename field-validation @ 09/09/25 22:42:58.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:42:58.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:42:58.287
  I0909 22:42:58.290554 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  W0909 22:42:58.291628      22 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0054a6990 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0909 22:42:59.217978      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:00.218197      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:43:00.892127      22 warnings.go:110] "Warning: unknown field \"alpha\""
  I0909 22:43:00.892195      22 warnings.go:110] "Warning: unknown field \"beta\""
  I0909 22:43:00.892212      22 warnings.go:110] "Warning: unknown field \"delta\""
  I0909 22:43:00.892227      22 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0909 22:43:00.892519      22 warnings.go:110] "Warning: unknown field \"gamma\""
  E0909 22:43:01.218926      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:43:01.443006 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2942" for this suite. @ 09/09/25 22:43:01.448
• [3.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 09/09/25 22:43:01.464
  I0909 22:43:01.464203 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:43:01.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:43:01.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:43:01.504
  STEP: Setting up server cert @ 09/09/25 22:43:01.537
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:43:01.973
  STEP: Deploying the webhook pod @ 09/09/25 22:43:01.985
  STEP: Wait for the deployment to be ready @ 09/09/25 22:43:02.009
  I0909 22:43:02.035396 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:43:02.220674      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:03.221399      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:43:04.052
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:43:04.099
  E0909 22:43:04.221347      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:43:05.100317 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/09/25 22:43:05.106
  I0909 22:43:05.209251 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0909 22:43:05.233958      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-5369" for this suite. @ 09/09/25 22:43:05.235
  STEP: Destroying namespace "webhook-markers-197" for this suite. @ 09/09/25 22:43:05.256
• [3.809 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 09/09/25 22:43:05.278
  I0909 22:43:05.278569 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename replication-controller @ 09/09/25 22:43:05.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:43:05.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:43:05.301
  STEP: Creating ReplicationController "e2e-rc-wnn4q" @ 09/09/25 22:43:05.307
  I0909 22:43:05.315967 22 rc.go:795] Get Replication Controller "e2e-rc-wnn4q" to confirm replicas
  E0909 22:43:06.225936      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:43:06.317098 22 rc.go:795] Get Replication Controller "e2e-rc-wnn4q" to confirm replicas
  I0909 22:43:06.319775 22 rc.go:804] Found 1 replicas for "e2e-rc-wnn4q" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-wnn4q" @ 09/09/25 22:43:06.319
  STEP: Updating a scale subresource @ 09/09/25 22:43:06.321
  STEP: Verifying replicas where modified for replication controller "e2e-rc-wnn4q" @ 09/09/25 22:43:06.331
  I0909 22:43:06.331308 22 rc.go:795] Get Replication Controller "e2e-rc-wnn4q" to confirm replicas
  E0909 22:43:07.225783      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:43:07.331542 22 rc.go:795] Get Replication Controller "e2e-rc-wnn4q" to confirm replicas
  I0909 22:43:07.342279 22 rc.go:804] Found 2 replicas for "e2e-rc-wnn4q" replication controller
  I0909 22:43:07.343069 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2501" for this suite. @ 09/09/25 22:43:07.388
• [2.119 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 09/09/25 22:43:07.401
  I0909 22:43:07.401855 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename kubectl @ 09/09/25 22:43:07.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:43:07.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:43:07.443
  STEP: validating cluster-info @ 09/09/25 22:43:07.446
  I0909 22:43:07.447213 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=kubectl-7525 cluster-info'
  I0909 22:43:07.586403 22 builder.go:146] stderr: ""
  I0909 22:43:07.586441 22 builder.go:147] stdout: "Kubernetes control plane is running at https://10.43.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0909 22:43:07.586540 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7525" for this suite. @ 09/09/25 22:43:07.598
• [0.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/09/25 22:43:07.608
  I0909 22:43:07.608838 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename pods @ 09/09/25 22:43:07.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:43:07.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:43:07.634
  STEP: creating pod @ 09/09/25 22:43:07.638
  E0909 22:43:08.226329      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:09.230692      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:43:09.679753 22 pods.go:83] Pod pod-hostip-d7d55f2e-39a8-4858-a255-18966cb028a1 has hostIP: 192.168.150.105
  I0909 22:43:09.681517 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7384" for this suite. @ 09/09/25 22:43:09.687
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/09/25 22:43:09.706
  I0909 22:43:09.706236 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename certificates @ 09/09/25 22:43:09.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:43:09.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:43:09.74
  E0909 22:43:10.233300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting /apis @ 09/09/25 22:43:10.752
  STEP: getting /apis/certificates.k8s.io @ 09/09/25 22:43:10.764
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/09/25 22:43:10.766
  STEP: creating @ 09/09/25 22:43:10.767
  STEP: getting @ 09/09/25 22:43:10.817
  STEP: listing @ 09/09/25 22:43:10.824
  STEP: watching @ 09/09/25 22:43:10.829
  I0909 22:43:10.829630 22 certificates.go:316] starting watch
  STEP: patching @ 09/09/25 22:43:10.831
  STEP: updating @ 09/09/25 22:43:10.837
  I0909 22:43:10.847836 22 certificates.go:332] waiting for watch events with expected annotations
  I0909 22:43:10.848087 22 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/09/25 22:43:10.848
  STEP: patching /approval @ 09/09/25 22:43:10.852
  STEP: updating /approval @ 09/09/25 22:43:10.86
  STEP: getting /status @ 09/09/25 22:43:10.873
  STEP: patching /status @ 09/09/25 22:43:10.877
  STEP: updating /status @ 09/09/25 22:43:10.894
  STEP: deleting @ 09/09/25 22:43:10.91
  STEP: deleting a collection @ 09/09/25 22:43:10.934
  I0909 22:43:10.947403 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6356" for this suite. @ 09/09/25 22:43:10.952
• [1.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/09/25 22:43:10.971
  I0909 22:43:10.971341 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:43:10.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:43:11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:43:11.004
  STEP: Creating configMap with name projected-configmap-test-volume-map-71e624da-f23f-4d46-8007-95f3a0f815ea @ 09/09/25 22:43:11.007
  STEP: Creating a pod to test consume configMaps @ 09/09/25 22:43:11.013
  E0909 22:43:11.234191      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:12.237116      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:13.240991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:14.241658      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:43:15.068
  I0909 22:43:15.073342 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-configmaps-0a8cbc15-c78d-4928-8832-f38c4eee4ef1 container agnhost-container: <nil>
  STEP: delete the pod @ 09/09/25 22:43:15.081
  I0909 22:43:15.111125 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5277" for this suite. @ 09/09/25 22:43:15.118
• [4.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/09/25 22:43:15.133
  I0909 22:43:15.133512 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename projected @ 09/09/25 22:43:15.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:43:15.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:43:15.16
  STEP: Creating projection with secret that has name projected-secret-test-map-3f3500d1-04b6-4b0b-8637-13abd5cc7481 @ 09/09/25 22:43:15.164
  STEP: Creating a pod to test consume secrets @ 09/09/25 22:43:15.17
  E0909 22:43:15.241852      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:16.241964      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:17.242994      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:18.243075      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/09/25 22:43:19.205
  I0909 22:43:19.209358 22 output.go:207] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-projected-secrets-8929c9b4-960e-4900-b21c-6e32df052005 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/09/25 22:43:19.232
  E0909 22:43:19.248916      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:43:19.266751 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3529" for this suite. @ 09/09/25 22:43:19.271
• [4.152 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/09/25 22:43:19.294
  I0909 22:43:19.295216 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename watch @ 09/09/25 22:43:19.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:43:19.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:43:19.331
  STEP: creating a new configmap @ 09/09/25 22:43:19.336
  STEP: modifying the configmap once @ 09/09/25 22:43:19.341
  STEP: modifying the configmap a second time @ 09/09/25 22:43:19.354
  STEP: deleting the configmap @ 09/09/25 22:43:19.363
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/09/25 22:43:19.374
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/09/25 22:43:19.378
  I0909 22:43:19.379843 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5448  5e5f3bdd-5199-4b8b-b4fd-c33d7c628699 63350 0 2025-09-09 22:43:19 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-09 22:43:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 22:43:19.381648 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5448  5e5f3bdd-5199-4b8b-b4fd-c33d7c628699 63351 0 2025-09-09 22:43:19 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-09 22:43:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0909 22:43:19.382958 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5448" for this suite. @ 09/09/25 22:43:19.389
• [0.103 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 09/09/25 22:43:19.397
  I0909 22:43:19.397190 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename job @ 09/09/25 22:43:19.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:43:19.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:43:19.414
  STEP: Looking for a node to schedule job pods @ 09/09/25 22:43:19.417
  STEP: Creating a job @ 09/09/25 22:43:19.492
  STEP: Waiting for all the pods to be ready @ 09/09/25 22:43:19.501
  E0909 22:43:20.249507      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:21.250003      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:22.250696      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:23.251008      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 09/09/25 22:43:23.515
  STEP: Evict all the Pods @ 09/09/25 22:43:23.518
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-z2sq7/job-2627 @ 09/09/25 22:43:23.519
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-c2896/job-2627 @ 09/09/25 22:43:23.52
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-rck8r/job-2627 @ 09/09/25 22:43:23.521
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-z2sq7/job-2627 to be deleted @ 09/09/25 22:43:23.55
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-rck8r/job-2627 to be deleted @ 09/09/25 22:43:23.681
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-c2896/job-2627 to be deleted @ 09/09/25 22:43:23.702
  E0909 22:43:24.251958      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:25.252157      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:26.253142      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:27.254277      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:28.257244      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:29.257493      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 09/09/25 22:43:29.723
  E0909 22:43:30.257883      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:31.258982      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:32.259299      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:33.261330      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:34.260217      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:35.260646      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:36.261112      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:37.261151      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:38.261487      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:39.261765      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:40.262774      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:41.263056      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:42.263407      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:43.264562      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:44.265789      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:45.266122      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:46.266365      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:47.266526      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:48.267465      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:49.267718      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:50.268043      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:51.268447      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:52.269060      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:53.269325      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:54.269695      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:55.270825      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:56.271126      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:57.272374      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:58.272477      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:43:59.272694      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:00.273832      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:01.274664      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:02.277699      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:03.278679      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:04.278899      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:05.279231      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:06.279543      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:07.280300      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:08.281111      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:09.281310      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:10.282033      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:11.282384      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:44:11.935785 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2627" for this suite. @ 09/09/25 22:44:11.945
• [52.559 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/09/25 22:44:11.961
  I0909 22:44:11.962439 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename init-container @ 09/09/25 22:44:11.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:44:11.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:44:11.99
  STEP: creating the pod @ 09/09/25 22:44:11.994
  I0909 22:44:11.994428 22 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0909 22:44:12.282361      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:13.282852      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:14.282947      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:15.284317      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:44:15.730437 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3010" for this suite. @ 09/09/25 22:44:15.737
• [3.792 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 09/09/25 22:44:15.762
  I0909 22:44:15.762405 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/09/25 22:44:15.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:44:15.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:44:15.802
  I0909 22:44:15.807589 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  E0909 22:44:16.284475      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:17.288976      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/09/25 22:44:17.785
  I0909 22:44:17.785120 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-5056 --namespace=crd-publish-openapi-5056 create -f -'
  I0909 22:44:18.254499 22 builder.go:146] stderr: ""
  I0909 22:44:18.254554 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9413-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0909 22:44:18.254598 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-5056 --namespace=crd-publish-openapi-5056 delete e2e-test-crd-publish-openapi-9413-crds test-cr'
  E0909 22:44:18.289062      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:44:18.352411 22 builder.go:146] stderr: ""
  I0909 22:44:18.352464 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9413-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0909 22:44:18.352507 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-5056 --namespace=crd-publish-openapi-5056 apply -f -'
  I0909 22:44:18.427609 22 builder.go:146] stderr: ""
  I0909 22:44:18.427660 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9413-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0909 22:44:18.427700 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-5056 --namespace=crd-publish-openapi-5056 delete e2e-test-crd-publish-openapi-9413-crds test-cr'
  I0909 22:44:18.556303 22 builder.go:146] stderr: ""
  I0909 22:44:18.556392 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9413-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/09/25 22:44:18.556
  I0909 22:44:18.557240 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-755466723 --namespace=crd-publish-openapi-5056 explain e2e-test-crd-publish-openapi-9413-crds'
  I0909 22:44:18.640630 22 builder.go:146] stderr: ""
  I0909 22:44:18.640761 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9413-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0909 22:44:19.290862      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:20.291633      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:44:20.315189 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5056" for this suite. @ 09/09/25 22:44:20.323
• [4.574 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 09/09/25 22:44:20.336
  I0909 22:44:20.336189 22 util.go:453] >>> kubeConfig: /tmp/kubeconfig-755466723
  STEP: Building a namespace api object, basename webhook @ 09/09/25 22:44:20.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/09/25 22:44:20.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/09/25 22:44:20.364
  STEP: Setting up server cert @ 09/09/25 22:44:20.391
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/09/25 22:44:20.706
  STEP: Deploying the webhook pod @ 09/09/25 22:44:20.716
  STEP: Wait for the deployment to be ready @ 09/09/25 22:44:20.741
  I0909 22:44:20.775928 22 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0909 22:44:21.291919      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:22.292588      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:44:22.824276 22 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 9, 22, 44, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 44, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 9, 22, 44, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 9, 22, 44, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0909 22:44:23.293322      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0909 22:44:24.293991      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/09/25 22:44:24.829
  STEP: Verifying the service has paired with the endpoint @ 09/09/25 22:44:24.866
  E0909 22:44:25.295463      22 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0909 22:44:25.868405 22 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/09/25 22:44:25.871
  STEP: create the configmap with a random name @ 09/09/25 22:44:25.909
  STEP: verify the configmap is mutated @ 09/09/25 22:44:25.934
  STEP: create the configmap with 'skip-me' name @ 09/09/25 22:44:25.935
  I0909 22:44:26.080296 22 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-371" for this suite. @ 09/09/25 22:44:26.088
  STEP: Destroying namespace "webhook-markers-3722" for this suite. @ 09/09/25 22:44:26.098
• [5.770 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0909 22:44:26.114849 22 suites.go:34] Running AfterSuite actions on node 1
  I0909 22:44:26.115423 22 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.003 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.147 seconds]
------------------------------

Ran 419 of 6730 Specs in 6022.248 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6311 Skipped
PASS

Ginkgo ran 1 suite in 1h40m24.546537209s
Test Suite Passed
